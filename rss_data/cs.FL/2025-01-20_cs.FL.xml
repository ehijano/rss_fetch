<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.FL updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.FL</link>
    <description>cs.FL updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.FL" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Mon, 20 Jan 2025 05:00:11 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Mon, 20 Jan 2025 00:00:00 -0500</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>The structure of polynomial growth for tree automata/transducers and MSO set queries</title>
      <link>https://arxiv.org/abs/2501.10270</link>
      <description>arXiv:2501.10270v1 Announce Type: new 
Abstract: The ambiguity of a tree automaton is the number of distinct accepting runs over a given input. We show that, in polynomial time, one can decide whether the ambiguity grows polynomially or exponentially in the input size, and, in the former case, one can compute the exact polynomial degree. Equivalently, this amounts to studying the growth of the number of results of set queries in Monadic Second-Order logic (MSO) over ranked trees; we also prove a reparameterization theorem for such queries in the case of polynomial growth.
  This property of MSO set queries leads directly to a generalization of Boja\'nczyk's dimension minimization theorem for string-to-string polyregular functions. Our generalization applies to MSO set interpretations from trees, which subsume (as we show) tree-walking transducers and invisible pebble tree-to-string transducers. Finally, with a bit more work we obtain the following:
  * a new, short and conceptual proof that macro tree transducers of linear growth compute only tree-to-tree MSO transductions (a seminal theorem of Engelfriet and Maneth);
  * a procedure to decide polynomial size-to-height increase for macro tree transducers and compute the polynomial degree, which extends the recent decidability result of Gallot, Maneth, Nakano and Peyrat concerning linear size-to-height increase.</description>
      <guid isPermaLink="false">oai:arXiv.org:2501.10270v1</guid>
      <category>cs.FL</category>
      <category>cs.LO</category>
      <pubDate>Mon, 20 Jan 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Paul Gallot, Nathan Lhote, L\^e Th\`anh D\~ung Nguy\^en</dc:creator>
    </item>
    <item>
      <title>FC-Datalog as a Framework for Efficient String Querying</title>
      <link>https://arxiv.org/abs/2501.10344</link>
      <description>arXiv:2501.10344v1 Announce Type: cross 
Abstract: Core spanners are a class of document spanners that capture the core functionality of IBM's AQL. FC is a logic on strings built around word equations that when extended with constraints for regular languages can be seen as a logic for core spanners. The recently introduced FC-Datalog extends FC with recursion, which allows us to define recursive relations for core spanners. Additionally, as FC-Datalog captures P, it is also a tractable version of Datalog on strings. This presents an opportunity for optimization.
  We propose a series of FC-Datalog fragments with desirable properties in terms of complexity of model checking, expressive power, and efficiency of checking membership in the fragment. This leads to a range of fragments that all capture LOGSPACE, which we further restrict to obtain linear combined complexity. This gives us a framework to tailor fragments for particular applications. To showcase this, we simulate deterministic regex in a tailored fragment of FC-Datalog.</description>
      <guid isPermaLink="false">oai:arXiv.org:2501.10344v1</guid>
      <category>cs.LO</category>
      <category>cs.DB</category>
      <category>cs.FL</category>
      <pubDate>Mon, 20 Jan 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Owen M. Bell, Joel D. Day, Dominik D. Freydenberger</dc:creator>
    </item>
    <item>
      <title>Slightly Non-Linear Higher-Order Tree Transducers</title>
      <link>https://arxiv.org/abs/2402.05854</link>
      <description>arXiv:2402.05854v2 Announce Type: replace 
Abstract: We investigate the tree-to-tree functions computed by "affine $\lambda$-transducers": tree automata whose memory consists of an affine $\lambda$-term instead of a finite state. They can be seen as variations on Gallot, Lemay and Salvati's Linear High-Order Deterministic Tree Transducers.
  When the memory is almost purely affine ($\textit{\`a la}$ Kanazawa), we show that these machines can be translated to tree-walking transducers (and with a purely affine memory, we get a reversible tree-walking transducer). This leads to a proof of an inexpressivity conjecture of Nguy\^en and Pradic on "implicit automata" in an affine $\lambda$-calculus. We also prove that a more powerful variant, extended with preprocessing by an MSO relabeling and allowing a limited amount of non-linearity, is equivalent in expressive power to Engelfriet, Hoogeboom and Samwel's invisible pebble tree transducers.
  The key technical tool in our proofs is the Interaction Abstract Machine (IAM), an operational avatar of Girard's geometry of interaction, a semantics of linear logic. We work with ad-hoc specializations to $\lambda$-terms of low exponential depth of a tree-generating version of the IAM.</description>
      <guid isPermaLink="false">oai:arXiv.org:2402.05854v2</guid>
      <category>cs.FL</category>
      <category>cs.LO</category>
      <pubDate>Mon, 20 Jan 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>L\^e Th\`anh D\~ung Nguy\^en, Gabriele Vanoni</dc:creator>
    </item>
    <item>
      <title>Complexity of the Uniform Membership Problem for Hyperedge Replacement Grammars</title>
      <link>https://arxiv.org/abs/2501.08082</link>
      <description>arXiv:2501.08082v2 Announce Type: replace 
Abstract: We investigate complexity of the uniform membership problem for hyperedge replacement grammars in comparison with other mildly context-sensitive grammar formalisms. It turns out that the complexity of the problem considered depends heavily on how one defines a hypergraph. There are two commonly used definitions in the field which differ in whether repetitions of attachment nodes of a hyperedge are allowed in a hypergraph or not. We show that, if repetitions are allowed, then the problem under consideration is EXPTIME-complete even for string-generating hyperedge replacement grammars while it is NP-complete if repetitions are disallowed. We also prove that checking whether a hyperedge replacement grammar is string-generating is EXPTIME-complete.</description>
      <guid isPermaLink="false">oai:arXiv.org:2501.08082v2</guid>
      <category>cs.FL</category>
      <pubDate>Mon, 20 Jan 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Tikhon Pshenitsyn</dc:creator>
    </item>
  </channel>
</rss>
