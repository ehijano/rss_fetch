<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.CG updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.CG</link>
    <description>cs.CG updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.CG" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Fri, 09 May 2025 04:00:11 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Fri, 09 May 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Faster Fr\'echet Distance Approximation through Truncated Smoothing</title>
      <link>https://arxiv.org/abs/2401.14815</link>
      <description>arXiv:2401.14815v2 Announce Type: replace 
Abstract: The Fr\'echet distance is a commonly used distance measure for curves. Computing the Fr\'echet distance between two polygonal curves of $n$ vertices takes roughly quadratic time, and conditional lower bounds suggest that approximating to within a factor $3$ cannot be done in strongly-subquadratic time, even in one dimension. Currently, the best approximation algorithms present trade-offs between approximation quality and running time. At SoCG 2021, Colombe and Fox presented an $O((n^3 / \alpha^2) \log n)$-time $\alpha$-approximate algorithm for curves in arbitrary dimensions, for any $\alpha \in [\sqrt{n}, n]$. In this work, we give an $\alpha$-approximate algorithm with a significantly faster running time of $O((n^2 / \alpha) \log n)$, for any $\alpha \in [1, n]$. In particular, we give the first strongly-subquadratic $n^\varepsilon$-approximation algorithm, for any constant $\varepsilon \in (0, 1/2]$. For curves in one dimension we further improve the running time to $O((n^2 / \alpha^3) \log^2 n)$, for $\alpha \in [1, n^{1/3}]$. Both of our algorithms rely on a linear-time simplification procedure that in one dimension reduces the complexity of the reachable free space to $O(n^2 / \alpha)$ without making sacrifices in the asymptotic approximation factor.</description>
      <guid isPermaLink="false">oai:arXiv.org:2401.14815v2</guid>
      <category>cs.CG</category>
      <pubDate>Fri, 09 May 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Thijs van der Horst, Marc van Kreveld, Tim Ophelders, Bettina Speckmann</dc:creator>
    </item>
    <item>
      <title>Contiguous Boundary Guarding</title>
      <link>https://arxiv.org/abs/2412.15053</link>
      <description>arXiv:2412.15053v2 Announce Type: replace 
Abstract: We study the problem of guarding the boundary of a simple polygon with a minimum number of guards such that each guard covers a contiguous portion of the boundary. First, we present a simple greedy algorithm for this problem that returns a guard set of size at most OPT + 1, where OPT is the number of guards in an optimal solution. Then, we present a polynomial-time exact algorithm. While the algorithm is not complicated, its correctness proof is rather involved. This result is interesting in the sense that guarding problems are typically NP-hard and, in particular, it is NP-hard to minimize the number of guards to see the boundary of a simple polygon, without the contiguous boundary guarding constraint.
  From the combinatorial point of view, we show that any $n$-vertex polygon can be guarded by at most $\lfloor \frac{n-2}{2}\rfloor$ guards. This bound is tight because there are polygons that require this many guards.</description>
      <guid isPermaLink="false">oai:arXiv.org:2412.15053v2</guid>
      <category>cs.CG</category>
      <pubDate>Fri, 09 May 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Ahmad Biniaz, Anil Maheshwari, Joseph S. B. Mitchell, Saeed Odak, Valentin Polishchuk, Thomas Shermer</dc:creator>
    </item>
    <item>
      <title>The Geodesic Fr\'echet Distance Between Two Curves Bounding a Simple Polygon</title>
      <link>https://arxiv.org/abs/2501.03834</link>
      <description>arXiv:2501.03834v2 Announce Type: replace 
Abstract: The Fr\'echet distance is a popular similarity measure that is well-understood for polygonal curves in $\mathbb{R}^d$: near-quadratic time algorithms exist, and conditional lower bounds suggest that these results cannot be improved significantly, even in one dimension and when approximating with a factor less than three. We consider the special case where the curves bound a simple polygon and distances are measured via geodesics inside this simple polygon. Here the conditional lower bounds do not apply; Efrat $et$ $al.$ (2002) were able to give a near-linear time $2$-approximation algorithm.
  In this paper, we significantly improve upon their result: we present a $(1+\varepsilon)$-approximation algorithm, for any $\varepsilon &gt; 0$, that runs in $\mathcal{O}(\frac{1}{\varepsilon} (n+m \log n) \log nm \log \frac{1}{\varepsilon})$ time for a simple polygon bounded by two curves with $n$ and $m$ vertices, respectively. To do so, we show how to compute the reachability of specific groups of points in the free space at once, by interpreting the free space as one between separated one-dimensional curves. We solve this one-dimensional problem in near-linear time, generalizing a result by Bringmann and K\"unnemann (2015). Finally, we give a linear time exact algorithm if the two curves bound a convex polygon.</description>
      <guid isPermaLink="false">oai:arXiv.org:2501.03834v2</guid>
      <category>cs.CG</category>
      <pubDate>Fri, 09 May 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Thijs van der Horst, Marc van Kreveld, Tim Ophelders, Bettina Speckmann</dc:creator>
    </item>
    <item>
      <title>The Marco Polo Problem: A Combinatorial Approach to Geometric Localization</title>
      <link>https://arxiv.org/abs/2504.17955</link>
      <description>arXiv:2504.17955v2 Announce Type: replace 
Abstract: We introduce and study the Marco Polo problem, which is a combinatorial approach to geometric localization. In this problem, we are told there are one or more points of interest (POIs) within distance $n$ of the origin that we wish to localize. Given a mobile search point, $\Delta$, that is initially at the origin, a localization algorithm is a strategy to move $\Delta$ to be within a distance of $1$ of a POI. In the combinatorial localization problem we study, the only tool we can use is reminiscent of the children's game, "Marco Polo," in that $\Delta$ can issue a probe signal out a specified distance, $d$, and the search algorithm learns whether or not there is a POI within distance $d$ of $\Delta$. For example, we could imagine that POIs are one or more hikers lost in a forest and we need to design a search-and-rescue (SAR) strategy to find them using radio signal probes to a response device that hikers carry. Unlike other known localization algorithms, probe responses do not inform our search algorithm of the direction or distance to a POI. The optimization problem is to minimize the number of probes and/or POI responses, as well as possibly minimizing the distance traveled by $\Delta$. We describe a number of efficient combinatorial Marco Polo localization strategies and we analyze each one in terms of the size, $n$, of the search domain. Moreover, we derive strong bounds for the constant factors for the search costs for our algorithms, which in some cases involve computer-assisted proofs. We also show how to extend these strategies to find all POIs using a simple, memoryless search algorithm, traveling a distance that is $\mathcal{O}(\log{k})$-competitive with the optimal traveling salesperson (TSP) tour for $k$ POIs.</description>
      <guid isPermaLink="false">oai:arXiv.org:2504.17955v2</guid>
      <category>cs.CG</category>
      <category>cs.DS</category>
      <pubDate>Fri, 09 May 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Ofek Gila (University of California, Irvine), Michael T. Goodrich (University of California, Irvine), Zahra Hadizadeh (University of Rochester), Daniel S. Hirschberg (University of California, Irvine), Shayan Taherijam (University of California, Irvine)</dc:creator>
    </item>
  </channel>
</rss>
