<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.DS updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.DS</link>
    <description>cs.DS updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.DS" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Thu, 18 Jul 2024 04:00:12 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Thu, 18 Jul 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Optimal Distance Labeling for Permutation Graphs</title>
      <link>https://arxiv.org/abs/2407.12147</link>
      <description>arXiv:2407.12147v1 Announce Type: new 
Abstract: A permutation graph is the intersection graph of a set of segments between two parallel lines. In other words, they are defined by a permutation $\pi$ on $n$ elements, such that $u$ and $v$ are adjacent if an only if $u&lt;v$ but $\pi(u)&gt;\pi(v)$. We consider the problem of computing the distances in such a graph in the setting of informative labeling schemes.
  The goal of such a scheme is to assign a short bitstring $\ell(u)$ to every vertex $u$, such that the distance between $u$ and $v$ can be computed using only $\ell(u)$ and $\ell(v)$, and no further knowledge about the whole graph (other than that it is a permutation graph). This elegantly captures the intuition that we would like our data structure to be distributed, and often leads to interesting combinatorial challenges while trying to obtain lower and upper bounds that match up to the lower-order terms.
  For distance labeling of permutation graphs on $n$ vertices, Katz, Katz, and Peleg [STACS 2000] showed how to construct labels consisting of $\mathcal{O}(\log^{2} n)$ bits. Later, Bazzaro and Gavoille [Discret. Math. 309(11)] obtained an asymptotically optimal bounds by showing how to construct labels consisting of $9\log{n}+\mathcal{O}(1)$ bits, and proving that $3\log{n}-\mathcal{O}(\log{\log{n}})$ bits are necessary. This however leaves a quite large gap between the known lower and upper bounds. We close this gap by showing how to construct labels consisting of $3\log{n}+\mathcal{O}(\log\log n)$ bits.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.12147v1</guid>
      <category>cs.DS</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Pawe{\l} Gawrychowski, Wojciech Janczewski</dc:creator>
    </item>
    <item>
      <title>Optimal Padded Decomposition For Bounded Treewidth Graphs</title>
      <link>https://arxiv.org/abs/2407.12230</link>
      <description>arXiv:2407.12230v1 Announce Type: new 
Abstract: A $(\beta,\delta,\Delta)$-padded decomposition of an edge-weighted graph $G = (V,E,w)$ is a stochastic decomposition into clusters of diameter at most $\Delta$ such that for every vertex $v\in V$, the probability that $\rm{ball}_G(v,\gamma\Delta)$ is entirely contained in the cluster containing $v$ is at least $e^{-\beta\gamma}$ for every $\gamma \in [0,\delta]$. Padded decompositions have been studied for decades and have found numerous applications, including metric embedding, multicommodity flow-cut gap, muticut, and zero extension problems, to name a few. In these applications, parameter $\beta$, called the padding parameter, is the most important parameter since it decides either the distortion or the approximation ratios. For general graphs with $n$ vertices, $\beta = \Theta(\log n)$. Klein, Plotkin, and Rao showed that $K_r$-minor-free graphs have padding parameter $\beta = O(r^3)$, which is a significant improvement over general graphs when $r$ is a constant. A long-standing conjecture is to construct a padded decomposition for $K_r$-minor-free graphs with padding parameter $\beta = O(\log r)$. Despite decades of research, the best-known result is $\beta = O(r)$, even for graphs with treewidth at most $r$. In this work, we make significant progress toward the aforementioned conjecture by showing that graphs with treewidth $\rm{tw}$ admit a padded decomposition with padding parameter $O(\log \rm{tw})$, which is tight. As corollaries, we obtain an exponential improvement in dependency on treewidth in a host of algorithmic applications: $O(\sqrt{ \log n \cdot \log(\rm{tw})})$ flow-cut gap, max flow-min multicut ratio of $O(\log(\rm{tw}))$, an $O(\log(\rm{tw}))$ approximation for the 0-extension problem, an $\ell^{O(\log n)}_\infty$ embedding with distortion $O(\log \rm{tw})$, and an $O(\log \rm{tw})$ bound for integrality gap for the uniform sparsest cut.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.12230v1</guid>
      <category>cs.DS</category>
      <category>cs.DM</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Arnold Filtser, Tobias Friedrich, Davis Issac, Nikhil Kumar, Hung Le, Nadym Mallek, Ziena Zeif</dc:creator>
    </item>
    <item>
      <title>Engineering Fully Dynamic Exact $\Delta$-Orientation Algorithms</title>
      <link>https://arxiv.org/abs/2407.12595</link>
      <description>arXiv:2407.12595v1 Announce Type: new 
Abstract: A (fully) dynamic graph algorithm is a data structure that supports edge insertions, edge deletions, and answers specific queries pertinent to the problem at hand. In this work, we address the fully dynamic edge orientation problem, also known as the fully dynamic $\Delta$-orientation problem. The objective is to maintain an orientation of the edges in an undirected graph such that the out-degree of any vertex remains low. When edges are inserted or deleted, it may be necessary to reorient some edges to prevent vertices from having excessively high out-degrees. In this paper, we introduce the first algorithm that maintains an optimal edge orientation during both insertions and deletions. In experiments comparing with recent nearly exact algorithms, we achieve a 32% lower running time. The update time of our algorithm is up to 6 orders of magnitude faster than static exact algorithms.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.12595v1</guid>
      <category>cs.DS</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Ernestine Gro{\ss}mann, Henrik Reinst\"adtler, Christian Schulz, Fabian Walliser</dc:creator>
    </item>
    <item>
      <title>Sampling with a Black Box: Faster Parameterized Approximation Algorithms for Vertex Deletion Problems</title>
      <link>https://arxiv.org/abs/2407.12654</link>
      <description>arXiv:2407.12654v1 Announce Type: new 
Abstract: In this paper we introduce Sampling with a Black Box, a generic technique for the design of parameterized approximation algorithms for vertex deletion problems (e.g., Vertex Cover, Feedback Vertex Set, etc.). The technique relies on two components:
  $\bullet$ A Sampling Step. A polynomial time randomized algorithm which given a graph $G$ returns a random vertex $v$ such that the optimum of $G\setminus \{v\}$ is smaller by $1$ than the optimum of $G$ with some prescribed probability $q$. We show such algorithms exists for multiple vertex deletion problems.
  $\bullet$ A Black Box algorithm which is either an exact parameterized algorithm or a polynomial time approximation algorithm.
  Our technique combines these two components together. The sampling step is applied iteratively to remove vertices from the input graph, and then the solution is extended using the black box algorithm. The process is repeated sufficiently many times so that the target approximation ratio is attained with a constant probability. The main novelty of our work lies in the analysis of the framework and the optimization of the parameters it uses.
  We use the technique to derive parameterized approximation algorithm for several vertex deletion problems, including Feedback Vertex Set, $d$-Hitting Set and $\ell$-Path Vertex Cover. In particular, for every approximation ratio $1&lt;\beta&lt;2$, we attain a parameterized $\beta$-approximation for Feedback Vertex Set which is faster than the parameterized $\beta$-approximation of [Jana, Lokshtanov, Mandal, Rai and Saurabh, MFCS 23']. Furthermore, our algorithms are always faster than the algorithms attained using Fidelity Preserving Transformations [Fellows, Kulik, Rosamond, and Shachnai, JCSS 18'].</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.12654v1</guid>
      <category>cs.DS</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Bar{\i}\c{s} Can Esmer, Ariel Kulik</dc:creator>
    </item>
    <item>
      <title>A Unified Model of Congestion Games with Priorities: Two-Sided Markets with Ties, Finite and Non-Affine Delay Functions, and Pure Nash Equilibria</title>
      <link>https://arxiv.org/abs/2407.12300</link>
      <description>arXiv:2407.12300v1 Announce Type: cross 
Abstract: The study of equilibrium concepts in congestion games and two-sided markets with ties has been a primary topic in game theory, economics, and computer science. Ackermann, Goldberg, Mirrokni, R\"oglin, V\"ocking (2008) gave a common generalization of these two models, in which a player more prioritized by a resource produces an infinite delay on less prioritized players. While presenting several theorems on pure Nash equilibria in this model, Ackermann et al.\ posed an open problem of how to design a model in which more prioritized players produce a large but finite delay on less prioritized players. In this paper, we present a positive solution to this open problem by combining the model of Ackermann et al.\ with a generalized model of congestion games due to Bil\`o and Vinci (2023). In the model of Bil\`o and Vinci, the more prioritized players produce a finite delay on the less prioritized players, while the delay functions are of a specific kind of affine function, and all resources have the same priorities. By unifying these two models, we achieve a model in which the delay functions may be finite and non-affine, and the priorities of the resources may be distinct. We prove some positive results on the existence and computability of pure Nash equilibria in our model, which extend those for the previous models and support the validity of our model.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.12300v1</guid>
      <category>cs.GT</category>
      <category>cs.DM</category>
      <category>cs.DS</category>
      <category>math.CO</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Kenjiro Takazawa</dc:creator>
    </item>
    <item>
      <title>Exact Graph Matching in Correlated Gaussian-Attributed Erd\H{o}s-R\'enyi Model</title>
      <link>https://arxiv.org/abs/2407.12604</link>
      <description>arXiv:2407.12604v1 Announce Type: cross 
Abstract: Graph matching problem aims to identify node correspondence between two or more correlated graphs. Previous studies have primarily focused on models where only edge information is provided. However, in many social networks, not only the relationships between users, represented by edges, but also their personal information, represented by features, are present. In this paper, we address the challenge of identifying node correspondence in correlated graphs, where additional node features exist, as in many real-world settings. We propose a two-step procedure, where we initially match a subset of nodes only using edge information, and then match the remaining nodes using node features. We derive information-theoretic limits for exact graph matching on this model. Our approach provides a comprehensive solution to the real-world graph matching problem by providing systematic ways to utilize both edge and node information for exact matching of the graphs.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.12604v1</guid>
      <category>cs.IT</category>
      <category>cs.DS</category>
      <category>cs.SI</category>
      <category>math.IT</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Joonhyuk Yang, Hye Won Chung</dc:creator>
    </item>
    <item>
      <title>Online Algorithms to Schedule a Proportionate Flexible Flow Shop of Batching Machines</title>
      <link>https://arxiv.org/abs/2005.03552</link>
      <description>arXiv:2005.03552v2 Announce Type: replace 
Abstract: This paper is the first to consider online algorithms to schedule a proportionate flexible flow shop of batching machines (PFFB). The scheduling model is motivated by manufacturing processes of individualized medicaments, which are used in modern medicine to treat some serious illnesses. We provide two different online algorithms, proving also lower bounds for the offline problem to compute their competitive ratios. The first algorithm is an easy-to-implement, general local scheduling heuristic. It is 2-competitive for PFFBs with an arbitrary number of stages and for several natural scheduling objectives. We also show that for total/average flow time, no deterministic algorithm with better competitive ratio exists. For the special case with two stages and the makespan or total completion time objective, we describe an improved algorithm that achieves the best possible competitive ratio $\varphi=\frac{1+\sqrt{5}}{2}$, the golden ratio. All our results also hold for proportionate (non-flexible) flow shops of batching machines (PFB) for which this is also the first paper to study online algorithms.</description>
      <guid isPermaLink="false">oai:arXiv.org:2005.03552v2</guid>
      <category>cs.DS</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <arxiv:DOI>10.1007/s10951-022-00732-y</arxiv:DOI>
      <arxiv:journal_reference>Journal of Scheduling 25, 643-657 (2022)</arxiv:journal_reference>
      <dc:creator>Christoph Hertrich, Christian Wei{\ss}, Heiner Ackermann, Sandy Heydrich, Sven O. Krumke</dc:creator>
    </item>
    <item>
      <title>ReLU Neural Networks of Polynomial Size for Exact Maximum Flow Computation</title>
      <link>https://arxiv.org/abs/2102.06635</link>
      <description>arXiv:2102.06635v5 Announce Type: replace-cross 
Abstract: This paper studies the expressive power of artificial neural networks with rectified linear units. In order to study them as a model of real-valued computation, we introduce the concept of Max-Affine Arithmetic Programs and show equivalence between them and neural networks concerning natural complexity measures. We then use this result to show that two fundamental combinatorial optimization problems can be solved with polynomial-size neural networks. First, we show that for any undirected graph with $n$ nodes, there is a neural network (with fixed weights and biases) of size $\mathcal{O}(n^3)$ that takes the edge weights as input and computes the value of a minimum spanning tree of the graph. Second, we show that for any directed graph with $n$ nodes and $m$ arcs, there is a neural network of size $\mathcal{O}(m^2n^2)$ that takes the arc capacities as input and computes a maximum flow. Our results imply that these two problems can be solved with strongly polynomial time algorithms that solely use affine transformations and maxima computations, but no comparison-based branchings.</description>
      <guid isPermaLink="false">oai:arXiv.org:2102.06635v5</guid>
      <category>cs.LG</category>
      <category>cs.CC</category>
      <category>cs.DS</category>
      <category>cs.NE</category>
      <category>stat.ML</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <arxiv:DOI>10.1007/s10107-024-02096-x</arxiv:DOI>
      <dc:creator>Christoph Hertrich, Leon Sering</dc:creator>
    </item>
  </channel>
</rss>
