<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.CG updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.CG</link>
    <description>cs.CG updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.CG" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Wed, 25 Sep 2024 01:59:23 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Tue, 24 Sep 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>Characterizing graph-nonedge pairs with single interval Cayley configuration spaces in 3-dimensions</title>
      <link>https://arxiv.org/abs/2409.14227</link>
      <description>arXiv:2409.14227v1 Announce Type: new 
Abstract: A linkage $(G,\ell)$ is a pair containing a finite simple undirected graph $G$ and a squared edge-length map $\ell$ that assigns squared Euclidean lengths to the edges of $G$. A $d$-realization of $(G,\ell)$ is an assignment of points in $\mathbb{R}^d$ to the vertices of $G$ for which pair-wise distances between points agree with $\ell$. For $d \leq 3$, we characterize pairs $(G,f)$, where $f$ is a nonedge of $G$, such that, for any squared edge-length map $\ell$, there is a single interval of attained distance values between the endpoints of $f$ over all $d$-realizations of $(G,\ell)$, answering a question posed in \cite{sitharam2010characterizing} a decade ago, which gave an equivalent characterization for $d\le 2$ that does not generalize to $d\ge 3$. Two notable byproducts of this characterization are a new tool for partial $3$-tree completion, a well-studied problem, and a deeper understanding of the realization space of partial $3$-tree linkages through the lens of Cayley realization spaces. Although related to the minor closed class of $3$-flattenable graphs, the class of pairs $(G,f)$ with the above property is not minor closed, has no obvious well quasi-ordering, and there are infinitely many minimal graphs-nonedge pairs - w.r.t. edge contractions - in the complement class. Our characterization overcomes these obstacles, is based on the forbidden minors of the class of $3$-flattenable graphs, and contributes to the theory of Cayley configurations used for analyzing distance-constrained configuration spaces in a range of application domains. Generalizations to higher dimensions and efficient algorithmic characterizations are conjectured.</description>
      <guid isPermaLink="false">oai:arXiv.org:2409.14227v1</guid>
      <category>cs.CG</category>
      <category>math.CO</category>
      <pubDate>Tue, 24 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>William Sims, Meera Sitharam</dc:creator>
    </item>
    <item>
      <title>Efficient Nearest Neighbor Search Using Dynamic Programming</title>
      <link>https://arxiv.org/abs/2409.15023</link>
      <description>arXiv:2409.15023v2 Announce Type: new 
Abstract: When dealing with point clouds distributed on manifold surfaces in 3D space, or when the query point is far from the data, the efficiency of traditional nearest neighbor search algorithms (e.g., KD Tree and R Tree) may degrade. In extreme cases, the complexity of the query can approach O(n). In this paper, we propose a novel dynamic programming technique that precomputes a Directed Acyclic Graph (DAG) to enable more efficient nearest neighbor queries for 2D manifold data. By leveraging this structure, only a small number of distance comparisons between point pairs are required to accurately identify the nearest neighbor. Extensive experimental results demonstrate that our method achieves query speeds that are 1x-10x faster than traditional methods. Moreover, our algorithm exhibits significant potential. It achieves query efficiency comparable to KD-trees on uniformly distributed point clouds. Additionally, our algorithm supports nearest neighbor queries among the first k points. Coupled with our algorithm, a farthest point sampling algorithm with lower complexity can also be implemented. Furthermore, our method has the potential to support nearest neighbor queries with different types of primitives and distance metrics. We believe that the method proposed in this paper represents the most concise and straightforward exact nearest neighbor search algorithm currently available, and it will contribute significantly to advancements in the field.</description>
      <guid isPermaLink="false">oai:arXiv.org:2409.15023v2</guid>
      <category>cs.CG</category>
      <category>cs.GR</category>
      <pubDate>Tue, 24 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Pengfei Wang, Jiantao Song, Shiqing Xin, Shuangmin Chen, Changhe Tu, Wenping Wang, Jiaye Wang</dc:creator>
    </item>
    <item>
      <title>Exact Wavefront Propagation for Globally Optimal One-to-All Path Planning on 2D Cartesian Grids</title>
      <link>https://arxiv.org/abs/2409.11545</link>
      <description>arXiv:2409.11545v2 Announce Type: replace-cross 
Abstract: This paper introduces an efficient $\mathcal{O}(n)$ compute and memory complexity algorithm for globally optimal path planning on 2D Cartesian grids. Unlike existing marching methods that rely on approximate discretized solutions to the Eikonal equation, our approach achieves exact wavefront propagation by pivoting the analytic distance function based on visibility. The algorithm leverages a dynamic-programming subroutine to efficiently evaluate visibility queries. Through benchmarking against state-of-the-art any-angle path planners, we demonstrate that our method outperforms existing approaches in both speed and accuracy, particularly in cluttered environments. Notably, our method inherently provides globally optimal paths to all grid points, eliminating the need for additional gradient descent steps per path query. The same capability extends to multiple starting positions. We also provide a greedy version of our algorithm as well as open-source C++ implementation of our solver.</description>
      <guid isPermaLink="false">oai:arXiv.org:2409.11545v2</guid>
      <category>cs.RO</category>
      <category>cs.CG</category>
      <pubDate>Tue, 24 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <arxiv:DOI>10.1109/LRA.2024.3460409</arxiv:DOI>
      <arxiv:journal_reference>Volume 9, Issue 11, 2024</arxiv:journal_reference>
      <dc:creator>Ibrahim Ibrahim, Joris Gillis, Wilm Decr\'e, Jan Swevers</dc:creator>
    </item>
  </channel>
</rss>
