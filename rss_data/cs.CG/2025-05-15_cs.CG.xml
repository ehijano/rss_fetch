<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.CG updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.CG</link>
    <description>cs.CG updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.CG" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Fri, 16 May 2025 04:01:24 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Fri, 16 May 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Topology-driven identification of repetitions in multi-variate time series</title>
      <link>https://arxiv.org/abs/2505.10004</link>
      <description>arXiv:2505.10004v1 Announce Type: new 
Abstract: Many multi-variate time series obtained in the natural sciences and engineering possess a repetitive behavior, as for instance state-space trajectories of industrial machines in discrete automation. Recovering the times of recurrence from such a multi-variate time series is of a fundamental importance for many monitoring and control tasks. For a periodic time series this is equivalent to determining its period length. In this work we present a persistent homology framework to estimate recurrence times in multi-variate time series with different generalizations of cyclic behavior (periodic, repetitive, and recurring). To this end, we provide three specialized methods within our framework that are provably stable and validate them using real-world data, including a new benchmark dataset from an injection molding machine.</description>
      <guid isPermaLink="false">oai:arXiv.org:2505.10004v1</guid>
      <category>cs.CG</category>
      <category>eess.SP</category>
      <category>math.AT</category>
      <category>stat.ML</category>
      <pubDate>Fri, 16 May 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-sa/4.0/</dc:rights>
      <dc:creator>Simon Schindler, Elias Steffen Reich, Saverio Messineo, Simon Hoher, Stefan Huber</dc:creator>
    </item>
    <item>
      <title>Approximating the Directed Hausdorff Distance</title>
      <link>https://arxiv.org/abs/2505.09046</link>
      <description>arXiv:2505.09046v2 Announce Type: replace 
Abstract: The Hausdorff distance is a metric commonly used to compute the set similarity of geometric sets.
  For sets containing a total of $n$ points, the exact distance can be computed na\"{i}vely in $O(n^2)$ time.
  In this paper, we show how to preprocess point sets individually so that the Hausdorff distance of any pair can then be approximated in linear time.
  We assume that the metric is doubling.
  The preprocessing time for each set is $O(n\log \Delta)$ where $\Delta$ is the ratio of the largest to smallest pairwise distances of the input.
  In theory, this can be reduced to $O(n\log n)$ time using a much more complicated algorithm.
  We compute $(1+\varepsilon)$-approximate Hausdorff distance in $(2 + \frac{1}{\varepsilon})^{O(d)}n$ time in a metric space with doubling dimension $d$.
  The $k$-partial Hausdorff distance ignores $k$ outliers to increase stability.
  Additionally, we give a linear-time algorithm to compute directed $k$-partial Hausdorff distance for all values of $k$ at once with no change to the preprocessing.</description>
      <guid isPermaLink="false">oai:arXiv.org:2505.09046v2</guid>
      <category>cs.CG</category>
      <pubDate>Fri, 16 May 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Oliver A. Chubet, Parth M. Parikh, Donald R. Sheehy, Siddharth S. Sheth</dc:creator>
    </item>
  </channel>
</rss>
