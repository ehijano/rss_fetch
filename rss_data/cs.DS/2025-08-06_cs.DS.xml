<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.DS updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.DS</link>
    <description>cs.DS updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.DS" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Thu, 07 Aug 2025 04:00:19 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Thu, 07 Aug 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>A 60-Addition, Rank-23 Scheme for Exact 3x3 Matrix Multiplication</title>
      <link>https://arxiv.org/abs/2508.03857</link>
      <description>arXiv:2508.03857v1 Announce Type: new 
Abstract: We reduce the additive cost of general (non-commutative) 3x3 matrix multiplication from the previous records of 61 (Schwartz-Vaknin, 2023) and 62 (Martensson-Wagner, 2025) to 60 without a change of basis. To our knowledge, this represents a new state-of-the-art.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.03857v1</guid>
      <category>cs.DS</category>
      <category>cs.CC</category>
      <category>cs.NA</category>
      <category>math.NA</category>
      <pubDate>Thu, 07 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Joshua Stapleton</dc:creator>
    </item>
    <item>
      <title>Counting Distinct Square Substrings in Sublinear Time</title>
      <link>https://arxiv.org/abs/2508.03930</link>
      <description>arXiv:2508.03930v1 Announce Type: new 
Abstract: We show that the number of distinct squares in a packed string of length $n$ over an alphabet of size $\sigma$ can be computed in $O(n/\log_\sigma n)$ time in the word-RAM model. This paper is the first to introduce a sublinear-time algorithm for counting squares in the packed setting. The packed representation of a string of length $n$ over an alphabet of size $\sigma$ is given as a sequence of $O(n/\log_\sigma n)$ machine words in the word-RAM model (a machine word consists of $\omega \ge \log_2 n$ bits). Previously, it was known how to count distinct squares in $O(n)$ time [Gusfield and Stoye, JCSS 2004], even for a string over an integer alphabet [Crochemore et al., TCS 2014; Bannai et al., CPM 2017; Charalampopoulos et al., SPIRE 2020]. We use the techniques for extracting squares from runs described by Crochemore et al. [TCS 2014]. However, the packed model requires novel approaches.
  We need an $O(n/\log_\sigma n)$-sized representation of all long-period runs (runs with period $\Omega(\log_\sigma n)$) which allows for a sublinear-time counting of the -- potentially linearly-many -- implied squares. The long-period runs with a string period that is periodic itself (called layer runs) are an obstacle, since their number can be $\Omega(n)$. The number of all other long-period runs is $O(n/\log_\sigma n)$ and we can construct an implicit representation of all long-period runs in $O(n/\log_\sigma n)$ time by leveraging the insights of Amir et al. [ESA 2019]. We count squares in layer runs by exploiting combinatorial properties of pyramidally-shaped groups of layer runs. Another difficulty lies in computing the locations of Lyndon roots of runs in packed strings, which is needed for grouping runs that may generate equal squares. To overcome this difficulty, we introduce sparse-Lyndon roots which are based on string synchronizers [Kempa and Kociumaka, STOC 2019].</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.03930v1</guid>
      <category>cs.DS</category>
      <pubDate>Thu, 07 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Panagiotis Charalampopoulos, Manal Mohamed, Jakub Radoszewski, Wojciech Rytter, Tomasz Wale\'n, Wiktor Zuba</dc:creator>
    </item>
    <item>
      <title>Exactly simulating stochastic chemical reaction networks in sub-constant time per reaction</title>
      <link>https://arxiv.org/abs/2508.04079</link>
      <description>arXiv:2508.04079v1 Announce Type: new 
Abstract: The model of chemical reaction networks is among the oldest and most widely studied and used in natural science. The model describes reactions among abstract chemical species, for instance $A + B \to C$, which indicates that if a molecule of type $A$ interacts with a molecule of type $B$ (the reactants), they may stick together to form a molecule of type $C$ (the product). The standard algorithm for simulating (discrete, stochastic) chemical reaction networks is the Gillespie algorithm [JPC 1977], which stochastically simulates one reaction at a time, so to simulate $\ell$ consecutive reactions, it requires total running time $\Omega(\ell)$.
  We give the first chemical reaction network stochastic simulation algorithm that can simulate $\ell$ reactions, provably preserving the exact stochastic dynamics (sampling from precisely the same distribution as the Gillespie algorithm), yet using time provably sublinear in $\ell$. Under reasonable assumptions, our algorithm can simulate $\ell$ reactions among $n$ total molecules in time $O(\ell/\sqrt n)$ when $\ell \ge n^{5/4}$, and in time $O(\ell/n^{2/5})$ when $n \le \ell \le n^{5/4}$. Our work adapts an algorithm of Berenbrink, Hammer, Kaaser, Meyer, Penschuck, and Tran [ESA 2020] for simulating the distributed computing model known as population protocols, extending it (in a very nontrivial way) to the more general chemical reaction network setting.
  We provide an implementation of our algorithm as a Python package, with the core logic implemented in Rust, with remarkably fast performance in practice.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.04079v1</guid>
      <category>cs.DS</category>
      <pubDate>Thu, 07 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Joshua Petrack, David Doty</dc:creator>
    </item>
    <item>
      <title>Exact Matching in Matrix Multiplication Time</title>
      <link>https://arxiv.org/abs/2508.04081</link>
      <description>arXiv:2508.04081v1 Announce Type: new 
Abstract: Initiated by Mulmuley, Vazirani, and Vazirani (1987), many algebraic algorithms have been developed for matching and related problems. In this paper, we review basic facts and discuss possible improvements with the aid of fast computation of the characteristic polynomial of a matrix. In particular, we show that the so-called exact matching problem can be solved with high probability in asymptotically the same time order as matrix multiplication. We also discuss its extension to the linear matroid parity problem.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.04081v1</guid>
      <category>cs.DS</category>
      <category>cs.SC</category>
      <category>math.CO</category>
      <pubDate>Thu, 07 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Ryotaro Sato, Yutaro Yamaguchi</dc:creator>
    </item>
    <item>
      <title>Approximation Algorithms for Scheduling Crowdsourcing Tasks in Mobile Social Networks</title>
      <link>https://arxiv.org/abs/2508.04159</link>
      <description>arXiv:2508.04159v1 Announce Type: new 
Abstract: This paper addresses the scheduling problem in mobile social networks. We begin by proving that the approximation ratio analysis presented in the paper by Zhang \textit{et al.} (IEEE Transactions on Mobile Computing, 2025) is incorrect, and we provide the correct analysis results. Furthermore, when the required service time for a task exceeds the total contact time between the requester and the crowd worker, we demonstrate that the approximation ratio of the Largest-Ratio-First task scheduling algorithm can reach $2 - \frac{1}{m}$. Next, we introduce a randomized approximation algorithm to minimize mobile social networks' total weighted completion time. This algorithm achieves an expected approximation ratio of $1.5 + \epsilon$ for $\epsilon&gt;0$. Finally, we present a deterministic approximation algorithm that minimizes mobile social networks' total weighted completion time. This deterministic algorithm achieves an approximation ratio of $\max\left\{2.5,1+\epsilon\right\}$ for $\epsilon&gt;0$. Additionally, when the task's required service time or the total contact time between the requester and the crowd worker is sufficiently large, this algorithm can reach an approximation ratio of $1.5+\epsilon$ for $\epsilon&gt;0$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.04159v1</guid>
      <category>cs.DS</category>
      <pubDate>Thu, 07 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Chi-Yeh Chen</dc:creator>
    </item>
    <item>
      <title>Decoupling via Affine Spectral-Independence: Beck-Fiala and Koml\'os Bounds Beyond Banaszczyk</title>
      <link>https://arxiv.org/abs/2508.03961</link>
      <description>arXiv:2508.03961v1 Announce Type: cross 
Abstract: The Beck-Fiala Conjecture [Discrete Appl. Math, 1981] asserts that any set system of $n$ elements with degree $k$ has combinatorial discrepancy $O(\sqrt{k})$. A substantial generalization is the Koml\'os Conjecture, which states that any $m \times n$ matrix with unit length columns has discrepancy $O(1)$.
  In this work, we resolve the Beck-Fiala Conjecture for $k \geq \log^2 n$. We also give an $\widetilde{O}(\sqrt{k} + \sqrt{\log n})$ bound for $k \leq \log^2 n$, where $\widetilde{O}(\cdot)$ hides $\mathsf{poly}(\log \log n)$ factors. These bounds improve upon the $O(\sqrt{k \log n})$ bound due to Banaszczyk [Random Struct. Algor., 1998].
  For the Komlos problem, we give an $\widetilde{O}(\log^{1/4} n)$ bound, improving upon the previous $O(\sqrt{\log n})$ bound [Random Struct. Algor., 1998]. All of our results also admit efficient polynomial-time algorithms.
  To obtain these results, we consider a new notion of affine spectral-independence in designing random walks. In particular, our algorithms obtain the desired colorings via a discrete Brownian motion, guided by a semidefinite program (SDP). Besides standard constraints used in prior works, we add some extra affine spectral-independence constraints, which effectively decouple the evolution of discrepancy across different rows, and allow us to better control how many rows accumulate large discrepancy at any point during the process. This technique of ``decoupling via affine spectral-independence'' is quite general and may be of independent interest.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.03961v1</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <category>cs.DS</category>
      <category>math.PR</category>
      <pubDate>Thu, 07 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Nikhil Bansal, Haotian Jiang</dc:creator>
    </item>
    <item>
      <title>Polynomial-time sampling despite disorder chaos</title>
      <link>https://arxiv.org/abs/2508.04133</link>
      <description>arXiv:2508.04133v1 Announce Type: cross 
Abstract: A distribution over instances of a sampling problem is said to exhibit transport disorder chaos if perturbing the instance by a small amount of random noise dramatically changes the stationary distribution (in Wasserstein distance). Seeking to provide evidence that some sampling tasks are hard on average, a recent line of work has demonstrated that disorder chaos is sufficient to rule out "stable" sampling algorithms, such as gradient methods and some diffusion processes.
  We demonstrate that disorder chaos does not preclude polynomial-time sampling by canonical algorithms in canonical models. We show that with high probability over a random graph $\boldsymbol{G} \sim G(n,1/2)$: (1) the hardcore model (at fugacity $\lambda = 1$) on $\boldsymbol{G}$ exhibits disorder chaos, and (2) Glauber dynamics run for $O(n)$ time can approximately sample from the hardcore model on $\boldsymbol{G}$ (in Wasserstein distance).</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.04133v1</guid>
      <category>cs.CC</category>
      <category>cs.DS</category>
      <category>math.CO</category>
      <category>math.PR</category>
      <pubDate>Thu, 07 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Eric Ma, Tselil Schramm</dc:creator>
    </item>
  </channel>
</rss>
