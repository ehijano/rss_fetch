<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>math.HO updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/math.HO</link>
    <description>math.HO updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/math.HO" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Tue, 28 Jan 2025 03:47:53 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Mon, 27 Jan 2025 00:00:00 -0500</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>Low rank matrix completion and realization of graphs: results and problems</title>
      <link>https://arxiv.org/abs/2501.13935</link>
      <description>arXiv:2501.13935v1 Announce Type: new 
Abstract: The Netflix problem (from machine learning) asks the following. Given a ratings matrix in which each entry $(i,j)$ represents the rating of movie $j$ by customer $i$, if customer $i$ has watched movie $j$, and is otherwise missing, we would like to predict the remaining entries in order to make good recommendations to customers on what to watch next. The remaining entries are predicted so as to minimize the {\it rank} of the completed matrix.
  In this survey we study a more general problem, in which instead of knowing specific matrix elements, we know linear relations on such elements. We describe applications of these results to embeddings of graphs in surfaces (more precisely, embeddings with rotation systems, and embeddings modulo 2).</description>
      <guid isPermaLink="false">oai:arXiv.org:2501.13935v1</guid>
      <category>math.HO</category>
      <category>cs.DM</category>
      <category>cs.LG</category>
      <category>math.CO</category>
      <category>math.GT</category>
      <pubDate>Mon, 27 Jan 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>S. Dzhenzher, T. Garaev, O. Nikitenko, A. Petukhov, A. Skopenkov, A. Voropaev</dc:creator>
    </item>
    <item>
      <title>Max/Min Puzzles in Geometry III</title>
      <link>https://arxiv.org/abs/2202.11211</link>
      <description>arXiv:2202.11211v3 Announce Type: replace 
Abstract: The first two installments of this series of papers dealt with the maximum area polygons: Parallelogram, Rectangle, Square or Equilateral Triangle, in given triangles. Minimum area polygons were also considered in the second paper on Equilateral Triangles. In this paper the puzzle will be turned the other way around. Given the regular unit polygons, a Square, Pentagon, or Hexagon, we searched for the smallest area triangle(s) which contains it. The Dynamic Software Sketchpad v5.10 BETA was used for all examples and figures throughout the work.</description>
      <guid isPermaLink="false">oai:arXiv.org:2202.11211v3</guid>
      <category>math.HO</category>
      <pubDate>Mon, 27 Jan 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>James M Parks</dc:creator>
    </item>
  </channel>
</rss>
