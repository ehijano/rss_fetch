<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.DM updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.DM</link>
    <description>cs.DM updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.DM" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Tue, 27 Aug 2024 02:30:44 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Mon, 26 Aug 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>A Row-wise Algorithm for Graph Realization</title>
      <link>https://arxiv.org/abs/2408.12869</link>
      <description>arXiv:2408.12869v1 Announce Type: new 
Abstract: Given a $\{0,1\}$-matrix $M$, the graph realization problem for $M$ asks if there exists a spanning forest such that the columns of $M$ are incidence vectors of paths in the forest. The problem is closely related to the recognition of network matrices, which are a large subclass of totally unimodular matrices and have many applications in mixed-integer programming. Previously, Bixby and Wagner have designed an efficient algorithm for graph realization that grows a submatrix in a column-wise fashion whilst maintaining a graphic realization. This paper complements their work by providing an algorithm that works in a row-wise fashion and uses similar data structures. The main challenge in designing efficient algorithms for the graph realization problem is ambiguity as there may exist many graphs realizing $M$. The key insight for designing an efficient row-wise algorithm is that a graphic matrix is uniquely represented by an SPQR tree, a graph decomposition that stores all graphs with the same set of cycles. The developed row-wise algorithm uses data structures that are compatible with the column-wise algorithm and can be combined with the latter to detect maximal graphic submatrices.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.12869v1</guid>
      <category>cs.DM</category>
      <category>math.CO</category>
      <pubDate>Mon, 26 Aug 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Rolf van der Hulst, Matthias Walter</dc:creator>
    </item>
    <item>
      <title>On 2-complexes embeddable in 4-space, and the excluded minors of their underlying graphs</title>
      <link>https://arxiv.org/abs/2408.12681</link>
      <description>arXiv:2408.12681v1 Announce Type: cross 
Abstract: We study the potentially undecidable problem of whether a given 2-dimensional CW complex can be embedded into $\mathbb{R}^4$. We provide operations that preserve embeddability, including joining and cloning of 2-cells, as well as $\Delta\mathrm Y$-transformations. We also construct a CW complex for which $\mathrm Y\Delta$-transformations do not preserve embeddability.
  We use these results to study 4-flat graphs, i.e., graphs that embed in $\mathbb{R}^4$ after attaching any number of 2-cells to their cycles; a graph class that naturally generalizes planarity and linklessness. We verify several conjectures of van der Holst; in particular, we prove that each of the 78 graphs of the Heawood family is an excluded minor for the class of 4-flat graphs.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.12681v1</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <category>math.GT</category>
      <pubDate>Mon, 26 Aug 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Agelos Georgakopoulos, Martin Winter</dc:creator>
    </item>
    <item>
      <title>On z-coloring and ${\rm b}^{\ast}$-coloring of graphs as improved variants of the b-coloring</title>
      <link>https://arxiv.org/abs/2408.12951</link>
      <description>arXiv:2408.12951v1 Announce Type: cross 
Abstract: Let $G$ be a simple graph and $c$ a proper vertex coloring of $G$. A vertex $u$ is called b-vertex in $(G,c)$ if all colors except $c(u)$ appear in the neighborhood of $u$. By a ${\rm b}^{\ast}$-coloring of $G$ using colors $\{1, \ldots, k\}$ we define a proper vertex coloring $c$ such that there is a b-vertex $u$ (called nice vertex) such that for each $j\in \{1, \ldots, k\}$ with $j\not=c(u)$, $u$ is adjacent to a b-vertex of color $j$. The ${\rm b}^{\ast}$-chromatic number of $G$ (denoted by ${\rm b}^{\ast}(G)$) is the largest integer $k$ such that $G$ has a ${\rm b}^{\ast}$-coloring using $k$ colors. Every graph $G$ admits a ${\rm b}^{\ast}$-coloring which is an improvement over the famous b-coloring. A z-coloring of $G$ is a coloring $c$ using colors $\{1, 2, \ldots, k\}$ containing a nice vertex of color $k$ such that for each two colors $i&lt;j$, each vertex of color $j$ has a neighbor of color $i$ in the graph (i.e. $c$ is obtained from a greedy coloring of $G$). We obtain results for ${\rm b}^{\ast}$-coloring and z-coloring of block graphs, cacti, $P_4$-sparse graphs and graphs with girth greater than $4$. We prove that z-coloring and ${\rm b}^{\ast}$-coloring have a locality property. A linear 0-1 programming model is also presented for z-coloring of graphs. The positive results suggest that researches can be focused on ${\rm b}^{\ast}$-colorings (or z-colorings) instead of b-coloring of graphs.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.12951v1</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <pubDate>Mon, 26 Aug 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <dc:creator>Manouchehr Zaker</dc:creator>
    </item>
    <item>
      <title>Single-Machine Scheduling to Minimize the Number of Tardy Jobs with Release Dates</title>
      <link>https://arxiv.org/abs/2408.12967</link>
      <description>arXiv:2408.12967v1 Announce Type: cross 
Abstract: We study the fundamental scheduling problem $1\mid r_j\mid\sum w_j U_j$: schedule a set of $n$ jobs with weights, processing times, release dates, and due dates on a single machine, such that each job starts after its release date and we maximize the weighted number of jobs that complete execution before their due date. Problem $1\mid r_j\mid\sum w_j U_j$ generalizes both Knapsack and Partition, and the simplified setting without release dates was studied by Hermelin et al. [Annals of Operations Research, 2021] from a parameterized complexity viewpoint.
  Our main contribution is a thorough complexity analysis of $1\mid r_j\mid\sum w_j U_j$ in terms of four key problem parameters: the number $p_\#$ of processing times, the number $w_\#$ of weights, the number $d_\#$ of due dates, and the number $r_\#$ of release dates of the jobs. $1\mid r_j\mid\sum w_j U_j$ is known to be weakly para-NP-hard even if $w_\#+d_\#+r_\#$ is constant, and Heeger and Hermelin [ESA, 2024] recently showed (weak) W[1]-hardness parameterized by $p_\#$ or $w_\#$ even if $r_\#$ is constant.
  Algorithmically, we show that $1\mid r_j\mid\sum w_j U_j$ is fixed-parameter tractable parameterized by $p_\#$ combined with any two of the remaining three parameters $w_\#$, $d_\#$, and $r_\#$. We further provide pseudo-polynomial XP-time algorithms for parameter $r_\#$ and $d_\#$. To complement these algorithms, we show that $1\mid r_j\mid\sum w_j U_j$ is (strongly) W[1]-hard when parameterized by $d_\#+r_\#$ even if $w_\#$ is constant. Our results provide a nearly complete picture of the complexity of $1\mid r_j\mid\sum w_j U_j$ for $p_\#$, $w_\#$, $d_\#$, and $r_\#$ as parameters, and extend those of Hermelin et al. [Annals of Operations Research, 2021] for the problem $1\mid\mid\sum w_j U_j$ without release dates.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.12967v1</guid>
      <category>cs.DS</category>
      <category>cs.DM</category>
      <pubDate>Mon, 26 Aug 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Matthias Kaul, Matthias Mnich, Hendrik Molter</dc:creator>
    </item>
    <item>
      <title>Graph Search Trees and the Intermezzo Problem</title>
      <link>https://arxiv.org/abs/2404.18645</link>
      <description>arXiv:2404.18645v2 Announce Type: replace 
Abstract: The last in-tree recognition problem asks whether a given spanning tree can be derived by connecting each vertex with its rightmost left neighbor of some search ordering. In this study, we demonstrate that the last-in-tree recognition problem for Generic Search is $\mathsf{NP}$-complete. We utilize this finding to strengthen a complexity result from order theory. Given a partial order $\pi$ and a set of triples, the $\mathsf{NP}$-complete intermezzo problem asks for a linear extension of $\pi$ where each first element of a triple is not between the other two. We show that this problem remains $\mathsf{NP}$-complete even when the Hasse diagram of the partial order forms a tree of bounded height. In contrast, we give an $\mathsf{XP}$-algorithm for the problem when parameterized by the width of the partial order. Furthermore, we show that $\unicode{x2013}$ under the assumption of the Exponential Time Hypothesis $\unicode{x2013}$ the running time of this algorithm is asymptotically optimal.</description>
      <guid isPermaLink="false">oai:arXiv.org:2404.18645v2</guid>
      <category>cs.DM</category>
      <category>cs.CC</category>
      <category>cs.DS</category>
      <category>math.CO</category>
      <pubDate>Mon, 26 Aug 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Jesse Beisegel, Ekkehard K\"ohler, Fabienne Ratajczak, Robert Scheffler, Martin Strehler</dc:creator>
    </item>
    <item>
      <title>Proof of a conjecture on isolation of graphs dominated by a vertex</title>
      <link>https://arxiv.org/abs/2407.18126</link>
      <description>arXiv:2407.18126v2 Announce Type: replace-cross 
Abstract: A copy of a graph $F$ is called an $F$-copy. For any graph $G$, the $F$-isolation number of $G$, denoted by $\iota(G,F)$, is the size of a smallest subset $D$ of the vertex set of $G$ such that the closed neighbourhood $N[D]$ of $D$ in $G$ intersects the vertex sets of the $F$-copies contained by $G$ (equivalently, $G-N[D]$ contains no $F$-copy). Thus, $\iota(G,K_1)$ is the domination number $\gamma(G)$ of $G$, and $\iota(G,K_2)$ is the vertex-edge domination number of $G$. We prove that if $F$ is a $k$-edge graph, $\gamma(F) = 1$ (that is, $F$ has a vertex that is adjacent to all the other vertices of $F$), and $G$ is a connected $m$-edge graph, then $\iota(G,F) \leq \big\lfloor \frac{m+1}{k+2} \big\rfloor$ unless $G$ is an $F$-copy or $F$ is a $3$-path and $G$ is a $6$-cycle. This was recently posed as a conjecture by Zhang and Wu, who settled the case where $F$ is a star. The result for the case where $F$ is a clique had been obtained by Fenech, Kaemawichanurat and the present author. The bound is attainable for any $m \geq 0$ unless $1 \leq m = k \leq 2$. New ideas, including divisibility considerations, are introduced in the proof of the conjecture.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.18126v2</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <pubDate>Mon, 26 Aug 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Peter Borg</dc:creator>
    </item>
  </channel>
</rss>
