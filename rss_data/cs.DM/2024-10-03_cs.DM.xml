<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.DM updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.DM</link>
    <description>cs.DM updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.DM" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Thu, 03 Oct 2024 07:07:34 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Thu, 03 Oct 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>List strong and list normal edge-coloring of (sub)cubic graphs</title>
      <link>https://arxiv.org/abs/2410.01049</link>
      <description>arXiv:2410.01049v1 Announce Type: cross 
Abstract: A strong edge-coloring of a graph is a proper edge-coloring, in which the edges of every path of length 3 receive distinct colors; in other words, every pair of edges at distance at most 2 must be colored differently. The least number of colors needed for a strong edge-coloring of a graph is the strong chromatic index. We consider the list version of the coloring and prove that the list strong chromatic index of graphs with maximum degree 3 is at most 10. This bound is tight and improves the previous bound of 11 colors.
  We also consider the question whether the strong chromatic index and the list strong chromatic index always coincide. We answer it in negative by presenting an infinite family of graphs for which the two invariants differ. For the special case of the Petersen graph, we show that its list strong chromatic index equals 7, while its strong chromatic index is 5. Up to our best knowledge, this is the first known edge-coloring for which there are graphs with distinct values of the chromatic index and its list version.
  In relation to the above, we also initiate the study of the list version of the normal edge-coloring. A normal edge-coloring of a cubic graph is a proper edge-coloring, in which every edge is adjacent to edges colored with 4 colors or to edges colored with 2 colors. It is conjectured that 5 colors suffice for a normal edge-coloring of any bridgeless cubic graph which is equivalent to the Petersen Coloring Conjecture. 
  Similarly to the strong edge-coloring, the list normal edge-coloring is much more restrictive and consequently for many graphs the list normal chromatic index is greater than the normal chromatic index. In particular, we show that there are cubic graphs with the list normal chromatic index at least 9, there are bridgeless cubic graphs with its value at least 8, and there are cyclically 4-edge-connected cubic graphs with value at least 7.</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.01049v1</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <pubDate>Thu, 03 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Borut Lu\v{z}ar, Edita M\'a\v{c}ajov\'a, Roman Sot\'ak, Diana \v{S}vecov\'a</dc:creator>
    </item>
    <item>
      <title>On the parameterized complexity of computing tree-partitions</title>
      <link>https://arxiv.org/abs/2206.11832</link>
      <description>arXiv:2206.11832v5 Announce Type: replace 
Abstract: We study the parameterized complexity of computing the tree-partition-width, a graph parameter equivalent to treewidth on graphs of bounded maximum degree. On one hand, we can obtain approximations of the tree-partition-width efficiently: we show that there is an algorithm that, given an $n$-vertex graph $G$ and an integer $k$, constructs a tree-partition of width $O(k^7)$ for $G$ or reports that $G$ has tree-partition-width more than $k$, in time $k^{O(1)}n^2$. We can improve slightly on the approximation factor by sacrificing the dependence on $k$, or on $n$. On the other hand, we show the problem of computing tree-partition-width exactly is XALP-complete, which implies that it is $W[t]$-hard for all $t$. We deduce XALP-completeness of the problem of computing the domino treewidth. Next, we adapt some known results on the parameter tree-partition-width and the topological minor relation, and use them to compare tree-partition-width to tree-cut width. Finally, for the related parameter weighted tree-partition-width, we give a similar approximation algorithm (with ratio now $O(k^{15})$) and show XALP-completeness for the special case where vertices and edges have weight 1.</description>
      <guid isPermaLink="false">oai:arXiv.org:2206.11832v5</guid>
      <category>cs.DM</category>
      <pubDate>Thu, 03 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Hans L. Bodlaender, Carla Groenland, Hugo Jacob</dc:creator>
    </item>
    <item>
      <title>Theoretical analysis of git bisect</title>
      <link>https://arxiv.org/abs/2312.13644</link>
      <description>arXiv:2312.13644v2 Announce Type: replace 
Abstract: In this paper, we consider the problem of finding a regression in a version control system (VCS), such as git. The set of versions is modelled by a Directed Acyclic Graph (DAG) where vertices represent versions of the software, and arcs are the changes between different versions. We assume that somewhere in the DAG, a bug was introduced, which persists in all of its subsequent versions. It is possible to query a vertex to check whether the corresponding version carries the bug. Given a DAG and a bugged vertex, the Regression Search Problem consists in finding the first vertex containing the bug in a minimum number of queries in the worst-case scenario. This problem is known to be NP-complete. We study the algorithm used in git to address this problem, known as git bisect. We prove that in a general setting, git bisect can use an exponentially larger number of queries than an optimal algorithm. We also consider the restriction where all vertices have indegree at most 2 (i.e. where merges are made between at most two branches at a time in the VCS), and prove that in this case, git bisect is a $\frac{1}{\log_2(3/2)}$-approximation algorithm, and that this bound is tight. We also provide a better approximation algorithm for this case. Finally, we give an alternative proof of the NP-completeness of the Regression Search Problem, via a variation with bounded indegree.</description>
      <guid isPermaLink="false">oai:arXiv.org:2312.13644v2</guid>
      <category>cs.DM</category>
      <category>cs.DS</category>
      <pubDate>Thu, 03 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <arxiv:DOI>10.1007/s00453-023-01194-0</arxiv:DOI>
      <dc:creator>Julien Courtiel (GREYC), Paul Dorbec (GREYC), Romain Lecoq (GREYC)</dc:creator>
    </item>
    <item>
      <title>Approximating Maximum Edge 2-Coloring by Normalizing Graphs</title>
      <link>https://arxiv.org/abs/2403.06691</link>
      <description>arXiv:2403.06691v2 Announce Type: replace 
Abstract: In a simple, undirected graph G, an edge 2-coloring is a coloring of the edges such that no vertex is incident to edges with more than 2 distinct colors. The problem maximum edge 2-coloring (ME2C) is to find an edge 2-coloring in a graph G with the goal to maximize the number of colors. For a relevant graph class, ME2C models anti-Ramsey numbers and it was considered in network applications. For the problem a 2-approximation algorithm is known, and if the input graph has a perfect matching, the same algorithm has been shown to have a performance guarantee of 5/3. It is known that ME2C is APX-hard and that it is UG-hard to obtain an approximation ratio better than 1.5. We show that if the input graph has a perfect matching, there is a polynomial time 1.625-approximation and if the graph is claw-free or if the maximum degree of the input graph is at most three (i.e., the graph is subcubic), there is a polynomial time 1.5-approximation algorithm for ME2C</description>
      <guid isPermaLink="false">oai:arXiv.org:2403.06691v2</guid>
      <category>cs.DM</category>
      <category>cs.DS</category>
      <pubDate>Thu, 03 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Tobias M\"omke, Alexandru Popa, Aida Roshany-Tabrizi, Michael Ruderer, Roland Vincze</dc:creator>
    </item>
    <item>
      <title>Critical Thresholds for Maximum Cardinality Matching on General Hypergraphs</title>
      <link>https://arxiv.org/abs/2409.09155</link>
      <description>arXiv:2409.09155v2 Announce Type: replace 
Abstract: Significant work has been done on computing the ``average'' optimal solution value for various $\mathsf{NP}$-complete problems using the Erd\"{o}s-R\'{e}nyi model to establish \emph{critical thresholds}. Critical thresholds define narrow bounds for the optimal solution of a problem instance such that the probability that the solution value lies outside these bounds vanishes as the instance size approaches infinity. In this paper, we extend the Erd\"{o}s-R\'{e}nyi model to general hypergraphs on $n$ vertices and $M$ hyperedges. We consider the problem of determining critical thresholds for the largest cardinality matching, and we show that for $M=o(1.155^n)$ the size of the maximum cardinality matching is almost surely 1. On the other hand, if $M=\Theta(2^n)$ then the size of the maximum cardinality matching is $\Omega(n^{\frac12-\gamma})$ for an arbitrary $\gamma &gt;0$. Lastly, we address the gap where $\Omega(1.155^n)=M=o(2^n)$ empirically through computer simulations.</description>
      <guid isPermaLink="false">oai:arXiv.org:2409.09155v2</guid>
      <category>cs.DM</category>
      <category>math.CO</category>
      <pubDate>Thu, 03 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Christopher Sumnicht, Jamison W. Weber, Dhanush R. Giriyan, Arunabha Sen</dc:creator>
    </item>
    <item>
      <title>On Generalizations of Pairwise Compatibility Graphs</title>
      <link>https://arxiv.org/abs/2112.08503</link>
      <description>arXiv:2112.08503v5 Announce Type: replace-cross 
Abstract: A graph $G$ is a pairwise compatibility graph (PCG) if there exists an edge-weighted tree and an interval $I$, such that each leaf of the tree is a vertex of the graph, and there is an edge $\{ x, y \}$ in $G$ if and only if the weight of the path in the tree connecting $x$ and $y$ lies within the interval $I$. Originating in phylogenetics, PCGs are closely connected to important graph classes like leaf-powers and multi-threshold graphs, widely applied in bioinformatics, especially in understanding evolutionary processes. In this paper we introduce two natural generalizations of the PCG class, namely $k$-OR-PCG and $k$-AND-PCG, which are the classes of graphs that can be expressed as union and intersection, respectively, of $k$ PCGs. These classes can be also described using the concepts of the covering number and the intersection dimension of a graph in relation to the PCG class. We investigate how the classes of OR-PCG and AND-PCG are related to PCGs, $k$-interval-PCGs and other graph classes known in the literature. In particular, we provide upper bounds on the minimum $k$ for which an arbitrary graph $G$ belongs to $k$-interval-PCGs, $k$-OR-PCG or $k$-AND-PCG classes. For particular graph classes we improve these general bounds. Moreover, we show that, for every integer $k$, there exists a bipartite graph that is not in the $k$-interval-PCGs class, proving that there is no finite $k$ for which the $k$-interval-PCG class contains all the graphs. This answers an open question of Ahmed and Rahman from 2017. Finally, using a Ramsey theory argument, we show that for any $k$, there exists graphs that are not in $k$-AND-PCG, and graphs that are not in $k$-OR-PCG.</description>
      <guid isPermaLink="false">oai:arXiv.org:2112.08503v5</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <pubDate>Thu, 03 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Tiziana Calamoneri, Manuel Lafond, Angelo Monti, Blerina Sinaimeri</dc:creator>
    </item>
    <item>
      <title>Structure and algorithms for graphs excluding grids with small parity breaks as odd-minors</title>
      <link>https://arxiv.org/abs/2304.04504</link>
      <description>arXiv:2304.04504v3 Announce Type: replace-cross 
Abstract: We investigate a structural generalisation of treewidth we call $\mathcal{A}$-blind-treewidth where $\mathcal{A}$ denotes an annotated graph class. This width parameter is defined by evaluating only the size of those bags $B$ of tree-decompositions for a graph $G$ where ${(G,B) \notin \mathcal{A}}$. For the two cases where $\mathcal{A}$ is (i) the class $\mathcal{B}$ of all pairs ${(G,X)}$ such that no odd cycle in $G$ contains more than one vertex of ${X \subseteq V(G)}$ and (ii) the class $\mathcal{B}$ together with the class $\mathcal{P}$ of all pairs ${(G,X)}$ such that the "torso" of $X$ in $G$ is planar. For both classes, $\mathcal{B}$ and ${\mathcal{B} \cup \mathcal{P}}$, we obtain analogues of the Grid Theorem by Robertson and Seymour and FPT-algorithms that either compute decompositions of small width or correctly determine that the width of a given graph is large. Moreover, we present FPT-algorithms for Maximum Independent Set on graphs of bounded $\mathcal{B}$-blind-treewidth and Maximum Cut on graphs of bounded ${(\mathcal{B}\cup\mathcal{P})}$-blind-treewidth.</description>
      <guid isPermaLink="false">oai:arXiv.org:2304.04504v3</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <pubDate>Thu, 03 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>J. Pascal Gollin, Sebastian Wiederrecht</dc:creator>
    </item>
    <item>
      <title>A Tight Formulation for the Dial-a-Ride Problem</title>
      <link>https://arxiv.org/abs/2308.11285</link>
      <description>arXiv:2308.11285v2 Announce Type: replace-cross 
Abstract: Ridepooling services play an increasingly important role in modern transportation systems. With soaring demand and growing fleet sizes, the underlying route planning problems become increasingly challenging. In this context, we consider the dial-a-ride problem (DARP): Given a set of transportation requests with pick-up and delivery locations, passenger numbers, time windows, and maximum ride times, an optimal routing for a fleet of vehicles, including an optimized passenger assignment, needs to be determined. We present tight mixed-integer linear programming (MILP) formulations for the DARP by combining two state-of-the-art models into novel location-augmented-event-based formulations. Strong valid inequalities and lower and upper bounding techniques are derived to further improve the formulations. We then demonstrate the theoretical and computational superiority of the new model: First, the formulation is tight in the sense that, if time windows shrink to a single point in time, the linear programming relaxation yields integer (and hence optimal) solutions. Second, extensive numerical experiments on benchmark instances show that computational times are on average reduced by 49.7% compared to state-of-the-art event-based approaches.</description>
      <guid isPermaLink="false">oai:arXiv.org:2308.11285v2</guid>
      <category>math.OC</category>
      <category>cs.DM</category>
      <pubDate>Thu, 03 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <arxiv:DOI>10.1016/j.ejor.2024.09.028</arxiv:DOI>
      <dc:creator>Daniela Gaul, Kathrin Klamroth, Christian Pfeiffer, Arne Schulz, Michael Stiglmayr</dc:creator>
    </item>
  </channel>
</rss>
