<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.DM updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.DM</link>
    <description>cs.DM updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.DM" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Mon, 13 Oct 2025 04:01:01 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Mon, 13 Oct 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>A CSP approach to Graph Sandwich Problems</title>
      <link>https://arxiv.org/abs/2510.09128</link>
      <description>arXiv:2510.09128v1 Announce Type: new 
Abstract: The \emph{Sandwich Problem} (SP) for a graph class $\calC$ is the following computational problem. The input is a pair of graphs $(V,E_1)$ and $(V,E_2)$ where $E_1\subseteq E_2$, and the task is to decide whether there is an edge set $E$ where $E_1\subseteq E \subseteq E_2$ such that the graph $(V,E)$ belongs to $\calC$. In this paper we show that many SPs correspond to the constraint satisfaction problem (CSP) of an infinite $2$-edge-coloured graph $H$. We then notice that several known complexity results for SPs also follow from general complexity classifications of infinite-domain CSPs, suggesting a fruitful application of the theory of CSPs to complexity classifications of SPs. We strengthen this evidence by using basic tools from constraint satisfaction theory to propose new complexity results of the SP for several graph classes including line graphs of multigraphs, line graphs of bipartite multigraphs, $K_k$-free perfect graphs, and classes described by forbidding finitely many induced subgraphs, such as $\{I_4,P_4\}$-free graphs, settling an open problem of Alvarado, Dantas, and Rautenbach (2019). We also construct a graph sandwich problem which is in coNP, but neither in P nor coNP-complete (unless P = coNP).</description>
      <guid isPermaLink="false">oai:arXiv.org:2510.09128v1</guid>
      <category>cs.DM</category>
      <category>cs.CC</category>
      <category>math.CO</category>
      <pubDate>Mon, 13 Oct 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-sa/4.0/</dc:rights>
      <dc:creator>Manuel Bodirsky, Santiago Guzm\'an-Pro</dc:creator>
    </item>
    <item>
      <title>A Denoising Diffusion-Based Evolutionary Algorithm Framework: Application to the Maximum Independent Set Problem</title>
      <link>https://arxiv.org/abs/2510.08627</link>
      <description>arXiv:2510.08627v1 Announce Type: cross 
Abstract: Denoising diffusion models (DDMs) offer a promising generative approach for combinatorial optimization, yet they often lack the robust exploration capabilities of traditional metaheuristics like evolutionary algorithms (EAs). We propose a Denoising Diffusion-based Evolutionary Algorithm (DDEA) framework that synergistically integrates these paradigms. It utilizes pre-trained DDMs for both high-quality and diverse population initialization and a novel diffusion-based recombination operator, trained via imitation learning against an optimal demonstrator. Evaluating DDEA on the Maximum Independent Set problem on Erd\H{o}s-R\'enyi graphs, we demonstrate notable improvements over DIFUSCO, a leading DDM solver. DDEA consistently outperforms it given the same time budget, and surpasses Gurobi on larger graphs under the same time limit, with DDEA's solution sizes being 3.9% and 7.5% larger on the ER-300-400 and ER-700-800 datasets, respectively. In out-of-distribution experiments, DDEA provides solutions of 11.6% higher quality than DIFUSCO under the same time limit. Ablation studies confirm that both diffusion initialization and recombination are crucial. Our work highlights the potential of hybridizing DDMs and EAs, offering a promising direction for the development of powerful machine learning solvers for complex combinatorial optimization problems.</description>
      <guid isPermaLink="false">oai:arXiv.org:2510.08627v1</guid>
      <category>cs.NE</category>
      <category>cs.DM</category>
      <pubDate>Mon, 13 Oct 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <dc:creator>Joan Salv\`a Soler, G\"unther R. Raidl</dc:creator>
    </item>
    <item>
      <title>On The Roots of Independence Polynomial: Quantifying The Gap</title>
      <link>https://arxiv.org/abs/2510.09197</link>
      <description>arXiv:2510.09197v1 Announce Type: cross 
Abstract: The independence polynomial of a graph $G$ is the generating polynomial corresponding to its independent sets of different sizes. More formally, if $a_k(G)$ denotes the number of independent sets of $G$ of size $k$ then
  \[I(G,z) \as \sum_{k}^{} (-1)^k a_k(G) z^k.\] The study of evaluating $I(G,z)$ has several deep connections to problems in combinatorics, complexity theory and statistical physics. Consequently, the roots of the independence polynomial have been studied in detail. In particular, many works have provided regions in the complex plane that are devoid of any roots of the polynomial. One of the first such results showed a lower bound on the absolute value of the smallest root $\beta(G)$ of the polynomial. Furthermore, when $G$ is connected, Goldwurm and Santini established that $\beta(G)$ is a simple real root of $I(G,z)$ smaller than one. An alternative proof was given by Csikv\'ari. Both proofs do not provide a gap from $\beta(G)$ to the smallest absolute value amongst all the other roots of $I(G,z)$. In this paper, we quantify this gap.</description>
      <guid isPermaLink="false">oai:arXiv.org:2510.09197v1</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <pubDate>Mon, 13 Oct 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Om Prakash, Vikram Sharma</dc:creator>
    </item>
    <item>
      <title>On Stable Cutsets in General and Minimum Degree Constrained Graphs</title>
      <link>https://arxiv.org/abs/2510.09432</link>
      <description>arXiv:2510.09432v1 Announce Type: cross 
Abstract: A stable cutset is a set of vertices $S$ of a connected graph, that is pairwise non-adjacent and when deleting $S$, the graph becomes disconnected. Determining the existence of a stable cutset in a graph is known to be NP-complete. In this paper, we introduce a new exact algorithm for Stable Cutset. By branching on graph configurations and using the $O^*(1.3645)$ algorithm for the (3,2)-Constraint Satisfaction Problem presented by Beigel and Eppstein, we achieve an improved running time of $O^*(1.2972^n)$.
  In addition, we investigate the Stable Cutset problem for graphs with a bound on the minimum degree $\delta$. First, we show that if the minimum degree of a graph $G$ is at least $\frac{2}{3}(n-1)$, then $G$ does not contain a stable cutset. Furthermore, we provide a polynomial-time algorithm for graphs where $\delta \geq \tfrac{1}{2}n$, and a similar kernelisation algorithm for graphs where $\delta = \tfrac{1}{2}n - k$.
  Finally, we prove that Stable Cutset remains NP-complete for graphs with minimum degree $c$, where $c &gt; 1$. We design an exact algorithm for this problem that runs in $O^*(\lambda^n)$ time, where $\lambda$ is the positive root of $x^{\delta + 2} - x^{\delta + 1} + 6$. This algorithm can also be applied to the \textsc{3-Colouring} problem with the same minimum degree constraint, leading to an improved exact algorithm as well.</description>
      <guid isPermaLink="false">oai:arXiv.org:2510.09432v1</guid>
      <category>cs.DS</category>
      <category>cs.CC</category>
      <category>cs.DM</category>
      <pubDate>Mon, 13 Oct 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Mats Vroon, Hans L. Bodlaender</dc:creator>
    </item>
    <item>
      <title>On open-separating dominating codes in graphs</title>
      <link>https://arxiv.org/abs/2402.03015</link>
      <description>arXiv:2402.03015v3 Announce Type: replace-cross 
Abstract: Using dominating sets to separate vertices of graphs is a well-studied problem in the larger domain of identification problems. In such problems, the objective is to choose a suitable dominating set $C$ of a graph $G$ which is also separating in the sense that the neighbourhoods of any two distinct vertices of $G$ have distinct intersections with $C$. Such a dominating and separating set $C$ of a graph is often referred to as a code in the literature. Depending on the types of dominating and separating sets used, various problems arise under various names in the literature. In this paper, we introduce a new problem in the same realm of identification problems whereby the code, called open-separating dominating code, or OD-code for short, is a dominating set and uses open neighbourhoods for separating vertices. The paper studies the fundamental properties concerning the existence, hardness and minimality of OD-codes. Due to the emergence of a close and yet difficult to establish relation of the OD-code with another well-studied code in the literature called open (neighborhood)-locating dominating code (referred to as the open-separating total-dominating code and abbreviated as OTD-code in this paper), we compare the two codes on various graph families. Finally, we also provide an equivalent reformulation of the problem of finding OD-codes of a graph as a covering problem in a suitable hypergraph and discuss the polyhedra associated with OD-codes, again in relation to OTD-codes of some graph families already studied in this context.</description>
      <guid isPermaLink="false">oai:arXiv.org:2402.03015v3</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <pubDate>Mon, 13 Oct 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <arxiv:DOI>10.1016/j.dam.2025.05.045</arxiv:DOI>
      <arxiv:journal_reference>Discrete Applied Mathematics, Volume 375, 15 November 2025, Pages 215-238</arxiv:journal_reference>
      <dc:creator>Dipayan Chakraborty, Annegret K. Wagler</dc:creator>
    </item>
    <item>
      <title>On the Integrality Gap of Directed Steiner Tree LPs with Relatively Integral Solutions</title>
      <link>https://arxiv.org/abs/2412.10744</link>
      <description>arXiv:2412.10744v3 Announce Type: replace-cross 
Abstract: The Directed Steiner Tree (DST) problem is defined on a directed graph $G=(V,E)$, where we are given a designated root vertex $r$ and a set of $k$ terminals $K \subseteq V \setminus {r}$. The goal is to find a minimum-cost subgraph that provides directed $r \rightarrow t$ paths for all terminals $t \in K$.
  The approximability of DST has long been a central open problem in network design. While there exist polylogarithmic-approximation algorithms with quasi-polynomial running times (Charikar et al. 1998; Grandoni, Laekhanukit, and Li 2019; Ghuge and Nagarajan 2020), the best known polynomial-time approximation until now has remained at $k^\epsilon$, for any constant $\epsilon &gt; 0$. Whether a polynomial-time algorithm achieving a polylogarithmic approximation exists has remained unresolved.
  In this paper, we present a flow-based LP-relaxation for DST that admits a polylogarithmic integrality gap under the relative integral condition -- there exists a fractional solution in which each edge $e$ either carries a zero flow ($f^t_e=0$) or uses its full capacity ($f^t_e=x_e$), where $f^t_e$ denotes the flow variable and $x_e$ denotes the indicator variable treated as capacities. This stands in contrast to known lower bounds, as the standard flow-based relaxation is known to exhibit a polynomial integrality gap even under relatively integral solutions. In fact, this relatively integral property is shared by all the known integrality gap instances of DST [Halperin~et~al., SODA'07; Zosin-Khuller, SODA'02; Li-Laekhanukit, SODA'22].
  We further provide a randomized polynomial-time algorithm that gives an $O(\log^3 k)$-approximation, assuming access to a relatively integral fractional solution.</description>
      <guid isPermaLink="false">oai:arXiv.org:2412.10744v3</guid>
      <category>cs.DS</category>
      <category>cs.DM</category>
      <pubDate>Mon, 13 Oct 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Bundit Laekhanukit</dc:creator>
    </item>
  </channel>
</rss>
