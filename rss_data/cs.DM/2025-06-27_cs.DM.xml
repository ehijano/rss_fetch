<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.DM updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.DM</link>
    <description>cs.DM updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.DM" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Fri, 27 Jun 2025 04:01:23 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Fri, 27 Jun 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>Making Graphs Irregular through Irregularising Walks</title>
      <link>https://arxiv.org/abs/2506.21254</link>
      <description>arXiv:2506.21254v1 Announce Type: new 
Abstract: The 1-2-3 Conjecture, introduced by Karo\'nski, {\L}uczak, and Thomason in 2004, was recently solved by Keusch. This implies that, for any connected graph $G$ different from $K_2$, we can turn $G$ into a locally irregular multigraph $M(G)$, i.e., in which no two adjacent vertices have the same degree, by replacing some of its edges with at most three parallel edges. In this work, we introduce and study a restriction of this problem under the additional constraint that edges added to $G$ to reach $M(G)$ must form a walk (i.e., a path with possibly repeated edges and vertices) of $G$. We investigate the general consequences of having this additional constraint, and provide several results of different natures (structural, combinatorial, algorithmic) on the length of the shortest irregularising walks, for general graphs and more restricted classes.</description>
      <guid isPermaLink="false">oai:arXiv.org:2506.21254v1</guid>
      <category>cs.DM</category>
      <category>math.CO</category>
      <pubDate>Fri, 27 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Julien Bensmail, Romain Bourneuf, Paul Colinot, Samuel Humeau, Timoth\'ee Martinod</dc:creator>
    </item>
    <item>
      <title>Playing Snake on a Graph</title>
      <link>https://arxiv.org/abs/2506.21281</link>
      <description>arXiv:2506.21281v1 Announce Type: new 
Abstract: Snake is a classic computer game, which has been around for decades. Based on this game, we study the game of Snake on arbitrary undirected graphs. A snake forms a simple path that has to move to an apple while avoiding colliding with itself. When the snake reaches the apple, it grows longer, and a new apple appears. A graph on which the snake has a strategy to keep eating apples until it covers all the vertices of the graph is called snake-winnable. We prove that determining whether a graph is snake-winnable is NP-hard, even when restricted to grid graphs. We fully characterize snake-winnable graphs for odd-sized bipartite graphs and graphs with vertex-connectivity 1. While Hamiltonian graphs are always snake-winnable, we show that non-Hamiltonian snake-winnable graphs have a girth of at most 6 and that this bound is tight.</description>
      <guid isPermaLink="false">oai:arXiv.org:2506.21281v1</guid>
      <category>cs.DM</category>
      <pubDate>Fri, 27 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Denise Graafsma, Bodo Manthey, Alexander Skopalik</dc:creator>
    </item>
    <item>
      <title>Accelerated Cops and Robbers</title>
      <link>https://arxiv.org/abs/2506.20753</link>
      <description>arXiv:2506.20753v1 Announce Type: cross 
Abstract: We consider a variant of Cops and Robbers in which both the cops and the robber are allowed to traverse up to $s$ edges on each of their turns, where $s \ge 2$. We give several general for this new model as well as establish bounds for the cop numbers for grids and hypercubes. We also determine the capture time of cop-win graphs when $s = 2$ up to a small additive constant.</description>
      <guid isPermaLink="false">oai:arXiv.org:2506.20753v1</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <pubDate>Fri, 27 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>William B. Kinnersley, Nikolas Townsend</dc:creator>
    </item>
    <item>
      <title>Edge Clique Partition and Cover Beyond Independence</title>
      <link>https://arxiv.org/abs/2506.21216</link>
      <description>arXiv:2506.21216v1 Announce Type: cross 
Abstract: Covering and partitioning the edges of a graph into cliques are classical problems at the intersection of combinatorial optimization and graph theory, having been studied through a range of algorithmic and complexity-theoretic lenses. Despite the well-known fixed-parameter tractability of these problems when parameterized by the total number of cliques, such a parameterization often fails to be meaningful for sparse graphs. In many real-world instances, on the other hand, the minimum number of cliques in an edge cover or partition can be very close to the size of a maximum independent set \alpha(G).
  Motivated by this observation, we investigate above \alpha parameterizations of the edge clique cover and partition problems. Concretely, we introduce and study Edge Clique Cover Above Independent Set (ECC/\alpha) and Edge Clique Partition Above Independent Set (ECP/\alpha), where the goal is to cover or partition all edges of a graph using at most \alpha(G) + k cliques, and k is the parameter. Our main results reveal a distinct complexity landscape for the two variants. We show that ECP/\alpha is fixed-parameter tractable, whereas ECC/\alpha is NP-complete for all k \geq 2, yet can be solved in polynomial time for k \in {0,1}. These findings highlight intriguing differences between the two problems when viewed through the lens of parameterization above a natural lower bound.
  Finally, we demonstrate that ECC/\alpha becomes fixed-parameter tractable when parameterized by k + \omega(G), where \omega(G) is the size of a maximum clique of the graph G. This result is particularly relevant for sparse graphs, in which \omega is typically small. For H-minor free graphs, we design a subexponential algorithm of running time f(H)^{\sqrt{k}}n^{O(1)}.</description>
      <guid isPermaLink="false">oai:arXiv.org:2506.21216v1</guid>
      <category>cs.DS</category>
      <category>cs.DM</category>
      <pubDate>Fri, 27 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Fedor V. Fomin, Petr A. Golovach, Danil Sagunov, Kirill Simonov</dc:creator>
    </item>
    <item>
      <title>Linear codes arising from the point-hyperplane geometry-Part I: the Segre embedding</title>
      <link>https://arxiv.org/abs/2506.21309</link>
      <description>arXiv:2506.21309v1 Announce Type: cross 
Abstract: Let $V$ be a vector space over the finite field $\mathbb{F}_q$ with $q$ elements and $\Lambda$ be the image of the Segre geometry $\mathrm{PG}(V)\otimes\mathrm{PG}(V^*)$ in $\mathrm{PG}(V\otimes V^*)$. Consider the subvariety $\Lambda_{1}$ of $\Lambda$ represented by the pure tensors $x\otimes \xi$ with $x\in V$ and $\xi\in V^*$ such that $\xi(x)=0$. Regarding $\Lambda_1$ as a projective system of $\mathrm{PG}(V\otimes V^*)$, we study the linear code $\mathcal{C}(\Lambda_1)$ arising from it. The code $\mathcal{C}(\Lambda_1)$ is minimal code and we determine its basic parameters, itsfull weight list and its linear automorphism group. We also give a geometrical characterization of its minimum and second lowest weight codewords as well as of some of the words of maximum weight.</description>
      <guid isPermaLink="false">oai:arXiv.org:2506.21309v1</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <category>cs.IT</category>
      <category>math.IT</category>
      <pubDate>Fri, 27 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Ilaria Cardinali, Luca Giuzzi</dc:creator>
    </item>
    <item>
      <title>Symmetry classes of Hamiltonian cycles</title>
      <link>https://arxiv.org/abs/2506.21337</link>
      <description>arXiv:2506.21337v1 Announce Type: cross 
Abstract: We initiate the study of Hamiltonian cycles up to symmetries of the underlying graph. Our focus lies on the extremal case of Hamiltonian-transitive graphs, i.e., Hamiltonian graphs where, for every pair of Hamiltonian cycles, there is a graph automorphism mapping one cycle to the other. This generalizes the extensively studied uniquely Hamiltonian graphs. In this paper, we show that Cayley graphs of abelian groups are not Hamiltonian-transitive (under some mild conditions and some non-surprising exceptions), i.e., they contain at least two structurally different Hamiltonian cycles. To show this, we reduce Hamiltonian-transitivity to properties of the prime factors of a Cartesian product decomposition, which we believe is interesting in its own right. We complement our results by constructing infinite families of regular Hamiltonian-transitive graphs and take a look at the opposite extremal case by constructing a family with many different Hamiltonian cycles up to symmetry.</description>
      <guid isPermaLink="false">oai:arXiv.org:2506.21337v1</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <pubDate>Fri, 27 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Julia Baligacs (TU Darmstadt), Sofia Brenner (Universit\"at Kassel), Annette Lutz (TU Darmstadt), Lena Volk (TU Darmstadt)</dc:creator>
    </item>
    <item>
      <title>A Row-wise Algorithm for Graph Realization</title>
      <link>https://arxiv.org/abs/2408.12869</link>
      <description>arXiv:2408.12869v2 Announce Type: replace 
Abstract: Given a $\{0,1\}$-matrix $M$, the graph realization problem for $M$ asks if there exists a spanning forest such that the columns of $M$ are incidence vectors of paths in the forest. The problem is closely related to the recognition of network matrices, which are a large subclass of totally unimodular matrices and have many applications in mixed-integer programming. Existing efficient algorithms for graph realization grow a submatrix in a column-wise fashion whilst maintaining a graphic realization. In the context of mixed-integer linear programming, this limits the set of submatrices of the constraint matrix that can efficiently be determined to be network matrices to network submatrices that span all rows and a subset of the columns. This paper complements the existing work by providing an algorithm that works in a row-wise fashion and uses similar data structures, and enables the detection of arbitrary graphic submatrices. The main challenge in designing efficient algorithms for the graph realization problem is ambiguity as there may exist many graphs realizing $M$. The key insight for designing an efficient row-wise algorithm is that a graphic matrix is uniquely represented by an SPQR-tree, a graph decomposition that stores all graphs with the same set of cycles. The developed row-wise algorithm uses data structures that are compatible with the column-wise algorithm and can be combined with the latter to detect maximal graphic submatrices.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.12869v2</guid>
      <category>cs.DM</category>
      <category>math.CO</category>
      <pubDate>Fri, 27 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Rolf van der Hulst, Matthias Walter</dc:creator>
    </item>
    <item>
      <title>Anonymized Network Sensing Graph Challenge</title>
      <link>https://arxiv.org/abs/2409.08115</link>
      <description>arXiv:2409.08115v2 Announce Type: replace-cross 
Abstract: The MIT/IEEE/Amazon GraphChallenge encourages community approaches to developing new solutions for analyzing graphs and sparse data derived from social media, sensor feeds, and scientific data to discover relationships between events as they unfold in the field. The anonymized network sensing Graph Challenge seeks to enable large, open, community-based approaches to protecting networks. Many large-scale networking problems can only be solved with community access to very broad data sets with the highest regard for privacy and strong community buy-in. Such approaches often require community-based data sharing. In the broader networking community (commercial, federal, and academia) anonymized source-to-destination traffic matrices with standard data sharing agreements have emerged as a data product that can meet many of these requirements. This challenge provides an opportunity to highlight novel approaches for optimizing the construction and analysis of anonymized traffic matrices using over 100 billion network packets derived from the largest Internet telescope in the world (CAIDA). This challenge specifies the anonymization, construction, and analysis of these traffic matrices. A GraphBLAS reference implementation is provided, but the use of GraphBLAS is not required in this Graph Challenge. As with prior Graph Challenges the goal is to provide a well-defined context for demonstrating innovation. Graph Challenge participants are free to select (with accompanying explanation) the Graph Challenge elements that are appropriate for highlighting their innovations.</description>
      <guid isPermaLink="false">oai:arXiv.org:2409.08115v2</guid>
      <category>cs.NI</category>
      <category>cs.DM</category>
      <category>cs.PF</category>
      <category>cs.SE</category>
      <category>math.CO</category>
      <pubDate>Fri, 27 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <arxiv:DOI>10.1109/HPEC62836.2024.10938508</arxiv:DOI>
      <dc:creator>Hayden Jananthan, Michael Jones, William Arcand, David Bestor, William Bergeron, Daniel Burrill, Aydin Buluc, Chansup Byun, Timothy Davis, Vijay Gadepally, Daniel Grant, Michael Houle, Matthew Hubbell, Piotr Luszczek, Peter Michaleas, Lauren Milechin, Chasen Milner, Guillermo Morales, Andrew Morris, Julie Mullen, Ritesh Patel, Alex Pentland, Sandeep Pisharody, Andrew Prout, Albert Reuther, Antonio Rosa, Gabriel Wachman, Charles Yee, Jeremy Kepner</dc:creator>
    </item>
    <item>
      <title>Parallel Token Swapping for Qubit Routing</title>
      <link>https://arxiv.org/abs/2411.18581</link>
      <description>arXiv:2411.18581v2 Announce Type: replace-cross 
Abstract: In this paper we study a combinatorial reconfiguration problem that involves finding an optimal sequence of swaps to move an initial configuration of tokens that are placed on the vertices of a graph to a final desired one. This problem arises as a crucial step in reducing the depth of a quantum circuit when compiling a quantum algorithm. We provide the first known constant factor approximation algorithms for the parallel token swapping problem on graph topologies that are commonly found in modern quantum computers, including cycle graphs, subdivided star graphs, and grid graphs. We also study the so-called stretch factor of a natural lower bound to the problem, which has been shown to be useful when designing heuristics for the qubit routing problem. Finally, we study the colored version of this reconfiguration problem where some tokens share the same color and are considered indistinguishable.</description>
      <guid isPermaLink="false">oai:arXiv.org:2411.18581v2</guid>
      <category>cs.DS</category>
      <category>cs.DM</category>
      <category>quant-ph</category>
      <pubDate>Fri, 27 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <dc:creator>Ishan Bansal, Oktay G\"unl\"uk, Richard Shapley</dc:creator>
    </item>
    <item>
      <title>Half-Iterates of $x$exp$(x)$, $x+1/x$ and arcsinh$(x)$</title>
      <link>https://arxiv.org/abs/2506.07625</link>
      <description>arXiv:2506.07625v2 Announce Type: replace-cross 
Abstract: Given $\theta(x)$, one method (EJ) for solving Abel's equation $g(\theta(x)) = g(x) \pm 1$ is significantly faster than a rival method (ML). On the other hand, ML evaluates a limit characterizing the principal solution $g(x)$ directly while EJ finds $g(x) + \delta$, where $\delta$ is possibly nonzero but independent of $x$. If an exact expression for $\delta$ is known, then the "intrinsicality" of ML carries over and relative quickness of EJ is preserved. We study $\delta$, as determined by $\theta$, and continue tangentially our earlier exploration of compositional square roots.</description>
      <guid isPermaLink="false">oai:arXiv.org:2506.07625v2</guid>
      <category>math.NT</category>
      <category>cs.DM</category>
      <pubDate>Fri, 27 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Steven Finch</dc:creator>
    </item>
  </channel>
</rss>
