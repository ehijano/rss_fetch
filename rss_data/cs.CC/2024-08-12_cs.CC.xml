<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.CC updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.CC</link>
    <description>cs.CC updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.CC" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Mon, 12 Aug 2024 04:00:01 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Mon, 12 Aug 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>On the NP-Hardness Approximation Curve for Max-2Lin(2)</title>
      <link>https://arxiv.org/abs/2408.04832</link>
      <description>arXiv:2408.04832v1 Announce Type: new 
Abstract: In the \maxtlint{} problem you are given a system of equations on the form $x_i + x_j \equiv b \pmod{2}$, and your objective is to find an assignment that satisfies as many equations as possible. Let $c \in [0.5, 1]$ denote the maximum fraction of satisfiable equations. In this paper we construct a curve $s (c)$ such that it is \NPhard{} to find a solution satisfying at least a fraction $s$ of equations. This curve either matches or improves all of the previously known inapproximability NP-hardness results for \maxtlint{}. In particular, we show that if $c \geqslant 0.9232$ then $\frac{1 - s (c)}{1 - c} &gt; 1.48969$, which improves the NP-hardness inapproximability constant for the min deletion version of \maxtlint{}. Our work complements the work of O'Donnell and Wu that studied the same question assuming the Unique Games Conjecture.
  Similar to earlier inapproximability results for \maxtlint{}, we use a gadget reduction from the $(2^k - 1)$-ary Hadamard predicate. Previous works used $k$ ranging from $2$ to $4$. Our main result is a procedure for taking a gadget for some fixed $k$, and use it as a building block to construct better and better gadgets as $k$ tends to infinity. Our method can be used to boost the result of both smaller gadgets created by hand $(k = 3)$ or larger gadgets constructed using a computer $(k = 4)$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.04832v1</guid>
      <category>cs.CC</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Bj\"orn Martinsson</dc:creator>
    </item>
    <item>
      <title>Tight Time Complexities in Parallel Stochastic Optimization with Arbitrary Computation Dynamics</title>
      <link>https://arxiv.org/abs/2408.04929</link>
      <description>arXiv:2408.04929v1 Announce Type: cross 
Abstract: In distributed stochastic optimization, where parallel and asynchronous methods are employed, we establish optimal time complexities under virtually any computation behavior of workers/devices/CPUs/GPUs, capturing potential disconnections due to hardware and network delays, time-varying computation powers, and any possible fluctuations and trends of computation speeds. These real-world scenarios are formalized by our new universal computation model. Leveraging this model and new proof techniques, we discover tight lower bounds that apply to virtually all synchronous and asynchronous methods, including Minibatch SGD, Asynchronous SGD (Recht et al., 2011), and Picky SGD (Cohen et al., 2021). We show that these lower bounds, up to constant factors, are matched by the optimal Rennala SGD and Malenia SGD methods (Tyurin &amp; Richt\'arik, 2023).</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.04929v1</guid>
      <category>math.OC</category>
      <category>cs.CC</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Alexander Tyurin</dc:creator>
    </item>
    <item>
      <title>On the Satisfaction Probabilities of $k$-CNF Formulas</title>
      <link>https://arxiv.org/abs/2201.08895</link>
      <description>arXiv:2201.08895v4 Announce Type: replace 
Abstract: The satisfaction probability Pr[$\phi$] := Pr$_{\beta:vars(\phi) \to \{0,1\}}[\beta\models \phi]$ of a propositional formula $\phi$ is the likelihood that a random assignment $\beta$ makes the formula true. We study the complexity of the problem $k$SAT-Pr$_{&gt;p}$ = {$\phi$ is a $k$CNF formula | Pr[$\phi$] &gt; p} for fixed $k$ and $p$. While 3SAT-Pr$_{&gt;0}$ = 3SAT is NP-complete and SAT-Pr$_{&gt;1/2}$ is PP-complete, Akmal and Williams recently showed that 3SAT-Pr$_{&gt;1/2}$ lies in P and 4SAT-Pr$_{&gt;1/2}$ is NP-complete; but the methods used to prove these striking results stay silent about, say, 4SAT-Pr$_{&gt;3/4}$, leaving the computational complexity of $k$SAT-Pr$_{&gt;p}$ open for most $k$ and $p$. In the present paper we give a complete characterization in the form of a trichotomy: $k$SAT-Pr$_{&gt;p}$ lies in AC$^0$, is NL-complete, or is NP-complete. The proof of the trichotomy hinges on a new order-theoretic insight: Every set of $k$CNF formulas contains a formula of maximum satisfaction probability. This deceptively simple statement allows us to (1) kernelize $k$SAT-Pr$_{\ge p}$ for the joint parameters $k$ and $p$, (2) show that the variables of the kernel form a backdoor set when the trichotomy states membership in AC$^0$ or NL, and (3) prove locality properties for $k$CNF formulas $\phi$, by which Pr[$\phi$] &lt; $p$ implies that Pr[$\psi$] &lt; $p$ holds already for a subset $\psi$ of $\phi$'s clauses whose size depends only on $k$ and $p$, and Pr[$\phi$] = $p$ implies $\phi \equiv \psi$ for some $k$CNF formula $\psi$ whose size once more depends only on $k$ and $p$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2201.08895v4</guid>
      <category>cs.CC</category>
      <category>cs.LO</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <dc:creator>Till Tantau</dc:creator>
    </item>
    <item>
      <title>Simple Combinatorial Construction of the $k^{o(1)}$-Lower Bound for Approximating the Parameterized $k$-Clique</title>
      <link>https://arxiv.org/abs/2304.07516</link>
      <description>arXiv:2304.07516v2 Announce Type: replace 
Abstract: In the parameterized $k$-clique problem, or $k$-Clique for short, we are given a graph $G$ and a parameter $k\ge 1$. The goal is to decide whether there exist $k$ vertices in $G$ that induce a complete subgraph (i.e., a $k$-clique). This problem plays a central role in the theory of parameterized intractability as one of the first W[1]-complete problems. Existing research has shown that even an FPT-approximation algorithm for $k$-Clique with arbitrary ratio does not exist, assuming the Gap-Exponential-Time Hypothesis (Gap-ETH) [Chalermsook et al., FOCS'17 and SICOMP]. However, whether this inapproximability result can be based on the standard assumption of $\mathrm{W} 1\ne \mathrm{FPT}$ remains unclear. The recent breakthrough of Bingkai Lin [STOC'21] and subsequent works by Karthik C.S. and Khot [CCC'22], and by Lin, Ren, Sun Wang [ICALP'22] give a technique that bypasses Gap-ETH, thus leading to the inapproximability ratio of $O(1)$ and $k^{o(1)}$ under $\mathrm{W}[1]$-hardness (the first two) and ETH (for the latter one). All the work along this line follows the framework developed by Lin, which starts from the $k$-vector-sum problem and requires some involved algebraic techniques.
  This paper presents an alternative framework for proving the W[1]-hardness of the $k^{o(1)}$-FPT-inapproximability of $k$-Clique. Using this framework, we obtain a gap-producing self-reduction of $k$-Clique without any intermediate algebraic problem. More precisely, we reduce from $(k,k-1)$-Gap Clique to $(q^k, q^{k-1})$-Gap Clique, for any function $q$ depending only on the parameter $k$, thus implying the $k^{o(1)}$-inapproximability result when $q$ is sufficiently large. Our proof is relatively simple and mostly combinatorial. At the core of our construction is a novel encoding of $k$-element subset stemming from the theory of "network coding" and a "Sidon set" representation of a graph.</description>
      <guid isPermaLink="false">oai:arXiv.org:2304.07516v2</guid>
      <category>cs.CC</category>
      <category>cs.DM</category>
      <category>cs.DS</category>
      <category>math.CO</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Yijia Chen, Yi Feng, Bundit Laekhanukit, Yanlin Liu</dc:creator>
    </item>
    <item>
      <title>On estimating the entropy of shallow circuit outputs</title>
      <link>https://arxiv.org/abs/2002.12814</link>
      <description>arXiv:2002.12814v2 Announce Type: replace-cross 
Abstract: Estimating the entropy of probability distributions and quantum states is a fundamental task in information processing. Here, we examine the hardness of this task for the case of probability distributions or quantum states produced by shallow circuits. Specifically, we show that entropy estimation for distributions or states produced by either log-depth circuits or constant-depth circuits with gates of bounded fan-in and unbounded fan-out is at least as hard as the Learning with Errors (LWE) problem, and thus believed to be intractable even for efficient quantum computation. This illustrates that quantum circuits do not need to be complex to render the computation of entropy a difficult task. We also give complexity-theoretic evidence that this problem for log-depth circuits is not as hard as its counterpart with general polynomial-size circuits, seemingly occupying an intermediate hardness regime. Finally, we discuss potential future applications of our work for quantum gravity research by relating our results to the complexity of the bulk-to-boundary dictionary of AdS/CFT.</description>
      <guid isPermaLink="false">oai:arXiv.org:2002.12814v2</guid>
      <category>quant-ph</category>
      <category>cs.CC</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Alexandru Gheorghiu, Matty J. Hoban</dc:creator>
    </item>
    <item>
      <title>Faster parameterized algorithms for modification problems to minor-closed classes</title>
      <link>https://arxiv.org/abs/2210.02167</link>
      <description>arXiv:2210.02167v3 Announce Type: replace-cross 
Abstract: Let ${\cal G}$ be a minor-closed graph class and let $G$ be an $n$-vertex graph. We say that $G$ is a $k$-apex of ${\cal G}$ if $G$ contains a set $S$ of at most $k$ vertices such that $G\setminus S$ belongs to ${\cal G}$. Our first result is an algorithm that decides whether $G$ is a $k$-apex of ${\cal G}$ in time $2^{{\sf poly}(k)}\cdot n^2$, where ${\sf poly}$ is a polynomial function depending on ${\cal G}$. This algorithm improves the previous one, given by Sau, Stamoulis, and Thilikos [ICALP 2020], whose running time was $2^{{\sf poly}(k)}\cdot n^3$. The elimination distance of $G$ to ${\cal G}$, denoted by ${\sf ed}_{\cal G}(G)$, is the minimum number of rounds required to reduce each connected component of $G$ to a graph in ${\cal G}$ by removing one vertex from each connected component in each round. Bulian and Dawar [Algorithmica 2017] provided an FPT-algorithm, with parameter $k$, to decide whether ${\sf ed}_{\cal G}(G)\leq k$. However, its dependence on $k$ is not explicit. We extend the techniques used in the first algorithm to decide whether ${\sf ed}_{\cal G}(G)\leq k$ in time $2^{2^{2^{{\sf poly}(k)}}}\cdot n^2$. This is the first algorithm for this problem with an explicit parametric dependence in $k$. In the special case where ${\cal G}$ excludes some apex-graph as a minor, we give two alternative algorithms, running in time $2^{2^{{\cal O}(k^2\log k)}}\cdot n^2$ and $2^{{\sf poly}(k)}\cdot n^3$ respectively, where $c$ and ${\sf poly}$ depend on ${\cal G}$. As a stepping stone for these algorithms, we provide an algorithm that decides whether ${\sf ed}_{\cal G}(G)\leq k$ in time $2^{{\cal O}({\sf tw}\cdot k+{\sf tw}\log{\sf tw})}\cdot n$, where ${\sf tw}$ is the treewidth of $G$. Finally, we provide explicit upper bounds on the size of the graphs in the minor-obstruction set of the class of graphs ${\cal E}_k({\cal G})=\{G\mid{\sf ed}_{\cal G}(G)\leq k\}$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2210.02167v3</guid>
      <category>cs.DS</category>
      <category>cs.CC</category>
      <category>math.CO</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:DOI>10.46298/theoretics.24.19</arxiv:DOI>
      <arxiv:journal_reference>TheoretiCS, Volume 3 (2024), Article 19, 1-75</arxiv:journal_reference>
      <dc:creator>Laure Morelle, Ignasi Sau, Giannos Stamoulis, Dimitrios M. Thilikos</dc:creator>
    </item>
  </channel>
</rss>
