<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.FL updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.FL</link>
    <description>cs.FL updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.FL" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Fri, 04 Oct 2024 02:09:10 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Thu, 03 Oct 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>A Naturally-Colored Translation from LTL to Parity and COCOA</title>
      <link>https://arxiv.org/abs/2410.01021</link>
      <description>arXiv:2410.01021v1 Announce Type: new 
Abstract: Chains of co-B\"uchi automata (COCOA) have recently been introduced as a new canonical representation of omega-regular languages. The co-B\"uchi automata in a chain assign to each omega-word its natural color, which depends only on the language itself and not on its automaton representation. The automata in such a chain can be minimized in polynomial time and are good-for-games, making the representation attractive for verification and reactive synthesis applications. However, since in such applications, a specification is usually given in linear temporal logic (LTL), to make COCOA useful, the specification first has to be translated into such a chain of automata. The only currently known translation procedure goes through deterministic parity automata (LTL to DPW to COCOA), where the first step neglects the natural colors and requires intricate constructions by Safra or Esparza et al. This observation raises the question whether with the help of the definition of the natural color of words, such complex constructions can be avoided, leading to a more direct translation from LTL to COCOA.
  In this paper, we describe a surprisingly simple yet optimal translation from LTL to COCOA and a variant of it that translates from LTL to deterministic parity automata. It constitutes a novel path for translating from LTL to DPW as the translation procedure does not use any of the aforementioned intricate constructions. Instead, our procedure relies on standard operations on weak alternating automata, Miyano/Hayashi's breakpoint construction, an augmented subset construction, and some simple graph algorithms. With weak alternating automata as starting point, the procedure can also be applied to specifications in linear dynamic logic. The translation procedure runs in asymptotically-optimal doubly-exponential time and computes automata of asymptotically optimal size.</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.01021v1</guid>
      <category>cs.FL</category>
      <pubDate>Thu, 03 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>R\"udiger Ehlers, Ayrat Khalimov</dc:creator>
    </item>
    <item>
      <title>A complete formalization of Fermat's Last Theorem for regular primes in Lean</title>
      <link>https://arxiv.org/abs/2410.01466</link>
      <description>arXiv:2410.01466v1 Announce Type: new 
Abstract: We formalize a complete proof of the regular case of Fermat's Last Theorem in the Lean4 theorem prover. Our formalization includes a proof of Kummer's lemma, that is the main obstruction to Fermat's Last Theorem for regular primes. Rather than following the modern proof of Kummer's lemma via class field theory, we prove it by using Hilbert's Theorems 90-94 in a way that is more amenable to formalization.</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.01466v1</guid>
      <category>cs.FL</category>
      <category>cs.LO</category>
      <category>math.NT</category>
      <pubDate>Thu, 03 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Riccardo Brasca (IMJ-PRG, UPCit\'e), Christopher Birkbeck (UEA), Eric Rodriguez Boidi, Alex Best, Ruben van De Velde, Andrew Yang</dc:creator>
    </item>
    <item>
      <title>Active Learning of Deterministic Transducers with Outputs in Arbitrary Monoids</title>
      <link>https://arxiv.org/abs/2410.01590</link>
      <description>arXiv:2410.01590v1 Announce Type: new 
Abstract: We study monoidal transducers, transition systems arising as deterministic automata whose transitions also produce outputs in an arbitrary monoid, for instance allowing outputs to commute or to cancel out. We use the categorical framework for minimization and learning of Colcombet, Petri\c{s}an and Stabile to recover the notion of minimal transducer recognizing a language, and give necessary and sufficient conditions on the output monoid for this minimal transducer to exist and be unique (up to isomorphism). The categorical framework then provides an abstract algorithm for learning it using membership and equivalence queries, and we discuss practical aspects of this algorithm's implementation.</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.01590v1</guid>
      <category>cs.FL</category>
      <pubDate>Thu, 03 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:DOI>10.4230/LIPIcs.CSL.2024.11</arxiv:DOI>
      <dc:creator>Quentin Aristote (Universit\'e Paris Cit\'e, CNRS, Inria, IRIF, F-75013, Paris, France)</dc:creator>
    </item>
    <item>
      <title>Execution-time opacity problems in one-clock parametric timed automata</title>
      <link>https://arxiv.org/abs/2410.01659</link>
      <description>arXiv:2410.01659v1 Announce Type: new 
Abstract: Parametric timed automata (PTAs) extend the concept of timed automata, by allowing timing delays not only specified by concrete values but also by parameters, allowing the analysis of systems with uncertainty regarding timing behaviors. The full execution-time opacity is defined as the problem in which an attacker must never be able to deduce whether some private location was visited, by only observing the execution time. The problem of full ET-opacity emptiness (i.e., the emptiness over the parameter valuations for which full execution-time opacity is satisfied) is known to be undecidable for general PTAs. We therefore focus here on one-clock PTAs with integer-valued parameters over dense time. We show that the full ET-opacity emptiness is undecidable for a sufficiently large number of parameters, but is decidable for a single parameter, and exact synthesis can be effectively achieved. Our proofs rely on a novel construction as well as on variants of Presburger arithmetics. We finally prove an additional decidability result on an existential variant of execution-time opacity.</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.01659v1</guid>
      <category>cs.FL</category>
      <pubDate>Thu, 03 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>\'Etienne Andr\'e, Johan Arcile, Engel Lefaucheux</dc:creator>
    </item>
    <item>
      <title>Finding path and cycle counting formulae in graphs with Deep Reinforcement Learning</title>
      <link>https://arxiv.org/abs/2410.01661</link>
      <description>arXiv:2410.01661v1 Announce Type: cross 
Abstract: This paper presents Grammar Reinforcement Learning (GRL), a reinforcement learning algorithm that uses Monte Carlo Tree Search (MCTS) and a transformer architecture that models a Pushdown Automaton (PDA) within a context-free grammar (CFG) framework. Taking as use case the problem of efficiently counting paths and cycles in graphs, a key challenge in network analysis, computer science, biology, and social sciences, GRL discovers new matrix-based formulas for path/cycle counting that improve computational efficiency by factors of two to six w.r.t state-of-the-art approaches. Our contributions include: (i) a framework for generating gramformers that operate within a CFG, (ii) the development of GRL for optimizing formulas within grammatical structures, and (iii) the discovery of novel formulas for graph substructure counting, leading to significant computational improvements.</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.01661v1</guid>
      <category>cs.AI</category>
      <category>cs.FL</category>
      <pubDate>Thu, 03 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Jason Piquenot, Maxime B\'erar, Pierre H\'eroux, Jean-Yves Ramel, Romain Raveaux, S\'ebastien Adam</dc:creator>
    </item>
    <item>
      <title>Transformers as Transducers</title>
      <link>https://arxiv.org/abs/2404.02040</link>
      <description>arXiv:2404.02040v2 Announce Type: replace 
Abstract: We study the sequence-to-sequence mapping capacity of transformers by relating them to finite transducers, and find that they can express surprisingly large classes of transductions. We do so using variants of RASP, a programming language designed to help people "think like transformers," as an intermediate representation. We extend the existing Boolean variant B-RASP to sequence-to-sequence functions and show that it computes exactly the first-order rational functions (such as string rotation). Then, we introduce two new extensions. B-RASP[pos] enables calculations on positions (such as copying the first half of a string) and contains all first-order regular functions. S-RASP adds prefix sum, which enables additional arithmetic operations (such as squaring a string) and contains all first-order polyregular functions. Finally, we show that masked average-hard attention transformers can simulate S-RASP.</description>
      <guid isPermaLink="false">oai:arXiv.org:2404.02040v2</guid>
      <category>cs.FL</category>
      <category>cs.LG</category>
      <pubDate>Thu, 03 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Lena Strobl, Dana Angluin, David Chiang, Jonathan Rawski, Ashish Sabharwal</dc:creator>
    </item>
  </channel>
</rss>
