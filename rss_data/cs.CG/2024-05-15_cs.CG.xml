<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.CG updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.CG</link>
    <description>cs.CG updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.CG" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Thu, 16 May 2024 04:02:27 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Thu, 16 May 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>A Primal-Dual Framework for Symmetric Cone Programming</title>
      <link>https://arxiv.org/abs/2405.09157</link>
      <description>arXiv:2405.09157v1 Announce Type: cross 
Abstract: In this paper, we introduce a primal-dual algorithmic framework for solving Symmetric Cone Programs (SCPs), a versatile optimization model that unifies and extends Linear, Second-Order Cone (SOCP), and Semidefinite Programming (SDP). Our work generalizes the primal-dual framework for SDPs introduced by Arora and Kale, leveraging a recent extension of the Multiplicative Weights Update method (MWU) to symmetric cones. Going beyond existing works, our framework can handle SOCPs and mixed SCPs, exhibits nearly linear time complexity, and can be effectively parallelized. To illustrate the efficacy of our framework, we employ it to develop approximation algorithms for two geometric optimization problems: the Smallest Enclosing Sphere problem and the Support Vector Machine problem. Our theoretical analyses demonstrate that the two algorithms compute approximate solutions in nearly linear running time and with parallel depth scaling polylogarithmically with the input size. We compare our algorithms against CGAL as well as interior point solvers applied to these problems. Experiments show that our algorithms are highly efficient when implemented on a CPU and achieve substantial speedups when parallelized on a GPU, allowing us to solve large-scale instances of these problems.</description>
      <guid isPermaLink="false">oai:arXiv.org:2405.09157v1</guid>
      <category>math.OC</category>
      <category>cs.CG</category>
      <category>cs.DC</category>
      <category>cs.DS</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Jiaqi Zheng, Antonios Varvitsiotis, Tiow-Seng Tan, Wayne Lin</dc:creator>
    </item>
    <item>
      <title>Lens functions for exploring UMAP Projections with Domain Knowledge</title>
      <link>https://arxiv.org/abs/2405.09204</link>
      <description>arXiv:2405.09204v1 Announce Type: cross 
Abstract: Dimensionality reduction algorithms are often used to visualise high-dimensional data. Previously, studies have used prior information to enhance or suppress expected patterns in projections. In this paper, we adapt such techniques for domain knowledge guided interactive exploration. Inspired by Mapper and STAD, we present three types of lens functions for UMAP, a state-of-the-art dimensionality reduction algorithm. Lens functions enable analysts to adapt projections to their questions, revealing otherwise hidden patterns. They filter the modelled connectivity to explore the interaction between manually selected features and the data's structure, creating configurable perspectives each potentially revealing new insights. The effectiveness of the lens functions is demonstrated in two use cases and their computational cost is analysed in a synthetic benchmark. Our implementation is available in an open-source Python package: https://github.com/vda-lab/lensed_umap.</description>
      <guid isPermaLink="false">oai:arXiv.org:2405.09204v1</guid>
      <category>cs.LG</category>
      <category>cs.CG</category>
      <category>cs.HC</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <dc:creator>Daniel M. Bot, Jan Aerts</dc:creator>
    </item>
    <item>
      <title>Parallel computation of interval bases for persistence module decomposition</title>
      <link>https://arxiv.org/abs/2106.11884</link>
      <description>arXiv:2106.11884v2 Announce Type: replace-cross 
Abstract: A persistence module $M$, with coefficients in a field $\mathbb{F}$, is a finite-dimensional linear representation of an equioriented quiver of type $A_n$ or, equivalently, a graded module over the ring of polynomials $\mathbb{F}[x]$. It is well-known that $M$ can be written as the direct sum of indecomposable representations or as the direct sum of cyclic submodules generated by homogeneous elements. An interval basis for $M$ is a set of homogeneous elements of $M$ such that the sum of the cyclic submodules of $M$ generated by them is direct and equal to $M$. We introduce a novel algorithm to compute an interval basis for $M$. Based on a flag of kernels of the structure maps, our algorithm is suitable for parallel or distributed computation and does not rely on a presentation of $M$. This algorithm outperforms the approach via the presentation matrix and Smith Normal Form. We specialize our parallel approach to persistent homology modules, and we close by applying the proposed algorithm to tracking harmonics via Hodge decomposition.</description>
      <guid isPermaLink="false">oai:arXiv.org:2106.11884v2</guid>
      <category>math.AT</category>
      <category>cs.CG</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Alessandro De Gregorio, Marco Guerra, Sara Scaramuccia, Francesco Vaccarino</dc:creator>
    </item>
    <item>
      <title>Combinatorial Persistent Homology Transform</title>
      <link>https://arxiv.org/abs/2208.05243</link>
      <description>arXiv:2208.05243v2 Announce Type: replace-cross 
Abstract: The combinatorial interpretation of the persistence diagram as a M\"obius inversion was recently shown to be functorial. We employ this discovery to recast the Persistent Homology Transform of a geometric complex as a representation of a cellulation on $\mathbb{S}^n$ to the category of combinatorial persistence diagrams. Detailed examples are provided. We hope this recasting of the PH transform will allow for the adoption of existing methods from algebraic and topological combinatorics to the study of shapes.</description>
      <guid isPermaLink="false">oai:arXiv.org:2208.05243v2</guid>
      <category>math.AT</category>
      <category>cs.CG</category>
      <category>math.CT</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:DOI>10.3934/fods.2024020</arxiv:DOI>
      <arxiv:journal_reference>Foundations of Data Science, 2024</arxiv:journal_reference>
      <dc:creator>Brittany Terese Fasy, Amit Patel</dc:creator>
    </item>
  </channel>
</rss>
