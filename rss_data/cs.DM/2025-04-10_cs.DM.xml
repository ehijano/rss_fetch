<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.DM updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.DM</link>
    <description>cs.DM updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.DM" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Fri, 11 Apr 2025 04:00:10 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Fri, 11 Apr 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>Implied Integrality in Mixed-Integer Optimization</title>
      <link>https://arxiv.org/abs/2504.07209</link>
      <description>arXiv:2504.07209v1 Announce Type: new 
Abstract: Implied-integer detection is a well-known presolving technique that is used by many Mixed-Integer Linear Programming solvers. Informally, a variable is said to be implied integer if its integrality is enforced implicitly by integrality of other variables and the constraints of a problem. In this paper we formalize the definition of implied integrality by taking a polyhedral perspective. Our main result characterizes implied integrality as occurring when a subset of integer variables is fixed to integer values and the polyhedron on the remaining variables is integral. While integral polyhedra are well-understood theoretically, existing detection methods infer implied integrality only for one variable at a time. We introduce new detection methods based on the detection of integral polyhedra, extending existing techniques to multiple variables. Additionally, we discuss the computational complexity of recognizing implied integers. We conduct experiments using a new detection method that uses totally unimodular submatrices to identify implied integrality. For the MIPLIB 2017 collection dataset our results indicate that, on average, 18.8% of the variables are classified as implied integer after presolving, compared to just 3.3% identified by state-of-the-art techniques. We are able to reduce the average percentage of variables whose integrality needs to be enforced after presolving from 70.2% to 59.0%.</description>
      <guid isPermaLink="false">oai:arXiv.org:2504.07209v1</guid>
      <category>cs.DM</category>
      <category>math.OC</category>
      <pubDate>Fri, 11 Apr 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Rolf van der Hulst, Matthias Walter</dc:creator>
    </item>
    <item>
      <title>Computing gradient vector fields with Morse sequences</title>
      <link>https://arxiv.org/abs/2504.07526</link>
      <description>arXiv:2504.07526v1 Announce Type: new 
Abstract: We rely on the framework of Morse sequences to enable the direct computation of gradient vector fields on simplicial complexes. A Morse sequence is a filtration from a subcomplex L to a complex K via elementary expansions and fillings, naturally encoding critical and regular simplexes. Maximal increasing and minimal decreasing schemes allow constructing these sequences, and are linked to algorithms like Random Discrete Morse and Coreduction. Extending the approach to cosimplicial complexes (S = K \ L), we define operations -- reductions, perforations, coreductions, and coperforations -- for efficient computation. We further generalize to F -sequences, which are Morse sequences weighted by an arbitrary stack function F , and provide algorithms to compute maximal and minimal sequences. A particular case is when the stack function is given through a vertex map, as it is common in topological data analysis. We show that we retrieve existing methods when the vertex map is injective; in this case, the complex partitions into lower stars, facilitating parallel processing. Thus, this paper proposes simple, flexible, and computationally efficient approaches to obtain Morse sequences from arbitrary stack functions, allowing to generalize previous approaches dedicated to computing gradient vector fields from injective vertex maps.</description>
      <guid isPermaLink="false">oai:arXiv.org:2504.07526v1</guid>
      <category>cs.DM</category>
      <category>math.AT</category>
      <pubDate>Fri, 11 Apr 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Gilles Bertrand (LIGM), Laurent Najman (LIGM)</dc:creator>
    </item>
    <item>
      <title>Disjunctive domination in maximal outerplanar graphs</title>
      <link>https://arxiv.org/abs/2504.07186</link>
      <description>arXiv:2504.07186v1 Announce Type: cross 
Abstract: A disjunctive dominating set of a graph $G$ is a set $D \subseteq V(G)$ such that every vertex in $V(G)\setminus D$ has a neighbor in $D$ or has at least two vertices in $D$ at distance $2$ from it. The disjunctive domination number of $G$, denoted by $\gamma_2^d(G)$, is the minimum cardinality of a disjunctive dominating set of $G$. In this paper, we show that if $G$ is a maximal outerplanar graph of order $n \ge 7$ with $k$ vertices of degree $2$, then $\gamma_2^d(G)\le \lfloor\frac{2}{9}(n+k)\rfloor$, and this bound is sharp.</description>
      <guid isPermaLink="false">oai:arXiv.org:2504.07186v1</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <pubDate>Fri, 11 Apr 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Michael A. Henning, Paras Vinubhai Maniya, Dinabandhu Pradhan</dc:creator>
    </item>
    <item>
      <title>Multiplicative assignment with upgrades</title>
      <link>https://arxiv.org/abs/2504.07663</link>
      <description>arXiv:2504.07663v1 Announce Type: cross 
Abstract: We study a problem related to submodular function optimization and the exact matching problem for which we show a rather peculiar status: its natural LP-relaxation can have fractional optimal vertices, but there is always also an optimal integral vertex, which we can also compute in polynomial time.
  More specifically, we consider the multiplicative assignment problem with upgrades in which we are given a set of customers and suppliers and we seek to assign each customer to a different supplier. Each customer has a demand and each supplier has a regular and an upgraded cost for each unit demand provided to the respective assigned client. Our goal is to upgrade at most $k$ suppliers and to compute an assignment in order to minimize the total resulting cost. This can be cast as the problem to compute an optimal matching in a bipartite graph with the additional constraint that we must select $k$ edges from a certain group of edges, similar to selecting $k$ red edges in the exact matching problem. Also, selecting the suppliers to be upgraded corresponds to maximizing a submodular set function under a cardinality constraint.
  Our result yields an efficient LP-based algorithm to solve our problem optimally. In addition, we provide also a purely strongly polynomial-time algorithm for it. As an application, we obtain exact algorithms for the upgrading variant of the problem to schedule jobs on identical or uniformly related machines in order to minimize their sum of completion times, i.e., where we may upgrade up to $k$ jobs to reduce their respective processing times.</description>
      <guid isPermaLink="false">oai:arXiv.org:2504.07663v1</guid>
      <category>cs.DS</category>
      <category>cs.DM</category>
      <category>math.OC</category>
      <pubDate>Fri, 11 Apr 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Alexander Armbruster, Lars Rohwedder, Stefan Weltge, Andreas Wiese, Ruilong Zhang</dc:creator>
    </item>
    <item>
      <title>Directed Temporal Tree Realization for Periodic Public Transport: Easy and Hard Cases</title>
      <link>https://arxiv.org/abs/2504.07920</link>
      <description>arXiv:2504.07920v1 Announce Type: cross 
Abstract: We study the complexity of the directed periodic temporal graph realization problem. This work is motivated by the design of periodic schedules in public transport with constraints on the quality of service. Namely, we require that the fastest path between (important) pairs of vertices is upper bounded by a specified maximum duration, encoded in an upper distance matrix $D$. While previous work has considered the undirected version of the problem, the application in public transport schedule design requires the flexibility to assign different departure times to the two directions of an edge. A problem instance can only be feasible if all values of the distance matrix are at least shortest path distances. However, the task of realizing exact fastest path distances in a periodic temporal graph is often too restrictive. Therefore, we introduce a minimum slack parameter $k$ that describes a lower bound on the maximum allowed waiting time on each path. We concentrate on tree topologies and provide a full characterization of the complexity landscape with respect to the period $\Delta$ and the minimum slack parameter~$k$, showing a sharp threshold between NP-complete cases and cases which are always realizable. We also provide hardness results for the special case of period $\Delta = 2$ for general directed and undirected graphs.</description>
      <guid isPermaLink="false">oai:arXiv.org:2504.07920v1</guid>
      <category>cs.DS</category>
      <category>cs.CC</category>
      <category>cs.DM</category>
      <pubDate>Fri, 11 Apr 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Julia Meusel, Matthias M\"uller-Hannemann, Klaus Reinhardt</dc:creator>
    </item>
    <item>
      <title>On the Cop Number of String Graphs</title>
      <link>https://arxiv.org/abs/2408.11002</link>
      <description>arXiv:2408.11002v2 Announce Type: replace 
Abstract: Cops and Robber is a well-studied two-player pursuit-evasion game played on a graph, where a group of cops tries to capture the robber. The \emph{cop number} of a graph is the minimum number of cops required to capture the robber. Gaven\v{c}iak et al.~[Eur. J. of Comb. 72, 45--69 (2018)] studied the game on intersection graphs and established that the cop number for the class of string graphs is at most 15, and asked as an open question to improve this bound for string graphs and subclasses of string graphs. We address this question and establish that the cop number of a string graph is at most 13. To this end, we develop a novel \textit{guarding} technique. We further establish that this technique can be useful for other Cops and Robber games on graphs admitting a representation. In particular, we show that four cops have a winning strategy for a variant of Cops and Robber, named Fully Active Cops and Robber, on planar graphs, addressing an open question of Gromovikov et al.~[Austr. J. Comb. 76(2), 248--265 (2020)]. In passing, we also improve the known bounds on the cop number of boxicity 2 graphs. Finally, as a corollary of our result on the cop number of string graphs, we establish that the chromatic number of string graphs with girth at least $5$ is at most $14$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.11002v2</guid>
      <category>cs.DM</category>
      <category>math.CO</category>
      <pubDate>Fri, 11 Apr 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Sandip Das, Harmender Gahlawat</dc:creator>
    </item>
    <item>
      <title>Random Embeddings of Graphs: The Expected Number of Faces in Most Graphs is Logarithmic</title>
      <link>https://arxiv.org/abs/2211.01032</link>
      <description>arXiv:2211.01032v3 Announce Type: replace-cross 
Abstract: A random 2-cell embedding of a connected graph $G$ in some orientable surface is obtained by choosing a random local rotation around each vertex. Under this setup, the number of faces or the genus of the corresponding 2-cell embedding becomes a random variable. Random embeddings of two particular graph classes, those of a bouquet of $n$ loops and those of $n$ parallel edges connecting two vertices, have been extensively studied and are well-understood. However, little is known about more general graphs. The results of this paper explain why Monte Carlo methods cannot work for approximating the minimum genus of graphs.
  In his breakthrough work [Permutation-partition pairs, JCTB 1991], Stahl developed the foundation of "random topological graph theory". Most of his results have been unsurpassed until today. In our work, we analyze the expected number of faces of random embeddings (equivalently, the average genus) of a graph $G$. It was very recently shown that for any graph $G$, the expected number of faces is at most linear. We show that the actual expected number of faces $F(G)$ is almost always much smaller. In particular, we prove:
  1) $\frac{1}{2}\ln n - 2 &lt; \mathbb{E}[F(K_n)] \le 3.65 \ln n +o(1)$.
  2) For random graphs $G(n,p)$ ($p=p(n)$), we have $\mathbb{E}[F(G(n,p))] \le \ln^2 n+\frac{1}{p}$.
  3) For random models $B(n,\Delta)$ containing only graphs, whose maximum degree is at most $\Delta$, we obtain stronger bounds by showing that the expected number of faces is $\Theta(\log n)$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2211.01032v3</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <pubDate>Fri, 11 Apr 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <arxiv:DOI>10.1137/1.9781611977912.46</arxiv:DOI>
      <arxiv:journal_reference>Proceedings: ACM-SIAM Symposium on Discrete Algorithms, SODA 2024</arxiv:journal_reference>
      <dc:creator>Jesse Campion Loth, Kevin Halasz, Tom\'a\v{s} Masa\v{r}\'ik, Bojan Mohar, Robert \v{S}\'amal</dc:creator>
    </item>
    <item>
      <title>Planar graphs in blowups of fans</title>
      <link>https://arxiv.org/abs/2407.05936</link>
      <description>arXiv:2407.05936v2 Announce Type: replace-cross 
Abstract: We show that every $n$-vertex planar graph is contained in the graph obtained from a fan by blowing up each vertex by a complete graph of order $O(\sqrt{n}\log^2 n)$. Equivalently, every $n$-vertex planar graph $G$ has a set $X$ of $O(\sqrt{n}\log^2 n)$ vertices such that $G-X$ has bandwidth $O(\sqrt{n}\log^2 n)$. We in fact prove the same result for any proper minor-closed class, and we prove more general results that explore the trade-off between $X$ and the bandwidth of $G-X$. The proofs use three key ingredients. The first is a new local sparsification lemma, which shows that every $n$-vertex planar graph $G$ has a set of $O((n\log n)/\delta)$ vertices whose removal results in a graph with local density at most $\delta$. The second is a generalization of a method of Feige and Rao that relates bandwidth and local density using volume-preserving Euclidean embeddings. The third ingredient is graph products, which are a key tool in the extension to any proper minor-closed class.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.05936v2</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <pubDate>Fri, 11 Apr 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Marc Distel, Vida Dujmovi\'c, Gwena\"el Joret, Piotr Micek, Pat Morin, David R. Wood</dc:creator>
    </item>
    <item>
      <title>Better late, then? The hardness of choosing delays to meet passenger demands in temporal graphs</title>
      <link>https://arxiv.org/abs/2501.18987</link>
      <description>arXiv:2501.18987v2 Announce Type: replace-cross 
Abstract: In train networks, carefully-chosen delays may be beneficial for certain passengers, who would otherwise miss some connection. Given a simple (directed or undirected) temporal graph and a set of passengers (each specifying a starting vertex, an ending vertex, and a desired arrival time), we ask whether it is possible to delay some of the edges of the temporal graph to realize all the passengers' demands. We call this problem DelayBetter (DB), and study it along with two variants: in $\delta$-DelayBetter, each delay must be of at most $\delta$; in ($\delta$-)Path DB, passengers also fully specify the vertices they should visit on their journey. On the positive side, we give a polynomial-time algorithm for Path DB and $\delta$-Path DB, and obtain as a corollary a polynomial-time algorithm for DB and $\delta$-DB on trees. We also provide an fpt algorithm for both problems parameterized by the size of the graph's Feedback Edge Set together with the number of passengers. On the negative side, we show NP-completeness of ($1$-)DB on bounded-degree temporal graphs even when the lifetime is $2$, and of ($10$-)DB on bounded-degree planar temporal graphs of lifetime $19$. Our results complement previous work studying reachability problems in temporal graphs with delaying operations. This is to our knowledge the first such problem in which the aim is to facilitate travel between specific points (as opposed to facilitating or impeding a broadcast from one or many sources).</description>
      <guid isPermaLink="false">oai:arXiv.org:2501.18987v2</guid>
      <category>cs.DS</category>
      <category>cs.CC</category>
      <category>cs.DM</category>
      <pubDate>Fri, 11 Apr 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>David C. Kutner, Anouk Sommer</dc:creator>
    </item>
    <item>
      <title>Exploring the unleaved tree of numerical semigroups up to a given genus</title>
      <link>https://arxiv.org/abs/2503.14664</link>
      <description>arXiv:2503.14664v2 Announce Type: replace-cross 
Abstract: We present a new algorithm to explore or count the numerical semigroups of a given genus which uses the unleaved version of the tree of numerical semigroups. In the unleaved tree there are no leaves rather than the ones at depth equal to the genus in consideration. For exloring the unleaved tree we present a new encoding system of a numerical semigroup given by the gcd of its left elements and its shrinking, that is, the semigroup generated by its left elements divided by their gcd. We show a method to determine the right generators and strong generators of a semigroup by means of the gcd and the shrinking encoding, as well as a method to encode a semigroup from the encoding of its parent or of its predecessor sibling. With the new algorithm we obtained $n_{76}=29028294421710227$ and $n_{77}=47008818196495180$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2503.14664v2</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <category>math.AC</category>
      <pubDate>Fri, 11 Apr 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <dc:creator>Maria Bras-Amor\'os</dc:creator>
    </item>
  </channel>
</rss>
