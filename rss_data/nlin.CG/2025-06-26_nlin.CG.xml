<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>nlin.CG updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/nlin.CG</link>
    <description>nlin.CG updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/nlin.CG" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Fri, 27 Jun 2025 04:00:55 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Fri, 27 Jun 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>Essential metrics for Life on graphs</title>
      <link>https://arxiv.org/abs/2506.21226</link>
      <description>arXiv:2506.21226v1 Announce Type: new 
Abstract: We present a strong theoretical foundation that frames a well-defined family of outer-totalistic network automaton models as a topological generalisation of binary outer-totalistic cellular automata, of which the Game of Life is one notable particular case. These "Life-like network automata" are quantitatively described by expressing their genotype (the mean field curve and Derrida curve) and phenotype (the evolution of the state and defect averages). After demonstrating that the genotype and phenotype are correlated, we illustrate the utility of these essential metrics by tackling the firing squad synchronisation problem in a bottom-up fashion, with results that exceed a 90% success rate.</description>
      <guid isPermaLink="false">oai:arXiv.org:2506.21226v1</guid>
      <category>nlin.CG</category>
      <category>nlin.AO</category>
      <pubDate>Fri, 27 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Michiel Rollier, Lucas Caldeira de Oliveira, Odemir M. Bruno, Jan M. Baetens</dc:creator>
    </item>
    <item>
      <title>Timed Prediction Problem for Sandpile Models</title>
      <link>https://arxiv.org/abs/2506.21084</link>
      <description>arXiv:2506.21084v1 Announce Type: cross 
Abstract: We investigate the computational complexity of the timed prediction problem in two-dimensional sandpile models. This question refines the classical prediction problem, which asks whether a cell q will eventually become unstable after adding a grain at cell p from a given configuration. The prediction problem has been shown to be P-complete in several settings, including for subsets of the Moore neighborhood, but its complexity for the von Neumann neighborhood remains open. In a previous work, we provided a complete characterization of crossover gates (a key to the implementation of non-planar monotone circuits) for these small neighborhoods, leading to P-completeness proofs with only 4 and 5 neighbors among the eight adjancent cells. In this paper, we introduce the timed setting, where the goal is to determine whether cell q becomes unstable exactly at time t. We distinguish several cases: some neighborhoods support complete timed toolkits (including timed crossover gates) and exhibit P-completeness; others admit timed crossovers but suffer from synchronization issues; planar neighborhoods provably do not admit any timed crossover; and finally, for some remaining neighborhoods, we conjecture that no timed crossover is possible.</description>
      <guid isPermaLink="false">oai:arXiv.org:2506.21084v1</guid>
      <category>cs.CC</category>
      <category>nlin.CG</category>
      <pubDate>Fri, 27 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Pablo Concha-Vega (AMU, LIS), K\'evin Perrot (AMU, LIS)</dc:creator>
    </item>
  </channel>
</rss>
