<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.CG updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.CG</link>
    <description>cs.CG updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.CG" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Fri, 29 Aug 2025 04:00:32 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Fri, 29 Aug 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>Entropy-Bounded Computational Geometry Made Easier and Sensitive to Sortedness</title>
      <link>https://arxiv.org/abs/2508.20489</link>
      <description>arXiv:2508.20489v1 Announce Type: new 
Abstract: We study entropy-bounded computational geometry, that is, geometric algorithms whose running times depend on a given measure of the input entropy. Specifically, we introduce a measure that we call range-partition entropy, which unifies and subsumes previous definitions of entropy used for sorting problems and structural entropy used in computational geometry. We provide simple algorithms for several problems, including 2D maxima, 2D and 3D convex hulls, and some visibility problems, and we show that they have running times depending on the range-partition entropy.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.20489v1</guid>
      <category>cs.CG</category>
      <pubDate>Fri, 29 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:journal_reference>Proc. 37th Canadian Conf. on Comput. Geom. (CCCG 2025), pp. 53-61</arxiv:journal_reference>
      <dc:creator>David Eppstein, Michael T. Goodrich, Abraham M. Illickan, Claire A. To</dc:creator>
    </item>
    <item>
      <title>Geodesic complexity of the octahedron, and an algorithm for cut loci on convex polyhedra</title>
      <link>https://arxiv.org/abs/2508.19362</link>
      <description>arXiv:2508.19362v1 Announce Type: cross 
Abstract: The geodesic complexity of a length space $X$ quantifies the required number of case distinctions to continuously choose a shortest path connecting any given start and end point. We prove a local lower bound for the geodesic complexity of $X$ obtained by embedding simplices into $X\times X$. We additionally create and prove correctness of an algorithm to find cut loci on surfaces of convex polyhedra, as the structure of a space's cut loci is related to its geodesic complexity. We use these techniques to prove the geodesic complexity of an octahedron is four. Our method is inspired by earlier work of Recio-Mitter and Davis, and thus recovers their results on the geodesic complexity of the $n$-torus and the tetrahedron, respectively.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.19362v1</guid>
      <category>math.MG</category>
      <category>cs.CG</category>
      <pubDate>Fri, 29 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Florian Frick, Pranav Rajbhandari</dc:creator>
    </item>
    <item>
      <title>Metric and Geometric Spanners that are Resilient to Degree-Bounded Edge Faults</title>
      <link>https://arxiv.org/abs/2405.18134</link>
      <description>arXiv:2405.18134v2 Announce Type: replace 
Abstract: Let $H$ be an edge-weighted graph, and let $G$ be a subgraph of $H$. We say that $G$ is an $f$-fault-tolerant $t$-spanner for $H$, if the following is true for any subset $F$ of at most $f$ edges of $G$: For any two vertices $p$ and $q$, the shortest-path distance between $p$ and $q$ in the graph $G \setminus F$ is at most $t$ times the shortest-path distance between $p$ and $q$ in the graph $H \setminus F$.
  Recently, Bodwin, Haeupler, and Parter generalized this notion to the case when $F$ can be any set of edges in $G$, as long as the maximum degree of $F$ is at most $f$. They gave constructions for general graphs $H$.
  We first consider the case when $H$ is a complete graph whose vertex set is an arbitrary metric space. We show that if this metric space contains a $t$-spanner with $m$ edges, then it also contains a graph $G$ with $O(fm)$ edges, that is resilient to edge faults of maximum degree $f$ and has stretch factor $O(ft)$.
  Next, we consider the case when $H$ is a complete graph whose vertex set is a metric space that admits a well-separated pair decomposition. We show that, if the metric space has such a decomposition of size $m$, then it contains a graph with at most $(2f+1)^2 m$ edges, that is resilient to edge faults of maximum degree $f$ and has stretch factor at most $1+\varepsilon$, for any given $\varepsilon &gt; 0$. For example, if the vertex set is a set of $n$ points in $\mathbb{R}^d$ ($d$ being a constant) or a set of $n$ points in a metric space of bounded doubling dimension, then the spanner has $O(f^2 n)$ edges.
  Finally, for the case when $H$ is a complete graph on $n$ points in $\mathbb{R}^d$, we show how natural variants of the Yao- and $\Theta$-graphs lead to graphs with $O(fn)$ edges, that are resilient to edge faults of maximum degree $f$ and have stretch factor at most $1+\varepsilon$, for any given $\varepsilon &gt; 0$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2405.18134v2</guid>
      <category>cs.CG</category>
      <pubDate>Fri, 29 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-sa/4.0/</dc:rights>
      <dc:creator>Ahmad Biniaz, Jean-Lou De Carufel, Anil Maheshwari, Michiel Smid</dc:creator>
    </item>
    <item>
      <title>Simpler is Faster: Practical Distance Reporting by Sorting Along a Space-Filling Curve</title>
      <link>https://arxiv.org/abs/2508.19891</link>
      <description>arXiv:2508.19891v2 Announce Type: replace 
Abstract: Range reporting is a classical problem in computational geometry. A (rectangular) reporting data structure stores a point set $P$ of $n$ points, such that, given a (rectangular) query region $\Delta$, it returns all points in $P \cap \Delta$. A variety of data structures support such queries with differing asymptotic guarantees such as $k$-d trees, range trees, $R$-trees, and quadtrees. A common variant of range queries are distance reporting queries, where the input is a query point $q$ and a radius $\delta$, and the goal is to report all points in $P$ within distance $\delta$ of $q$. Such queries frequently arise as subroutines in geometric data structure construction and in Fr\'echet distance computations. Modern implementations typically reduce distance queries to rectangular range queries using the data structures listed above.
  We revisit a simple and practical heuristic for distance reporting. The approach is straightforward: sort the input point set $P$ along a space-filling curve. Queries then reduce to scanning at most four contiguous ranges along the sorted curve. We show extensive experimental evaluation of modern distance and range reporting data structures. In a static scenario, we show that this simple technique is competitive with all but the most highly optimised range reporting data structures. Notably, these involved structures use space-filling curves themselves to speed up computation. In a dynamic setting, our simpler method even becomes the preferred technique.
  This leads to a perhaps unexpected insight: while modern data structures invest heavily in leveraging space-filling curves for optimising their layout and traversal, it is the curve itself, rather than the surrounding machinery, that delivers much of the performance.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.19891v2</guid>
      <category>cs.CG</category>
      <pubDate>Fri, 29 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Sarita de Berg, Emil Toftegaard G{\ae}de, Ivor van der Hoog, Eva Rotenberg</dc:creator>
    </item>
    <item>
      <title>An algorithm for accurate and simple-looking metaphorical maps</title>
      <link>https://arxiv.org/abs/2508.19810</link>
      <description>arXiv:2508.19810v2 Announce Type: replace-cross 
Abstract: "Metaphorical maps" or "contact representations" are visual representations of vertex-weighted graphs that rely on the geographic map metaphor. The vertices are represented by countries, the weights by the areas of the countries, and the edges by contacts/ boundaries among them. The accuracy with which the weights are mapped to areas and the simplicity of the polygons representing the countries are the two classical optimization goals for metaphorical maps. Mchedlidze and Schnorr [Metaphoric Maps for Dynamic Vertex-weighted Graphs, EuroVis 2022] presented a force-based algorithm that creates metaphorical maps that balance between these two optimization goals. Their maps look visually simple, but the accuracy of the maps is far from optimal - the countries' areas can vary up to 30% compared to required. In this paper, we provide a multi-fold extension of the algorithm in [Metaphoric Maps for Dynamic Vertex-weighted Graphs, EuroVis 2022]. More specifically:
  1. Towards improving accuracy: We introduce the notion of region stiffness and suggest a technique for varying the stiffness based on the current pressure of map regions.
  2. Towards maintaining simplicity: We introduce a weight coefficient to the pressure force exerted on each polygon point based on whether the corresponding point appears along a narrow passage.
  3. Towards generality: We cover, in contrast to [Metaphoric Maps for Dynamic Vertex-weighted Graphs, EuroVis 2022], non-triangulated graphs. This is done by either generating points where more than three regions meet or by introducing holes in the metaphorical map.
  We perform an extended experimental evaluation that, among other results, reveals that our algorithm is able to construct metaphorical maps with nearly perfect area accuracy with a little sacrifice in their simplicity.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.19810v2</guid>
      <category>cs.DM</category>
      <category>cs.CG</category>
      <category>cs.DS</category>
      <pubDate>Fri, 29 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Eleni Katsanou, Tamara Mchedlidze, Antonios Symvonis, Thanos Tolias</dc:creator>
    </item>
  </channel>
</rss>
