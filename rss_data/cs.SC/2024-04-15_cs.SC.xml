<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.SC updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.SC</link>
    <description>cs.SC updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.SC" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Tue, 16 Apr 2024 04:02:01 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Tue, 16 Apr 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>Connectivity in Symmetric Semi-Algebraic Sets</title>
      <link>https://arxiv.org/abs/2404.09749</link>
      <description>arXiv:2404.09749v1 Announce Type: new 
Abstract: Semi-algebraic set is a subset of the real space defined by polynomial equations and inequalities. In this paper, we consider the problem of deciding whether two given points in a semi-algebraic set are connected. We restrict to the case when all equations and inequalities are invariant under the action of the symmetric group and their degrees at most $d&lt;n$, where $n$ is the number of variables. Additionally, we assume that the two points are in the same fundamental domain of the action of the symmetric group, by assuming that the coordinates of two given points are sorted in non-decreasing order. We construct and analyze an algorithm that solves this problem, by taking advantage of the group action, and has a complexity being polynomial in $n$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2404.09749v1</guid>
      <category>cs.SC</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Cordian Riener, Robin Schabert, Thi Xuan Vu</dc:creator>
    </item>
    <item>
      <title>Performant Dynamically Typed E-Graphs in Pure Julia</title>
      <link>https://arxiv.org/abs/2404.08751</link>
      <description>arXiv:2404.08751v1 Announce Type: cross 
Abstract: We introduce the third major version of Metatheory.jl, a Julia library for general-purpose metaprogramming and symbolic computation. Metatheory.jl provides a flexible and performant implementation of e-graphs and Equality Saturation (EqSat) that addresses the two-language problem in high-level compiler optimizations, symbolics and metaprogramming. We present results from our ongoing optimization efforts, comparing the state-of-the-art egg Rust library's performance against our system and show that performant EqSat implementations are possible without sacrificing the comfort of a direct 1-1 integration with a dynamic, high-level and an interactive host programming language.</description>
      <guid isPermaLink="false">oai:arXiv.org:2404.08751v1</guid>
      <category>cs.PL</category>
      <category>cs.SC</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Alessandro Cheli, Niklas Heim</dc:creator>
    </item>
    <item>
      <title>On the complexity of Chow and Hurwitz forms</title>
      <link>https://arxiv.org/abs/2202.11582</link>
      <description>arXiv:2202.11582v3 Announce Type: replace-cross 
Abstract: We consider the bit complexity of computing Chow forms and their generalization to multiprojective spaces. We develop a deterministic algorithm using resultants and obtain a single exponential complexity upper bound. Earlier computational results for Chow forms were in the arithmetic complexity model, and our result represents the first bit complexity bound. We also extend our algorithm to Hurwitz forms in projective space, and explore connections between multiprojective Hurwitz forms and matroid theory. The motivation for our work comes from incidence geometry where intriguing computational algebra problems remain open.</description>
      <guid isPermaLink="false">oai:arXiv.org:2202.11582v3</guid>
      <category>cs.CC</category>
      <category>cs.SC</category>
      <category>math.AG</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:DOI>10.1145/3653002.3653003</arxiv:DOI>
      <arxiv:journal_reference>ACM Communications in Computer Algebra (2023) Vol. 57, No. 4</arxiv:journal_reference>
      <dc:creator>Mahmut Levent Do\u{g}an, Alperen Ali Erg\"ur, Elias Tsigaridas</dc:creator>
    </item>
  </channel>
</rss>
