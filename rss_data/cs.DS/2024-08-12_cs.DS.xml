<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.DS updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.DS</link>
    <description>cs.DS updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.DS" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Tue, 13 Aug 2024 02:22:47 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Mon, 12 Aug 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>A simple quadratic kernel for Token Jumping on surfaces</title>
      <link>https://arxiv.org/abs/2408.04743</link>
      <description>arXiv:2408.04743v1 Announce Type: new 
Abstract: The problem \textsc{Token Jumping} asks whether, given a graph $G$ and two independent sets of \emph{tokens} $I$ and $J$ of $G$, we can transform $I$ into $J$ by changing the position of a single token in each step and having an independent set of tokens throughout. We show that there is a polynomial-time algorithm that, given an instance of \textsc{Token Jumping}, computes an equivalent instance of size $O(g^2 + gk + k^2)$, where $g$ is the genus of the input graph and $k$ is the size of the independent sets.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.04743v1</guid>
      <category>cs.DS</category>
      <category>cs.DM</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Daniel W. Cranston, Moritz M\"uhlenthaler, Benjamin Peyrille</dc:creator>
    </item>
    <item>
      <title>Locally Private Histograms in All Privacy Regimes</title>
      <link>https://arxiv.org/abs/2408.04888</link>
      <description>arXiv:2408.04888v1 Announce Type: new 
Abstract: Frequency estimation, a.k.a. histograms, is a workhorse of data analysis, and as such has been thoroughly studied under differentially privacy. In particular, computing histograms in the local model of privacy has been the focus of a fruitful recent line of work, and various algorithms have been proposed, achieving the order-optimal $\ell_\infty$ error in the high-privacy (small $\varepsilon$) regime while balancing other considerations such as time- and communication-efficiency. However, to the best of our knowledge, the picture is much less clear when it comes to the medium- or low-privacy regime (large $\varepsilon$), despite its increased relevance in practice. In this paper, we investigate locally private histograms, and the very related distribution learning task, in this medium-to-low privacy regime, and establish near-tight (and somewhat unexpected) bounds on the $\ell_\infty$ error achievable. Our theoretical findings emerge from a novel analysis, which appears to improve bounds across the board for the locally private histogram problem. We back our theoretical findings by an empirical comparison of existing algorithms in all privacy regimes, to assess their typical performance and behaviour beyond the worst-case setting.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.04888v1</guid>
      <category>cs.DS</category>
      <category>cs.CR</category>
      <category>cs.DM</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Cl\'ement L. Canonne, Abigail Gentle</dc:creator>
    </item>
    <item>
      <title>On the Number of Non-equivalent Parameterized Squares in a String</title>
      <link>https://arxiv.org/abs/2408.04920</link>
      <description>arXiv:2408.04920v1 Announce Type: new 
Abstract: A string $s$ is called a parameterized square when $s = xy$ for strings $x$, $y$ and $x$ and $y$ are parameterized equivalent. Kociumaka et al. showed the number of parameterized squares, which are non-equivalent in parameterized equivalence, in a string of length $n$ that contains $\sigma$ distinct characters is at most $2 \sigma! n$ [TCS 2016]. In this paper, we show that the maximum number of non-equivalent parameterized squares is less than $\sigma n$, which significantly improves the best-known upper bound by Kociumaka et al.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.04920v1</guid>
      <category>cs.DS</category>
      <category>cs.DM</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Rikuya Hamai, Kazushi Taketsugu, Yuto Nakashima, Shunsuke Inenaga, Hideo Bannai</dc:creator>
    </item>
    <item>
      <title>Deterministic approximate counting of colorings with fewer than $2\Delta$ colors via absence of zeros</title>
      <link>https://arxiv.org/abs/2408.04727</link>
      <description>arXiv:2408.04727v1 Announce Type: cross 
Abstract: Let $\Delta,q\geq 3$ be integers. We prove that there exists $\eta\geq 0.002$ such that if $q\geq (2-\eta)\Delta$, then there exists an open set $\mathcal{U}\subset \mathbb{C}$ that contains the interval $[0,1]$ such that for each $w\in \mathcal{U}$ and any graph $G=(V,E)$ of maximum degree at most $\Delta$, the partition function of the anti-ferromagnetic $q$-state Potts model evaluated at $w$ does not vanish. This provides a (modest) improvement on a result of Liu, Sinclair, and Srivastava, and breaks the $q=2\Delta$-barrier for this problem.
  As a direct consequence we obtain via Barvinok's interpolation method a deterministic polynomial time algorithm to approximate the number of proper $q$-colorings of graphs of maximum degree at most $\Delta$, provided $q\geq (2-\eta)\Delta$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.04727v1</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <category>cs.DS</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Ferenc Bencs, Khallil Berrekkal, Guus Regts</dc:creator>
    </item>
    <item>
      <title>Faster parameterized algorithms for modification problems to minor-closed classes</title>
      <link>https://arxiv.org/abs/2210.02167</link>
      <description>arXiv:2210.02167v3 Announce Type: replace 
Abstract: Let ${\cal G}$ be a minor-closed graph class and let $G$ be an $n$-vertex graph. We say that $G$ is a $k$-apex of ${\cal G}$ if $G$ contains a set $S$ of at most $k$ vertices such that $G\setminus S$ belongs to ${\cal G}$. Our first result is an algorithm that decides whether $G$ is a $k$-apex of ${\cal G}$ in time $2^{{\sf poly}(k)}\cdot n^2$, where ${\sf poly}$ is a polynomial function depending on ${\cal G}$. This algorithm improves the previous one, given by Sau, Stamoulis, and Thilikos [ICALP 2020], whose running time was $2^{{\sf poly}(k)}\cdot n^3$. The elimination distance of $G$ to ${\cal G}$, denoted by ${\sf ed}_{\cal G}(G)$, is the minimum number of rounds required to reduce each connected component of $G$ to a graph in ${\cal G}$ by removing one vertex from each connected component in each round. Bulian and Dawar [Algorithmica 2017] provided an FPT-algorithm, with parameter $k$, to decide whether ${\sf ed}_{\cal G}(G)\leq k$. However, its dependence on $k$ is not explicit. We extend the techniques used in the first algorithm to decide whether ${\sf ed}_{\cal G}(G)\leq k$ in time $2^{2^{2^{{\sf poly}(k)}}}\cdot n^2$. This is the first algorithm for this problem with an explicit parametric dependence in $k$. In the special case where ${\cal G}$ excludes some apex-graph as a minor, we give two alternative algorithms, running in time $2^{2^{{\cal O}(k^2\log k)}}\cdot n^2$ and $2^{{\sf poly}(k)}\cdot n^3$ respectively, where $c$ and ${\sf poly}$ depend on ${\cal G}$. As a stepping stone for these algorithms, we provide an algorithm that decides whether ${\sf ed}_{\cal G}(G)\leq k$ in time $2^{{\cal O}({\sf tw}\cdot k+{\sf tw}\log{\sf tw})}\cdot n$, where ${\sf tw}$ is the treewidth of $G$. Finally, we provide explicit upper bounds on the size of the graphs in the minor-obstruction set of the class of graphs ${\cal E}_k({\cal G})=\{G\mid{\sf ed}_{\cal G}(G)\leq k\}$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2210.02167v3</guid>
      <category>cs.DS</category>
      <category>cs.CC</category>
      <category>math.CO</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:DOI>10.46298/theoretics.24.19</arxiv:DOI>
      <arxiv:journal_reference>TheoretiCS, Volume 3 (2024), Article 19, 1-75</arxiv:journal_reference>
      <dc:creator>Laure Morelle, Ignasi Sau, Giannos Stamoulis, Dimitrios M. Thilikos</dc:creator>
    </item>
    <item>
      <title>Approximation Algorithms for Steiner Connectivity Augmentation</title>
      <link>https://arxiv.org/abs/2308.08690</link>
      <description>arXiv:2308.08690v2 Announce Type: replace 
Abstract: We consider connectivity augmentation problems in the Steiner setting, where the goal is to augment the edge-connectivity between a specified subset of terminal nodes.
  In the Steiner Augmentation of a Graph problem ($k$-SAG), we are given a $k$-edge-connected subgraph $H$ of a graph $G$. The goal is to augment $H$ by including links from $G$ of minimum cost so that the edge-connectivity between nodes of $H$ increases by 1. This is a generalization of the Weighted Connectivity Augmentation Problem, in which only links between pairs of nodes in $H$ are available for the augmentation.
  In the Steiner Connectivity Augmentation Problem ($k$-SCAP), we are given a Steiner $k$-edge-connected graph connecting terminals $R$, and we seek to add links of minimum cost to create a Steiner $(k+1)$-edge-connected graph for $R$. Note that $k$-SAG is a special case of $k$-SCAP.
  The results of Ravi, Zhang and Zlatin for the Steiner Tree Augmentation problem yield a $(1.5+\varepsilon)$-approximation for $1$-SCAP and for $k$-SAG when $k$ is odd (SODA'23). In this work, we give a $(1 + \ln{2} +\varepsilon)$-approximation for the Steiner Ring Augmentation Problem (SRAP). This yields a polynomial time algorithm with approximation ratio $(1 + \ln{2} + \varepsilon)$ for $2$-SCAP. We obtain an improved approximation guarantee for SRAP when the ring consists of only terminals, yielding a $(1.5+\varepsilon)$-approximation for $k$-SAG for any $k$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2308.08690v2</guid>
      <category>cs.DS</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Daniel Hathcock, Michael Zlatin</dc:creator>
    </item>
    <item>
      <title>Approximate Min-Sum Subset Convolution</title>
      <link>https://arxiv.org/abs/2404.11364</link>
      <description>arXiv:2404.11364v3 Announce Type: replace 
Abstract: Exponential-time approximation has recently gained attention as a practical way to deal with the bitter NP-hardness of well-known optimization problems. We study for the first time the $(1 + \varepsilon)$-approximate min-sum subset convolution. This enables exponential-time $(1 + \varepsilon)$-approximation schemes for problems such as minimum-cost $k$-coloring, the prize-collecting Steiner tree, and many others in computational biology. Technically, we present both a weakly- and strongly-polynomial approximation algorithm for this convolution, running in time $\widetilde O(2^n \log M / \varepsilon)$ and $\widetilde O(2^\frac{3n}{2} / \sqrt{\varepsilon})$, respectively. Our work revives research on tropical subset convolutions after nearly two decades.</description>
      <guid isPermaLink="false">oai:arXiv.org:2404.11364v3</guid>
      <category>cs.DS</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Mihail Stoian</dc:creator>
    </item>
    <item>
      <title>MSO Queries on Trees: Enumerating Answers under Updates Using Forest Algebras</title>
      <link>https://arxiv.org/abs/2208.04180</link>
      <description>arXiv:2208.04180v4 Announce Type: replace-cross 
Abstract: We describe a framework for maintaining forest algebra representations that are of logarithmic height for unranked trees. Such a representations can be computed in O(n) time and updated in O(log(n)) time. The framework is of potential interest for data structures and algorithms for trees whose complexity depend on the depth of the tree (representation). We provide an exemplary application of the framework to the problem of efficiently enumerating answers to MSO-definable queries over trees which are subject to local updates. We exhibit an algorithm that uses an O(n) preprocessing phase and enumerates answers with O(log(n)) delay between them. When the tree is updated, the algorithm can avoid repeating expensive preprocessing and restart the enumeration phase within O(log(n)) time. Our algorithms and complexity results in the paper are presented in terms of node-selecting tree automata representing the MSO queries.</description>
      <guid isPermaLink="false">oai:arXiv.org:2208.04180v4</guid>
      <category>cs.LO</category>
      <category>cs.DS</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Sarah Kleest-Mei{\ss}ner, Jonas Marasus, Matthias Niewerth</dc:creator>
    </item>
    <item>
      <title>Simple Combinatorial Construction of the $k^{o(1)}$-Lower Bound for Approximating the Parameterized $k$-Clique</title>
      <link>https://arxiv.org/abs/2304.07516</link>
      <description>arXiv:2304.07516v2 Announce Type: replace-cross 
Abstract: In the parameterized $k$-clique problem, or $k$-Clique for short, we are given a graph $G$ and a parameter $k\ge 1$. The goal is to decide whether there exist $k$ vertices in $G$ that induce a complete subgraph (i.e., a $k$-clique). This problem plays a central role in the theory of parameterized intractability as one of the first W[1]-complete problems. Existing research has shown that even an FPT-approximation algorithm for $k$-Clique with arbitrary ratio does not exist, assuming the Gap-Exponential-Time Hypothesis (Gap-ETH) [Chalermsook et al., FOCS'17 and SICOMP]. However, whether this inapproximability result can be based on the standard assumption of $\mathrm{W} 1\ne \mathrm{FPT}$ remains unclear. The recent breakthrough of Bingkai Lin [STOC'21] and subsequent works by Karthik C.S. and Khot [CCC'22], and by Lin, Ren, Sun Wang [ICALP'22] give a technique that bypasses Gap-ETH, thus leading to the inapproximability ratio of $O(1)$ and $k^{o(1)}$ under $\mathrm{W}[1]$-hardness (the first two) and ETH (for the latter one). All the work along this line follows the framework developed by Lin, which starts from the $k$-vector-sum problem and requires some involved algebraic techniques.
  This paper presents an alternative framework for proving the W[1]-hardness of the $k^{o(1)}$-FPT-inapproximability of $k$-Clique. Using this framework, we obtain a gap-producing self-reduction of $k$-Clique without any intermediate algebraic problem. More precisely, we reduce from $(k,k-1)$-Gap Clique to $(q^k, q^{k-1})$-Gap Clique, for any function $q$ depending only on the parameter $k$, thus implying the $k^{o(1)}$-inapproximability result when $q$ is sufficiently large. Our proof is relatively simple and mostly combinatorial. At the core of our construction is a novel encoding of $k$-element subset stemming from the theory of "network coding" and a "Sidon set" representation of a graph.</description>
      <guid isPermaLink="false">oai:arXiv.org:2304.07516v2</guid>
      <category>cs.CC</category>
      <category>cs.DM</category>
      <category>cs.DS</category>
      <category>math.CO</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Yijia Chen, Yi Feng, Bundit Laekhanukit, Yanlin Liu</dc:creator>
    </item>
    <item>
      <title>The SpaceSaving$\pm$ Family of Algorithms for Data Streams with Bounded Deletions</title>
      <link>https://arxiv.org/abs/2309.12623</link>
      <description>arXiv:2309.12623v2 Announce Type: replace-cross 
Abstract: In this paper, we present an advanced analysis of near optimal algorithms that use limited space to solve the frequency estimation, heavy hitters, frequent items, and top-k approximation in the bounded deletion model. We define the family of SpaceSaving$\pm$ algorithms and explain why the original SpaceSaving$\pm$ algorithm only works when insertions and deletions are not interleaved. Next, we propose the new Double SpaceSaving$\pm$, Unbiased Double SpaceSaving$\pm$, and Integrated SpaceSaving$\pm$ and prove their correctness. The three proposed algorithms represent different trade-offs, in which Double SpaceSaving$\pm$ can be extended to provide unbiased estimations while Integrated SpaceSaving$\pm$ uses less space. Since data streams are often skewed, we present an improved analysis of these algorithms and show that errors do not depend on the hot items. We also demonstrate how to achieve relative error guarantees under mild assumptions. Moreover, we establish that the important mergeability property is satisfied by all three algorithms, which is essential for running the algorithms in distributed settings.</description>
      <guid isPermaLink="false">oai:arXiv.org:2309.12623v2</guid>
      <category>cs.DB</category>
      <category>cs.DS</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Fuheng Zhao, Divyakant Agrawal, Amr El Abbadi, Claire Mathieu, Ahmed Metwally, Michel de Rougemont</dc:creator>
    </item>
  </channel>
</rss>
