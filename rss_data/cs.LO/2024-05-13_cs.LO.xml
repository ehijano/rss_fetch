<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.LO updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.LO</link>
    <description>cs.LO updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.LO" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Mon, 13 May 2024 04:00:10 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Mon, 13 May 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>Efficiently Synthesizing Lowest Cost Rewrite Rules for Instruction Selection</title>
      <link>https://arxiv.org/abs/2405.06127</link>
      <description>arXiv:2405.06127v1 Announce Type: new 
Abstract: Compiling programs to an instruction set architecture (ISA) requires a set of rewrite rules that map patterns consisting of compiler instructions to patterns consisting of ISA instructions. We synthesize such rules by constructing SMT queries, where solutions represent two functionally equivalent programs. These two programs are interpreted as an instruction selection rewrite rule. Furthermore, we address existing work's limitations by developing a set of optimizations that prevent synthesis of duplicate rules, composite rules, and higher-cost rules. We evaluate our algorithm on multiple ISAs. Without our optimizations, the majority of synthesized rewrite rules are either duplicates or higher cost. With our optimizations, we only synthesize unique and lowest-cost rules, resulting in total speedups of up to 212x.</description>
      <guid isPermaLink="false">oai:arXiv.org:2405.06127v1</guid>
      <category>cs.LO</category>
      <category>cs.AR</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-sa/4.0/</dc:rights>
      <dc:creator>Ross Daly, Caleb Donovick, Caleb Terrill, Jackson Melchert, Priyanka Raina, Clark Barrett, Pat Hanrahan</dc:creator>
    </item>
    <item>
      <title>A Note on an Inferentialist Approach to Resource Semantics</title>
      <link>https://arxiv.org/abs/2405.06491</link>
      <description>arXiv:2405.06491v1 Announce Type: new 
Abstract: A central concept within informatics is in modelling such systems for the purpose of reasoning (perhaps automated) about their behaviour and properties. To this end, one requires an interpretation of logical formulae in terms of the resources and states of the system; such an interpretation is called a 'resource semantics' of the logic. This paper shows how 'inferentialism' -- the view that meaning is given in terms of inferential behaviour -- enables a versatile and expressive framework for resource semantics. Specifically, how inferentialism seamlessly incorporates the assertion-based approach of the logic of Bunched Implications, foundational in program verification (e.g., as the basis of Separation Logic), and the renowned number-of-uses reading of Linear Logic. This integration enables reasoning about shared and separated resources in intuitive and familiar ways, as well as about the composition and interfacing of system components.</description>
      <guid isPermaLink="false">oai:arXiv.org:2405.06491v1</guid>
      <category>cs.LO</category>
      <category>cs.CY</category>
      <category>cs.DC</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Alexander V. Gheorghiu, Tao Gu, David J. Pym</dc:creator>
    </item>
    <item>
      <title>Composition and Merging of Assume-Guarantee Contracts Are Tensor Products</title>
      <link>https://arxiv.org/abs/2405.06052</link>
      <description>arXiv:2405.06052v1 Announce Type: cross 
Abstract: We show that the operations of composition and merging of contracts are part of the tensor product structure of the algebra of contracts.</description>
      <guid isPermaLink="false">oai:arXiv.org:2405.06052v1</guid>
      <category>eess.SY</category>
      <category>cs.LO</category>
      <category>cs.SY</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Inigo Incer</dc:creator>
    </item>
    <item>
      <title>Coalgebraic Satisfiability Checking for Arithmetic $\mu$-Calculi</title>
      <link>https://arxiv.org/abs/2212.11055</link>
      <description>arXiv:2212.11055v4 Announce Type: replace 
Abstract: The coalgebraic $\mu$-calculus provides a generic semantic framework for fixpoint logics over systems whose branching type goes beyond the standard relational setup, e.g. probabilistic, weighted, or game-based. Previous work on the coalgebraic $\mu$-calculus includes an exponential-time upper bound on satisfiability checking, which however relies on the availability of tableau rules for the next-step modalities that are sufficiently well-behaved in a formally defined sense; in particular, rule matches need to be representable by polynomial-sized codes, and the sequent duals of the rules need to absorb cut. While such rule sets have been identified for some important cases, they are not known to exist in all cases of interest, in particular ones involving either integer weights as in the graded $\mu$-calculus, or real-valued weights in combination with non-linear arithmetic. In the present work, we prove the same upper complexity bound under more general assumptions, specifically regarding the complexity of the (much simpler) satisfiability problem for the underlying one-step logic, roughly described as the nesting-free next-step fragment of the logic. The bound is realized by a generic global caching algorithm that supports on-the-fly satisfiability checking. Notably, our approach directly accommodates unguarded formulae, and thus avoids use of the guardedness transformation. Example applications include new exponential-time upper bounds for satisfiability checking in an extension of the graded $\mu$-calculus with polynomial inequalities (including positive Presburger arithmetic), as well as an extension of the (two-valued) probabilistic $\mu$-calculus with polynomial inequalities.</description>
      <guid isPermaLink="false">oai:arXiv.org:2212.11055v4</guid>
      <category>cs.LO</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Daniel Hausmann, Lutz Schr\"oder</dc:creator>
    </item>
    <item>
      <title>Unification in the description logic $\mathcal{FL}_\bot$</title>
      <link>https://arxiv.org/abs/2405.00912</link>
      <description>arXiv:2405.00912v2 Announce Type: replace-cross 
Abstract: Description Logics are a formalism used in the knowledge representation, where the knowledge is captured in the form of concepts constructed in a controlled way from a restricted vocabulary. This allows one to test effectively for consistency of and the subsumption between the concepts. Unification of concepts may likewise become a useful tool in analysing the relations between concepts. The unification problem has been solved for the description logics $\mathcal{FL}_0$ and $\mathcal{EL}$. These small logics do not provide any means to express negation. Here we show an algorithm solving unification in $\mathcal{FL}_\bot$, the logic that extends $\mathcal{FL}_0$ with the bottom concept. Bottom allows one to express that two concepts are disjoint. Our algorithm runs in exponential time, with respect to the size of the problem.</description>
      <guid isPermaLink="false">oai:arXiv.org:2405.00912v2</guid>
      <category>cs.SC</category>
      <category>cs.LO</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Barbara Morawska</dc:creator>
    </item>
    <item>
      <title>A note on the theory of well orders</title>
      <link>https://arxiv.org/abs/2405.05779</link>
      <description>arXiv:2405.05779v2 Announce Type: replace-cross 
Abstract: We give a simple proof that the first-order theory of well orders is axiomatized by transfinite induction, and that it is decidable.</description>
      <guid isPermaLink="false">oai:arXiv.org:2405.05779v2</guid>
      <category>math.LO</category>
      <category>cs.LO</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Emil Je\v{r}\'abek</dc:creator>
    </item>
  </channel>
</rss>
