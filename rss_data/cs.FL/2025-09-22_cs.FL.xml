<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.FL updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.FL</link>
    <description>cs.FL updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.FL" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Mon, 22 Sep 2025 04:02:06 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Mon, 22 Sep 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Reduced complexities for sequences over finite alphabets</title>
      <link>https://arxiv.org/abs/2509.16034</link>
      <description>arXiv:2509.16034v1 Announce Type: cross 
Abstract: Letting $w$ denote a finite, nonempty word, let $\text{red}(w)$ denote the word obtained from $w$ by replacing every subword $s$ of $w$ of the form $cc \cdots c$ for a given character $c$ (such that there is no character immediately to the left or right of $s$ equal to $c$) with $c$. Complexity functions for infinite words play important roles within combinatorics on words, and this leads us to introduce and investigate variants of the factor and abelian complexity functions using the given reduction operation. By enumerating words $v$ and $w$ of a given length $n \geq 0$ and associated with an infinite sequence over a finite alphabet such that $\text{red}(v)$ and $\text{red}(w)$ are equal or otherwise equivalent in some specified way, by analogy with the factor and abelian complexity functions, this may be seen as producing simplified versions of previously introduced complexity functions. We prove a recursion for the reduced factor complexity function $\rho_{\mathbf{t}}^{\text{red}}$ for the Thue-Morse sequence $\mathbf{t}$, giving us that $(\rho_{\mathbf{t}}^{\text{red}}(n) : n \in \mathbb{N})$ is a $2$-regular sequence, we prove an explicit evaluation for the reduced factor complexity function $\rho_{\mathbf{f}}^{\text{red}}$ for the (regular) paperfolding sequence $\mathbf{f}$, together with an evaluation for the reduced abelian complexity function $\rho_{\mathbf{f}}^{\text{ab}, \text{red}}$ for $\mathbf{f}$. We conclude with open problems concerning $\rho_{\mathbf{t}}^{\text{ab}, \text{red}}$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2509.16034v1</guid>
      <category>math.CO</category>
      <category>cs.FL</category>
      <pubDate>Mon, 22 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>John M. Campbell, James Currie, Narad Rampersad</dc:creator>
    </item>
    <item>
      <title>New properties of the $\varphi$-representation of integers</title>
      <link>https://arxiv.org/abs/2509.16150</link>
      <description>arXiv:2509.16150v1 Announce Type: cross 
Abstract: We prove a few new properties of the $\varphi$-representation of integers, where $\varphi = (1+\sqrt{5})/2$. In particular, we prove a 2012 conjecture of Kimberling.</description>
      <guid isPermaLink="false">oai:arXiv.org:2509.16150v1</guid>
      <category>math.NT</category>
      <category>cs.FL</category>
      <pubDate>Mon, 22 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Jeffrey Shallit, Ingrid Vukusic</dc:creator>
    </item>
    <item>
      <title>Learning Verified Monitors for Hidden Markov Models</title>
      <link>https://arxiv.org/abs/2504.05963</link>
      <description>arXiv:2504.05963v3 Announce Type: replace 
Abstract: Runtime monitors assess whether a system is in an unsafe state based on a stream of observations. We study the problem where the system is subject to probabilistic uncertainty and described by a hidden Markov model. A stream of observations is then unsafe if the probability of being in an unsafe state is above a threshold. A correct monitor recognizes the set of unsafe observations. The key contribution of this paper is the first correct-by-construction synthesis method for such monitors, represented as finite automata. The contribution combines four ingredients: First, we establish the coNP-hardness of checking whether an automaton is a correct monitor, i.e., a monitor without misclassifications. Second, we provide a reduction that reformulates the search for misclassifications into a standard probabilistic system synthesis problem. Third, we integrate the verification routine into an active automata learning routine to synthesize correct monitors. Fourth, we provide a prototypical implementation that shows the feasibility and limitations of the approach on a series of benchmarks.</description>
      <guid isPermaLink="false">oai:arXiv.org:2504.05963v3</guid>
      <category>cs.FL</category>
      <category>cs.LO</category>
      <pubDate>Mon, 22 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Luko van der Maas, Sebastian Junges</dc:creator>
    </item>
    <item>
      <title>Transition-based vs stated-based acceptance for automata over infinite words</title>
      <link>https://arxiv.org/abs/2508.15402</link>
      <description>arXiv:2508.15402v2 Announce Type: replace 
Abstract: Automata over infinite objects are a well-established model with applications in logic and formal verification. Traditionally, acceptance in such automata is defined based on the set of states visited infinitely often during a run. However, there is a growing trend towards defining acceptance based on transitions rather than states.
  In this survey, we analyse the reasons for this shift and advocate using transition-based acceptance in the context of automata over infinite words. We present a collection of problems where the choice of formalism has a major impact and discuss the causes of these differences.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.15402v2</guid>
      <category>cs.FL</category>
      <category>cs.LO</category>
      <pubDate>Mon, 22 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Antonio Casares</dc:creator>
    </item>
    <item>
      <title>A Variety of Request-Response Specifications</title>
      <link>https://arxiv.org/abs/2509.13078</link>
      <description>arXiv:2509.13078v2 Announce Type: replace 
Abstract: We find, motivated by real-world applications, that the well-known request-response specification comes with multiple variations, and that these variations should be distinguished. As the first main contribution, we introduce a classification of those variations into six types, and present it as a decision tree, where a user is led to the type that is suited for their application by answering a couple of questions. Our second main contribution is the formalization of those six types in various formalisms such as temporal logics, grammars, and automata; here, two types out of the six are non-regular specifications and their formalization requires extended formalisms. We also survey tools for monitoring these specifications to cater for practitioners' needs.</description>
      <guid isPermaLink="false">oai:arXiv.org:2509.13078v2</guid>
      <category>cs.FL</category>
      <pubDate>Mon, 22 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Daichi Aiba, Masaki Waga, Hiroya Fujinami, Koko Muroya, Shutaro Ouchi, Naoki Ueda, Yosuke Yokoyama, Yuta Wada, Ichiro Hasuo</dc:creator>
    </item>
  </channel>
</rss>
