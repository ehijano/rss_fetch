<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.OS updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.OS</link>
    <description>cs.OS updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.OS" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Tue, 26 Nov 2024 05:00:23 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Tue, 26 Nov 2024 00:00:00 -0500</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Real-Time Aware IP-Networking for Resource-Constrained Embedded Devices</title>
      <link>https://arxiv.org/abs/2411.15150</link>
      <description>arXiv:2411.15150v1 Announce Type: cross 
Abstract: This dissertation explores the area of real-time IP networking for embedded devices, especially those with limited computational resources. With the increasing convergence of information and operational technologies in various industries, and the growing complexity of communication requirements in (semi-)autonomous machines, there is a need for more advanced and reliable networking solutions. This research focuses on the challenge of integrating real-time embedded devices into packet-switched networks. Through a comprehensive review of current real-time communication technologies, standards, and practices in the context of Industry 4.0, a notable gap is identified: the lack of a robust real-time communication standard tailored for wireless mobile machines, and insufficient research on real-time embedded devices in highly networked environments. The study includes detailed experimentation with commercially available off-the-shelf networked microcontrollers, revealing a priority inversion problem where network packet processing interrupts real-time tasks, potentially causing real-time violations. To address this challenge, this thesis proposes mitigation methods and system designs that include software and hardware implementations. These include a new embedded network subsystem that prioritizes packet processing based on task priority, and a real-time-aware network interface controller that moderates interrupt requests. In addition, a hybrid hardware-software co-design approach is developed to ensure predictable and reliable real-time task execution despite network congestion. Furthermore, the research extends to task offloading in wireless Industrial Internet of Things environments, presenting a system architecture and scheduler capable of maintaining real-time constraints even under heavy loads and network uncertainties.</description>
      <guid isPermaLink="false">oai:arXiv.org:2411.15150v1</guid>
      <category>cs.NI</category>
      <category>cs.OS</category>
      <pubDate>Tue, 26 Nov 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:DOI>10.14279/depositonce-20667</arxiv:DOI>
      <dc:creator>Ilja Behnke</dc:creator>
    </item>
    <item>
      <title>Asynchronous I/O -- With Great Power Comes Great Responsibility</title>
      <link>https://arxiv.org/abs/2411.16254</link>
      <description>arXiv:2411.16254v1 Announce Type: cross 
Abstract: The performance of storage hardware has improved vastly recently, leaving the traditional I/O stack incapable of exploiting these gains due to increasingly large relative overheads. Newer asynchronous I/O APIs, such as io_uring, have significantly improved performance by reducing such overheads, but exhibit limited adoption in practice. In this paper, we discuss the complexities that the usage of these contemporary I/O APIs introduces to applications, which we believe are mostly responsible for their low adoption rate. Finally, we share implications and trade offs made by architectures that may be used to integrate asynchronous I/O into DB applications.</description>
      <guid isPermaLink="false">oai:arXiv.org:2411.16254v1</guid>
      <category>cs.DB</category>
      <category>cs.OS</category>
      <pubDate>Tue, 26 Nov 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Constantin Pestka, Marcus Paradies, Matthias Pohl</dc:creator>
    </item>
  </channel>
</rss>
