<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.CG updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.CG</link>
    <description>cs.CG updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.CG" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Fri, 14 Mar 2025 02:06:53 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Thu, 13 Mar 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Improved Approximation Algorithms for Three-Dimensional Bin Packing</title>
      <link>https://arxiv.org/abs/2503.08863</link>
      <description>arXiv:2503.08863v1 Announce Type: new 
Abstract: We study three fundamental three-dimensional (3D) geometric packing problems: 3D (Geometric) Bin Packing (3D-BP), 3D Strip Packing (3D-SP), and Minimum Volume Bounding Box (3D-MVBB), where given a set of 3D (rectangular) cuboids, the goal is to find an axis-aligned nonoverlapping packing of all cuboids. In 3D-BP, we need to pack the given cuboids into the minimum number of unit cube bins. In 3D-SP, we need to pack them into a 3D cuboid with a unit square base and minimum height. Finally, in 3D-MVBB, the goal is to pack into a cuboid box of minimum volume.
  It is NP-hard to even decide whether a set of rectangles can be packed into a unit square bin -- giving an (absolute) approximation hardness of 2 for 3D-BP and 3D-SP. The previous best (absolute) approximation for all three problems is by Li and Cheng (SICOMP, 1990), who gave algorithms with approximation ratios of 13, $46/7$, and $46/7+\varepsilon$, respectively, for 3D-BP, 3D-SP, and 3D-MVBB. We provide improved approximation ratios of 6, 6, and $3+\varepsilon$, respectively, for the three problems, for any constant $\varepsilon &gt; 0$.
  For 3D-BP, in the asymptotic regime, Bansal, Correa, Kenyon, and Sviridenko (Math.~Oper.~Res., 2006) showed that there is no asymptotic polynomial-time approximation scheme (APTAS) even when all items have the same height. Caprara (Math.~Oper.~Res., 2008) gave an asymptotic approximation ratio of $T_{\infty}^2 + \varepsilon\approx 2.86$, where $T_{\infty}$ is the well-known Harmonic constant in Bin Packing. We provide an algorithm with an improved asymptotic approximation ratio of $3 T_{\infty}/2 +\varepsilon \approx 2.54$. Further, we show that unlike 3D-BP (and 3D-SP), 3D-MVBB admits an APTAS.</description>
      <guid isPermaLink="false">oai:arXiv.org:2503.08863v1</guid>
      <category>cs.CG</category>
      <category>cs.DS</category>
      <pubDate>Thu, 13 Mar 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Debajyoti Kar, Arindam Khan, Malin Rau</dc:creator>
    </item>
    <item>
      <title>The Zarankiewicz Problem for Polygon Visibility Graphs</title>
      <link>https://arxiv.org/abs/2503.09115</link>
      <description>arXiv:2503.09115v1 Announce Type: new 
Abstract: We prove a quasi-linear upper bound on the size of $K_{t,t}$-free polygon visibility graphs. For visibility graphs of star-shaped and monotone polygons we show a linear bound. In the more general setting of $n$ points on a simple closed curve and visibility pseudo-segments, we provide an $O(n \log n)$ upper bound and an $\Omega(n\alpha(n))$ lower bound.</description>
      <guid isPermaLink="false">oai:arXiv.org:2503.09115v1</guid>
      <category>cs.CG</category>
      <category>cs.DM</category>
      <category>math.CO</category>
      <pubDate>Thu, 13 Mar 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <dc:creator>Eyal Ackerman, Bal\'azs Keszegh</dc:creator>
    </item>
    <item>
      <title>Strongly chordal graphs as intersection graphs of trees (Farber's proof revisited)</title>
      <link>https://arxiv.org/abs/2503.09440</link>
      <description>arXiv:2503.09440v1 Announce Type: cross 
Abstract: In his Ph.D. thesis, Farber proved that every strongly chordal graph can be represented as intersection graph of subtrees of a weighted tree, and these subtrees are ``compatible''. Moreover, this is an equivalent characterization of strongly chordal graphs. To my knowledge, Farber never published his results in a conference or a journal, and the thesis is not available electronically. As a service to the community, I therefore reproduce the proof here.
  I then answer some questions that naturally arise from the proof. In particular, the sufficiency proof works by showing the existence of a simple vertex. I give here an alternate sufficiency proof that directly converts a set of compatible subtrees into a strong elimination order.</description>
      <guid isPermaLink="false">oai:arXiv.org:2503.09440v1</guid>
      <category>math.CO</category>
      <category>cs.CG</category>
      <pubDate>Thu, 13 Mar 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Therese Biedl</dc:creator>
    </item>
    <item>
      <title>Bounds on the Number of Pieces in Continuous Piecewise Affine Functions</title>
      <link>https://arxiv.org/abs/2503.09525</link>
      <description>arXiv:2503.09525v1 Announce Type: cross 
Abstract: The complexity of continuous piecewise affine (CPA) functions can be measured by the number of pieces $p$ or the number of distinct affine functions $n$. For CPA functions on $\mathbb{R}^d$, this paper shows an upper bound of $p=O(n^{d+1})$ and constructs a family of functions achieving a lower bound of $p=\Omega(n^{d+1-\frac{c}{\sqrt{\log_2(n)}}})$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2503.09525v1</guid>
      <category>math.CO</category>
      <category>cs.CG</category>
      <category>cs.DM</category>
      <pubDate>Thu, 13 Mar 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Leo Zanotti</dc:creator>
    </item>
  </channel>
</rss>
