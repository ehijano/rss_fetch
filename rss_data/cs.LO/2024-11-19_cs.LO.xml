<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.LO updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.LO</link>
    <description>cs.LO updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.LO" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Wed, 20 Nov 2024 02:47:34 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Tue, 19 Nov 2024 00:00:00 -0500</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Weak Permission is not Well-Founded, Grounded and Stable</title>
      <link>https://arxiv.org/abs/2411.10624</link>
      <description>arXiv:2411.10624v1 Announce Type: new 
Abstract: We consider the notion of weak permission as the failure to conclude that the opposite obligation. We investigate the issue from the point of non-monotonic reasoning, specifically logic programming and structured argumentation, and we show that it is not possible to capture weak permission in the presence of deontic conflicts under the well-founded, grounded and (sceptical) stable semantics.</description>
      <guid isPermaLink="false">oai:arXiv.org:2411.10624v1</guid>
      <category>cs.LO</category>
      <category>cs.AI</category>
      <pubDate>Tue, 19 Nov 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <dc:creator>Guido Governatori</dc:creator>
    </item>
    <item>
      <title>Probabilistic Nets-within-Nets</title>
      <link>https://arxiv.org/abs/2411.10826</link>
      <description>arXiv:2411.10826v1 Announce Type: new 
Abstract: In this paper we study Hornets extended with firing probabilities. Hornets are a Nets-within-Nets formalism, i.e., a Petri net formalism where the tokens are Petri nets again. Each of these net-tokens has its own firing rate, independent from the rates of other net-tokens. Hornets provide algebraic operations to modify net-tokens during the firing. For our stochastic extension these operators could also modify the net-token's firing rate. We use our model to analyse self-modifying systems quantitatively. Hornets are very well suited to model self-adaptive systems performing a MAPE-like loop (monitoring-analyse-plan-execute). Here, the system net describes the loop, and the net-tokens describe the adapted model elements.</description>
      <guid isPermaLink="false">oai:arXiv.org:2411.10826v1</guid>
      <category>cs.LO</category>
      <pubDate>Tue, 19 Nov 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-sa/4.0/</dc:rights>
      <dc:creator>Michael K\"ohler-Bu{\ss}meier</dc:creator>
    </item>
    <item>
      <title>Calculational Design of Hyperlogics by Abstract Interpretation</title>
      <link>https://arxiv.org/abs/2411.11113</link>
      <description>arXiv:2411.11113v1 Announce Type: new 
Abstract: We design various logics for proving hyper properties of iterative programs by application of abstract interpretation principles.
  In part I, we design a generic, structural, fixpoint abstract interpreter parameterized by an algebraic abstract domain describing finite and infinite computations that can be instantiated for various operational, denotational, or relational program semantics. Considering semantics as program properties, we define a post algebraic transformer for execution properties (e.g. sets of traces) and a Post algebraic transformer for semantic (hyper) properties (e.g. sets of sets of traces), we provide corresponding calculuses as instances of the generic abstract interpreter, and we derive under and over approximation hyperlogics.
  In part II, we define exact and approximate semantic abstractions, and show that they preserve the mathematical structure of the algebraic semantics, the collecting semantics post, the hyper collecting semantics Post, and the hyperlogics.
  Since proofs by sound and complete hyperlogics require an exact characterization of the program semantics within the proof, we consider in part III abstractions of the (hyper) semantic properties that yield simplified proof rules. These abstractions include the join, the homomorphic, the elimination, the principal ideal, the order ideal, the frontier order ideal, and the chain limit algebraic abstractions, as well as their combinations, that lead to new algebraic generalizations of hyperlogics, including the \forall\exists^\ast$, $\forall\forall^\ast$, and $\exists\forall-^\ast$ hyperlogics,</description>
      <guid isPermaLink="false">oai:arXiv.org:2411.11113v1</guid>
      <category>cs.LO</category>
      <pubDate>Tue, 19 Nov 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:DOI>10.1145/3704852</arxiv:DOI>
      <arxiv:journal_reference>Proc. ACM Program. Lang. 9, POPL, Article 16 (January 2025), 71 pages</arxiv:journal_reference>
      <dc:creator>Patrick Cousot, Jeffery Wang</dc:creator>
    </item>
    <item>
      <title>Weak Simplicial Bisimilarity and Minimisation for Polyhedral Model Checking</title>
      <link>https://arxiv.org/abs/2411.11428</link>
      <description>arXiv:2411.11428v1 Announce Type: new 
Abstract: The work described in this paper builds on the polyhedral semantics of the Spatial Logic for Closure Spaces (SLCS) and the geometric spatial model checker PolyLogicA. Polyhedral models are central in domains that exploit mesh processing, such as 3D computer graphics. A discrete representation of polyhedral models is given by cell poset models, which are amenable to geometric spatial model checking on polyhedral models using the logical language SLCS$\eta$, a weaker version of SLCS. In this work we show that the mapping from polyhedral models to cell poset models preserves and reflects SLCS$\eta$. We also propose weak simplicial bisimilarity on polyhedral models and weak $\pm$-bisimilarity on cell poset models. Weak $\pm$-bisimilarity leads to a stronger reduction of models than its counterpart $\pm$-bisimilarity that was introduced in previous work. We show that the proposed bisimilarities enjoy the Hennessy-Milner property, i.e. two points are weakly simplicial bisimilar iff they are logically equivalent for SLCS$\eta$. Similarly, two cells are weakly $\pm$-bisimilar iff they are logically equivalent in the poset-model interpretation of SLCS$\eta$. Furthermore we present a procedure, and prove that it correctly computes the minimal model with respect to weak $\pm$-bisimilarity, i.e. with respect to logical equivalence of SLCS$\eta$. The procedure works via an encoding into LTSs and then exploits branching bisimilarity on those LTSs. This allows one to use in the implementation the minimization capabilities as included in the mCRL2 toolset. Various experiments are included to show the effectiveness of the approach.</description>
      <guid isPermaLink="false">oai:arXiv.org:2411.11428v1</guid>
      <category>cs.LO</category>
      <pubDate>Tue, 19 Nov 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Nick Bezhanishvili, Laura Bussi, Vincenzo Ciancia, David Gabelaia, Mamuka Jibladze, Diego Latella, Mieke Massink, Erik P. de Vink</dc:creator>
    </item>
    <item>
      <title>Probabilistic Concurrent Reasoning in Outcome Logic: Independence, Conditioning, and Invariants</title>
      <link>https://arxiv.org/abs/2411.11662</link>
      <description>arXiv:2411.11662v1 Announce Type: new 
Abstract: Although randomization has long been used in concurrent programs, formal methods for reasoning about this mixture of effects have lagged behind. In particular, no existing program logics can express specifications about the distributions of outcomes resulting from programs that are both probabilistic and concurrent. To address this, we introduce Probabilistic Concurrent Outcome Logic, which incorporates ideas from concurrent and probabilistic separation logics into Outcome Logic to introduce new compositional reasoning principles.</description>
      <guid isPermaLink="false">oai:arXiv.org:2411.11662v1</guid>
      <category>cs.LO</category>
      <category>cs.PL</category>
      <pubDate>Tue, 19 Nov 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Noam Zilberstein, Alexandra Silva, Joseph Tassarotti</dc:creator>
    </item>
    <item>
      <title>A Note on Los's Theorem for Kripke-Joyal Semantics</title>
      <link>https://arxiv.org/abs/2411.11766</link>
      <description>arXiv:2411.11766v1 Announce Type: new 
Abstract: Los's theorem, also known as the fundamental result of ultraproducts, states that the ultraproduct over a family of structures for the same language satisfies a first-order formula if and only if the set of indices for which the structures satisfy the formula belongs to the underlying ultrafilter. The associated notion of satisfaction is the Tarskian one via the elements of the set-theoretic structure that allow interpreting the formula. In the context of topoi, Kripke-Joyal semantics extends Tarski's notion to categorical logic. In this article, we propose to extend Los's theorem to first-order structures on elementary topoi for Kripke-Joyal semantics. We also show that the extension entails its set-theoretic version. As is customary, we use the categorical version of Los's theorem to obtain a proof of the compactness theorem for Kripke-Joyal semantics.</description>
      <guid isPermaLink="false">oai:arXiv.org:2411.11766v1</guid>
      <category>cs.LO</category>
      <pubDate>Tue, 19 Nov 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <dc:creator>Marc Aiguier, Romain Pascual</dc:creator>
    </item>
    <item>
      <title>The Lambda Calculus is Quantifiable</title>
      <link>https://arxiv.org/abs/2411.11809</link>
      <description>arXiv:2411.11809v1 Announce Type: new 
Abstract: In this paper we introduce several quantitative methods for the lambda-calculus based on partial metrics, a well-studied variant of standard metric spaces that have been used to metrize non-Hausdorff topologies, like those arising from Scott domains. First, we study quantitative variants, based on program distances, of sensible equational theories for the $\lambda$-calculus, like those arising from B\"ohm trees and from the contextual preorder. Then, we introduce applicative distances capturing higher-order Scott topologies, including reflexive objects like the $D_\infty$ model. Finally, we provide a quantitative insight on the well-known connection between the B\"ohm tree of a $\lambda$-term and its Taylor expansion, by showing that the latter can be presented as an isometric transformation.</description>
      <guid isPermaLink="false">oai:arXiv.org:2411.11809v1</guid>
      <category>cs.LO</category>
      <category>cs.PL</category>
      <category>math.LO</category>
      <pubDate>Tue, 19 Nov 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Valentin Maestracci, Paolo Pistone</dc:creator>
    </item>
    <item>
      <title>The Importance of Parameters in Database Queries</title>
      <link>https://arxiv.org/abs/2401.04606</link>
      <description>arXiv:2401.04606v2 Announce Type: cross 
Abstract: We propose and study a framework for quantifying the importance of the choices of parameter values to the result of a query over a database. These parameters occur as constants in logical queries, such as conjunctive queries. In our framework, the importance of a parameter is its SHAP score - a popular instantiation of the game-theoretic Shapley value to measure the importance of feature values in machine learning models. We make the case for the rationale of using this score by explaining the intuition behind SHAP, and by showing that we arrive at this score in two different, apparently opposing, approaches to quantifying the contribution of a parameter. The application SHAP requires two components in addition to the query and the database: (a) a probability distribution over the combinations of parameter values, and (b) a utility function that measures the similarity between the result for the original parameters and the result for hypothetical parameters. The main question addressed in the paper is the complexity of calculating the SHAP score for different distributions and similarity measures. In particular, we devise polynomial-time algorithms for the case of full acyclic conjunctive queries for certain (natural) similarity functions. We extend our results to conjunctive queries with parameterized filters (e.g., inequalities between variables and parameters). We also illustrate the application of our results to "why-not" explanations (aiming to explain the absence of a query answer), where we consider the task of quantifying the contribution of query components to the elimination of a non-answer in consideration. Finally, we discuss a simple approximation technique for the case of correlated parameters.</description>
      <guid isPermaLink="false">oai:arXiv.org:2401.04606v2</guid>
      <category>cs.DB</category>
      <category>cs.LO</category>
      <pubDate>Tue, 19 Nov 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Amir Gilad, Martin Grohe, Benny Kimelfeld, Peter Lindner, Christoph Standke</dc:creator>
    </item>
    <item>
      <title>Learning Quantitative Automata Modulo Theories</title>
      <link>https://arxiv.org/abs/2411.10601</link>
      <description>arXiv:2411.10601v1 Announce Type: cross 
Abstract: Quantitative automata are useful representations for numerous applications, including modeling probability distributions over sequences to Markov chains and reward machines. Actively learning such automata typically occurs using explicitly gathered input-output examples under adaptations of the L-star algorithm. However, obtaining explicit input-output pairs can be expensive, and there exist scenarios, including preference-based learning or learning from rankings, where providing constraints is a less exerting and a more natural way to concisely describe desired properties. Consequently, we propose the problem of learning deterministic quantitative automata from sets of constraints over the valuations of input sequences. We present QUINTIC, an active learning algorithm, wherein the learner infers a valid automaton through deductive reasoning, by applying a theory to a set of currently available constraints and an assumed preference model and quantitative automaton class. QUINTIC performs a complete search over the space of automata, and is guaranteed to be minimal and correctly terminate. Our evaluations utilize theory of rationals in order to learn summation, discounted summation, product, and classification quantitative automata, and indicate QUINTIC is effective at learning these types of automata.</description>
      <guid isPermaLink="false">oai:arXiv.org:2411.10601v1</guid>
      <category>cs.FL</category>
      <category>cs.LG</category>
      <category>cs.LO</category>
      <pubDate>Tue, 19 Nov 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Eric Hsiung, Swarat Chaudhuri, Joydeep Biswas</dc:creator>
    </item>
    <item>
      <title>Hereditary First-Order Model Checking</title>
      <link>https://arxiv.org/abs/2411.10860</link>
      <description>arXiv:2411.10860v1 Announce Type: cross 
Abstract: Many computational problems can be modelled as the class of all finite relational structures $\mathbb A$ that satisfy a fixed first-order sentence $\phi$ hereditarily, i.e., we require that every substructure of $\mathbb A$ satisfies $\phi$. In this case, we say that the class is in HerFO. The problems in HerFO are always in coNP, and sometimes coNP-complete. HerFO also contains many interesting computational problems in P, including many constraint satisfaction problems (CSPs). We show that HerFO captures the class of complements of CSPs for reducts of finitely bounded structures, i.e., every such CSP is polynomial-time equivalent to the complement of a problem in HerFO. However, we also prove that HerFO does not have the full computational power of coNP: there are problems in coNP that are not polynomial-time equivalent to a problem in HerFO, unless E=NE. Another main result is a description of the quantifier-prefixes for $\phi$ such that hereditarily checking $\phi$ is in P; we show that for every other quantifier-prefix there exists a formula $\phi$ with this prefix such that hereditarily checking $\phi$ is coNP-complete.</description>
      <guid isPermaLink="false">oai:arXiv.org:2411.10860v1</guid>
      <category>math.LO</category>
      <category>cs.CC</category>
      <category>cs.DM</category>
      <category>cs.LO</category>
      <pubDate>Tue, 19 Nov 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Manuel Bodirsky, Santiago Guzm\'an-Pro</dc:creator>
    </item>
    <item>
      <title>Sound Value Iteration for Simple Stochastic Games</title>
      <link>https://arxiv.org/abs/2411.11549</link>
      <description>arXiv:2411.11549v1 Announce Type: cross 
Abstract: Algorithmic analysis of Markov decision processes (MDP) and stochastic games (SG) in practice relies on value-iteration (VI) algorithms. Since the basic version of VI does not provide guarantees on the precision of the result, variants of VI have been proposed that offer such guarantees. In particular, sound value iteration (SVI) not only provides precise lower and upper bounds on the result, but also converges faster in the presence of probabilistic cycles. Unfortunately, it is neither applicable to SG, nor to MDP with end components. In this paper, we extend SVI and cover both cases. The technical challenge consists mainly in proper treatment of end components, which require different handling than in the literature. Moreover, we provide several optimizations of SVI. Finally, we also evaluate our prototype implementation experimentally to confirm its advantages on systems with probabilistic cycles.</description>
      <guid isPermaLink="false">oai:arXiv.org:2411.11549v1</guid>
      <category>cs.GT</category>
      <category>cs.LO</category>
      <category>cs.SY</category>
      <category>eess.SY</category>
      <pubDate>Tue, 19 Nov 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Muqsit Azeem, Jan Kretinsky, Maximilian Weininger</dc:creator>
    </item>
    <item>
      <title>Automatic Complexity Analysis of Integer Programs via Triangular Weakly Non-Linear Loops</title>
      <link>https://arxiv.org/abs/2205.08869</link>
      <description>arXiv:2205.08869v3 Announce Type: replace 
Abstract: There exist several results on deciding termination and computing runtime bounds for triangular weakly non-linear loops (twn-loops). We show how to use results on such subclasses of programs where complexity bounds are computable within incomplete approaches for complexity analysis of full integer programs. To this end, we present a novel modular approach which computes local runtime bounds for subprograms which can be transformed into twn-loops. These local runtime bounds are then lifted to global runtime bounds for the whole program. The power of our approach is shown by our implementation in the tool KoAT which analyzes complexity of programs where all other state-of-the-art tools fail.</description>
      <guid isPermaLink="false">oai:arXiv.org:2205.08869v3</guid>
      <category>cs.LO</category>
      <pubDate>Tue, 19 Nov 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Nils Lommen, Fabian Meyer, J\"urgen Giesl</dc:creator>
    </item>
    <item>
      <title>Targeting Completeness: Using Closed Forms for Size Bounds of Integer Programs</title>
      <link>https://arxiv.org/abs/2307.06921</link>
      <description>arXiv:2307.06921v3 Announce Type: replace 
Abstract: We present a new procedure to infer size bounds for integer programs automatically. Size bounds are important for the deduction of bounds on the runtime complexity or in general, for the resource analysis of programs. We show that our technique is complete (i.e., it always computes finite size bounds) for a subclass of loops, possibly with non-linear arithmetic. Moreover, we present a novel approach to combine and integrate this complete technique into an incomplete approach to infer size and runtime bounds of general integer programs. We prove completeness of our integration for an important subclass of integer programs. We implemented our new algorithm in the automated complexity analysis tool KoAT to evaluate its power, in particular on programs with non-linear arithmetic.</description>
      <guid isPermaLink="false">oai:arXiv.org:2307.06921v3</guid>
      <category>cs.LO</category>
      <pubDate>Tue, 19 Nov 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Nils Lommen, J\"urgen Giesl</dc:creator>
    </item>
    <item>
      <title>Implicit automata in {\lambda}-calculi III: affine planar string-to-string functions</title>
      <link>https://arxiv.org/abs/2404.03985</link>
      <description>arXiv:2404.03985v3 Announce Type: replace 
Abstract: We prove a characterization of first-order string-to-string transduction via $\lambda$-terms typed in non-commutative affine logic that compute with Church encoding, extending the analogous known characterization of star-free languages. We show that every first-order transduction can be computed by a $\lambda$-term using a known Krohn-Rhodes-style decomposition lemma. The converse direction is given by compiling $\lambda$-terms into two-way reversible planar transducers. The soundness of this translation involves showing that the transition functions of those transducers live in a monoidal closed category of diagrams in which we can interpret purely affine $\lambda$-terms. One challenge is that the unit of the tensor of the category in question is not a terminal object. As a result, our interpretation does not identify $\beta$-equivalent terms, but it does turn $\beta$-reductions into inequalities in a poset-enrichment of the category of diagrams.</description>
      <guid isPermaLink="false">oai:arXiv.org:2404.03985v3</guid>
      <category>cs.LO</category>
      <category>cs.FL</category>
      <pubDate>Tue, 19 Nov 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/publicdomain/zero/1.0/</dc:rights>
      <dc:creator>C\'ecilia Pradic, Ian Price</dc:creator>
    </item>
    <item>
      <title>Verifiably Robust Conformal Prediction</title>
      <link>https://arxiv.org/abs/2405.18942</link>
      <description>arXiv:2405.18942v3 Announce Type: replace 
Abstract: Conformal Prediction (CP) is a popular uncertainty quantification method that provides distribution-free, statistically valid prediction sets, assuming that training and test data are exchangeable. In such a case, CP's prediction sets are guaranteed to cover the (unknown) true test output with a user-specified probability. Nevertheless, this guarantee is violated when the data is subjected to adversarial attacks, which often result in a significant loss of coverage. Recently, several approaches have been put forward to recover CP guarantees in this setting. These approaches leverage variations of randomised smoothing to produce conservative sets which account for the effect of the adversarial perturbations. They are, however, limited in that they only support $\ell^2$-bounded perturbations and classification tasks. This paper introduces VRCP (Verifiably Robust Conformal Prediction), a new framework that leverages recent neural network verification methods to recover coverage guarantees under adversarial attacks. Our VRCP method is the first to support perturbations bounded by arbitrary norms including $\ell^1$, $\ell^2$, and $\ell^\infty$, as well as regression tasks. We evaluate and compare our approach on image classification tasks (CIFAR10, CIFAR100, and TinyImageNet) and regression tasks for deep reinforcement learning environments. In every case, VRCP achieves above nominal coverage and yields significantly more efficient and informative prediction regions than the SotA.</description>
      <guid isPermaLink="false">oai:arXiv.org:2405.18942v3</guid>
      <category>cs.LO</category>
      <category>cs.AI</category>
      <category>cs.LG</category>
      <pubDate>Tue, 19 Nov 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Linus Jeary, Tom Kuipers, Mehran Hosseini, Nicola Paoletti</dc:creator>
    </item>
    <item>
      <title>Formalising the Local Compactness of the Adele Ring</title>
      <link>https://arxiv.org/abs/2405.19270</link>
      <description>arXiv:2405.19270v2 Announce Type: replace 
Abstract: The adele ring of a number field is a central object in modern number theory. Its status as a locally compact topological ring is one of the key reasons why. We describe a formal proof that the adele ring of a number field is locally compact in the Lean 4 theorem prover. Our work includes the formalisations of new types, including the completion of a number field at an infinite place, the infinite adele ring and the finite $S$-adele ring, as well as formal proofs that completions of a number field are locally compact and their rings of integers at finite places are compact.</description>
      <guid isPermaLink="false">oai:arXiv.org:2405.19270v2</guid>
      <category>cs.LO</category>
      <category>math.NT</category>
      <pubDate>Tue, 19 Nov 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Salvatore Mercuri</dc:creator>
    </item>
    <item>
      <title>Strong Nominal Semantics for Fixed-Point Constraints</title>
      <link>https://arxiv.org/abs/2407.14253</link>
      <description>arXiv:2407.14253v2 Announce Type: replace 
Abstract: Nominal algebra includes $\alpha$-equality and freshness constraints on nominal terms endowed with a nominal set semantics that facilitates reasoning about languages with binders. Nominal unification is decidable and unitary, however, its extension with equational axioms such as Commutativity (which has a finitary first-order unification type) is no longer finitary unless permutation fixed-point constraints are used. In this paper, we extend the notion of nominal algebra by introducing fixed-point constraints and provide a sound semantics using strong nominal sets. We show, by providing a counter-example, that the class of nominal sets is not a sound denotation for this extended nominal algebra. To recover soundness we propose two different formulations of nominal algebra, one obtained by restricting to a class of fixed-point contexts that are in direct correspondence with freshness contexts and another obtained by using a different set of derivation rules.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.14253v2</guid>
      <category>cs.LO</category>
      <pubDate>Tue, 19 Nov 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:journal_reference>MFPS 2024</arxiv:journal_reference>
      <dc:creator>Ali K. Caires-Santos, Maribel Fern\'andez, Daniele Nantes-Sobrinho</dc:creator>
    </item>
    <item>
      <title>A Complete Graphical Language for Linear Optical Circuits with Finite-Photon-Number Sources and Detectors</title>
      <link>https://arxiv.org/abs/2402.17693</link>
      <description>arXiv:2402.17693v2 Announce Type: replace-cross 
Abstract: Linear optical circuits can be used to manipulate the quantum states of photons as they pass through components including beam splitters and phase shifters. Those photonic states possess a particularly high level of expressiveness, as they reside within the bosonic Fock space, an infinite-dimensional Hilbert space. However, in the domain of linear optical quantum computation, these basic components may not be sufficient to efficiently perform all computations of interest, such as universal quantum computation. To address this limitation it is common to add auxiliary sources and detectors, which enable projections onto auxiliary photonic states and thus increase the versatility of the processes. In this paper, we introduce the $\textbf{LO}_{fi}$-calculus, a graphical language to reason on the infinite-dimensional bosonic Fock space with circuits composed of four core elements of linear optics: the phase shifter, the beam splitter, and auxiliary sources and detectors with bounded photon number. We present an equational theory that we prove to be complete: two $\textbf{LO}_{fi}$-circuits represent the same quantum process if and only if one can be transformed into the other with the rules of the $\textbf{LO}_{fi}$-calculus. We give a unique and compact universal form for such circuits.</description>
      <guid isPermaLink="false">oai:arXiv.org:2402.17693v2</guid>
      <category>quant-ph</category>
      <category>cs.LO</category>
      <pubDate>Tue, 19 Nov 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Nicolas Heurtel</dc:creator>
    </item>
    <item>
      <title>Structural temporal logic for mechanized program verification</title>
      <link>https://arxiv.org/abs/2410.14906</link>
      <description>arXiv:2410.14906v3 Announce Type: replace-cross 
Abstract: Mechanized verification of liveness properties for programs with effects, nondeterminism, and nontermination is difficult. Existing temporal reasoning frameworks operate on the level of models (traces, automata) not executable code, creating a verification gap and losing the benefits of modularity and composition enjoyed by structural program logics. Reasoning about infinite traces and automata requires complex (co-)inductive proof techniques and familiarity with proof assistant mechanics (e.g., guardedness checker). We propose a structural approach to the verification of temporal properties with a new temporal logic that we call Ticl. Using Ticl, we internalize complex (co-)inductive proof techniques to structural lemmas and reasoning about variants and invariants. We show that it is possible to perform mechanized proofs of general temporal properties, while working in a high-level of abstraction. We demonstrate the benefits of ticl by giving short, structural proofs of safety and liveness properties for programs with queues, secure memory, and distributed consensus.</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.14906v3</guid>
      <category>cs.PL</category>
      <category>cs.LO</category>
      <pubDate>Tue, 19 Nov 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Eleftherios Ioannidis, Yannick Zakowski, Steve Zdancewic, Sebastian Angel</dc:creator>
    </item>
    <item>
      <title>Generically Automating Separation Logic by Functors, Homomorphisms and Modules</title>
      <link>https://arxiv.org/abs/2411.06094</link>
      <description>arXiv:2411.06094v2 Announce Type: replace-cross 
Abstract: Foundational verification considers the functional correctness of programming languages with formalized semantics and uses proof assistants (e.g., Coq, Isabelle) to certify proofs. The need for verifying complex programs compels it to involve expressive Separation Logics (SLs) that exceed the scopes of well-studied automated proof theories, e.g., symbolic heap. Consequently, automation of SL in foundational verification relies heavily on ad-hoc heuristics that lack a systematic meta-theory and face scalability issues. To mitigate the gap, we propose a theory to specify SL predicates using abstract algebras including functors, homomorphisms, and modules over rings. Based on this theory, we develop a generic SL automation algorithm to reason about any data structures that can be characterized by these algebras. In addition, we also present algorithms for automatically instantiating the algebraic models to real data structures. The instantiation reuses the algebraic models of component structures and preserves their data abstractions. Case studies on formalized imperative semantics show our algorithm can instantiate the algebraic models automatically for a variety of complex data structures. Experimental results indicate the automatically instantiated reasoners from our generic theory show similar results to the state-of-the-art systems made of specifically crafted reasoning rules. The presented theories, proofs, and the verification framework are formalized in Isabelle/HOL.</description>
      <guid isPermaLink="false">oai:arXiv.org:2411.06094v2</guid>
      <category>cs.PL</category>
      <category>cs.LO</category>
      <pubDate>Tue, 19 Nov 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:DOI>10.1145/3704903</arxiv:DOI>
      <dc:creator>Qiyuan Xu, David Sanan, Zhe Hou, Xiaokun Luan, Conrad Watt, Yang Liu</dc:creator>
    </item>
    <item>
      <title>A Taxonomy of Hoare-Like Logics: Towards a Holistic View using Predicate Transformers and Kleene Algebras with Top and Tests</title>
      <link>https://arxiv.org/abs/2411.06416</link>
      <description>arXiv:2411.06416v2 Announce Type: replace-cross 
Abstract: We study Hoare-like logics, including partial and total correctness Hoare logic, incorrectness logic, Lisbon logic, and many others through the lens of predicate transformers \`a la Dijkstra and through the lens of Kleene algebra with top and tests (TopKAT). Our main goal is to give an overview - a taxonomy - of how these program logics relate, in particular under different assumptions like for example program termination, determinism, and reversibility. As a byproduct, we obtain a TopKAT characterization of Lisbon logic, which - to the best of our knowledge - is a novel result.</description>
      <guid isPermaLink="false">oai:arXiv.org:2411.06416v2</guid>
      <category>cs.PL</category>
      <category>cs.LO</category>
      <pubDate>Tue, 19 Nov 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Lena Verscht, Benjamin Lucien Kaminski</dc:creator>
    </item>
  </channel>
</rss>
