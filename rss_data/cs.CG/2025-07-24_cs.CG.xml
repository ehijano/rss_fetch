<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.CG updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.CG</link>
    <description>cs.CG updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.CG" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Fri, 25 Jul 2025 01:24:43 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Thu, 24 Jul 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>The Price of Upwardness</title>
      <link>https://arxiv.org/abs/2409.01475</link>
      <description>arXiv:2409.01475v4 Announce Type: replace 
Abstract: Not every directed acyclic graph (DAG) whose underlying undirected graph is planar admits an upward planar drawing. We are interested in pushing the notion of upward drawings beyond planarity by considering upward $k$-planar drawings of DAGs in which the edges are monotonically increasing in a common direction and every edge is crossed at most $k$ times for some integer $k \ge 1$. We show that the number of crossings per edge in a monotone drawing is in general unbounded for the class of bipartite outerplanar, cubic, or bounded pathwidth DAGs. However, it is at most two for outerpaths and it is at most quadratic in the bandwidth in general. From the computational point of view, we prove that testing upward-$k$-planarity is NP-complete already for $k=1$ and even for restricted instances for which upward planarity testing is polynomial. On the positive side, we can decide in linear time whether a single-source DAG admits an upward 1-planar drawing in which all vertices are incident to the outer face.</description>
      <guid isPermaLink="false">oai:arXiv.org:2409.01475v4</guid>
      <category>cs.CG</category>
      <category>cs.DM</category>
      <pubDate>Thu, 24 Jul 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Patrizio Angelini, Therese Biedl, Markus Chimani, Sabine Cornelsen, Giordano Da Lozzo, Seok-Hee Hong, Giuseppe Liotta, Maurizio Patrignani, Sergey Pupyrev, Ignaz Rutter, Alexander Wolff</dc:creator>
    </item>
    <item>
      <title>Node-neighbor subnetworks and Hk-core decomposition</title>
      <link>https://arxiv.org/abs/2507.04948</link>
      <description>arXiv:2507.04948v2 Announce Type: replace 
Abstract: The network homology Hk-core decomposition proposed in this article is similar to the k-core decomposition based on node degrees of the network. The C. elegans neural network and the cat cortical network are used as examples to reveal the symmetry of the deep structures of such networks. First, based on the concept of neighborhood in mathematics, some new concepts are introduced, including such as node-neighbor subnetwork and Betti numbers of the neighbor subnetwork, among others. Then, the Betti numbers of the neighbor subnetwork of each node are computed, which are used to perform Hk-core decomposition of the network homology. The construction process is as follows: the initial network is referred to as the H0-core; the H1-core is obtained from the H0-core by deleting some nodes of certain properties; the H2-core is obtained from the H1-core by deleting some nodes or edges of certain properties; the H3-core is obtained from the H2-core by deleting some nodes of certain properties or by retaining the nodes of certain properties, and so on, which will be described in detail in the main text. Throughout the process, the index of node involved in deleting edge needs to be updated in every step. The Hk-core decomposition is easy to implement in parallel. It has a wide range of applications in many fields such as network science, data science, computational topology, and artificial intelligence. In this article, we also show how to use it to simplify homology calculation, e.g. for the C. elegans neural network, whereas the results of decomposition are the H1-core, the H2-core, and the H3-core. Thus, the simplexes consisting of four highest-order cavities in the H3-core subnetwork can also be directly obtained.</description>
      <guid isPermaLink="false">oai:arXiv.org:2507.04948v2</guid>
      <category>cs.CG</category>
      <pubDate>Thu, 24 Jul 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/publicdomain/zero/1.0/</dc:rights>
      <dc:creator>Dinghua Shi, Yang Zhao, Guanrong Chen</dc:creator>
    </item>
    <item>
      <title>Blown up by an equilateral: Poncelet triangles about the incircle and their degeneracies</title>
      <link>https://arxiv.org/abs/2409.19464</link>
      <description>arXiv:2409.19464v3 Announce Type: replace-cross 
Abstract: We tour several Euclidean properties of Poncelet triangles inscribed in an ellipse and circumscribing the incircle, including loci of triangle centers and envelopes of key objects. We also show that a number of degenerate behaviors are triggered by the presence of an equilateral triangle in the family.</description>
      <guid isPermaLink="false">oai:arXiv.org:2409.19464v3</guid>
      <category>math.DS</category>
      <category>cs.CG</category>
      <pubDate>Thu, 24 Jul 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Mark Helman, Ronaldo A. Garcia, Dan Reznik</dc:creator>
    </item>
  </channel>
</rss>
