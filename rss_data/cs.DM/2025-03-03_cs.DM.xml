<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.DM updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.DM</link>
    <description>cs.DM updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.DM" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Mon, 03 Mar 2025 05:01:20 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Mon, 03 Mar 2025 00:00:00 -0500</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Polynomial-Size Enumeration Kernelizations for Long Path Enumeration</title>
      <link>https://arxiv.org/abs/2502.21164</link>
      <description>arXiv:2502.21164v1 Announce Type: new 
Abstract: Enumeration kernelization for parameterized enumeration problems was defined by Creignou et al. [Theory Comput. Syst. 2017] and was later refined by Golovach et al. [J. Comput. Syst. Sci. 2022, STACS 2021] to polynomial-delay enumeration kernelization. We consider ENUM LONG-PATH, the enumeration variant of the Long-Path problem, from the perspective of enumeration kernelization. Formally, given an undirected graph G and an integer k, the objective of ENUM LONG-PATH is to enumerate all paths of G having exactly k vertices. We consider the structural parameters vertex cover number, dissociation number, and distance to clique and provide polynomial-delay enumeration kernels of polynomial size for each of these parameters.</description>
      <guid isPermaLink="false">oai:arXiv.org:2502.21164v1</guid>
      <category>cs.DM</category>
      <pubDate>Mon, 03 Mar 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Christian Komusiewicz, Diptapriyo Majumdar, Frank Sommer</dc:creator>
    </item>
    <item>
      <title>A Minor-Testing Approach for Coordinated Motion Planning with Sliding Robots</title>
      <link>https://arxiv.org/abs/2502.21175</link>
      <description>arXiv:2502.21175v1 Announce Type: new 
Abstract: We study a variant of the Coordinated Motion Planning problem on undirected graphs, referred to herein as the \textsc{Coordinated Sliding-Motion Planning} (CSMP) problem. In this variant, we are given an undirected graph $G$, $k$ robots $R_1,\dots,R_k$ positioned on distinct vertices of $G$, $p\leq k$ distinct destination vertices for robots $R_1,\dots,R_p$, and $\ell \in \mathbb{N}$. The problem is to decide if there is a serial schedule of at most $\ell$ moves (i.e., of makespan $\ell$) such that at the end of the schedule each robot with a destination reaches it, where a robot's move is a free path (unoccupied by any robots) from its current position to an unoccupied vertex. The problem is known to be NP-hard even on full grids. It has been studied in several contexts, including coin movement and reconfiguration problems, with respect to feasibility, complexity, and approximation. Geometric variants of the problem, in which congruent geometric-shape robots (e.g., unit disk/squares) slide or translate in the Euclidean plane, have also been studied extensively. We investigate the parameterized complexity of CSMP with respect to two parameters: the number $k$ of robots and the makespan $\ell$. As our first result, we present a fixed-parameter algorithm for CSMP parameterized by $k$. For our second result, we present a fixed-parameter algorithm parameterized by $\ell$ for the special case of CSMP in which only a single robot has a destination and the graph is planar, which we prove to be NP-complete. A crucial new ingredient for both of our results is that the solution admits a succinct representation as a small labeled topological minor of the input graph.</description>
      <guid isPermaLink="false">oai:arXiv.org:2502.21175v1</guid>
      <category>cs.DM</category>
      <pubDate>Mon, 03 Mar 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <dc:creator>Eduard Eiben, Robert Ganian, Iyad Kanj, Ramanujan M. Sridharan</dc:creator>
    </item>
    <item>
      <title>Aggregation of evaluations without unanimity</title>
      <link>https://arxiv.org/abs/2502.20428</link>
      <description>arXiv:2502.20428v1 Announce Type: cross 
Abstract: Dokow and Holzman determined which predicates over $\{0, 1\}$ satisfy an analog of Arrow's theorem: all unanimous aggregators are dictatorial. Szegedy and Xu, extending earlier work of Dokow and Holzman, extended this to predicates over arbitrary finite alphabets.
  Mossel extended Arrow's theorem in an orthogonal direction, determining all aggregators without the assumption of unanimity. We bring together both threads of research by extending the results of Dokow-Holzman and Szegedy-Xu to the setting of Mossel. As an application, we determine which symmetric predicates over $\{0,1\}$ are such that all aggregators are dictatorial.</description>
      <guid isPermaLink="false">oai:arXiv.org:2502.20428v1</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <category>math.LO</category>
      <pubDate>Mon, 03 Mar 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Yuval Filmus</dc:creator>
    </item>
    <item>
      <title>4-tangrams are 4-avoidable</title>
      <link>https://arxiv.org/abs/2502.20774</link>
      <description>arXiv:2502.20774v1 Announce Type: cross 
Abstract: A tangram is a word in which every letter occurs an even number of times. Thus it can be cut into parts that can be arranged into two identical words. The \emph{cut number} of a tangram is the minimum number of required cuts in this process. Tangrams with cut number one corresponds to squares. For $k\ge1$, let $t(k)$ denote the minimum size of an alphabet over which an infinite word avoids tangrams with cut number at most~$k$. The existence of infinite ternary square-free words shows that $t(1)=t(2)=3$. We show that $t(3)=t(4)=4$, answering a question from D\k{e}bski, Grytczuk, Pawlik, Przyby\l{}o, and \'Sleszy\'nska-Nowak.</description>
      <guid isPermaLink="false">oai:arXiv.org:2502.20774v1</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <pubDate>Mon, 03 Mar 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Pascal Ochem, Th\'eo Pierron</dc:creator>
    </item>
    <item>
      <title>Multimodal Search on a Line</title>
      <link>https://arxiv.org/abs/2502.07000</link>
      <description>arXiv:2502.07000v2 Announce Type: replace 
Abstract: Inspired by the diverse set of technologies used in underground object detection and imaging, we introduce a novel multimodal linear search problem whereby a single searcher starts at the origin and must find a target that can only be detected when the searcher moves through its location using the correct of $p$ possible search modes.
  The target's location, its distance $d$ from the origin, and the correct search mode are all initially unknown to the searcher. We prove tight upper and lower bounds on the competitive ratio for this problem. Specifically, we show that when $p$ is odd, the optimal competitive ratio is given by $2p+3+\sqrt{8(p+1)}$, whereas when $p$ is even, the optimal competitive ratio is given by $c$: the unique solution to $(c-1)^4-4p(c+1)^2(c-p-1)=0$ in the interval $\left[2p+1+\sqrt{8p},\infty\right)$. This solution $c$ has the explicit bounds $2p+3+\sqrt{8(p-1)}\leq c\leq 2p+3+\sqrt{8p}$. The optimal algorithms we propose require the searcher to move infinitesimal distances and change directions infinitely many times within finite intervals. To better suit practical applications, we also propose an approximation algorithm with a competitive ratio of $c+\varepsilon$ (where $c$ is the optimal competitive ratio and $\varepsilon &gt; 0$ is an arbitrarily small constant). This algorithm involves the searcher moving finite distances and changing directions a finite number of times within any finite interval.</description>
      <guid isPermaLink="false">oai:arXiv.org:2502.07000v2</guid>
      <category>cs.DM</category>
      <pubDate>Mon, 03 Mar 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Jared Coleman, Dmitry Ivanov, Evangelos Kranakis, Danny Krizanc, Oscar Morales Ponce</dc:creator>
    </item>
  </channel>
</rss>
