<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.LO updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.LO</link>
    <description>cs.LO updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.LO" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Fri, 06 Dec 2024 05:00:46 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Fri, 06 Dec 2024 00:00:00 -0500</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>On Explicit Solutions to Fixed-Point Equations in Propositional Dynamic Logic</title>
      <link>https://arxiv.org/abs/2412.04012</link>
      <description>arXiv:2412.04012v1 Announce Type: new 
Abstract: Propositional dynamic logic (PDL) is an important modal logic used to specify and reason about the behavior of software. A challenging problem in the context of PDL is solving fixed-point equations, i.e., formulae of the form $x \equiv \phi(x)$ such that $x$ is a propositional variable and $\phi(x)$ is a formula containing $x$. A solution to such an equation is a formula $\psi$ that omits $x$ and satisfies $\psi \equiv \phi(\psi)$, where $\phi(\psi)$ is obtained by replacing all occurrences of $x$ with $\psi$ in $\phi(x)$. In this paper, we identify a novel class of PDL formulae arranged in two dual hierarchies for which every fixed-point equation $x \equiv \phi(x)$ has a solution. Moreover, we not only prove the existence of solutions for all such equations, but also provide an explicit solution $\psi$ for each fixed-point equation.</description>
      <guid isPermaLink="false">oai:arXiv.org:2412.04012v1</guid>
      <category>cs.LO</category>
      <category>math.LO</category>
      <pubDate>Fri, 06 Dec 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Tim S. Lyon</dc:creator>
    </item>
    <item>
      <title>Non-Transferability in Communication Channels and Tarski`s Truth Theorem</title>
      <link>https://arxiv.org/abs/2210.08405</link>
      <description>arXiv:2210.08405v3 Announce Type: replace 
Abstract: This article explores the concept of transferability within communication channels, with a particular focus on the inability to transmit certain situations through these channels. The Channel Non-Transferability Theorem establishes that no encoding-decoding mechanism can fully transmit all propositions, along with their truth values, from a transmitter to a receiver. The theorem underscores that when a communication channel attempts to transmit its own error state, it inevitably enters a non-transferable condition. I argue that Tarski`s Truth Undefinability Theorem parallels the concept of non-transferability in communication channels. As demonstrated in this article, the existence of non-transferable codes in communication theory is mathematically equivalent to the undefinability of truth as articulated in Tarski`s theorem. This equivalence is analogous to the relationship between the existence of non-computable functions in computer science and G\"odel`s First Incompleteness Theorem in mathematical logic. This new perspective sheds light on additional aspects of Tarski`s theorem, enabling a clearer expression and understanding of its implications.
  Keywords: Non-Transferability, Channel Theory, Tarski`s Truth Theorem, Semantic.</description>
      <guid isPermaLink="false">oai:arXiv.org:2210.08405v3</guid>
      <category>cs.LO</category>
      <category>cs.IT</category>
      <category>math.IT</category>
      <pubDate>Fri, 06 Dec 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Farhad Naderian</dc:creator>
    </item>
    <item>
      <title>HyperLTL Satisfiability Is Highly Undecidable, HyperCTL* is Even Harder</title>
      <link>https://arxiv.org/abs/2303.16699</link>
      <description>arXiv:2303.16699v3 Announce Type: replace 
Abstract: Temporal logics for the specification of information-flow properties are able to express relations between multiple executions of a system. The two most important such logics are HyperLTL and HyperCTL*, which generalise LTL and CTL* by trace quantification. It is known that this expressiveness comes at a price, i.e.\ satisfiability is undecidable for both logics.
  In this paper we settle the exact complexity of these problems, showing that both are in fact highly undecidable: we prove that HyperLTL satisfiability is $\Sigma_1^1$-complete and HyperCTL* satisfiability is $\Sigma_1^2$-complete. These are significant increases over the previously known lower bounds and the first upper bounds. To prove $\Sigma_1^2$-membership for HyperCTL*, we prove that every satisfiable HyperCTL* sentence has a model that is equinumerous to the continuum, the first upper bound of this kind. We also prove this bound to be tight. Furthermore, we prove that both countable and finitely-branching satisfiability for HyperCTL* are as hard as truth in second-order arithmetic, i.e.\ still highly undecidable.
  Finally, we show that the membership problem for every level of the HyperLTL quantifier alternation hierarchy is $\Pi_1^1$-complete</description>
      <guid isPermaLink="false">oai:arXiv.org:2303.16699v3</guid>
      <category>cs.LO</category>
      <pubDate>Fri, 06 Dec 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Marie Fortin, Louwe B. Kuijer, Patrick Totzke, Martin Zimmermann</dc:creator>
    </item>
    <item>
      <title>Techniques for Measuring the Inferential Strength of Forgetting Policies</title>
      <link>https://arxiv.org/abs/2404.02454</link>
      <description>arXiv:2404.02454v3 Announce Type: replace-cross 
Abstract: The technique of forgetting in knowledge representation has been shown to be a powerful and useful knowledge engineering tool with widespread application. Yet, very little research has been done on how different policies of forgetting, or use of different forgetting operators, affects the inferential strength of the original theory. The goal of this paper is to define loss functions for measuring changes in inferential strength based on intuitions from model counting and probability theory. Properties of such loss measures are studied and a pragmatic knowledge engineering tool is proposed for computing loss measures using ProbLog. The paper includes a working methodology for studying and determining the strength of different forgetting policies, in addition to concrete examples showing how to apply the theoretical results using ProbLog. Although the focus is on forgetting, the results are much more general and should have wider application to other areas.</description>
      <guid isPermaLink="false">oai:arXiv.org:2404.02454v3</guid>
      <category>cs.AI</category>
      <category>cs.LO</category>
      <pubDate>Fri, 06 Dec 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Patrick Doherty, Andrzej Szalas</dc:creator>
    </item>
    <item>
      <title>Nl2Hltl2Plan: Scaling Up Natural Language Understanding for Multi-Robots Through Hierarchical Temporal Logic Task Representation</title>
      <link>https://arxiv.org/abs/2408.08188</link>
      <description>arXiv:2408.08188v4 Announce Type: replace-cross 
Abstract: To enable non-experts to specify long-horizon, multi-robot collaborative tasks, language models are increasingly used to translate natural language commands into formal specifications. However, because translation can occur in multiple ways, such translations may lack accuracy or lead to inefficient multi-robot planning. Our key insight is that concise hierarchical specifications can simplify planning while remaining straightforward to derive from human instructions. We propose Nl2Hltl2Plan, a framework that translates natural language commands into hierarchical Linear Temporal Logic (LTL) and solves the corresponding planning problem. The translation involves two steps leveraging Large Language Models (LLMs). First, an LLM transforms instructions into a Hierarchical Task Tree, capturing logical and temporal relations. Next, a fine-tuned LLM converts sub-tasks into flat LTL formulas, which are aggregated into hierarchical specifications, with the lowest level corresponding to ordered robot actions. These specifications are then used with off-the-shelf planners. Our Nl2Hltl2Plan demonstrates the potential of LLMs in hierarchical reasoning for multi-robot task planning. Evaluations in simulation and real-world experiments with human participants show that Nl2Hltl2Plan outperforms existing methods, handling more complex instructions while achieving higher success rates and lower costs in task allocation and planning. Additional details are available at https://nl2hltl2plan.github.io .</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.08188v4</guid>
      <category>cs.RO</category>
      <category>cs.AI</category>
      <category>cs.LO</category>
      <pubDate>Fri, 06 Dec 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Shaojun Xu, Xusheng Luo, Yutong Huang, Letian Leng, Ruixuan Liu, Changliu Liu</dc:creator>
    </item>
    <item>
      <title>Is uniform expressivity too restrictive? Towards efficient expressivity of graph neural networks</title>
      <link>https://arxiv.org/abs/2410.01910</link>
      <description>arXiv:2410.01910v2 Announce Type: replace-cross 
Abstract: Uniform expressivity guarantees that a Graph Neural Network (GNN) can express a query without the parameters depending on the size of the input graphs. This property is desirable in applications in order to have number of trainable parameters that is independent of the size of the input graphs. Uniform expressivity of the two variable guarded fragment (GC2) of first order logic is a well-celebrated result for Rectified Linear Unit (ReLU) GNNs [Barcelo &amp; al., 2020]. In this article, we prove that uniform expressivity of GC2 queries is not possible for GNNs with a wide class of Pfaffian activation functions (including the sigmoid and tanh), answering a question formulated by [Grohe, 2021]. We also show that despite these limitations, many of those GNNs can still efficiently express GC2 queries in a way that the number of parameters remains logarithmic on the maximal degree of the input graphs. Furthermore, we demonstrate that a log-log dependency on the degree is achievable for a certain choice of activation function. This shows that uniform expressivity can be successfully relaxed by covering large graphs appearing in practical applications. Our experiments illustrates that our theoretical estimates hold in practice.</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.01910v2</guid>
      <category>cs.LG</category>
      <category>cs.CC</category>
      <category>cs.LO</category>
      <pubDate>Fri, 06 Dec 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Sammy Khalife, Josu\'e Tonelli-Cueto</dc:creator>
    </item>
    <item>
      <title>Guaranteed Bounds on Posterior Distributions of Discrete Probabilistic Programs with Loops</title>
      <link>https://arxiv.org/abs/2411.10393</link>
      <description>arXiv:2411.10393v2 Announce Type: replace-cross 
Abstract: We study the problem of bounding the posterior distribution of discrete probabilistic programs with unbounded support, loops, and conditioning. Loops pose the main difficulty in this setting: even if exact Bayesian inference is possible, the state of the art requires user-provided loop invariant templates. By contrast, we aim to find guaranteed bounds, which sandwich the true distribution. They are fully automated, applicable to more programs and provide more provable guarantees than approximate sampling-based inference. Since lower bounds can be obtained by unrolling loops, the main challenge is upper bounds, and we attack it in two ways. The first is called residual mass semantics, which is a flat bound based on the residual probability mass of a loop. The approach is simple, efficient, and has provable guarantees.
  The main novelty of our work is the second approach, called geometric bound semantics. It operates on a novel family of distributions, called eventually geometric distributions (EGDs), and can bound the distribution of loops with a new form of loop invariants called contraction invariants. The invariant synthesis problem reduces to a system of polynomial inequality constraints, which is a decidable problem with automated solvers. If a solution exists, it yields an exponentially decreasing bound on the whole distribution, and can therefore bound moments and tail asymptotics as well, not just probabilities as in the first approach.
  Both semantics enjoy desirable theoretical properties. In particular, we prove soundness and convergence, i.e. the bounds converge to the exact posterior as loops are unrolled further. On the practical side, we describe Diabolo, a fully-automated implementation of both semantics, and evaluate them on a variety of benchmarks from the literature, demonstrating their general applicability and the utility of the resulting bounds.</description>
      <guid isPermaLink="false">oai:arXiv.org:2411.10393v2</guid>
      <category>cs.PL</category>
      <category>cs.DM</category>
      <category>cs.LO</category>
      <pubDate>Fri, 06 Dec 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <arxiv:DOI>10.1145/3704874</arxiv:DOI>
      <dc:creator>Fabian Zaiser, Andrzej S. Murawski, C. -H. Luke Ong</dc:creator>
    </item>
  </channel>
</rss>
