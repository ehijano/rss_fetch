<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>nlin.CG updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/nlin.CG</link>
    <description>nlin.CG updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/nlin.CG" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Fri, 18 Oct 2024 04:11:42 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Fri, 18 Oct 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Touching Loop Patterns with Cellular Automata</title>
      <link>https://arxiv.org/abs/2410.13425</link>
      <description>arXiv:2410.13425v1 Announce Type: new 
Abstract: The objective is the design of a Cellular Automata rule that can form patterns with 'touching' loops. A loop is defined as a closed path of 1-cells in a 2D grid on a zero background and with a zero border. A path cell is connected with two of its adjacent neighbors. In touching loops a path cell is also allowed to touch another on a diagonal. A CA rule was designed that can evolve stable touching loop patterns. The rule tries to cover the 2D space by overlapping tiles. The rule uses so-called templates, 5 x 5 matching patterns which are systematically derived from the given set of 3 x 3 tiles. The rule checks the pattern being evolved against a list of templates. If the outer neighbors of a template match, then the cell's state is set to the template's center value. Noise is injected if there is no matching template, or the tiles are not properly assembled. Thereby the evolution is driven to the desired loop patterns.</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.13425v1</guid>
      <category>nlin.CG</category>
      <category>math.GT</category>
      <pubDate>Fri, 18 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <dc:creator>Rolf Hoffmann</dc:creator>
    </item>
    <item>
      <title>Cellular automaton model of self-healing</title>
      <link>https://arxiv.org/abs/2410.13689</link>
      <description>arXiv:2410.13689v1 Announce Type: new 
Abstract: We propose a simple cellular automaton model of a self-healing system and investigate its properties. In the model, the substrate is a two-dimensional checkerboard configuration which can be damaged by changing values of a finite number of sites. The cellular automaton we consider is a checkerboard voting rule, a binary rule with Moore neighbourhood which is topologically conjugate to majority voting rule. For a single color damage (when only cells in the same state are modified), the rule always fixes the damage. For a general damage, when it is localized inside a $3 \times 3$ square, the rule also fixes it always. When the damage is inside of a larger $n \times n$ square, the efficiency of the rule in fixing the damage becomes smaller than $100\%$, but it remains better than $98\%$ for $n \leq 5$ and better than $75 \%$ for $n\leq 7$. We show that in the limit of infinite $n$ the efficiency tends to zero.</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.13689v1</guid>
      <category>nlin.CG</category>
      <pubDate>Fri, 18 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <arxiv:DOI>10.1080/17445760.2024.2413509</arxiv:DOI>
      <dc:creator>Henryk Fuk\'s, Jos\'e Manuel G\'omez Soto</dc:creator>
    </item>
  </channel>
</rss>
