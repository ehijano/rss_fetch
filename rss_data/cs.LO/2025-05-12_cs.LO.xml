<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.LO updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.LO</link>
    <description>cs.LO updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.LO" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Tue, 13 May 2025 02:51:31 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Mon, 12 May 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>GNU Aris: a web application for students</title>
      <link>https://arxiv.org/abs/2505.05986</link>
      <description>arXiv:2505.05986v1 Announce Type: new 
Abstract: We report on recent improvements to the free logic education software tool GNU Aris, including the latest features added during the Google Summer of Code 2023 project. We focused on making GNU Aris a web application to enable almost all users to use it as a standalone offline web application written in a combination of HTML, JavaScript, and WebAssembly. We used the Qt Quick framework with Emscripten to compile the application to WebAssembly. In the report we summarize the user feedback of university students given during a course on logic.</description>
      <guid isPermaLink="false">oai:arXiv.org:2505.05986v1</guid>
      <category>cs.LO</category>
      <category>cs.PL</category>
      <category>cs.SE</category>
      <pubDate>Mon, 12 May 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:DOI>10.4204/EPTCS.419.3</arxiv:DOI>
      <arxiv:journal_reference>EPTCS 419, 2025, pp. 42-54</arxiv:journal_reference>
      <dc:creator>Saksham Attri (Birla Institute of Technology,Science Pilani, Hyderabad Campus, India), Zolt\'an Kov\'acs (Private University of Education, Diocese Linz, Austria), Aaron Windischbauer (Private University of Education, Diocese Linz, Austria)</dc:creator>
    </item>
    <item>
      <title>OnlineProver: Experience with a Visualisation Tool for Teaching Formal Proofs</title>
      <link>https://arxiv.org/abs/2505.05987</link>
      <description>arXiv:2505.05987v1 Announce Type: new 
Abstract: OnlineProver is an interactive proof assistant tailored for the educational setting. Its main features include a user-friendly interface for editing and checking proofs. The user interface provides feedback directly within the derivation, based on error messages from a proof-checking web service. A basic philosophy of the tool is that it should aid the student while still ensuring that the students construct the proofs as if they were working on paper.
  We gathered feedback on the tool through a questionnaire, and we conducted an intervention to assess its effectiveness for students in a classroom setting, alongside an evaluation of technical aspects. The initial intervention showed that students were satisfied with using OnlineProver as part of their coursework, providing initial confirmation of the learning approach behind it. This gives clear directions for future developments, with the potential to find and evaluate how OnlineProver can improve the teaching of natural deduction.</description>
      <guid isPermaLink="false">oai:arXiv.org:2505.05987v1</guid>
      <category>cs.LO</category>
      <pubDate>Mon, 12 May 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:DOI>10.4204/EPTCS.419.4</arxiv:DOI>
      <arxiv:journal_reference>EPTCS 419, 2025, pp. 55-74</arxiv:journal_reference>
      <dc:creator>J\'an Perh\'a\v{c} (Technical University of Ko\v{s}ice, Slovakia), Samuel Novotn\'y (Technical University of Ko\v{s}ice, Slovakia), Sergej Chodarev (Technical University of Ko\v{s}ice, Slovakia), Joachim Tilsted Kristensen (University of Oslo, Norway), Lars Tveito (University of Oslo, Norway), Oleks Shturmov (University of Oslo, Norway, University of Copenhagen, Denmark), Michael Kirkedal Thomsen (University of Oslo, Norway, University of Copenhagen, Denmark)</dc:creator>
    </item>
    <item>
      <title>Minimal Sequent Calculus for Teaching First-Order Logic: Lessons Learned</title>
      <link>https://arxiv.org/abs/2505.05988</link>
      <description>arXiv:2505.05988v1 Announce Type: new 
Abstract: MiniCalc is a web app for teaching first-order logic based on a minimal sequent calculus. As an option the proofs can be verified in the Isabelle proof assistant. We present the lessons learned using the tool in recent years at our university.</description>
      <guid isPermaLink="false">oai:arXiv.org:2505.05988v1</guid>
      <category>cs.LO</category>
      <category>cs.AI</category>
      <pubDate>Mon, 12 May 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:DOI>10.4204/EPTCS.419.5</arxiv:DOI>
      <arxiv:journal_reference>EPTCS 419, 2025, pp. 75-89</arxiv:journal_reference>
      <dc:creator>J{\o}rgen Villadsen (Technical University of Denmark)</dc:creator>
    </item>
    <item>
      <title>Maths with Coq in L1, a pedagogical experiment</title>
      <link>https://arxiv.org/abs/2505.05990</link>
      <description>arXiv:2505.05990v1 Announce Type: new 
Abstract: In France, the first year of study at university is usually abbreviated L1 (for premiere annee de Licence). At Sorbonne Paris Nord University, we have been teaching an 18 hour introductory course in formal proofs to L1 students for 3 years.  These students are in a double major mathematics and computer science curriculum. The course is mandatory and consists only of hands-on sessions with the Coq proof assistant.
  We present some of the practical sessions worksheets, the methodology we used to write them and some of the pitfalls we encountered. Finally we discuss how this course evolved over the years and will see that there is room for improvement in many different technical and pedagogical aspects.
</description>
      <guid isPermaLink="false">oai:arXiv.org:2505.05990v1</guid>
      <category>cs.LO</category>
      <pubDate>Mon, 12 May 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:DOI>10.4204/EPTCS.419.7</arxiv:DOI>
      <arxiv:journal_reference>EPTCS 419, 2025, pp. 112-123</arxiv:journal_reference>
      <dc:creator>Marie Kerjean (CNRS, Universit\'e Sorbonne Paris Nord, Laboratoire d'informatique de Paris Nord, LIPN, Villetaneuse, France), Micaela Mayero (Universit\'e Sorbonne Paris Nord, Laboratoire d'informatique de Paris Nord, LIPN, Villetaneuse, France, Universit\'e Paris-Saclay, Inria, CNRS, ENS Paris-Saclay, Gif-sur-Yvette, France), Pierre Rousselin (Universit\'e Sorbonne Paris Nord, CNRS, Laboratoire Analyse, G\'eom\'etrie et Applications, LAGA, Villetaneuse, France, Inria, Paris, CERMICS, \'Ecole des ponts, Marne-la-Vall\'ee, France)</dc:creator>
    </item>
    <item>
      <title>Operator Spaces, Linear Logic and the Heisenberg-Schr\"odinger Duality of Quantum Theory</title>
      <link>https://arxiv.org/abs/2505.06069</link>
      <description>arXiv:2505.06069v1 Announce Type: new 
Abstract: We show that the category OS of operator spaces, with complete contractions as morphisms, is locally countably presentable and a model of Intuitionistic Linear Logic in the sense of Lafont. We then describe a model of Classical Linear Logic, based on OS, whose duality is compatible with the Heisenberg-Schr\"odinger duality of quantum theory. We also show that OS provides a good setting for studying pure state and mixed state quantum information, the interaction between the two, and even higher-order quantum maps such as the quantum switch.</description>
      <guid isPermaLink="false">oai:arXiv.org:2505.06069v1</guid>
      <category>cs.LO</category>
      <category>quant-ph</category>
      <pubDate>Mon, 12 May 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Bert Lindenhovius, Vladimir Zamdzhiev</dc:creator>
    </item>
    <item>
      <title>Ohana trees and Taylor expansion for the $\lambda$I-calculus. No variable gets left behind or forgotten!</title>
      <link>https://arxiv.org/abs/2505.06193</link>
      <description>arXiv:2505.06193v1 Announce Type: new 
Abstract: Although the $\lambda$I-calculus is a natural fragment of the $\lambda$-calculus, obtained by forbidding the erasure, its equational theories did not receive much attention. The reason is that all proper denotational models studied in the literature equate all non-normalizable $\lambda$I-terms, whence the associated theory is not very informative. The goal of this paper is to introduce a previously unknown theory of the $\lambda$I-calculus, induced by a notion of evaluation trees that we call "Ohana trees". The Ohana tree of a $\lambda$I-term is an annotated version of its B\"ohm tree, remembering all free variables that are hidden within its meaningless subtrees, or pushed into infinity along its infinite branches.
  We develop the associated theories of program approximation: the first approach -- more classic -- is based on finite trees and continuity, the second adapts Ehrhard and Regnier's Taylor expansion. We then prove a Commutation Theorem stating that the normal form of the Taylor expansion of a $\lambda$I-term coincides with the Taylor expansion of its Ohana tree. As a corollary, we obtain that the equality induced by Ohana trees is compatible with abstraction and application. We conclude by discussing the cases of L\'evy-Longo and Berarducci trees, and generalizations to the full $\lambda$-calculus.</description>
      <guid isPermaLink="false">oai:arXiv.org:2505.06193v1</guid>
      <category>cs.LO</category>
      <category>cs.PL</category>
      <pubDate>Mon, 12 May 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>R\'emy Cerda, Giulio Manzonetto, Alexis Saurin</dc:creator>
    </item>
    <item>
      <title>APOLLO: Automated LLM and Lean Collaboration for Advanced Formal Reasoning</title>
      <link>https://arxiv.org/abs/2505.05758</link>
      <description>arXiv:2505.05758v2 Announce Type: cross 
Abstract: Formal reasoning and automated theorem proving constitute a challenging subfield of machine learning, in which machines are tasked with proving mathematical theorems using formal languages like Lean. A formal verification system can check whether a formal proof is correct or not almost instantaneously, but generating a completely correct formal proof with large language models (LLMs) remains a formidable task. The usual approach in the literature is to prompt the LLM many times (up to several thousands) until one of the generated proofs passes the verification system. In this work, we present APOLLO (Automated PrOof repair via LLM and Lean cOllaboration), a modular, model-agnostic pipeline that combines the strengths of the Lean compiler with an LLM's reasoning abilities to achieve better proof-generation results at a low sampling budget. Apollo directs a fully automated process in which the LLM generates proofs for theorems, a set of agents analyze the proofs, fix the syntax errors, identify the mistakes in the proofs using Lean, isolate failing sub-lemmas, utilize automated solvers, and invoke an LLM on each remaining goal with a low top-K budget. The repaired sub-proofs are recombined and reverified, iterating up to a user-controlled maximum number of attempts. On the miniF2F benchmark, we establish a new state-of-the-art accuracy of 75.0% among 7B-parameter models while keeping the sampling budget below one thousand. Moreover, Apollo raises the state-of-the-art accuracy for Goedel-Prover-SFT to 65.6% while cutting sample complexity from 25,600 to a few hundred. General-purpose models (o3-mini, o4-mini) jump from 3-7% to over 40% accuracy. Our results demonstrate that targeted, compiler-guided repair of LLM outputs yields dramatic gains in both efficiency and correctness, suggesting a general paradigm for scalable automated theorem proving.</description>
      <guid isPermaLink="false">oai:arXiv.org:2505.05758v2</guid>
      <category>cs.AI</category>
      <category>cs.LO</category>
      <pubDate>Mon, 12 May 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Azim Ospanov, Farzan Farnia, Roozbeh Yousefzadeh</dc:creator>
    </item>
    <item>
      <title>Pseudo-Boolean d-DNNF Compilation for Expressive Feature Modeling Constructs</title>
      <link>https://arxiv.org/abs/2505.05976</link>
      <description>arXiv:2505.05976v1 Announce Type: cross 
Abstract: Configurable systems typically consist of reusable assets that have dependencies between each other. To specify such dependencies, feature models are commonly used. As feature models in practice are often complex, automated reasoning is typically employed to analyze the dependencies. Here, the de facto standard is translating the feature model to conjunctive normal form (CNF) to enable employing off-the-shelf tools, such as SAT or #SAT solvers. However, modern feature-modeling dialects often contain constructs, such as cardinality constraints, that are ill-suited for conversion to CNF. This mismatch between the input of reasoning engines and the available feature-modeling dialects limits the applicability of the more expressive constructs. In this work, we shorten this gap between expressive constructs and scalable automated reasoning. Our contribution is twofold: First, we provide a pseudo-Boolean encoding for feature models, which facilitates smaller representations of commonly employed constructs compared to Boolean encoding. Second, we propose a novel method to compile pseudo-Boolean formulas to Boolean d-DNNF. With the compiled d-DNNFs, we can resort to a plethora of efficient analyses already used in feature modeling. Our empirical evaluation shows that our proposal substantially outperforms the state-of-the-art based on CNF inputs for expressive constructs. For every considered dataset representing different feature models and feature-modeling constructs, the feature models can be significantly faster translated to pseudo-Boolean than to CNF. Overall, deriving d-DNNFs from a feature model with the targeted expressive constraints can be substantially accelerated using our pseudo-Boolean approach. Furthermore, our approach is competitive on feature models with only basic constructs.</description>
      <guid isPermaLink="false">oai:arXiv.org:2505.05976v1</guid>
      <category>cs.AI</category>
      <category>cs.LO</category>
      <category>cs.SE</category>
      <pubDate>Mon, 12 May 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Chico Sundermann, Stefan Vill, Elias Kuiter, Sebastian Krieter, Thomas Th\"um, Matthias Tichy</dc:creator>
    </item>
    <item>
      <title>Functoriality of Enriched Data Types</title>
      <link>https://arxiv.org/abs/2505.06059</link>
      <description>arXiv:2505.06059v1 Announce Type: cross 
Abstract: In previous work, categories of algebras of endofunctors were shown to be enriched in categories of coalgebras of the same endofunctor, and the extra structure of that enrichment was used to define a generalization of inductive data types. These generalized inductive data types are parametrized by a coalgebra $C$, so we call them $C$-inductive data types; we call the morphisms induced by their universal property $C$-inductive functions. We extend that work by incorporating natural transformations into the theory: given a suitable natural transformation between endofunctors, we show that this induces enriched functors between their categories of algebras which preserve $C$-inductive data types and $C$-inductive functions. Such $C$-inductive data types are often finite versions of the corresponding inductive data type, and we show how our framework can extend classical initial algebra semantics to these types. For instance, we show that our theory naturally produces partially inductive functions on lists, changes in list element types, and tree pruning functions.</description>
      <guid isPermaLink="false">oai:arXiv.org:2505.06059v1</guid>
      <category>math.CT</category>
      <category>cs.LO</category>
      <pubDate>Mon, 12 May 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-sa/4.0/</dc:rights>
      <dc:creator>Lukas Mulder, Paige Randall North, Maximilien P\'eroux</dc:creator>
    </item>
    <item>
      <title>Counterfactual Explanations for MITL Violations</title>
      <link>https://arxiv.org/abs/2412.10386</link>
      <description>arXiv:2412.10386v2 Announce Type: replace 
Abstract: MITL is a temporal logic that facilitates the verification of real-time systems by expressing the critical timing constraints placed on these systems. MITL specifications can be checked against system models expressed as networks of timed automata. A violation of an MITL specification is then witnessed by a timed trace of the network, i.e., an execution consisting of both discrete actions and real-valued delays between these actions. Finding and fixing the root cause of such a violation requires significant manual effort since both discrete actions and real-time delays have to be considered. In this paper, we present an automatic explanation method that eases this process by computing the root causes for the violation of an MITL specification on the execution of a network of timed automata. This method is based on newly developed definitions of counterfactual causality tailored to networks of timed automata in the style of Halpern and Pearl's actual causality. We present and evaluate a prototype implementation that demonstrates the efficacy of our method on several benchmarks from the literature.</description>
      <guid isPermaLink="false">oai:arXiv.org:2412.10386v2</guid>
      <category>cs.LO</category>
      <category>cs.FL</category>
      <pubDate>Mon, 12 May 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:DOI>10.4230/LIPIcs.FSTTCS.2024.22</arxiv:DOI>
      <dc:creator>Bernd Finkbeiner, Felix Jahn, Julian Siber</dc:creator>
    </item>
    <item>
      <title>Logic and Computation through the Lens of Semirings</title>
      <link>https://arxiv.org/abs/2502.12939</link>
      <description>arXiv:2502.12939v2 Announce Type: replace 
Abstract: We study the expressivity and computational aspects of first-order logic and its extensions in the semiring semantics developed by Gr\"adel and Tannen. We characterize the complexity of model checking and data complexity of first-order logic both in terms of a generalization of Blum-Shub-Smale machines and arithmetic circuits defined over a semiring. In particular, we give a logical characterization of constant-depth arithmetic circuits by an extension of first-order logic that holds for any semiring that is both commutative and positive.</description>
      <guid isPermaLink="false">oai:arXiv.org:2502.12939v2</guid>
      <category>cs.LO</category>
      <category>cs.CC</category>
      <pubDate>Mon, 12 May 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Timon Barlag, Nicolas Fr\"ohlich, Teemu Hankala, Miika Hannula, Minna Hirvonen, Vivian Holzapfel, Juha Kontinen, Arne Meier, Laura Strieker</dc:creator>
    </item>
    <item>
      <title>The calculus of neo-Peircean relations</title>
      <link>https://arxiv.org/abs/2505.05306</link>
      <description>arXiv:2505.05306v2 Announce Type: replace 
Abstract: The calculus of relations was introduced by De Morgan and Peirce during the second half of the 19th century. Later developments on quantification theory by Frege and Peirce himself, paved the way to what is known today as first-order logic, causing the calculus of relations to be long forgotten. This was until 1941, when Tarski raised the question on the existence of a complete axiomatisation for it. This question found only negative answers: there is no finite axiomatisation for the calculus of relations and many of its fragments, as shown later by several no-go theorems. In this paper we show that -- by moving from traditional syntax (cartesian) to a diagrammatic one (monoidal) -- it is possible to have complete axiomatisations for the full calculus. The no-go theorems are circumvented by the fact that our calculus, named the calculus of neo-Peircean relations, is more expressive than the calculus of relations and, actually, as expressive as first-order logic. The axioms are obtained by combining two well known categorical structures: cartesian and linear bicategories.</description>
      <guid isPermaLink="false">oai:arXiv.org:2505.05306v2</guid>
      <category>cs.LO</category>
      <pubDate>Mon, 12 May 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Filippo Bonchi, Alessandro Di Giorgio, Nathan Haydon, Pawel Sobocinski</dc:creator>
    </item>
    <item>
      <title>Descriptive complexity for neural networks via Boolean networks</title>
      <link>https://arxiv.org/abs/2308.06277</link>
      <description>arXiv:2308.06277v4 Announce Type: replace-cross 
Abstract: We investigate the expressive power of neural networks from the point of view of descriptive complexity. We study neural networks that use floating-point numbers and piecewise polynomial activation functions from two perspectives: 1) the general scenario where neural networks run for an unlimited number of rounds and have unrestricted topologies, and 2) classical feedforward neural networks that have the topology of layered acyclic graphs and run for only a constant number of rounds. We characterize these neural networks via Boolean networks formalized via a recursive rule-based logic. In particular, we show that the sizes of the neural networks and the corresponding Boolean rule formulae are polynomially related. In fact, in the direction from Boolean rules to neural networks, the blow-up is only linear. Our translations result in a time delay, which is the number of rounds that it takes to simulate a single computation step. In the translation from neural networks to Boolean rules, the time delay of the resulting formula is polylogarithmic in the size of the neural network. In the converse translation, the time delay of the neural network is linear in the formula size. Ultimately, we obtain translations between neural networks, Boolean networks, the diamond-free fragment of modal substitution calculus, and a class of recursive Boolean circuits. Our translations offer a method, for almost any activation function F, of translating any neural network in our setting into an equivalent neural network that uses F at each node. This even includes linear activation functions, which is possible due to using floats rather than actual reals!</description>
      <guid isPermaLink="false">oai:arXiv.org:2308.06277v4</guid>
      <category>cs.CC</category>
      <category>cs.LO</category>
      <pubDate>Mon, 12 May 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Veeti Ahvonen, Damian Heiman, Antti Kuusisto</dc:creator>
    </item>
    <item>
      <title>JustLogic: A Comprehensive Benchmark for Evaluating Deductive Reasoning in Large Language Models</title>
      <link>https://arxiv.org/abs/2501.14851</link>
      <description>arXiv:2501.14851v2 Announce Type: replace-cross 
Abstract: Logical reasoning is a critical component of Large Language Models (LLMs), and substantial research efforts in recent years have aimed to enhance their deductive reasoning capabilities. However, existing deductive reasoning benchmarks, which are crucial for evaluating and advancing LLMs, are inadequate due to their lack of task complexity, presence of prior knowledge as a confounder, and superficial error analysis. To address these deficiencies, we introduce JustLogic, a synthetically generated deductive reasoning benchmark designed for rigorous evaluation of LLMs. JustLogic is (i) highly complex, capable of generating a diverse range of linguistic patterns, vocabulary, and argument structures; (ii) prior knowledge independent, eliminating the advantage of models possessing prior knowledge and ensuring that only deductive reasoning is used to answer questions; and (iii) capable of in-depth error analysis on the heterogeneous effects of reasoning depth and argument form on model accuracy. Our experimental results on JustLogic reveal that (i) state-of-the-art (SOTA) reasoning LLMs perform on par or better than the human average but significantly worse than the human ceiling, and (ii) SOTA non-reasoning models still underperform the human average. All code and data are available at https://github.com/michaelchen-lab/JustLogic</description>
      <guid isPermaLink="false">oai:arXiv.org:2501.14851v2</guid>
      <category>cs.CL</category>
      <category>cs.AI</category>
      <category>cs.LG</category>
      <category>cs.LO</category>
      <pubDate>Mon, 12 May 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Michael K. Chen, Xikun Zhang, Dacheng Tao</dc:creator>
    </item>
  </channel>
</rss>
