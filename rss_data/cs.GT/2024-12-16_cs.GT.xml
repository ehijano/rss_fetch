<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.GT updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.GT</link>
    <description>cs.GT updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.GT" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Mon, 16 Dec 2024 05:00:13 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Mon, 16 Dec 2024 00:00:00 -0500</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>SMEVCA: Stable Matching-based EV Charging Assignment in Subscription-Based Models</title>
      <link>https://arxiv.org/abs/2412.09948</link>
      <description>arXiv:2412.09948v1 Announce Type: new 
Abstract: The rapid shift from internal combustion engine vehicles to battery-powered electric vehicles (EVs) presents considerable challenges, such as limited charging points (CPs), unpredictable wait times, and difficulty selecting appropriate CPs. To address these challenges, we propose a novel end-to-end framework called Stable Matching EV Charging Assignment (SMEVCA) that efficiently assigns charge-seeking EVs to CPs with assistance from roadside units (RSUs). The proposed framework operates within a subscription-based model, ensuring that the subscribed EVs complete their charging within a predefined time limit enforced by a service level agreement (SLA). The framework SMEVCA employs a stable, fast, and efficient EV-CP assignment formulated as a one-to-many matching game with preferences. The matching process identifies the preferred coalition (a subset of EVs assigned to the CPs) using two strategies: (1) Preferred Coalition Greedy (PCG) that offers an efficient, locally optimal heuristic solution and (2) Preferred Coalition Dynamic (PCD) that is more computation-intensive but delivers a globally optimal coalition. Extensive simulations reveal that PCG and PCD achieve a gain of 14.6% and 20.8% over random elimination for in-network charge transferred with only 3% and 0.1% EVs unserved within the RSUs vicinity.</description>
      <guid isPermaLink="false">oai:arXiv.org:2412.09948v1</guid>
      <category>cs.GT</category>
      <category>cs.ET</category>
      <pubDate>Mon, 16 Dec 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Arindam Khanda, Anurag Satpathy, Anusha Vangala, Sajal K. Das</dc:creator>
    </item>
    <item>
      <title>Stochastic Window Mean-Payoff Games</title>
      <link>https://arxiv.org/abs/2304.11563</link>
      <description>arXiv:2304.11563v5 Announce Type: replace 
Abstract: Stochastic two-player games model systems with an environment that is both adversarial and stochastic. The adversarial part of the environment is modeled by a player (Player 2) who tries to prevent the system (Player 1) from achieving its objective. We consider finitary versions of the traditional mean-payoff objective, replacing the long-run average of the payoffs by payoff average computed over a finite sliding window. Two variants have been considered: in one variant, the maximum window length is fixed and given, while in the other, it is not fixed but is required to be bounded. For both variants, we present complexity bounds and algorithmic solutions for computing strategies for Player 1 to ensure that the objective is satisfied with positive probability, with probability 1, or with probability at least $p$, regardless of the strategy of Player 2. The solution crucially relies on a reduction to the special case of non-stochastic two-player games. We give a general characterization of prefix-independent objectives for which this reduction holds. The memory requirement for both players in stochastic games is also the same as in non-stochastic games by our reduction. Moreover, for non-stochastic games, we improve upon the upper bound for the memory requirement of Player 1 and upon the lower bound for the memory requirement of Player 2.</description>
      <guid isPermaLink="false">oai:arXiv.org:2304.11563v5</guid>
      <category>cs.GT</category>
      <pubDate>Mon, 16 Dec 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Laurent Doyen, Pranshu Gaba, Shibashis Guha</dc:creator>
    </item>
    <item>
      <title>Positional $\omega$-regular languages</title>
      <link>https://arxiv.org/abs/2401.15384</link>
      <description>arXiv:2401.15384v3 Announce Type: replace-cross 
Abstract: In the context of two-player games over graphs, a language $L$ is called positional if, in all games using $L$ as winning objective, the protagonist can play optimally using positional strategies, that is, strategies that do not depend on the history of the play. In this work, we describe the class of parity automata recognising positional languages, providing a complete characterisation of positionality for $\omega$-regular languages. As corollaries, we establish decidability of positionality in polynomial time, finite-to-infinite and 1-to-2-players lifts, and show the closure under union of prefix-independent positional objectives, answering a conjecture by Kopczy\'nski in the $\omega$-regular case.</description>
      <guid isPermaLink="false">oai:arXiv.org:2401.15384v3</guid>
      <category>cs.FL</category>
      <category>cs.GT</category>
      <category>cs.LO</category>
      <pubDate>Mon, 16 Dec 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Antonio Casares, Pierre Ohlmann</dc:creator>
    </item>
  </channel>
</rss>
