<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.FL updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.FL</link>
    <description>cs.FL updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.FL" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Fri, 24 May 2024 04:00:11 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Fri, 24 May 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>Nominal Tree Automata With Name Allocation</title>
      <link>https://arxiv.org/abs/2405.14272</link>
      <description>arXiv:2405.14272v1 Announce Type: new 
Abstract: Data trees serve as an abstraction of structured data, such as XML documents. A number of specification formalisms for languages of data trees have been developed, many of them adhering to the paradigm of register automata, which is based on storing data values encountered on the tree in registers for subsequent comparison with further data values. Already on word languages, the expressiveness of such automata models typically increases with the power of control (e.g. deterministic, non-deterministic, alternating). Language inclusion is typically undecidable for non-deterministic or alternating models unless the number of registers is radically restricted, and even then often remains non-elementary. We present an automaton model for data trees that retains a reasonable level of expressiveness, in particular allows non-determinism and any number of registers, while admitting language inclusion checking in elementary complexity, in fact in parametrized exponential time. We phrase the description of our automaton model in the language of nominal sets, building on the recently introduced paradigm of explicit name allocation in nominal automata.</description>
      <guid isPermaLink="false">oai:arXiv.org:2405.14272v1</guid>
      <category>cs.FL</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Simon Prucker, Lutz Schr\"oder</dc:creator>
    </item>
    <item>
      <title>Non-Deterministic Planning for Hyperproperty Verification</title>
      <link>https://arxiv.org/abs/2405.13488</link>
      <description>arXiv:2405.13488v1 Announce Type: cross 
Abstract: Non-deterministic planning aims to find a policy that achieves a given objective in an environment where actions have uncertain effects, and the agent - potentially - only observes parts of the current state. Hyperproperties are properties that relate multiple paths of a system and can, e.g., capture security and information-flow policies. Popular logics for expressing temporal hyperproperties - such as HyperLTL - extend LTL by offering selective quantification over executions of a system. In this paper, we show that planning offers a powerful intermediate language for the automated verification of hyperproperties. Concretely, we present an algorithm that, given a HyperLTL verification problem, constructs a non-deterministic multi-agent planning instance (in the form of a QDec-POMDP) that, when admitting a plan, implies the satisfaction of the verification problem. We show that for large fragments of HyperLTL, the resulting planning instance corresponds to a classical, FOND, or POND planning problem. We implement our encoding in a prototype verification tool and report on encouraging experimental results.</description>
      <guid isPermaLink="false">oai:arXiv.org:2405.13488v1</guid>
      <category>cs.LO</category>
      <category>cs.AI</category>
      <category>cs.FL</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Raven Beutner, Bernd Finkbeiner</dc:creator>
    </item>
    <item>
      <title>A Language-Theoretic Approach to the Heapability of Signed Permutations</title>
      <link>https://arxiv.org/abs/2405.14275</link>
      <description>arXiv:2405.14275v1 Announce Type: cross 
Abstract: We investigate a signed version of the Hammersley process, a discrete process on words related to a property of integer sequences called heapability (Byers et al., ANALCO 2011). The specific version that we investigate corresponds to a version of this property for signed sequences.
  We give a characterization of the words that can appear as images the signed Hammersley process. In particular we show that the language of such words is the intersection of two deterministic one-counter languages.</description>
      <guid isPermaLink="false">oai:arXiv.org:2405.14275v1</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <category>cs.FL</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Gabriel Istrate</dc:creator>
    </item>
    <item>
      <title>The categorical contours of the Chomsky-Sch\"utzenberger representation theorem</title>
      <link>https://arxiv.org/abs/2405.14703</link>
      <description>arXiv:2405.14703v1 Announce Type: cross 
Abstract: We develop fibrational perspectives on context-free grammars and on finite state automata over categories and operads. A generalized CFG is a functor from a free colored operad (= multicategory) generated by a pointed finite species into an arbitrary base operad: this encompasses classical CFGs by taking the base to be a certain operad constructed from a free monoid, as an instance of a more general construction of an operad of spliced arrows $\mathcal{W}\,\mathcal{C}$ for any category $\mathcal{C}$. A generalized NDFA is a functor satisfying the unique lifting of factorizations and finite fiber properties, from an arbitrary bipointed category or pointed operad: this encompasses classical word automata and tree automata without $\epsilon$-transitions, but also automata over non-free categories and operads. We show that generalized context-free and regular languages satisfy suitable generalizations of many of the usual closure properties, and in particular we give a simple conceptual proof that context-free languages are closed under intersection with regular languages. Finally, we observe that the splicing functor $\mathcal{W} : Cat \to Oper$ admits a left adjoint $\mathcal{C} : Oper \to Cat$, which we call the contour category construction since the arrows of $\mathcal{C}\,\mathcal{O}$ have a geometric interpretation as oriented contours of operations of $\mathcal{O}$. A direct consequence of the contour / splicing adjunction is that every pointed finite species induces a universal CFG generating a language of tree contour words. This leads us to a generalization of the Chomsky-Sch\"utzenberger Representation Theorem, establishing that a subset of a homset $L \subseteq \mathcal{C}(A,B)$ is a CFL of arrows iff it is a functorial image of the intersection of a $\mathcal{C}$-chromatic tree contour language with a regular language.</description>
      <guid isPermaLink="false">oai:arXiv.org:2405.14703v1</guid>
      <category>math.CT</category>
      <category>cs.FL</category>
      <category>cs.LO</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Paul-Andr\'e Melli\`es, Noam Zeilberger</dc:creator>
    </item>
    <item>
      <title>Masked Hard-Attention Transformers Recognize Exactly the Star-Free Languages</title>
      <link>https://arxiv.org/abs/2310.13897</link>
      <description>arXiv:2310.13897v3 Announce Type: replace 
Abstract: The expressive power of transformers over inputs of unbounded size can be studied through their ability to recognize classes of formal languages. We consider transformer encoders with hard attention (in which all attention is focused on exactly one position) and strict future masking (in which each position only attends to positions strictly to its left), and prove that they are equivalent to linear temporal logic (LTL), which defines exactly the star-free languages. A key technique is the use of Boolean RASP as a convenient intermediate language between transformers and LTL. We then take numerous results known for LTL and apply them to transformers, characterizing how position embeddings, strict masking, and depth increase expressive power.</description>
      <guid isPermaLink="false">oai:arXiv.org:2310.13897v3</guid>
      <category>cs.FL</category>
      <category>cs.LG</category>
      <category>cs.LO</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Andy Yang, David Chiang, Dana Angluin</dc:creator>
    </item>
    <item>
      <title>Languages of Higher-Dimensional Timed Automata</title>
      <link>https://arxiv.org/abs/2401.17444</link>
      <description>arXiv:2401.17444v2 Announce Type: replace 
Abstract: We present a new language semantics for real-time concurrency. Its operational models are higher-dimensional timed automata (HDTAs), a generalization of both higher-dimensional automata and timed automata. We define languages of HDTAs as sets of interval-timed pomsets with interfaces. As an application, we show that language inclusion of HDTAs is undecidable. On the other hand, using a region construction we can show that untimings of HDTA languages have enough regularity so that untimed language inclusion is decidable.</description>
      <guid isPermaLink="false">oai:arXiv.org:2401.17444v2</guid>
      <category>cs.FL</category>
      <category>cs.LO</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Amazigh Amrane, Hugo Bazille, Emily Clement, Uli Fahrenberg</dc:creator>
    </item>
    <item>
      <title>Asymptotic bounds for the number of closed and privileged words</title>
      <link>https://arxiv.org/abs/2206.14273</link>
      <description>arXiv:2206.14273v3 Announce Type: replace-cross 
Abstract: A word~$w$ has a border $u$ if $u$ is a non-empty proper prefix and suffix of $u$. A word~$w$ is said to be \emph{closed} if $w$ is of length at most $1$ or if $w$ has a border that occurs exactly twice in $w$. A word~$w$ is said to be \emph{privileged} if $w$ is of length at most $1$ or if $w$ has a privileged border that occurs exactly twice in $w$. Let $C_k(n)$ (resp.~$P_k(n)$) be the number of length-$n$ closed (resp. privileged) words over a $k$-letter alphabet. In this paper, we improve existing upper and lower bounds on $C_k(n)$ and $P_k(n)$. We completely resolve the asymptotic behaviour of $C_k(n)$. We also nearly completely resolve the asymptotic behaviour of $P_k(n)$ by giving a family of upper and lower bounds that are separated by a factor that grows arbitrarily slowly.</description>
      <guid isPermaLink="false">oai:arXiv.org:2206.14273v3</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <category>cs.FL</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Daniel Gabric</dc:creator>
    </item>
    <item>
      <title>MUSTARD: Mastering Uniform Synthesis of Theorem and Proof Data</title>
      <link>https://arxiv.org/abs/2402.08957</link>
      <description>arXiv:2402.08957v3 Announce Type: replace-cross 
Abstract: Recent large language models (LLMs) have witnessed significant advancement in various tasks, including mathematical reasoning and theorem proving. As these two tasks require strict and formal multi-step inference, they are appealing domains for exploring the reasoning ability of LLMs but still face important challenges. Previous studies such as Chain-of-Thought (CoT) have revealed the effectiveness of intermediate steps guidance. However, such step-wise annotation requires heavy labor, leading to insufficient training steps for current benchmarks. To fill this gap, this work introduces MUSTARD, a data generation framework that masters uniform synthesis of theorem and proof data of high quality and diversity. MUSTARD synthesizes data in three stages: (1) It samples a few mathematical concept seeds as the problem category. (2) Then, it prompts a generative language model with the sampled concepts to obtain both the problems and their step-wise formal solutions. (3) Lastly, the framework utilizes a proof assistant (e.g., Lean Prover) to filter the valid proofs. With the proposed MUSTARD, we present a theorem-and-proof benchmark MUSTARDSAUCE with 5,866 valid data points. Each data point contains an informal statement, an informal proof, and a translated formal proof that passes the prover validation. We perform extensive analysis and demonstrate that MUSTARD generates validated high-quality step-by-step data. We further apply the MUSTARDSAUCE for fine-tuning smaller language models. The fine-tuned Llama 2-7B achieves a 15.41% average relative performance gain in automated theorem proving, and 8.18% in math word problems. Codes and data are available at https://github.com/Eleanor-H/MUSTARD.</description>
      <guid isPermaLink="false">oai:arXiv.org:2402.08957v3</guid>
      <category>cs.AI</category>
      <category>cs.CL</category>
      <category>cs.FL</category>
      <category>cs.LG</category>
      <category>cs.PL</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <arxiv:journal_reference>ICLR 2024 spotlight</arxiv:journal_reference>
      <dc:creator>Yinya Huang, Xiaohan Lin, Zhengying Liu, Qingxing Cao, Huajian Xin, Haiming Wang, Zhenguo Li, Linqi Song, Xiaodan Liang</dc:creator>
    </item>
    <item>
      <title>Equivariant ideals of polynomials</title>
      <link>https://arxiv.org/abs/2402.17604</link>
      <description>arXiv:2402.17604v3 Announce Type: replace-cross 
Abstract: We study existence and computability of finite bases for ideals of polynomials over infinitely many variables. In our setting, variables come from a countable logical structure A, and embeddings from A to A act on polynomials by renaming variables. First, we give a sufficient and necessary condition for A to guarantee the following generalisation of Hilbert's Basis Theorem: every polynomial ideal which is equivariant, i.e. invariant under renaming of variables, is finitely generated. Second, we develop an extension of classical Buchberger's algorithm to compute a Gr\"obner basis of a given equivariant ideal. This implies decidability of the membership problem for equivariant ideals. Finally, we sketch upon various applications of these results to register automata, Petri nets with data, orbit-finitely generated vector spaces, and orbit-finite systems of linear equations.</description>
      <guid isPermaLink="false">oai:arXiv.org:2402.17604v3</guid>
      <category>cs.LO</category>
      <category>cs.FL</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Arka Ghosh, S{\l}awomir Lasota</dc:creator>
    </item>
  </channel>
</rss>
