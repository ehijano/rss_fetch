<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.FL updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.FL</link>
    <description>cs.FL updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.FL" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Mon, 01 Sep 2025 04:01:24 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Mon, 01 Sep 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>A Linear-time Simulation of Deterministic $d$-Limited Automata</title>
      <link>https://arxiv.org/abs/2312.01896</link>
      <description>arXiv:2312.01896v2 Announce Type: replace 
Abstract: A $d$-limited automaton is a Turing machine that may rewrite each input cell at most~$d$ times. Hibbard (1967) showed that for every $d \geq 2$ such automata recognize all context-free languages and that deterministic $d$-limited automata form a strict hierarchy. Later, Pighizzini and Pisoni proved that the second level of this hierarchy coincides with deterministic context-free languages (DCFLs). We present a linear-time recognition algorithm for deterministic $d$-limited automata in the RAM model, thereby extending linear-time recognition beyond DCFLs. We further generalize this result to deterministic $d(n)$-limited automata, where the bound $d$ may depend on the input length $n$. In addition, we prove an $O(n \cdot k \cdot d(n) + m)$ bound for the membership problem, where the input includes both the word and the automaton's description, with $m$ denoting the size of the description and $k$ the number of states.</description>
      <guid isPermaLink="false">oai:arXiv.org:2312.01896v2</guid>
      <category>cs.FL</category>
      <pubDate>Mon, 01 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Alexander Rubtsov</dc:creator>
    </item>
    <item>
      <title>Tight Bounds for the Number of Absent Subsequences</title>
      <link>https://arxiv.org/abs/2407.18599</link>
      <description>arXiv:2407.18599v2 Announce Type: replace 
Abstract: A {\em subsequence} of a word $w$ is a word $u$ that can be obtained by deleting some letters from $w$ while maintaining the relative order of the remaining letters, e.g., $\mathtt{lala}$ is a subsequence of $\mathtt{alfalfa}$. A word, over some alphabet $\Sigma$, which has all possible words of length $\iota$ over $\Sigma$ as subsequences is called $\iota$-universal, and the largest $\iota$ for which this holds is called the universality index of $w$, and denoted $\iota(w)$. Moreover, words that are not subsequences of $w$ are called absent subsequences (AS) of $w$, and their investigation was started in (Kosche et al., 2022). In this paper, we present tight bounds on the number of AS of a given length $k$ among all words with the same universality index $\iota$. For both the lower and upper bound, we construct words that have, respectively, a minimal and maximal number of absent subsequences of the respective length $k$, and, in the case of the lower bound, we provide the exact number of missing subsequences as a closed form. Finally, we present efficient enumeration algorithms for the set of subsequences of given length of a word: we give a novel, optimal enumeration algorithm with output linear delay of this set of subsequences, with preprocessing time $O(|w|)$, which is further improved to an incremental enumeration algorithm with $O(1)$ delay of this set of subsequences, with preprocessing time $O(|w|)$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.18599v2</guid>
      <category>cs.FL</category>
      <category>math.CO</category>
      <pubDate>Mon, 01 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Duncan Adamson, Pamela Fleischmann, Annika Huch, Florin Manea, Paul Sarnighausen-Cahn, Max Wiedenh\"oft</dc:creator>
    </item>
    <item>
      <title>Semiflows, Home Spaces and Home States, Applications to the Analysis of Parameterized Petri Nets</title>
      <link>https://arxiv.org/abs/2504.03477</link>
      <description>arXiv:2504.03477v2 Announce Type: replace 
Abstract: After rapidly recalling basic notations relatively to semiflows and Petri Nets, we define F, the set of semiflows over Z that we associate with a specific class of invariants. We then focus on F+, the set of semiflows with non-negative coordinates which are important to study the behavior of a Petri Net. We recall known behavioral properties attached to semiflows in F+ that we associate with two sets of bounds regarding boundedness then liveness. We recall the notions of home states and home spaces for which we regrouped old and new properties. We introduce a new result on the decidability of liveness under the existence of a home state.
  The notions of minimality of semiflows and minimality of supports allow us to define generating sets that are particularly critical to develop an effective analysis of invariants and behavioral properties of Petri Nets such as boundedness or even liveness.
  We also recall three known decomposition theorems considering N, Q+, and Q respectively where the decomposition over N is being improved with a necessary and sufficient condition.
  We use the notion the notion of generating sets to show that extremums linked to the set of bounds mentioned here above, are indeed computable by providing their values.
  As examples, we present two related Petri Net modeling arithmetic operations (one of which represents an Euclidean division), illustrating how results on semiflows and home spaces can be methodically used in efficiently analyzing the liveness of the parameterized model and underlining the efficiency brought by the combination of these results.</description>
      <guid isPermaLink="false">oai:arXiv.org:2504.03477v2</guid>
      <category>cs.FL</category>
      <pubDate>Mon, 01 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Gerard Memmi</dc:creator>
    </item>
    <item>
      <title>Preserving self-similarity in free products of semigroups</title>
      <link>https://arxiv.org/abs/2003.12810</link>
      <description>arXiv:2003.12810v4 Announce Type: replace-cross 
Abstract: We improve on earlier results on the closure under free products of the class of automaton semigroups. We consider partial automata and show that the free product of two self-similar semigroups (or automaton semigroups) is self-similar (an automaton semigroup) if there is a homomorphism from one of the base semigroups to the other. The construction used is computable and yields further consequences. One of them is that we can adjoin a free generator to any self-similar semigroup (or automaton semigroup) and preserve the property of self-similarity (or being an automaton semigroup).
  The existence of a homomorphism between two semigroups is a very lax requirement; in particular, it is satisfied if one of the semigroups contains an idempotent. To explore the limits of this requirement, we show that no simple or $0$-simple idempotent-free semigroup is a finitely generated self-similar semigroup (or an automaton semigroup). Furthermore, we give an example of a pair of residually finite semigroups without a homomorphism from one to the other.</description>
      <guid isPermaLink="false">oai:arXiv.org:2003.12810v4</guid>
      <category>math.GR</category>
      <category>cs.FL</category>
      <pubDate>Mon, 01 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <arxiv:DOI>10.1142/S0218196725500353</arxiv:DOI>
      <dc:creator>Tara Macalister Brough, Jan Philipp W\"achter, Janette Welker</dc:creator>
    </item>
  </channel>
</rss>
