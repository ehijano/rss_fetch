<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.SC updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.SC</link>
    <description>cs.SC updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.SC" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Wed, 04 Jun 2025 01:54:16 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Tue, 03 Jun 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Software Portability for Computer Algebra</title>
      <link>https://arxiv.org/abs/2506.01864</link>
      <description>arXiv:2506.01864v1 Announce Type: new 
Abstract: We have been involved in the creation of multiple software systems for computer algebra, including Reduce, Maple, Axiom and Aldor as well as a number of smaller specialised programs. We relate observations on how the meaning of software portability has changed over time and how it continues to evolve. We describe how the systems with which we have first-hand experience have achieved portability, how the central issues have changed over time and the challenges that remain.</description>
      <guid isPermaLink="false">oai:arXiv.org:2506.01864v1</guid>
      <category>cs.SC</category>
      <pubDate>Tue, 03 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Arthur C. Norman, Stephen M. Watt</dc:creator>
    </item>
    <item>
      <title>Determining unit groups and $\mathrm{K}_1$ of finite rings</title>
      <link>https://arxiv.org/abs/2506.00266</link>
      <description>arXiv:2506.00266v1 Announce Type: cross 
Abstract: We consider the computational problem of determining the unit group of a finite ring, by which we mean the computation of a finite presentation together with an algorithm to express units as words in the generators. We show that the problem is equivalent to the number theoretic problems of factoring integers and solving discrete logarithms in finite fields. A similar equivalence is shown for the problem of determining the abelianization of the unit group or the first $K$-group of finite rings.</description>
      <guid isPermaLink="false">oai:arXiv.org:2506.00266v1</guid>
      <category>math.NT</category>
      <category>cs.SC</category>
      <category>math.KT</category>
      <category>math.RA</category>
      <pubDate>Tue, 03 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Tommy Hofmann</dc:creator>
    </item>
    <item>
      <title>Choices and their Provenance: Explaining Stable Solutions of Abstract Argumentation Frameworks</title>
      <link>https://arxiv.org/abs/2506.01087</link>
      <description>arXiv:2506.01087v1 Announce Type: cross 
Abstract: The rule $\mathrm{Defeated}(x) \leftarrow \mathrm{Attacks}(y,x),\, \neg \, \mathrm{Defeated}(y)$, evaluated under the well-founded semantics (WFS), yields a unique 3-valued (skeptical) solution of an abstract argumentation framework (AF). An argument $x$ is defeated ($\mathrm{OUT}$) if there exists an undefeated argument $y$ that attacks it. For 2-valued (stable) solutions, this is the case iff $y$ is accepted ($\mathrm{IN}$), i.e., if all of $y$'s attackers are defeated. Under WFS, arguments that are neither accepted nor defeated are undecided ($\mathrm{UNDEC}$). As shown in prior work, well-founded solutions (a.k.a. grounded labelings) "explain themselves": The provenance of arguments is given by subgraphs (definable via regular path queries) rooted at the node of interest. This provenance is closely related to winning strategies of a two-player argumentation game.
  We present a novel approach for extending this provenance to stable AF solutions. Unlike grounded solutions, which can be constructed via a bottom-up alternating fixpoint procedure, stable models often involve non-deterministic choice as part of the search for models. Thus, the provenance of stable solutions is of a different nature, and reflects a more expressive generate &amp; test paradigm. Our approach identifies minimal sets of critical attacks, pinpointing choices and assumptions made by a stable model. These critical attack edges provide additional insights into the provenance of an argument's status, combining well-founded derivation steps with choice steps. Our approach can be understood as a form of diagnosis that finds minimal "repairs" to an AF graph such that the well-founded solution of the repaired graph coincides with the desired stable model of the original AF graph.</description>
      <guid isPermaLink="false">oai:arXiv.org:2506.01087v1</guid>
      <category>cs.AI</category>
      <category>cs.SC</category>
      <pubDate>Tue, 03 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <dc:creator>Bertram Lud\"ascher, Yilin Xia, Shawn Bowers</dc:creator>
    </item>
    <item>
      <title>SynPAT: A System for Generating Synthetic Physical Theories with Data</title>
      <link>https://arxiv.org/abs/2505.00878</link>
      <description>arXiv:2505.00878v2 Announce Type: replace 
Abstract: Machine-assisted methods for discovering new physical laws of nature, starting from a given background theory and data, have recently emerged, and seem to hold the promise of someday advancing our understanding of the physical world. To address these needs, we have developed SynPAT, a system for generating synthetic physical theories comprising (i) a set of consistent axioms, (ii) a symbolic expression that is a consequence of the axioms and the challenge to be discovered, and (iii) noisy data that approximately match the consequence. We also generate theories that do not correctly predict the consequence. We give a detailed description of the inner workings of SynPAT and its various capabilities. We also report on our benchmarking of several open-source symbolic regression systems using our generated theories and data.</description>
      <guid isPermaLink="false">oai:arXiv.org:2505.00878v2</guid>
      <category>cs.SC</category>
      <pubDate>Tue, 03 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Jonathan Lenchner, Karan Srivastava, Joao Goncalves, Lior Horesh</dc:creator>
    </item>
  </channel>
</rss>
