<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.MS updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.MS</link>
    <description>cs.MS updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.MS" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Mon, 06 Oct 2025 04:01:01 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Mon, 06 Oct 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>Analyzing Computational Approaches for Differential Equations: A Study of MATLAB, Mathematica, and Maple</title>
      <link>https://arxiv.org/abs/2510.02346</link>
      <description>arXiv:2510.02346v1 Announce Type: new 
Abstract: Differential equations are fundamental to modeling dynamic systems in physics, engineering, biology, and economics. While analytical solutions are ideal, most real-world problems necessitate numerical approaches. This study conducts a detailed comparative analysis of three leading computational software packages: MATLAB, Mathematica, and Maple in solving various differential equations, including ordinary differential equations (ODEs), partial differential equations (PDEs), and systems of differential equations. The evaluation criteria include: Syntax and Usability (ease of implementation), Solution Accuracy (compared to analytical solutions), Computational Efficiency (execution time and resource usage), Visualization Capabilities (quality and flexibility of graphical outputs), Specialized Features (unique tools for specific problem types). Benchmark problems are solved across all three platforms, followed by a discussion on their respective strengths, weaknesses, and ideal use cases. The paper concludes with recommendations for selecting the most suitable software based on problem requirements</description>
      <guid isPermaLink="false">oai:arXiv.org:2510.02346v1</guid>
      <category>cs.MS</category>
      <pubDate>Mon, 06 Oct 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:DOI>10.5281/zenodo.17068759</arxiv:DOI>
      <dc:creator>Arhonefe Joseph Ogethakpo, Ignatius Nkonyeasua Njoseh</dc:creator>
    </item>
    <item>
      <title>On the energy efficiency of sparse matrix computations on multi-GPU clusters</title>
      <link>https://arxiv.org/abs/2510.02878</link>
      <description>arXiv:2510.02878v1 Announce Type: cross 
Abstract: We investigate the energy efficiency of a library designed for parallel computations with sparse matrices. The library leverages high-performance, energy-efficient Graphics Processing Unit (GPU) accelerators to enable large-scale scientific applications. Our primary development objective was to maximize parallel performance and scalability in solving sparse linear systems whose dimensions far exceed the memory capacity of a single node. To this end, we devised methods that expose a high degree of parallelism while optimizing algorithmic implementations for efficient multi-GPU usage. Previous work has already demonstrated the library's performance efficiency on large-scale systems comprising thousands of NVIDIA GPUs, achieving improvements over state-of-the-art solutions. In this paper, we extend those results by providing energy profiles that address the growing sustainability requirements of modern HPC platforms. We present our methodology and tools for accurate runtime energy measurements of the library's core components and discuss the findings. Our results confirm that optimizing GPU computations and minimizing data movement across memory and computing nodes reduces both time-to-solution and energy consumption. Moreover, we show that the library delivers substantial advantages over comparable software frameworks on standard benchmarks.</description>
      <guid isPermaLink="false">oai:arXiv.org:2510.02878v1</guid>
      <category>cs.DC</category>
      <category>cs.MS</category>
      <category>cs.PF</category>
      <pubDate>Mon, 06 Oct 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Massimo Bernaschi, Alessandro Celestini, Pasqua D'Ambra, Giorgio Richelli</dc:creator>
    </item>
    <item>
      <title>Progressive Bound Strengthening via Doubly Nonnegative Cutting Planes for Nonconvex Quadratic Programs</title>
      <link>https://arxiv.org/abs/2510.02948</link>
      <description>arXiv:2510.02948v1 Announce Type: cross 
Abstract: We introduce a cutting-plane framework for nonconvex quadratic programs (QPs) that progressively tightens convex relaxations. Our approach leverages the doubly nonnegative (DNN) relaxation to compute strong lower bounds and generate separating cuts, which are iteratively added to improve the relaxation. We establish that, at any Karush-Kuhn-Tucker (KKT) point satisfying a second-order sufficient condition, a valid cut can be obtained by solving a linear semidefinite program (SDP), and we devise a finite-termination local search procedure to identify such points. Extensive computational experiments on both benchmark and synthetic instances demonstrate that our approach yields tighter bounds and consistently outperforms leading commercial and academic solvers in terms of efficiency, robustness, and scalability. Notably, on a standard desktop, our algorithm reduces the relative optimality gap to 0.01% on 138 out of 140 instances of dimension 100 within one hour, without resorting to branch-and-bound.</description>
      <guid isPermaLink="false">oai:arXiv.org:2510.02948v1</guid>
      <category>math.OC</category>
      <category>cs.MS</category>
      <pubDate>Mon, 06 Oct 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Zheng Qu, Defeng Sun, Jintao Xu</dc:creator>
    </item>
    <item>
      <title>Valid Inequalities for Mixed Integer Bilevel Linear Optimization Problems</title>
      <link>https://arxiv.org/abs/2510.02998</link>
      <description>arXiv:2510.02998v1 Announce Type: cross 
Abstract: Despite the success of branch-and-cut methods for solving mixed integer bilevel linear optimization problems (MIBLPs) in practice, there are still gaps in both the theory and practice surrounding these methods. In the first part of this paper, we lay out a basic theory of valid inequalities and cutting-plane methods for MIBLPs that parallels the existing theory for mixed integer linear optimization problems (MILPs). We provide a general scheme for classifying valid inequalities and illustrate how the known classes of valid inequalities fit into this categorization, as well as generalizing several existing classes.
  In the second part of the paper, we assess the computational effectiveness of these valid inequalities and discuss the myriad challenges that arise in integrating methods of dynamically generating inequalities valid for MIBLPs into a branch-and-cut algorithms originally designed for solving MILPs. Although branch-and-cut methods for solving for MIBLPs are in principle straightforward generalizations of those used for MILP, there are subtle but important differences and there remain many unanswered questions regarding how to suitably modify control mechanisms and other algorithmic details in order to ensure performance in the MIBLP setting. We demonstrate that performance of version 1.2 of the open-source solver MibS was substantially improved over that of version 1.1 through a variety of improvements to the previous implementation.</description>
      <guid isPermaLink="false">oai:arXiv.org:2510.02998v1</guid>
      <category>math.OC</category>
      <category>cs.MS</category>
      <pubDate>Mon, 06 Oct 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Sahar Tahernejad, Ted K. Ralphs</dc:creator>
    </item>
  </channel>
</rss>
