<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.CG updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.CG</link>
    <description>cs.CG updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.CG" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Wed, 21 May 2025 01:49:24 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Tue, 20 May 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>Learning Pareto-Optimal Rewards from Noisy Preferences: A Framework for Multi-Objective Inverse Reinforcement Learning</title>
      <link>https://arxiv.org/abs/2505.11864</link>
      <description>arXiv:2505.11864v1 Announce Type: cross 
Abstract: As generative agents become increasingly capable, alignment of their behavior with complex human values remains a fundamental challenge. Existing approaches often simplify human intent through reduction to a scalar reward, overlooking the multi-faceted nature of human feedback. In this work, we introduce a theoretical framework for preference-based Multi-Objective Inverse Reinforcement Learning (MO-IRL), where human preferences are modeled as latent vector-valued reward functions. We formalize the problem of recovering a Pareto-optimal reward representation from noisy preference queries and establish conditions for identifying the underlying multi-objective structure. We derive tight sample complexity bounds for recovering $\epsilon$-approximations of the Pareto front and introduce a regret formulation to quantify suboptimality in this multi-objective setting. Furthermore, we propose a provably convergent algorithm for policy optimization using preference-inferred reward cones. Our results bridge the gap between practical alignment techniques and theoretical guarantees, providing a principled foundation for learning aligned behaviors in a high-dimension and value-pluralistic environment.</description>
      <guid isPermaLink="false">oai:arXiv.org:2505.11864v1</guid>
      <category>cs.LG</category>
      <category>cs.AI</category>
      <category>cs.CG</category>
      <pubDate>Tue, 20 May 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Kalyan Cherukuri, Aarav Lala</dc:creator>
    </item>
    <item>
      <title>AutoGEEval: A Multimodal and Automated Framework for Geospatial Code Generation on GEE with Large Language Models</title>
      <link>https://arxiv.org/abs/2505.12900</link>
      <description>arXiv:2505.12900v1 Announce Type: cross 
Abstract: Geospatial code generation is emerging as a key direction in the integration of artificial intelligence and geoscientific analysis. However, there remains a lack of standardized tools for automatic evaluation in this domain. To address this gap, we propose AutoGEEval, the first multimodal, unit-level automated evaluation framework for geospatial code generation tasks on the Google Earth Engine (GEE) platform powered by large language models (LLMs). Built upon the GEE Python API, AutoGEEval establishes a benchmark suite (AutoGEEval-Bench) comprising 1325 test cases that span 26 GEE data types. The framework integrates both question generation and answer verification components to enable an end-to-end automated evaluation pipeline-from function invocation to execution validation. AutoGEEval supports multidimensional quantitative analysis of model outputs in terms of accuracy, resource consumption, execution efficiency, and error types. We evaluate 18 state-of-the-art LLMs-including general-purpose, reasoning-augmented, code-centric, and geoscience-specialized models-revealing their performance characteristics and potential optimization pathways in GEE code generation. This work provides a unified protocol and foundational resource for the development and assessment of geospatial code generation models, advancing the frontier of automated natural language to domain-specific code translation.</description>
      <guid isPermaLink="false">oai:arXiv.org:2505.12900v1</guid>
      <category>cs.SE</category>
      <category>cs.AI</category>
      <category>cs.CG</category>
      <category>cs.CL</category>
      <category>cs.DB</category>
      <pubDate>Tue, 20 May 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Shuyang Hou, Zhangxiao Shen, Huayi Wu, Jianyuan Liang, Haoyue Jiao, Yaxian Qing, Xiaopu Zhang, Xu Li, Zhipeng Gui, Xuefeng Guan, Longgang Xiang</dc:creator>
    </item>
    <item>
      <title>Counts and end-curves in two-parameter persistence</title>
      <link>https://arxiv.org/abs/2505.13412</link>
      <description>arXiv:2505.13412v1 Announce Type: cross 
Abstract: Given a finite dimensional, bigraded module over the polynomial ring in two variables, we define its two-parameter count, a natural number, and its end-curves, a set of plane curves. These are two-dimensional analogues of the notions of bar-count and endpoints of singly-graded modules over the polynomial ring in one variable, from persistence theory. We show that our count is the unique one satisfying certain natural conditions; as a consequence, several inclusion-exclusion-type formulas in two-parameter persistence yield the same positive number, which equals our count, and which in turn equals the number of end-curves, giving geometric meaning to this count. We show that the end-curves determine the classical Betti tables by showing that they interpolate between generators, relations, and syzygies. Using the band representations of a certain string algebra, we show that the set of end-curves admits a canonical partition, where each part forms a closed curve on the plane; we call this the boundary of the module. As an invariant, the boundary is neither weaker nor stronger than the rank invariant, but, in contrast to the rank invariant, it is a complete invariant on the set of spread-decomposable representations. Our results connect several lines of work in multiparameter persistence, and their extension to modules over the real-exponent polynomial ring in two variables relates to two-dimensional Morse theory.</description>
      <guid isPermaLink="false">oai:arXiv.org:2505.13412v1</guid>
      <category>math.RT</category>
      <category>cs.CG</category>
      <category>math.AC</category>
      <category>math.AT</category>
      <pubDate>Tue, 20 May 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Thomas Br\"ustle, Steve Oudot, Luis Scoccola, Hugh Thomas</dc:creator>
    </item>
    <item>
      <title>VisDiff: SDF-Guided Polygon Generation for Visibility Reconstruction and Recognition</title>
      <link>https://arxiv.org/abs/2410.05530</link>
      <description>arXiv:2410.05530v3 Announce Type: replace 
Abstract: The ability to capture rich representations of combinatorial structures has enabled the application of machine learning to tasks such as analysis and generation of floorplans, terrains, images, and animations. Recent work has primarily focused on understanding structures with well-defined features, neighborhoods, or underlying distance metrics, while those lacking such characteristics remain largely unstudied. Examples of these combinatorial structures can be found in polygons, where a small change in the vertex locations causes a significant rearrangement of the combinatorial structure, expressed as a visibility or triangulation graphs. Current representation learning approaches fail to capture structures without well-defined features and distance metrics. In this paper, we study the open problem of Visibility Reconstruction: Given a visibility graph $G$, construct a polygon $P$ whose visibility graph is $G$.
  We introduce VisDiff, a novel diffusion-based approach to generate polygon $P$ from the input visibility graph $G$. The main novelty of our approach is that, rather than generating the polygon's vertex set directly, we first estimate the signed distance function (SDF) associated with the polygon. The SDF is then used to extract the vertex location representing the final polygon. We show that going through the SDF allows VisDiff to learn the visibility relationship much more effectively than generating vertex locations directly. In order to train VisDiff, we create a carefully curated dataset. We use this dataset to benchmark our method and achieve 26% improvement in F1-Score over standard methods as well as state of the art approaches.</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.05530v3</guid>
      <category>cs.CG</category>
      <category>cs.LG</category>
      <pubDate>Tue, 20 May 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Rahul Moorthy, Jun-Jee Chao, Volkan Isler</dc:creator>
    </item>
    <item>
      <title>Drawing Reeb Graphs</title>
      <link>https://arxiv.org/abs/2504.21329</link>
      <description>arXiv:2504.21329v2 Announce Type: replace 
Abstract: Reeb graphs are simple topological descriptors with applications in many areas like topological data analysis and computational geometry. Despite their prevalence, visualization of Reeb graphs has received less attention. In this paper, we bridge an essential gap in the literature by exploring the complexity of drawing Reeb graphs. Specifically, we demonstrate that Reeb graph crossing number minimization is NP-hard, both for straight-lined and curved edges. On the other hand, we identify specific classes of Reeb graphs, namely paths and caterpillars, for which crossing-free drawings exist. We also give an optimal algorithm for drawing cycle-shaped Reeb graphs with the least number of crossings and provide initial observations on the complexities of drawing multi-cycle Reeb graphs. We hope that this work establishes the foundation for an understanding of the graph drawing challenges inherent in Reeb graph visualization and paves the way for future work in this area.</description>
      <guid isPermaLink="false">oai:arXiv.org:2504.21329v2</guid>
      <category>cs.CG</category>
      <pubDate>Tue, 20 May 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Erin Chambers, Brittany Terese Fasy, Erfan Hosseini Sereshgi, Maarten L\"offler</dc:creator>
    </item>
    <item>
      <title>Topology-driven identification of repetitions in multi-variate time series</title>
      <link>https://arxiv.org/abs/2505.10004</link>
      <description>arXiv:2505.10004v2 Announce Type: replace 
Abstract: Many multi-variate time series obtained in the natural sciences and engineering possess a repetitive behavior, as for instance state-space trajectories of industrial machines in discrete automation. Recovering the times of recurrence from such a multi-variate time series is of a fundamental importance for many monitoring and control tasks. For a periodic time series this is equivalent to determining its period length. In this work we present a persistent homology framework to estimate recurrence times in multi-variate time series with different generalizations of cyclic behavior (periodic, repetitive, and recurring). To this end, we provide three specialized methods within our framework that are provably stable and validate them using real-world data, including a new benchmark dataset from an injection molding machine.</description>
      <guid isPermaLink="false">oai:arXiv.org:2505.10004v2</guid>
      <category>cs.CG</category>
      <category>eess.SP</category>
      <category>math.AT</category>
      <category>stat.ML</category>
      <pubDate>Tue, 20 May 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-sa/4.0/</dc:rights>
      <dc:creator>Simon Schindler, Elias Steffen Reich, Saverio Messineo, Simon Hoher, Stefan Huber</dc:creator>
    </item>
    <item>
      <title>Computing Generalized Ranks of Persistence Modules via Unfolding to Zigzag Modules</title>
      <link>https://arxiv.org/abs/2403.08110</link>
      <description>arXiv:2403.08110v3 Announce Type: replace-cross 
Abstract: For a $P$-indexed persistence module ${\sf M}$, the (generalized) rank of ${\sf M}$ is defined as the rank of the limit-to-colimit map for the diagram of vector spaces of ${\sf M}$ over the poset $P$. For $2$-parameter persistence modules, recently a zigzag persistence based algorithm has been proposed that takes advantage of the fact that generalized rank for $2$-parameter modules is equal to the number of full intervals in a zigzag module defined on the boundary of the poset. Analogous definition of boundary for $d$-parameter persistence modules or general $P$-indexed persistence modules does not seem plausible. To overcome this difficulty, we first unfold a given $P$-indexed module ${\sf M}$ into a zigzag module ${\sf M}_{ZZ}$ and then check how many full interval modules in a decomposition of ${\sf M}_{ZZ}$ can be folded back to remain full in a decomposition of ${\sf M}$. This number determines the generalized rank of ${\sf M}$. For special cases of degree-$d$ homology for $d$-complexes, we obtain a more efficient algorithm including a linear time algorithm for degree-$1$ homology in graphs.</description>
      <guid isPermaLink="false">oai:arXiv.org:2403.08110v3</guid>
      <category>math.AT</category>
      <category>cs.CG</category>
      <pubDate>Tue, 20 May 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Tamal K. Dey, Cheng Xin</dc:creator>
    </item>
  </channel>
</rss>
