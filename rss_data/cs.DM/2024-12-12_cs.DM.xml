<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.DM updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.DM</link>
    <description>cs.DM updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.DM" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Thu, 12 Dec 2024 05:01:48 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Thu, 12 Dec 2024 00:00:00 -0500</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Contribution to Blocker and Interdiction optimization problems in networks</title>
      <link>https://arxiv.org/abs/2412.08256</link>
      <description>arXiv:2412.08256v1 Announce Type: new 
Abstract: This manuscript describes the notions of blocker and interdiction applied to well-known optimization problems. The main interest of these two concepts is the capability to analyze the existence of a combinatorial structure after some modifications. We focus on graph modification, like removing vertices or links in a network. In the interdiction version, we have a budget for modification to reduce as much as possible the size of a given combinatorial structure. Whereas, for the blocker version, we minimize the number of modifications such that the network does not contain a given combinatorial structure. Blocker and interdiction problems have some similarities and can be applied to well-known optimization problems. We consider matching, connectivity, shortest path, max flow, and clique problems. For these problems, we analyze either the blocker version or the interdiction one. Applying the concept of blocker or interdiction to well-known optimization problems can change their complexities. Some optimization problems become harder when one of these two notions is applied. For this reason, we propose some complexity analysis to show when an optimization problem, or the associated decision problem, becomes harder. Another fundamental aspect developed in the manuscript is the use of exact methods to tackle these optimization problems. The main way to solve these problems is to use integer linear programming to model them. An interesting aspect of integer linear programming is the possibility to analyze theoretically the strength of these models, using cutting planes. For most of the problems studied in this manuscript, a polyhedral analysis is performed to prove the strength of inequalities or describe new families of inequalities. The exact algorithms proposed are based on Branch-and-Cut or Branch-and-Price algorithm, where dedicated separation and pricing algorithms are proposed.</description>
      <guid isPermaLink="false">oai:arXiv.org:2412.08256v1</guid>
      <category>cs.DM</category>
      <pubDate>Thu, 12 Dec 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>S\'ebastien Martin</dc:creator>
    </item>
    <item>
      <title>Efficient search of a minimum tree on points in a space with the $l_1$-norm</title>
      <link>https://arxiv.org/abs/2412.08584</link>
      <description>arXiv:2412.08584v1 Announce Type: new 
Abstract: In this paper, we consider the minimum spanning tree problem (for short, MSTP) on an arbitrary set of $n$ points of $d$-dimensional space in $l_1$-norm. For this problem, for each fixed $d\geq 2$, there is a known algorithm of the computational complexity $O\big(n\cdot (\log\,n + \log^{r_d}\,n\cdot \log\log\,n)\ big)$, where $r_d\in \{0,1,2,4\}$ for $d\in \{2,3,4,5\}$ and $r_d=d$ for $d\geq 6$. For $d=3$, this result can be improved to the computational complexity $O(n\cdot \log\,n)$. In this paper, for any fixed $d\geq 2$, an algorithm with the computational complexity $O(n\cdot \log^{d-1}\,n)$ is proposed to solve the considered MSTP, which improves the previous achievement for $d\geq 6$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2412.08584v1</guid>
      <category>cs.DM</category>
      <category>cs.CG</category>
      <pubDate>Thu, 12 Dec 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>K. V. Kaymakov, D. S. Malyshev</dc:creator>
    </item>
    <item>
      <title>Structure of non-trivial intersecting families</title>
      <link>https://arxiv.org/abs/2412.07974</link>
      <description>arXiv:2412.07974v1 Announce Type: cross 
Abstract: We say that a family of $k$-subsets of an $n$-element set is {\it intersecting}, if any two of its sets intersect. In this paper, we study the structure of large intersecting families. Several years ago, Han and Kohayakawa (Proc. AMS, 2017), and then Kostochka and Mubayi (Proc. AMS, 2017) obtained certain structural results concerning large intersecting families. In this paper, we extend and generalize their results, giving them a conclusive form.</description>
      <guid isPermaLink="false">oai:arXiv.org:2412.07974v1</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <pubDate>Thu, 12 Dec 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Andrey Kupavskii</dc:creator>
    </item>
    <item>
      <title>Randomized Communication and Implicit Graph Representations</title>
      <link>https://arxiv.org/abs/2111.03639</link>
      <description>arXiv:2111.03639v4 Announce Type: replace-cross 
Abstract: We initiate the focused study of constant-cost randomized communication, with emphasis on its connection to graph representations. We observe that constant-cost randomized communication problems are equivalent to hereditary (i.e. closed under taking induced subgraphs) graph classes which admit constant-size adjacency sketches and probabilistic universal graphs (PUGs), which are randomized versions of the well-studied adjacency labeling schemes and induced-universal graphs. This gives a new perspective on long-standing questions about the existence of these objects, including new methods of constructing adjacency labeling schemes.
  We ask three main questions about constant-cost communication, or equivalently, constant-size PUGs: (1) Are there any natural, non-trivial problems aside from Equality and k-Hamming Distance which have constant-cost communication? We provide a number of new examples, including deciding whether two vertices have path-distance at most k in a planar graph, and showing that constant-size PUGs are preserved by the Cartesian product operation. (2) What structures of a problem explain the existence or non-existence of a constant-cost protocol? We show that in many cases a Greater-Than subproblem is such a structure. (3) Is the Equality problem complete for constant-cost randomized communication? We show that it is not: there are constant-cost problems which do not reduce to Equality.</description>
      <guid isPermaLink="false">oai:arXiv.org:2111.03639v4</guid>
      <category>cs.DS</category>
      <category>cs.CC</category>
      <category>cs.DM</category>
      <pubDate>Thu, 12 Dec 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Nathaniel Harms, Sebastian Wild, Viktor Zamaraev</dc:creator>
    </item>
  </channel>
</rss>
