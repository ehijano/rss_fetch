<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.DS updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.DS</link>
    <description>cs.DS updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.DS" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Tue, 27 Aug 2024 02:28:19 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Mon, 26 Aug 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Single-Machine Scheduling to Minimize the Number of Tardy Jobs with Release Dates</title>
      <link>https://arxiv.org/abs/2408.12967</link>
      <description>arXiv:2408.12967v1 Announce Type: new 
Abstract: We study the fundamental scheduling problem $1\mid r_j\mid\sum w_j U_j$: schedule a set of $n$ jobs with weights, processing times, release dates, and due dates on a single machine, such that each job starts after its release date and we maximize the weighted number of jobs that complete execution before their due date. Problem $1\mid r_j\mid\sum w_j U_j$ generalizes both Knapsack and Partition, and the simplified setting without release dates was studied by Hermelin et al. [Annals of Operations Research, 2021] from a parameterized complexity viewpoint.
  Our main contribution is a thorough complexity analysis of $1\mid r_j\mid\sum w_j U_j$ in terms of four key problem parameters: the number $p_\#$ of processing times, the number $w_\#$ of weights, the number $d_\#$ of due dates, and the number $r_\#$ of release dates of the jobs. $1\mid r_j\mid\sum w_j U_j$ is known to be weakly para-NP-hard even if $w_\#+d_\#+r_\#$ is constant, and Heeger and Hermelin [ESA, 2024] recently showed (weak) W[1]-hardness parameterized by $p_\#$ or $w_\#$ even if $r_\#$ is constant.
  Algorithmically, we show that $1\mid r_j\mid\sum w_j U_j$ is fixed-parameter tractable parameterized by $p_\#$ combined with any two of the remaining three parameters $w_\#$, $d_\#$, and $r_\#$. We further provide pseudo-polynomial XP-time algorithms for parameter $r_\#$ and $d_\#$. To complement these algorithms, we show that $1\mid r_j\mid\sum w_j U_j$ is (strongly) W[1]-hard when parameterized by $d_\#+r_\#$ even if $w_\#$ is constant. Our results provide a nearly complete picture of the complexity of $1\mid r_j\mid\sum w_j U_j$ for $p_\#$, $w_\#$, $d_\#$, and $r_\#$ as parameters, and extend those of Hermelin et al. [Annals of Operations Research, 2021] for the problem $1\mid\mid\sum w_j U_j$ without release dates.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.12967v1</guid>
      <category>cs.DS</category>
      <category>cs.DM</category>
      <pubDate>Mon, 26 Aug 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Matthias Kaul, Matthias Mnich, Hendrik Molter</dc:creator>
    </item>
    <item>
      <title>Adaptive complexity of log-concave sampling</title>
      <link>https://arxiv.org/abs/2408.13045</link>
      <description>arXiv:2408.13045v1 Announce Type: new 
Abstract: In large-data applications, such as the inference process of diffusion models, it is desirable to design sampling algorithms with a high degree of parallelization. In this work, we study the adaptive complexity of sampling, which is the minimal number of sequential rounds required to achieve sampling given polynomially many queries executed in parallel at each round. For unconstrained sampling, we examine distributions that are log-smooth or log-Lipschitz and log strongly or non-strongly concave. We show that an almost linear iteration algorithm cannot return a sample with a specific exponentially small accuracy under total variation distance. For box-constrained sampling, we show that an almost linear iteration algorithm cannot return a sample with sup-polynomially small accuracy under total variation distance for log-concave distributions. Our proof relies upon novel analysis with the characterization of the output for the hardness potentials based on the chain-like structure with random partition and classical smoothing techniques.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.13045v1</guid>
      <category>cs.DS</category>
      <pubDate>Mon, 26 Aug 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Huanjian Zhou, Baoxiang Wang, Masashi Sugiyama</dc:creator>
    </item>
    <item>
      <title>The Power of Migrations in Dynamic Bin Packing</title>
      <link>https://arxiv.org/abs/2408.13178</link>
      <description>arXiv:2408.13178v1 Announce Type: new 
Abstract: In the Dynamic Bin Packing problem, $n$ items arrive and depart the system in an online manner, and the goal is to maintain a good packing throughout. We consider the objective of minimizing the total active time, i.e., the sum of the number of open bins over all times. An important tool for maintaining an efficient packing in many applications is the use of migrations; e.g., transferring computing jobs across different machines. However, there are large gaps in our understanding of the approximability of dynamic bin packing with migrations. Prior work has covered the power of no migrations and $&gt; n$ migrations, but we ask the question: What is the power of limited ($\leq n$) migrations?
  Our first result is a dichotomy between no migrations and linear migrations: Using a sublinear number of migrations is asymptotically equivalent to doing zero migrations, where the competitive ratio grows with $\mu$, the ratio of the largest to smallest item duration. On the other hand, we prove that for every $\alpha \in (0,1]$, there is an algorithm that does $\approx \alpha n$ migrations and achieves competitive ratio $\approx 1/\alpha$ (in particular, independent of $\mu$); we also show that this tradeoff is essentially best possible. This fills in the gap between zero migrations and $&gt; n$ migrations in Dynamic Bin Packing.
  Finally, in light of the above impossibility results, we introduce a new model that more directly captures the impact of migrations. Instead of limiting the number of migrations, each migration adds a delay of $C$ time units to the item's duration; this commonly appears in settings where a blackout or set-up time is required before the item can restart its execution in the new bin. In this new model, we prove a $O(\min (\sqrt{C}, \mu))$-approximation, and an almost matching lower bound.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.13178v1</guid>
      <category>cs.DS</category>
      <pubDate>Mon, 26 Aug 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <dc:creator>Konstantina Mellou, Marco Molinaro, Rudy Zhou</dc:creator>
    </item>
    <item>
      <title>Exponent-Strings and Their Edit Distance</title>
      <link>https://arxiv.org/abs/2408.12931</link>
      <description>arXiv:2408.12931v1 Announce Type: cross 
Abstract: An exponent-string is an extension of traditional strings that can incorporate real-numbered exponents, indicating the quantity of characters. This novel representation overcomes the limitations of traditional discrete string by enabling precise data representation for applications such as phonetic transcription that contains sound duration.
  Although applications of exponent-string are focused on exponent-string with real-numbered exponents, formal definition uses arbitrary semigroup. For any semigroup $S$, $S$-exponent-strings are allowed to have elements of $S$ as exponents. We investigate algebraic properties of $S$-exponent-strings and further justify $\mathbb{R}^+$-exponent-string is a natural extension of the string.
  Motivated by the problem of calculating the similarity between spoken phone sequence and correct phone sequence, we develop exp-edit distance -- a specialized metric designed to measure the similarity between $\mathbb{R}^+$-exponent-strings. By extending the traditional string edit distance to handle continuous values, exp-edit distance deals with $\mathbb{R}^+$-exponent-strings that embody both discrete and continuous properties. Our exploration includes a rigorous mathematical formulation of exp-edit distance and an algorithm to compute it.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.12931v1</guid>
      <category>cs.FL</category>
      <category>cs.DS</category>
      <pubDate>Mon, 26 Aug 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <dc:creator>Ingyu Baek</dc:creator>
    </item>
    <item>
      <title>Encoding Semi-Directed Phylogenetic Networks with Quarnets</title>
      <link>https://arxiv.org/abs/2408.12997</link>
      <description>arXiv:2408.12997v1 Announce Type: cross 
Abstract: Phylogenetic networks are graphs that are used to represent evolutionary relationships between different taxa. They generalize phylogenetic trees since for example, unlike trees, they permit lineages to combine. Recently, there has been rising interest in semi-directed phylogenetic networks, which are mixed graphs in which certain lineage combination events are represented by directed edges coming together, whereas the remaining edges are left undirected. One reason to consider such networks is that it can be difficult to root a network using real data. In this paper, we consider the problem of when a semi-directed phylogenetic network is defined or encoded by the smaller networks that it induces on the $4$-leaf subsets of its leaf set. These smaller networks are called quarnets. We prove that semi-directed binary level-$2$ phylogenetic networks are encoded by their quarnets, but that this is not the case for level-$3$. In addition, we prove that the so-called blob tree of a semi-directed binary network, a tree that gives the coarse-grained structure of the network, is always encoded by the quarnets of the network.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.12997v1</guid>
      <category>q-bio.PE</category>
      <category>cs.DS</category>
      <category>math.CO</category>
      <pubDate>Mon, 26 Aug 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Katharina T. Huber, Leo van Iersel, Mark Jones, Vincent Moulton, Leonie Veenema - Nipius</dc:creator>
    </item>
    <item>
      <title>Tight Bounds for Constant-Round Domination on Graphs of High Girth and Low Expansion</title>
      <link>https://arxiv.org/abs/2408.12998</link>
      <description>arXiv:2408.12998v1 Announce Type: cross 
Abstract: A long-standing open question is which graph class is the most general one permitting constant-time constant-factor approximations for dominating sets. The approximation ratio has been bounded by increasingly general parameters such as genus, arboricity, or expansion of the input graph. Amiri and Wiederhake considered $k$-hop domination in graphs of bounded $k$-hop expansion and girth at least $4k+3$; the $k$-hop expansion $f(k)$ of a graph family denotes the maximum ratio of edges to nodes that can be achieved by contracting disjoint subgraphs of radius $k$ and deleting nodes. In this setting, these authors to obtain a simple $O(k)$-round algorithm achieving approximation ratio $\Theta(kf(k))$.
  In this work, we study the same setting but derive tight bounds:
  - A $\Theta(kf(k))$-approximation is possible in $k$, but not $k-1$ rounds.
  - In $3k$ rounds an $O(k+f(k)^{k/(k+1)})$-approximation can be achieved.
  - No constant-round deterministic algorithm can achieve approximation ratio $o(k+f(k)^{k/(k+1)})$.
  Our upper bounds hold in the port numbering model with small messages, while the lower bounds apply to local algorithms, i.e., with arbitrary message size and unique identifiers. This means that the constant-time approximation ratio can be \emph{sublinear} in the edge density of the graph, in a graph class which does not allow a constant approximation. This begs the question whether this is an artefact of the restriction to high girth or can be extended to all graphs of $k$-hop expansion $f(k)$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.12998v1</guid>
      <category>cs.DC</category>
      <category>cs.DS</category>
      <pubDate>Mon, 26 Aug 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Christoph Lenzen, Sophie Wenning</dc:creator>
    </item>
    <item>
      <title>A Competitive Algorithm for Throughput Maximization on Identical Machines</title>
      <link>https://arxiv.org/abs/2111.06564</link>
      <description>arXiv:2111.06564v2 Announce Type: replace 
Abstract: This paper considers the basic problem of scheduling jobs online with preemption to maximize the number of jobs completed by their deadline on $m$ identical machines. The main result is an $O(1)$ competitive deterministic algorithm for any number of machines $m &gt;1$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2111.06564v2</guid>
      <category>cs.DS</category>
      <pubDate>Mon, 26 Aug 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <dc:creator>Benjamin Moseley, Kirk Pruhs, Clifford Stein, Rudy Zhou</dc:creator>
    </item>
    <item>
      <title>Graph Search Trees and the Intermezzo Problem</title>
      <link>https://arxiv.org/abs/2404.18645</link>
      <description>arXiv:2404.18645v2 Announce Type: replace-cross 
Abstract: The last in-tree recognition problem asks whether a given spanning tree can be derived by connecting each vertex with its rightmost left neighbor of some search ordering. In this study, we demonstrate that the last-in-tree recognition problem for Generic Search is $\mathsf{NP}$-complete. We utilize this finding to strengthen a complexity result from order theory. Given a partial order $\pi$ and a set of triples, the $\mathsf{NP}$-complete intermezzo problem asks for a linear extension of $\pi$ where each first element of a triple is not between the other two. We show that this problem remains $\mathsf{NP}$-complete even when the Hasse diagram of the partial order forms a tree of bounded height. In contrast, we give an $\mathsf{XP}$-algorithm for the problem when parameterized by the width of the partial order. Furthermore, we show that $\unicode{x2013}$ under the assumption of the Exponential Time Hypothesis $\unicode{x2013}$ the running time of this algorithm is asymptotically optimal.</description>
      <guid isPermaLink="false">oai:arXiv.org:2404.18645v2</guid>
      <category>cs.DM</category>
      <category>cs.CC</category>
      <category>cs.DS</category>
      <category>math.CO</category>
      <pubDate>Mon, 26 Aug 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Jesse Beisegel, Ekkehard K\"ohler, Fabienne Ratajczak, Robert Scheffler, Martin Strehler</dc:creator>
    </item>
  </channel>
</rss>
