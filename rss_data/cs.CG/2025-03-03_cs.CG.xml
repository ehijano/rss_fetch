<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.CG updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.CG</link>
    <description>cs.CG updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.CG" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Mon, 03 Mar 2025 05:00:32 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Mon, 03 Mar 2025 00:00:00 -0500</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Improved Bound on the Number of Pseudoline Arrangements via the Zone Theorem</title>
      <link>https://arxiv.org/abs/2502.20909</link>
      <description>arXiv:2502.20909v1 Announce Type: new 
Abstract: Pseudoline arrangements are fundamental objects in discrete and computational geometry, and different works have tackled the problem of improving the known bounds on the number of simple arrangements of $n$ pseudolines over the past decades. The lower bound in particular has seen two successive improvements in recent years (Dumitrescu and Mandal in 2020 and Cort\'es K\"uhnast et al. in 2024). Here we focus on the upper bound, and show that for large enough $n$, there are at most $2^{0.6496n^2}$ different simple arrangements of $n$ pseudolines. This follows a series of incremental improvements starting with work by Knuth in 1992 showing a bound of roughly $2^{0.7925n^2},$ then a bound of $2^{0.6975n^2}$ by Felsner in 1997, and finally the previous best known bound of $2^{0.6572n^2}$ by Felsner and Valtr in 2011. The improved bound presented here follows from a simple argument to combine the approach of this latter work with the use of the Zone Theorem.</description>
      <guid isPermaLink="false">oai:arXiv.org:2502.20909v1</guid>
      <category>cs.CG</category>
      <pubDate>Mon, 03 Mar 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Justin Dallant</dc:creator>
    </item>
    <item>
      <title>The Structural Complexity of Matrix-Vector Multiplication</title>
      <link>https://arxiv.org/abs/2502.21240</link>
      <description>arXiv:2502.21240v1 Announce Type: cross 
Abstract: We consider the problem of preprocessing an $n\times n$ matrix M, and supporting queries that, for any vector v, returns the matrix-vector product Mv. This problem has been extensively studied in both theory and practice: on one side, practitioners have developed algorithms that are highly efficient in practice, whereas theoreticians have proven that the problem cannot be solved faster than naive multiplication in the worst-case. This lower bound holds even in the average-case, implying that existing average-case analyses cannot explain this gap between theory and practice. Therefore, we study the problem for structured matrices. We show that for $n\times n$ matrices of VC-dimension d, the matrix-vector multiplication problem can be solved with $\tilde{O}(n^2)$ preprocessing and $\tilde O(n^{2-1/d})$ query time. Given the low constant VC-dimensions observed in most real-world data, our results posit an explanation for why the problem can be solved so much faster in practice. Moreover, our bounds hold even if the matrix does not have a low VC-dimension, but is obtained by (possibly adversarially) corrupting at most a subquadratic number of entries of any unknown low VC-dimension matrix. Our results yield the first non-trivial upper bounds for many applications. In previous works, the online matrix-vector hypothesis (conjecturing that quadratic time is needed per query) was used to prove many conditional lower bounds, showing that it is impossible to compute and maintain high-accuracy estimates for shortest paths, Laplacian solvers, effective resistance, and triangle detection in graphs subject to node insertions and deletions in subquadratic time. Yet, via a reduction to our matrix-vector-multiplication result, we show we can maintain the aforementioned problems efficiently if the input is structured, providing the first subquadratic upper bounds in the high-accuracy regime.</description>
      <guid isPermaLink="false">oai:arXiv.org:2502.21240v1</guid>
      <category>cs.DS</category>
      <category>cs.CC</category>
      <category>cs.CG</category>
      <category>cs.LG</category>
      <pubDate>Mon, 03 Mar 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Emile Anand, Jan van den Brand, Rose McCarty</dc:creator>
    </item>
    <item>
      <title>Computing Optimal Persistent Cycles for Levelset Zigzag on Manifold-like Complexes</title>
      <link>https://arxiv.org/abs/2105.00518</link>
      <description>arXiv:2105.00518v2 Announce Type: replace 
Abstract: In standard persistent homology, a persistent cycle born and dying with a persistence interval (bar) associates the bar with a concrete topological representative, which provides means to effectively navigate back from the barcode to the topological space. Among the possibly many, optimal persistent cycles bring forth further information due to having guaranteed quality. However, topological features usually go through variations in the lifecycle of a bar which a single persistent cycle may not capture. Hence, for persistent homology induced from PL functions, we propose levelset persistent cycles consisting of a sequence of cycles that depict the evolution of homological features from birth to death. Our definition is based on levelset zigzag persistence which involves four types of persistence intervals as opposed to the two types in standard persistence. For each of the four types, we present a polynomial-time algorithm computing an optimal sequence of levelset persistent $p$-cycles for the so-called weak $(p+1)$-pseudomanifolds. Given that optimal cycle problems for homology are NP-hard in general, our results are useful in practice because weak pseudomanifolds do appear in applications. Our algorithms draw upon an idea of relating optimal cycles to min-cuts in a graph that was exploited earlier for standard persistent cycles. Notice that levelset zigzag poses non-trivial challenges for the approach because a sequence of optimal cycles instead of a single one needs to be computed in this case. We show some empirical evidence that optimal cycles produced by our implemented software have nice quality.</description>
      <guid isPermaLink="false">oai:arXiv.org:2105.00518v2</guid>
      <category>cs.CG</category>
      <category>math.AT</category>
      <pubDate>Mon, 03 Mar 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Tamal K. Dey, Tao Hou, Anirudh Pulavarthy</dc:creator>
    </item>
  </channel>
</rss>
