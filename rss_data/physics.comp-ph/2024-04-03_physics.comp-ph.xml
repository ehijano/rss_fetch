<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>physics.comp-ph updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/physics.comp-ph</link>
    <description>physics.comp-ph updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/physics.comp-ph" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Wed, 03 Apr 2024 04:00:43 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Wed, 03 Apr 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Solving vibrational Hamiltonians with neural canonical transformations</title>
      <link>https://arxiv.org/abs/2403.12518</link>
      <description>arXiv:2403.12518v1 Announce Type: cross 
Abstract: The behavior of polyatomic molecules around their equilibrium positions can be regarded as quantum coupled anharmonic oscillators. Solving the corresponding Schr\"odinger equations can interpret or predict experimental spectra of molecules. In this study, we develop a novel approach to solve excited states of anharmonic vibrational systems. The normal coordinates of molecules are transformed into new coordinates through a normalizing flow parameterized by a neural network, facilitating the construction of a set of orthogonal many-body variational wavefunctions. Our methodology has been validated on an exactly solvable $64$-dimensional coupled harmonic oscillator, yielding numerical results with a relative error on the order of $10^{-6}$. Furthermore, the neural canonical transformations are also applied to calculate the energy levels of two specific molecules, acetonitrile ($\text{C}\text{H}_3\text{CN}$) and ethylene oxide ($\text{C}_2\text{H}_4\text{O}$) involving $12$ and $15$ vibrational modes respectively, which are in agreement with experimental findings. One of the key advantages of our approach is its flexibility concerning the potential energy surface, requiring no specific form for its application. Moreover, this method can be easily implemented on large-scale distributed computing platforms, making it particularly suitable for investigating more complex vibrational structures.</description>
      <guid isPermaLink="false">oai:arXiv.org:2403.12518v1</guid>
      <category>physics.chem-ph</category>
      <category>physics.comp-ph</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Qi Zhang, Rui-Si Wang, Lei Wang</dc:creator>
    </item>
    <item>
      <title>Predicting room-temperature conductivity of Na-ion super ionic conductors with the minimal number of easily-accessible descriptors</title>
      <link>https://arxiv.org/abs/2404.01627</link>
      <description>arXiv:2404.01627v1 Announce Type: cross 
Abstract: Given the vast compositional possibilities Na$_nM_mM_{m'}$Si$_{3-p-a}$P$_p$As$_a$O$_{12}$, Na-ion superionic conductors (NASICON) are attractive but complicate for designing materials with enhanced room-temperature Na-ion conductivity $\sigma_{\rm Na,300K}$. We propose an explicit regression model for $\sigma_{\rm Na,300K}$ with easily-accessible descriptors, by exploiting density functional theory molecular dynamics (DFT-MD). Initially, we demonstrate that two primary descriptors, the bottleneck width along Na-ion diffusion paths $d_1$ and the average Na-Na distance $\langle d_{\rm Na-Na} \rangle$, modulate room-temperature Na-ion self-diffusion coefficient $D_{\rm Na,300K}$. Then, we introduce two secondary easily-accessible descriptors: Na-ion content n, which influences $d_1$, $\langle d_{\rm Na-Na} \rangle$, and Na-ion density $\rho_{\rm Na}$; and the average ionic radius $\langle r_M \rangle$ of metal ions, which impacts $d_1$ and $\langle d_{\rm Na-Na} \rangle$. These secondary descriptors enable the development of a regression model for $\sigma_{\rm Na,300K}$ with $n$ and $\langle r_M \rangle$ only. Subsequently, this model identifies a promising yet unexplored stable composition, Na$_{2.75}$Zr$_{1.75}$Nb$_{0.25}$Si$_2$PO$_{12}$, which, upon DFT-MD calculations, indeed exhibits $\sigma_{\rm Na,300K} &gt; 10^{^3}$ S$\cdot$cm$^{-1}$. Furthermore, the adjusted version effectively fits $140$ experimental values with $R^2=0.718$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2404.01627v1</guid>
      <category>cond-mat.mtrl-sci</category>
      <category>physics.comp-ph</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Seong-Hoon Jang, Randy Jalem, Yoshitaka Tateyama</dc:creator>
    </item>
    <item>
      <title>Hyperviscosity stabilisation of the RBF-FD solution to natural convection</title>
      <link>https://arxiv.org/abs/2404.01919</link>
      <description>arXiv:2404.01919v1 Announce Type: cross 
Abstract: The numerical stability of fluid flow is an important topic in computational fluid dynamics as fluid flow simulations usually become numerically unstable in the turbulent regime. Many mesh-based methods have already established numerical dissipation procedures that dampen the effects of the unstable advection term. When it comes to meshless methods, the prominent stabilisation scheme is hyperviscosity. It introduces numerical dissipation in the form of a higher-order Laplacian operator. Many papers have already discussed the general effects of hyperviscosity and its parameters. However, hyperviscosity in flow problems has not yet been analyzed in depth. In this paper, we discuss the effects of hyperviscosity on natural convection flow problems as we approach the turbulent regime.</description>
      <guid isPermaLink="false">oai:arXiv.org:2404.01919v1</guid>
      <category>physics.flu-dyn</category>
      <category>cs.NA</category>
      <category>math.NA</category>
      <category>physics.comp-ph</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>\v{Z}iga Vaupoti\v{c}, Miha Rot, Gregor Kosec</dc:creator>
    </item>
    <item>
      <title>Fluid Implicit Particle Simulation for CPU and GPU</title>
      <link>https://arxiv.org/abs/2404.01931</link>
      <description>arXiv:2404.01931v1 Announce Type: cross 
Abstract: One of the current challenges in physically-based simulations, and, more specifically, fluid simulations, is to produce visually appealing results at interactive rates, capable of being used in multiple forms of media. In recent times, a lot of effort has been made with regards to this with the use of multi-core architectures, as many of the computations involved in the algorithms for these simulations are very well suited for these architectures. Although there is a considerable amount of works regarding acceleration techniques in this field, there is yet room to further explore and analyze some of them. To investigate this problem, we surveyed the topic of fluid simulations and some of the recent contributions towards this field. Additionally, we implemented two versions of a fluid simulation algorithm, one on the CPU and the other on the GPU using NVIDIA's CUDA framework, with the intent of gaining a better understanding of the effort needed to move these simulations to a multi-core architecture and the performance gains that we get with it.</description>
      <guid isPermaLink="false">oai:arXiv.org:2404.01931v1</guid>
      <category>cs.GR</category>
      <category>physics.comp-ph</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Pedro Centeno, Jo\~ao Madeiras Pereira</dc:creator>
    </item>
    <item>
      <title>XLB: A differentiable massively parallel lattice Boltzmann library in Python</title>
      <link>https://arxiv.org/abs/2311.16080</link>
      <description>arXiv:2311.16080v3 Announce Type: replace 
Abstract: The lattice Boltzmann method (LBM) has emerged as a prominent technique for solving fluid dynamics problems due to its algorithmic potential for computational scalability. We introduce XLB library, a Python-based differentiable LBM library based on the JAX platform. The architecture of XLB is predicated upon ensuring accessibility, extensibility, and computational performance, enabling scaling effectively across CPU, TPU, multi-GPU, and distributed multi-GPU or TPU systems. The library can be readily augmented with novel boundary conditions, collision models, or multi-physics simulation capabilities. XLB's differentiability and data structure is compatible with the extensive JAX-based machine learning ecosystem, enabling it to address physics-based machine learning, optimization, and inverse problems. XLB has been successfully scaled to handle simulations with billions of cells, achieving giga-scale lattice updates per second. XLB is released under the permissive Apache-2.0 license and is available on GitHub at https://github.com/Autodesk/XLB.</description>
      <guid isPermaLink="false">oai:arXiv.org:2311.16080v3</guid>
      <category>physics.comp-ph</category>
      <category>cs.CE</category>
      <category>cs.LG</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <arxiv:DOI>10.1016/j.cpc.2024.109187</arxiv:DOI>
      <dc:creator>Mohammadmehdi Ataei, Hesam Salehipour</dc:creator>
    </item>
    <item>
      <title>Benchmarking the optimization optical machines with the planted solutions</title>
      <link>https://arxiv.org/abs/2311.06859</link>
      <description>arXiv:2311.06859v2 Announce Type: replace-cross 
Abstract: We introduce universal, easy-to-reproduce generative models for the QUBO instances to differentiate the performance of the hardware/solvers effectively. Our benchmark process extends the well-known Hebb's rule of associative memory with the asymmetric pattern weights. We provide a comprehensive overview of calculations conducted across various scales and using different classes of dynamical equations. Our aim is to analyze their results, including factors such as the probability of encountering the ground state, planted state, spurious state, or states falling outside the predetermined energy range. Moreover, the generated problems show additional properties, such as the easy-hard-easy complexity transition and complicated cluster structures of planted solutions. Our method establishes a prospective platform to potentially address other questions related to the fundamental principles behind device physics and algorithms for novel computing machines.</description>
      <guid isPermaLink="false">oai:arXiv.org:2311.06859v2</guid>
      <category>stat.CO</category>
      <category>cond-mat.stat-mech</category>
      <category>physics.comp-ph</category>
      <category>physics.optics</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Nikita Stroev, Natalia G. Berloff, Nir Davidson</dc:creator>
    </item>
  </channel>
</rss>
