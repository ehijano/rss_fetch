<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.CG updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.CG</link>
    <description>cs.CG updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.CG" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Wed, 27 Aug 2025 01:34:04 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Tue, 26 Aug 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>The Snowblower Problem: An Improvement</title>
      <link>https://arxiv.org/abs/2508.16710</link>
      <description>arXiv:2508.16710v1 Announce Type: new 
Abstract: We present more optimal solutions to the snowblower problem introduced in arXiv:cs/0603026. In particular, we present more optimal ways to clear lines and combs, which are shapes as described in the aforementioned paper that the original input is dissected into. We note that our methods to clear lines and combs reduce the number of steps needed to clear such shapes, while also acknowledging that they do not change the overall complexity.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.16710v1</guid>
      <category>cs.CG</category>
      <pubDate>Tue, 26 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Justine Tang</dc:creator>
    </item>
    <item>
      <title>Tree covers of size $2$ for the Euclidean plane</title>
      <link>https://arxiv.org/abs/2508.16875</link>
      <description>arXiv:2508.16875v1 Announce Type: new 
Abstract: For a given metric space $(P,\phi)$, a tree cover of stretch $t$ is a collection of trees on $P$ such that edges $(x,y)$ of trees receive length $\phi(x,y)$, and such that for any pair of points $u,v\in P$ there is a tree $T$ in the collection such that the induced graph distance in $T$ between $u$ and $v$ is at most $t\phi(u,v).$ In this paper, we show that, for any set of points $P$ on the Euclidean plane, there is a tree cover consisting of two trees and with stretch $O(1).$ Although the problem in higher dimensions remains elusive, we manage to prove that for a slightly stronger variant of a tree cover problem we must have at least $(d+1)/2$ trees in any constant stretch tree cover in $\mathbb R^d$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.16875v1</guid>
      <category>cs.CG</category>
      <pubDate>Tue, 26 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Artur Bikeev, Andrey Kupavskii, Maxim Turevskii</dc:creator>
    </item>
    <item>
      <title>2-Layer Fan-Planarity in Polynomial Time</title>
      <link>https://arxiv.org/abs/2508.17349</link>
      <description>arXiv:2508.17349v1 Announce Type: new 
Abstract: In this paper, we give a polynomial-time algorithm for deciding whether an input bipartite graph admits a 2-layer fan-planar drawing, resolving an open problem posed in several papers since 2015.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.17349v1</guid>
      <category>cs.CG</category>
      <category>cs.DS</category>
      <pubDate>Tue, 26 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Yasuaki Kobayashi, Yuto Okada</dc:creator>
    </item>
    <item>
      <title>Practical Insertion-Only Convex Hull</title>
      <link>https://arxiv.org/abs/2508.17496</link>
      <description>arXiv:2508.17496v1 Announce Type: new 
Abstract: Convex hull data structures are fundamental in computational geometry. We study insertion-only data structures, supporting various containment and intersection queries. When $P$ is sorted by $x$- or $y$-coordinate, convex hulls can be constructed in linear time using classical algorithms such as Graham scan. We investigate a variety of methods tailored to the insertion-only setting. We explore a broad selection of trade-offs involving robustness, memory access patterns, and space usage, providing an extensive evaluation of both existing and novel techniques. Logarithmic-time methods rely on pointer-based tree structures, which suffer in practice due to poor memory locality. Motivated by this, we develop a vector-based solution inspired by Overmars' logarithmic method. Our structure has worse asymptotic bounds, supporting queries in $O(\log^2 n)$ time, but stores data in $O(\log n)$ contiguous vectors, greatly improving cache performance.
  Through empirical evaluation on real-world and synthetic data sets, we uncover surprising trends. Let $h$ denote the size of the convex hull. We show that a na\"ive $O(h)$ insertion-only algorithm based on Graham scan consistently outperforms both theoretical and practical state-of-the-art methods under realistic workloads, even on data sets with rather large convex hulls. While tree-based methods with $O(\log h)$ update times offer solid theoretical guarantees, they are never optimal in practice. In contrast, our vector-based logarithmic method, despite its theoretically inferior bounds, is highly competitive across all tested scenarios. It is optimal whenever the convex hull becomes large.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.17496v1</guid>
      <category>cs.CG</category>
      <pubDate>Tue, 26 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Ivor van der Hoog, Henrik Reinst\"adtler, Eva Rotenberg</dc:creator>
    </item>
    <item>
      <title>Planar Stories of Graph Drawings: Algorithms and Experiments</title>
      <link>https://arxiv.org/abs/2508.17532</link>
      <description>arXiv:2508.17532v1 Announce Type: new 
Abstract: We address the problem of computing a dynamic visualization of a geometric graph $G$ as a sequence of frames. Each frame shows only a portion of the graph but their union covers $G$ entirely. The two main requirements of our dynamic visualization are: $(i)$ guaranteeing drawing stability, so to preserve the user's mental map; $(ii)$ keeping the visual complexity of each frame low. To satisfy the first requirement, we never change the position of the vertices. Regarding the second requirement, we avoid edge crossings in each frame. More precisely, in the first frame we visualize a suitable subset of non-crossing edges; in each subsequent frame, exactly one new edge enters the visualization and all the edges that cross with it are deleted. We call such a sequence of frames a planar story of $G$. Our goal is to find a planar story whose minimum number of edges contemporarily displayed is maximized (i.e., a planar story that maximizes the minimum frame size). Besides studying our model from a theoretical point of view, we also design and experimentally compare different algorithms, both exact techniques and heuristics. These algorithms provide an array of alternative trade-offs between efficiency and effectiveness, also depending on the structure of the input graph.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.17532v1</guid>
      <category>cs.CG</category>
      <pubDate>Tue, 26 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Carla Binucci, Sabine Cornelsen, Walter Didimo, Seok-Hee Hong, Eleni Katsanou, Maurizio Patrignani, Antonios Symvonis, Samuel Wolf</dc:creator>
    </item>
    <item>
      <title>Stabbing Faces By a Convex Curve</title>
      <link>https://arxiv.org/abs/2508.17549</link>
      <description>arXiv:2508.17549v1 Announce Type: new 
Abstract: We prove that, for every plane graph $G$ and every smooth convex curve $C$ not on a single line, there exists a straight-line drawing of $G$ for which every face is crossed by $C$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.17549v1</guid>
      <category>cs.CG</category>
      <pubDate>Tue, 26 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>David Eppstein</dc:creator>
    </item>
    <item>
      <title>Exploratory Notes on Symbolic Constraints in Polyhedral Enclosure and Tetrahedral Decomposition in Genus-0 Polyhedra</title>
      <link>https://arxiv.org/abs/2508.18222</link>
      <description>arXiv:2508.18222v1 Announce Type: new 
Abstract: I present a coordinate-free, symbolic framework for deciding whether a given set of polygonal faces can form a closed, genus-zero polyhedral surface and for predicting how such a surface could be decomposed into internal tetrahedra. The method uses only discrete incidence variables, such as the number of internal tetrahedra $T$, internal gluing triangles $N_i$, and internal triangulation segments $S_i$, and applies combinatorial feasibility checks before any geometric embedding is attempted. For polyhedra in \emph{normal form}, I record exact incidence identities linking $V,E,F$ to a flatness parameter $S:=\sum_f(\deg f-3)$, and I identify parity-sensitive effects in $E$, $F$, and $S$. The external identities and parity-sensitive bounds hold universally for genus-0 polyhedral graphs. For internal quantities, I prove exact relations $N_i=2T-V+2$ and $T-N_i+S_i=1$ (with $S_i$ taken to be the number of interior edges) and obtain restricted linear ranges within a \emph{shell--aligned ladder} subclass (SALT), where at most one interior edge is introduced per layer. Consequently, I propose a symbolic workflow that yields rapid pre-checks for structural impossibility, reducing the need for costly geometric validation in computational geometry, graphics, and automated modeling.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.18222v1</guid>
      <category>cs.CG</category>
      <category>math.CO</category>
      <pubDate>Tue, 26 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Moustapha Itani</dc:creator>
    </item>
    <item>
      <title>Crossing and non-crossing families</title>
      <link>https://arxiv.org/abs/2508.17277</link>
      <description>arXiv:2508.17277v1 Announce Type: cross 
Abstract: For a finite set $P$ of points in the plane in general position, a \emph{crossing family} of size $k$ in $P$ is a collection of $k$ line segments with endpoints in $P$ that are pairwise crossing. It is a long-standing open problem to determine the largest size of a crossing family in any set of $n$ points in the plane in general position. It is widely believed that this size should be linear in $n$.
  Motivated by results from the theory of partitioning complete geometric graphs, we study a variant of this problem for point sets $P$ that do not contain a \emph{non-crossing family} of size $m$, which is a collection of 4 disjoint subsets $P_1$, $P_2$, $P_3$, and $P_4$ of $P$, each containing $m$ points of $P$, such that for every choice of 4 points $p_i \in P_i$, the set $\{p_1,p_2,p_3,p_4\}$ is such that $p_4$ is in the interior of the triangle formed by $p_1,p_2,p_3$. We prove that, for every $m \in \mathbb{N}$, each set $P$ of $n$ points in the plane in general position contains either a crossing family of size $n/2^{O(\sqrt{\log{m}})}$ or a non-crossing family of size $m$, by this strengthening a recent breakthrough result by Pach, Rubin, and Tardos (2021). Our proof is constructive and we show that these families can be obtained in expected time $O(nm^{1+o(1)})$. We also prove that a crossing family of size $\Omega(n/m)$ or a non-crossing family of size $m$ in $P$ can be found in expected time $O(n)$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.17277v1</guid>
      <category>math.CO</category>
      <category>cs.CG</category>
      <pubDate>Tue, 26 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-sa/4.0/</dc:rights>
      <dc:creator>Todor Anti\'c, Martin Balko, Birgit Vogtenhuber</dc:creator>
    </item>
    <item>
      <title>Push-1 is PSPACE-complete, and the automated verification of motion planning gadgets</title>
      <link>https://arxiv.org/abs/2508.17602</link>
      <description>arXiv:2508.17602v1 Announce Type: cross 
Abstract: Push-1 is one of the simplest abstract frameworks for motion planning; however, the complexity of deciding if a Push-1 problem can be solved was a several-decade-old open question. We resolve the complexity of the motion planning problem Push-1 by showing that it is PSPACE-complete, and we formally verify the correctness of our constructions. Our results build upon a recent work which demonstrated that Push-1F (a variant of Push-1 with fixed blocks) and Push-k for $k \geq 2$ (a variant of Push-1 where the agent can push $k$ blocks at once) are PSPACE-complete and more generally on the motion-planning-though-gadgets framework.
  In the process of resolving this open problem, we make two general contributions to the motion planning complexity theory. First, our proof technique extends the standard motion planning framework by assigning the agent a state. This state is preserved when traversing between gadgets but can change when taking transitions in gadgets. Second, we designed and implemented a system, GADGETEER, for computationally verifying the behavior of systems of gadgets. This system is agnostic to the underlying motion planning problem, and allows for formally verifying the correspondence between a low-level construction and a high-level system of gadgets as well as automatically synthesizing gadgets from low-level constructions. In the case of Push-1, we use this system to formally prove that our constructions match our high-level specifications of their behavior. This culminates in the construction and verification of a self-closing door, as deciding reachability in a system of self-closing doors is PSPACE-complete.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.17602v1</guid>
      <category>cs.CC</category>
      <category>cs.CG</category>
      <pubDate>Tue, 26 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Zachary DeStefano, Bufang Liang</dc:creator>
    </item>
    <item>
      <title>Flexible and Probabilistic Topology Tracking with Partial Optimal Transport</title>
      <link>https://arxiv.org/abs/2302.02895</link>
      <description>arXiv:2302.02895v4 Announce Type: replace 
Abstract: In this paper, we present a flexible and probabilistic framework for tracking topological features in time-varying scalar fields using merge trees and partial optimal transport. Merge trees are topological descriptors that record the evolution of connected components in the sublevel sets of scalar fields. We present a new technique for modeling and comparing merge trees using tools from partial optimal transport. In particular, we model a merge tree as a measure network, that is, a network equipped with a probability distribution, and define a notion of distance on the space of merge trees inspired by partial optimal transport. Such a distance offers a new and flexible perspective for encoding intrinsic and extrinsic information in the comparative measures of merge trees. More importantly, it gives rise to a partial matching between topological features in time-varying data, thus enabling flexible topology tracking for scientific simulations. Furthermore, such partial matching may be interpreted as probabilistic coupling between features at adjacent time steps, which gives rise to probabilistic tracking graphs. We derive a stability result for our distance and provide numerous experiments indicating the efficacy of our framework in extracting meaningful feature tracks.</description>
      <guid isPermaLink="false">oai:arXiv.org:2302.02895v4</guid>
      <category>cs.CG</category>
      <category>stat.AP</category>
      <pubDate>Tue, 26 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <arxiv:DOI>10.1109/TVCG.2025.3561300</arxiv:DOI>
      <dc:creator>Mingzhe Li, Xinyuan Yan, Lin Yan, Tom Needham, Bei Wang</dc:creator>
    </item>
    <item>
      <title>A Unified FPT Framework for Crossing Number Problems</title>
      <link>https://arxiv.org/abs/2410.00206</link>
      <description>arXiv:2410.00206v3 Announce Type: replace 
Abstract: The basic (and traditional) crossing number problem is to determine the minimum number of crossings in a topological drawing of an input graph in the plane. We develop a unified framework that smoothly captures many generalized crossing number problems, and that yields fixed-parameter tractable (FPT) algorithms for them not only in the plane but also on surfaces. Our framework takes the following form. We fix a surface S, an integer r, and a map \k{appa} from the set of topological drawings of graphs in S to Z+\cup{\infty}, satisfying some natural monotonicity conditions, but essentially describing the allowed drawings and how we want to count the crossings in them. Then deciding whether an input graph G has an allowed drawing D on S with \k{appa}(D)&lt;=r can be done in time quadratic in the size of G (and exponential in other parameters). More generally, we may take as input an edge-colored graph, and distinguish crossings by the colors of the involved edges; and we may allow to perform a bounded number of edge removals and vertex splits to G before drawing it. The proof is a reduction to the embeddability of a graph on a two-dimensional simplicial complex. This framework implies, in a unified way, quadratic FPT algorithms for many topological crossing number variants established in the graph drawing community. Some of these variants already had previously published FPT algorithms, mostly relying on Courcelle's metatheorem, but for many of those, we obtain an algorithm with a better runtime. Moreover, our framework extends, at no cost, to these crossing number variants in any fixed surface.</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.00206v3</guid>
      <category>cs.CG</category>
      <category>math.CO</category>
      <pubDate>Tue, 26 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-sa/4.0/</dc:rights>
      <dc:creator>\'Eric Colin de Verdi\`ere, Petr Hlin\v{e}n\'y</dc:creator>
    </item>
    <item>
      <title>Robust Model Reconstruction Based on the Topological Understanding of Point Clouds Using Persistent Homology</title>
      <link>https://arxiv.org/abs/2508.00251</link>
      <description>arXiv:2508.00251v2 Announce Type: replace 
Abstract: Reconstructing models from unorganized point clouds presents a significant challenge, especially when the models consist of multiple components represented by their surface point clouds. Such models often involve point clouds with noise that represent multiple closed surfaces with shared regions, making their automatic identification and separation inherently complex. In this paper, we propose an automatic method that uses the topological understanding provided by persistent homology, along with representative 2-cycles of persistent homology groups, to effectively distinguish and separate each closed surface. Furthermore, we employ Loop subdivision and least squares progressive iterative approximation (LSPIA) techniques to generate high-quality final surfaces and achieve complete model reconstruction. Our method is robust to noise in the point cloud, making it suitable for reconstructing models from such data. Experimental results demonstrate the effectiveness of our approach and highlight its potential for practical applications.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.00251v2</guid>
      <category>cs.CG</category>
      <pubDate>Tue, 26 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Yu Chen, Hongwei Lin</dc:creator>
    </item>
    <item>
      <title>A discrete wedge product on general polygonal meshes</title>
      <link>https://arxiv.org/abs/2504.14275</link>
      <description>arXiv:2504.14275v4 Announce Type: replace-cross 
Abstract: Discrete exterior calculus offers a coordinate-free discretization of exterior calculus especially suited for computations on curved spaces. In this work, we present a wedge product on 2-dimensional pseudomanifolds, whose faces are any polygons. We prove that this polygonal wedge product is compatible with the discrete exterior derivative in the sense that it satisfies the Leibniz product rule. We thus extend previously studied discretizations of wedge products from simplicial or quadrilateral meshes to surface meshes whose faces are arbitrary simple polygons. We also prove that our discrete wedge product corresponds to a cup product of cochains on 2-pseudomanifolds. By rigorously justifying our construction we add another piece to ever evolving discrete versions of exterior calculus.</description>
      <guid isPermaLink="false">oai:arXiv.org:2504.14275v4</guid>
      <category>math.AT</category>
      <category>cs.CG</category>
      <pubDate>Tue, 26 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-sa/4.0/</dc:rights>
      <dc:creator>Lenka Ptackova</dc:creator>
    </item>
    <item>
      <title>Topological potentials guiding protein self-assembly</title>
      <link>https://arxiv.org/abs/2508.15321</link>
      <description>arXiv:2508.15321v2 Announce Type: replace-cross 
Abstract: The simulated self-assembly of molecular building blocks into functional complexes is a key area of study in computational biology and materials science. Self-assembly simulations of proteins, driven by short-range non-polar interactions, can find the biologically correct assembly as the energy minimizing state. Short-ranged potentials produce rugged energy landscapes however, which lead to simulations becoming trapped in non-functional, local minimizers.
  Successful self-assembly simulations depend both on the physical realism of the driving potentials as well as their ability to efficiently explore the configuration space.
  We introduce a long-range topological potential, quantified via weighted total persistence, and combine it with the morphometric approach to solvation-free energy. This combination improves the assembly success rate in simulations of the tobacco mosaic virus dimer and other protein complexes by up to sixteen-fold compared with the morphometric model alone. It further enables successful simulation in systems that don't otherwise assemble during the examined timescales.
  Compared to previous topology-based work, which has been primarily descriptive, our approach uses topological measures as an active energetic bias that is independent of electrostatics or chemical specificity and depends only on atomic coordinates. Therefore the method can, in principle, be applied to arbitrary systems where such coordinates are optimized. Integrating topological descriptions into an energy function offers a general strategy for overcoming kinetic barriers in molecular simulations, with potential applications in drug design, materials development, and the study of complex self-assembly processes.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.15321v2</guid>
      <category>cond-mat.soft</category>
      <category>cs.CG</category>
      <category>math.AT</category>
      <pubDate>Tue, 26 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Ivan Spirandelli, Arnur Nigmetov, Dmitriy Morozov, Myfanwy E. Evans</dc:creator>
    </item>
  </channel>
</rss>
