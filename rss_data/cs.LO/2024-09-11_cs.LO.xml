<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.LO updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.LO</link>
    <description>cs.LO updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.LO" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Thu, 12 Sep 2024 01:45:40 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Wed, 11 Sep 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>Delay-Optimum Adder Circuits with Linear Size</title>
      <link>https://arxiv.org/abs/2409.06634</link>
      <description>arXiv:2409.06634v1 Announce Type: new 
Abstract: We present efficient circuits for the addition of binary numbers. We assume that we are given arrival times for all input bits and optimize the delay of the circuits, i.e.\ the time when the last output bit is computed. This contains the classical optimization of depth as a special case where all arrival times are $0$. In this model, we present, among other results, the fastest adder circuits of sub-quadratic size and the fastest adder circuits of linear size. In particular, for adding two $n$-numbers we get a circuits with linear size and delay $\log_2W+3\log_2\log_2n+4\log_2\log_2\log_2n +const$ where $\log_2W$ is a lower bound for the delay of any adder circuit (no matter what size it has).</description>
      <guid isPermaLink="false">oai:arXiv.org:2409.06634v1</guid>
      <category>cs.LO</category>
      <pubDate>Wed, 11 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <dc:creator>Ulrich Brenner, Benjamin David G\"org</dc:creator>
    </item>
    <item>
      <title>Reflections on Russell's antinomy</title>
      <link>https://arxiv.org/abs/2409.05903</link>
      <description>arXiv:2409.05903v1 Announce Type: cross 
Abstract: We present Russell's antinomy using three distinct deductive systems, which are then compared to deepen the logical deductions that lead to the contradiction. Some inferential paths are then presented, alternative to the commonly accepted one, that allow for the formal assertion of the antinomy without deriving the contradiction, thus preserving the coherence of the system. In light of this, the purpose of this article is to propose a review of the consequences of asserting Russell's antinomy and, by extension, the widespread belief that any attempt to resolve a paradox is doomed to failure.</description>
      <guid isPermaLink="false">oai:arXiv.org:2409.05903v1</guid>
      <category>math.LO</category>
      <category>cs.LO</category>
      <pubDate>Wed, 11 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <dc:creator>Paola Cattabriga</dc:creator>
    </item>
    <item>
      <title>Coarse Descriptions and Cautious Preferences</title>
      <link>https://arxiv.org/abs/2409.06054</link>
      <description>arXiv:2409.06054v1 Announce Type: cross 
Abstract: We consider a model where an agent is must choose between alternatives that each provide only an imprecise description of the world (e.g. linguistic expressions). The set of alternatives is closed under logical conjunction and disjunction, but not necessarily negation. (Formally: it is a distributive lattice, but not necessarily a Boolean algebra). In our main result, each alternative is identified with a subset of an (endogenously defined) state space, and two axioms characterize maximin decision making. This means: from the agent's preferences over alternatives, we derive a preference order on the endogenous state space, such that alternatives are ranked in terms of their worst outcomes.</description>
      <guid isPermaLink="false">oai:arXiv.org:2409.06054v1</guid>
      <category>econ.TH</category>
      <category>cs.LO</category>
      <pubDate>Wed, 11 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Evan Piermont, Marcus Pivato</dc:creator>
    </item>
    <item>
      <title>Stochastic Processes with Expected Stopping Time</title>
      <link>https://arxiv.org/abs/2104.07278</link>
      <description>arXiv:2104.07278v4 Announce Type: replace 
Abstract: Markov chains are the de facto finite-state model for stochastic dynamical systems, and Markov decision processes (MDPs) extend Markov chains by incorporating non-deterministic behaviors. Given an MDP and rewards on states, a classical optimization criterion is the maximal expected total reward where the MDP stops after T steps, which can be computed by a simple dynamic programming algorithm. We consider a natural generalization of the problem where the stopping times can be chosen according to a probability distribution, such that the expected stopping time is T, to optimize the expected total reward. Quite surprisingly we establish inter-reducibility of the expected stopping-time problem for Markov chains with the Positivity problem (which is related to the well-known Skolem problem), for which establishing either decidability or undecidability would be a major breakthrough. Given the hardness of the exact problem, we consider the approximate version of the problem: we show that it can be solved in exponential time for Markov chains and in exponential space for MDPs.</description>
      <guid isPermaLink="false">oai:arXiv.org:2104.07278v4</guid>
      <category>cs.LO</category>
      <pubDate>Wed, 11 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Krishnendu Chatterjee, Laurent Doyen</dc:creator>
    </item>
    <item>
      <title>On the Home-Space Problem for Petri Nets and its Ackermannian Complexity</title>
      <link>https://arxiv.org/abs/2207.02697</link>
      <description>arXiv:2207.02697v3 Announce Type: replace 
Abstract: A set of configurations $H$ is a home-space for a set of configurations $X$ of aPetri net if every configuration reachable from (any configuration in) $X$ can reach (some configuration in) $H$. The semilinear home-space problem for Petri nets asks, given a Petri net and semilinear sets of configurations $X$, $H$, if $H$ is a home-space for $X$. In 1989, David de Frutos Escrig and Colette Johnen proved that the problem is decidable when $X$ is a singleton and $H$ is a finite union of linear sets with the same periods. In this paper, we show that the general (semilinear) problem is decidable. This result is obtained by proving a duality between the reachability problem and the non-home-space problem. In particular, we prove that for any Petri net and any semilinear set of configurations $H$ we can effectively compute a semilinear set $C$ of configurations, called a non-reachability core for $H$, such that for every set $X$ the set $H$ is not a home-space for $X$ if, and only if, $C$ is reachable from $X$. We show that the established relation to the reachability problem yields the Ackermann-completeness of the (semilinear) home-space problem. For this we also show that, given a Petri net with an initial marking, the set of minimal reachable markings can be constructed in Ackermannian time.</description>
      <guid isPermaLink="false">oai:arXiv.org:2207.02697v3</guid>
      <category>cs.LO</category>
      <pubDate>Wed, 11 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Petr Jan\v{c}ar, J\'er\^ome Leroux</dc:creator>
    </item>
    <item>
      <title>The Formal Theory of Monads, Univalently</title>
      <link>https://arxiv.org/abs/2212.08515</link>
      <description>arXiv:2212.08515v4 Announce Type: replace 
Abstract: We develop the formal theory of monads, as established by Street, in univalent foundations. This allows us to formally reason about various kinds of monads on the right level of abstraction. In particular, we define the bicategory of monads internal to a bicategory, and prove that it is univalent. We also define Eilenberg-Moore objects, and we show that both Eilenberg-Moore categories and Kleisli categories give rise to Eilenberg-Moore objects. Finally, we relate monads and adjunctions in arbitrary bicategories. Our work is formalized in Coq using the UniMath library.</description>
      <guid isPermaLink="false">oai:arXiv.org:2212.08515v4</guid>
      <category>cs.LO</category>
      <category>math.CT</category>
      <pubDate>Wed, 11 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Niels van der Weide</dc:creator>
    </item>
    <item>
      <title>An Infinite Needle in a Finite Haystack: Finding Infinite Counter-Models in Deductive Verification</title>
      <link>https://arxiv.org/abs/2310.16762</link>
      <description>arXiv:2310.16762v3 Announce Type: replace 
Abstract: First-order logic, and quantifiers in particular, are widely used in deductive verification. Quantifiers are essential for describing systems with unbounded domains, but prove difficult for automated solvers. Significant effort has been dedicated to finding quantifier instantiations that establish unsatisfiability, thus ensuring validity of a system's verification conditions. However, in many cases the formulas are satisfiable: this is often the case in intermediate steps of the verification process. For such cases, existing tools are limited to finding finite models as counterexamples. Yet, some quantified formulas are satisfiable but only have infinite models. Such infinite counter-models are especially typical when first-order logic is used to approximate inductive definitions such as linked lists or the natural numbers. The inability of solvers to find infinite models makes them diverge in these cases. In this paper, we tackle the problem of finding such infinite models. These models allow the user to identify and fix bugs in the modeling of the system and its properties. Our approach consists of three parts. First, we introduce symbolic structures as a way to represent certain infinite models. Second, we describe an effective model finding procedure that symbolically explores a given family of symbolic structures. Finally, we identify a new decidable fragment of first-order logic that extends and subsumes the many-sorted variant of EPR, where satisfiable formulas always have a model representable by a symbolic structure within a known family. We evaluate our approach on examples from the domains of distributed consensus protocols and of heap-manipulating programs. Our implementation quickly finds infinite counter-models that demonstrate the source of verification failures in a simple way, while SMT solvers and theorem provers such as Z3, cvc5, and Vampire diverge.</description>
      <guid isPermaLink="false">oai:arXiv.org:2310.16762v3</guid>
      <category>cs.LO</category>
      <category>cs.PL</category>
      <pubDate>Wed, 11 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <arxiv:DOI>10.1145/3632875</arxiv:DOI>
      <arxiv:journal_reference>Proceedings of the ACM on Programming Languages 8, no. POPL (2024): 970-1000</arxiv:journal_reference>
      <dc:creator>Neta Elad, Oded Padon, Sharon Shoham</dc:creator>
    </item>
    <item>
      <title>Exploiting Uncertainty for Querying Inconsistent Description Logics Knowledge Bases</title>
      <link>https://arxiv.org/abs/2306.09138</link>
      <description>arXiv:2306.09138v3 Announce Type: replace-cross 
Abstract: The necessity to manage inconsistency in Description Logics Knowledge Bases (KBs) has come to the fore with the increasing importance gained by the Semantic Web, where information comes from different sources that constantly change their content and may contain contradictory descriptions when considered either alone or together. Classical reasoning algorithms do not handle inconsistent KBs, forcing the debugging of the KB in order to remove the inconsistency. In this paper, we exploit an existing probabilistic semantics called DISPONTE to overcome this problem and allow queries also in case of inconsistent KBs. We implemented our approach in the reasoners TRILL and BUNDLE and empirically tested the validity of our proposal. Moreover, we formally compare the presented approach to that of the repair semantics, one of the most established semantics when considering DL reasoning tasks.</description>
      <guid isPermaLink="false">oai:arXiv.org:2306.09138v3</guid>
      <category>cs.AI</category>
      <category>cs.LO</category>
      <pubDate>Wed, 11 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Riccardo Zese, Evelina Lamma, Fabrizio Riguzzi</dc:creator>
    </item>
  </channel>
</rss>
