<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.DS updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.DS</link>
    <description>cs.DS updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.DS" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Mon, 24 Mar 2025 04:00:02 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Mon, 24 Mar 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Fast online node labeling with graph subsampling</title>
      <link>https://arxiv.org/abs/2503.16755</link>
      <description>arXiv:2503.16755v1 Announce Type: new 
Abstract: Large data applications rely on storing data in massive, sparse graphs with millions to trillions of nodes. Graph-based methods, such as node prediction, aim for computational efficiency regardless of graph size. Techniques like localized approximate personalized page rank (APPR) solve sparse linear systems with complexity independent of graph size, but is in terms of the maximum node degree, which can be much larger in practice than the average node degree for real-world large graphs. In this paper, we consider an \emph{online subsampled APPR method}, where messages are intentionally dropped at random. We use tools from graph sparsifiers and matrix linear algebra to give approximation bounds on the graph's spectral properties ($O(1/\epsilon^2)$ edges), and node classification performance (added $O(n\epsilon)$ overhead).</description>
      <guid isPermaLink="false">oai:arXiv.org:2503.16755v1</guid>
      <category>cs.DS</category>
      <category>cs.LG</category>
      <pubDate>Mon, 24 Mar 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Yushen Huang, Ertai Luo, Reza Babenezhad, Yifan Sun</dc:creator>
    </item>
    <item>
      <title>A 3.3904-Competitive Online Algorithm for List Update with Uniform Costs</title>
      <link>https://arxiv.org/abs/2503.17264</link>
      <description>arXiv:2503.17264v1 Announce Type: new 
Abstract: We consider the List Update problem where the cost of each swap is assumed to be 1. This is in contrast to the "standard" model, in which an algorithm is allowed to swap the requested item with previous items for free. We construct an online algorithm Full-Or-Partial-Move (FPM), whose competitive ratio is $R \approx 3.3904$, improving over the previous best known bound of 4.</description>
      <guid isPermaLink="false">oai:arXiv.org:2503.17264v1</guid>
      <category>cs.DS</category>
      <pubDate>Mon, 24 Mar 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Mateusz Basiak, Marcin Bienkowski, Martin B\"ohm, Marek Chrobak, {\L}ukasz Je\.z, Ji\v{r}\'i Sgall, Agnieszka Tatarczuk</dc:creator>
    </item>
    <item>
      <title>Local Ratio based Real-time Job Offloading and Resource Allocation in Mobile Edge Computing</title>
      <link>https://arxiv.org/abs/2503.16794</link>
      <description>arXiv:2503.16794v1 Announce Type: cross 
Abstract: Mobile Edge Computing (MEC) has emerged as a promising paradigm enabling vehicles to handle computation-intensive and time-sensitive applications for intelligent transportation. Due to the limited resources in MEC, effective resource management is crucial for improving system performance. While existing studies mostly focus on the job offloading problem and assume that job resource demands are fixed and given apriori, the joint consideration of job offloading (selecting the edge server for each job) and resource allocation (determining the bandwidth and computation resources for offloading and processing) remains underexplored. This paper addresses the joint problem for deadline-constrained jobs in MEC with both communication and computation resource constraints, aiming to maximize the total utility gained from jobs. To tackle this problem, we propose an approximation algorithm, $\mathtt{IDAssign}$, with an approximation bound of $\frac{1}{6}$, and experimentally evaluate the performance of $\mathtt{IDAssign}$ by comparing it to state-of-the-art heuristics using a real-world taxi trace and object detection applications.</description>
      <guid isPermaLink="false">oai:arXiv.org:2503.16794v1</guid>
      <category>cs.DC</category>
      <category>cs.DM</category>
      <category>cs.DS</category>
      <pubDate>Mon, 24 Mar 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Chuanchao Gao, Arvind Easwaran</dc:creator>
    </item>
    <item>
      <title>Fast Quantum Amplitude Encoding of Typical Classical Data</title>
      <link>https://arxiv.org/abs/2503.17113</link>
      <description>arXiv:2503.17113v1 Announce Type: cross 
Abstract: We present an improved version of a quantum amplitude encoding scheme that encodes the $N$ entries of a unit classical vector $\vec{v}=(v_1,..,v_N)$ into the amplitudes of a quantum state. Our approach has a quadratic speed-up with respect to the original one. We also describe several generalizations, including to complex entries of the input vector and a parameter $M$ that determines the parallelization. The number of qubits required for the state preparation scales as $\mathcal{O}(M\log N)$. The runtime, which depends on the data density $\rho$ and on the parallelization paramater $M$, scales as $\mathcal{O}(\frac{1}{\sqrt{\rho}}\frac{N}{M}\log (M+1))$, which in the most parallel version ($M=N$) is always less than $\mathcal{O}(\sqrt{N}\log N)$. By analysing the data density, we prove that the average runtime is $\mathcal{O}(\log^{1.5} N)$ for uniformly random inputs. We present numerical evidence that this favourable runtime behaviour also holds for real-world data, such as radar satellite images. This is promising as it allows for an input-to-output advantage of the quantum Fourier transform.</description>
      <guid isPermaLink="false">oai:arXiv.org:2503.17113v1</guid>
      <category>quant-ph</category>
      <category>cs.DS</category>
      <pubDate>Mon, 24 Mar 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Vittorio Pagni, Sigurd Huber, Michael Epping, Michael Felderer</dc:creator>
    </item>
    <item>
      <title>A new notion of commutativity for the algorithmic Lov\'{a}sz Local Lemma</title>
      <link>https://arxiv.org/abs/2008.05569</link>
      <description>arXiv:2008.05569v5 Announce Type: replace 
Abstract: The Lov\'{a}sz Local Lemma (LLL) is a powerful tool in probabilistic combinatorics which can be used to establish the existence of objects that satisfy certain properties. The breakthrough paper of Moser and Tardos and follow-up works revealed that the LLL has intimate connections with a class of stochastic local search algorithms for finding such desirable objects. In particular, it can be seen as a sufficient condition for this type of algorithms to converge fast.
  Besides conditions for existence of and fast convergence to desirable objects, one may naturally ask further questions regarding properties of these algorithms. For instance, "are they parallelizable?", "how many solutions can they output?", "what is the expected "weight" of a solution?", etc. These questions and more have been answered for a class of LLL-inspired algorithms called commutative. In this paper we introduce a new, very natural and more general notion of commutativity (essentially matrix commutativity) which allows us to show a number of new refined properties of LLL-inspired local search algorithms with significantly simpler proofs.</description>
      <guid isPermaLink="false">oai:arXiv.org:2008.05569v5</guid>
      <category>cs.DS</category>
      <category>math.PR</category>
      <pubDate>Mon, 24 Mar 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <arxiv:journal_reference>RANDOM 2021</arxiv:journal_reference>
      <dc:creator>David G. Harris, Fotis Iliopoulos, Vladimir Kolmogorov</dc:creator>
    </item>
    <item>
      <title>Parameterized Max Min Feedback Vertex Set</title>
      <link>https://arxiv.org/abs/2302.09604</link>
      <description>arXiv:2302.09604v3 Announce Type: replace 
Abstract: Given a graph $G$ and an integer $k$, Max Min FVS asks whether there exists a minimal set of vertices of size at least $k$ whose deletion destroys all cycles. We present several results that improve upon the state of the art of the parameterized complexity of this problem with respect to both structural and natural parameters.
  Using standard DP techniques, we first present an algorithm of time $\textrm{tw}^{O(\textrm{tw})}n^{O(1)}$, significantly generalizing a recent algorithm of Gaikwad et al. of time $\textrm{vc}^{O(\textrm{vc})}n^{O(1)}$, where $\textrm{tw}, \textrm{vc}$ denote the input graph's treewidth and vertex cover respectively. Subsequently, we show that both of these algorithms are essentially optimal, since a $\textrm{vc}^{o(\textrm{vc})}n^{O(1)}$ algorithm would refute the ETH.
  With respect to the natural parameter $k$, the aforementioned recent work by Gaikwad et al. claimed an FPT branching algorithm with complexity $10^k n^{O(1)}$. We point out that this algorithm is incorrect and present a branching algorithm of complexity $9.34^k n^{O(1)}$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2302.09604v3</guid>
      <category>cs.DS</category>
      <category>cs.CC</category>
      <pubDate>Mon, 24 Mar 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Michael Lampis, Nikolaos Melissinos, Manolis Vasilakis</dc:creator>
    </item>
    <item>
      <title>The Bathroom Model: A Realistic Approach to Hash Table Algorithm Optimization</title>
      <link>https://arxiv.org/abs/2502.10977</link>
      <description>arXiv:2502.10977v2 Announce Type: replace 
Abstract: Hash table search strategies have remained a pivotal area of inquiry in computer science over the past several decades. A prevailing viewpoint asserts that random probing stands as the optimal method for open-addressing hash tables. Challenging this long-standing belief, a recent contribution introduces an elastic probing technique based on fixed interval thresholds. Although this method presents improvements over traditional strategies, its dependence on static thresholds limits its theoretical optimality.
  In this paper, we propose a new conceptual model for optimizing hash table probing, inspired by human behavior in selecting restroom stalls - dubbed the "Bathroom Model." Unlike fixed or purely random approaches, our technique dynamically updates probing decisions using previously observed occupancy patterns, resulting in a more intelligent and adaptive search process. We rigorously formalize this model, analyze its theoretical properties, and benchmark its performance against leading hash table algorithms. Our findings indicate that adaptive probing mechanisms can significantly enhance search efficiency while keeping computational demands minimal. This work not only sheds new light on an extensively studied problem but also points to broader algorithmic opportunities in rethinking classical data structures.</description>
      <guid isPermaLink="false">oai:arXiv.org:2502.10977v2</guid>
      <category>cs.DS</category>
      <pubDate>Mon, 24 Mar 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Qiantong Wang</dc:creator>
    </item>
    <item>
      <title>Improved FPT Approximation Algorithms for TSP</title>
      <link>https://arxiv.org/abs/2503.03642</link>
      <description>arXiv:2503.03642v2 Announce Type: replace 
Abstract: TSP is a classic and extensively studied problem with numerous real-world applications in artificial intelligence and operations research. It is well-known that TSP admits a constant approximation ratio on metric graphs but becomes NP-hard to approximate within any computable function $f(n)$ on general graphs. This disparity highlights a significant gap between the results on metric graphs and general graphs. Recent research has introduced some parameters to measure the ``distance'' of general graphs from being metric and explored FPT approximation algorithms parameterized by these parameters. Two commonly studied parameters are $p$, the number of vertices in triangles violating the triangle inequality, and $q$, the minimum number of vertices whose removal results in a metric graph. In this paper, we present improved FPT approximation algorithms with respect to these two parameters. For $p$, we propose an FPT algorithm with a 1.5-approximation ratio, improving upon the previous ratio of 2.5. For $q$, we significantly enhance the approximation ratio from 11 to 3, advancing the state of the art in both cases.</description>
      <guid isPermaLink="false">oai:arXiv.org:2503.03642v2</guid>
      <category>cs.DS</category>
      <pubDate>Mon, 24 Mar 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Jingyang Zhao, Zimo Sheng, Mingyu Xiao</dc:creator>
    </item>
  </channel>
</rss>
