<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.DM updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.DM</link>
    <description>cs.DM updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.DM" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Thu, 30 Jan 2025 05:01:22 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Thu, 30 Jan 2025 00:00:00 -0500</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>Twenty years of Ne\v{s}et\v{r}il's classification programme of Ramsey classes</title>
      <link>https://arxiv.org/abs/2501.17293</link>
      <description>arXiv:2501.17293v1 Announce Type: cross 
Abstract: In the 1970s, structural Ramsey theory emerged as a new branch of combinatorics. This development came with the isolation of the concepts of the $\mathbf{A}$-Ramsey property and Ramsey class. Following the influential Ne\v{s}et\v{r}il-R\"{o}dl theorem, several Ramsey classes have been identified. In the 1980s Ne\v{s}et\v{r}il, inspired by a seminar of Lachlan, discovered a crucial connection between Ramsey classes and Fra\"{\i}ss\'{e} classes and, in his 1989 paper, connected the classification programme of homogeneous structures to structural Ramsey theory. In 2005, Kechris, Pestov, and Todor\v{c}evi\'{c} revitalized the field by connecting Ramsey classes to topological dynamics. This breakthrough motivated Ne\v{s}et\v{r}il to propose a program for classifying Ramsey classes. We review the progress made on this program in the past two decades, list open problems, and discuss recent extensions to new areas, namely the extension property for partial automorphisms (EPPA), and big Ramsey structures.</description>
      <guid isPermaLink="false">oai:arXiv.org:2501.17293v1</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <category>math.HO</category>
      <category>math.LO</category>
      <pubDate>Thu, 30 Jan 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Jan Hubi\v{c}ka, Mat\v{e}j Kone\v{c}n\'y</dc:creator>
    </item>
    <item>
      <title>Better and Simpler Reducibility Bounds over the Integers</title>
      <link>https://arxiv.org/abs/2501.17638</link>
      <description>arXiv:2501.17638v1 Announce Type: cross 
Abstract: We study the settings where we are given a function of n variables defined in a given box of integers. We show that in many cases we can replace the given objective function by a new function with a much smaller domain. Our approach allows us to transform a family of weakly polynomial time algorithms into strongly polynomial time algorithms.</description>
      <guid isPermaLink="false">oai:arXiv.org:2501.17638v1</guid>
      <category>math.OC</category>
      <category>cs.DM</category>
      <category>cs.DS</category>
      <pubDate>Thu, 30 Jan 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Asaf Levin</dc:creator>
    </item>
    <item>
      <title>Belief Propagation Guided Decimation on Random k-XORSAT</title>
      <link>https://arxiv.org/abs/2501.17657</link>
      <description>arXiv:2501.17657v1 Announce Type: cross 
Abstract: We analyse the performance of Belief Propagation Guided Decimation, a physics-inspired message passing algorithm, on the random $k$-XORSAT problem. Specifically, we derive an explicit threshold up to which the algorithm succeeds with a strictly positive probability $\Omega(1)$ that we compute explicitly, but beyond which the algorithm with high probability fails to find a satisfying assignment. In addition, we analyse a thought experiment called the decimation process for which we identify a (non-) reconstruction and a condensation phase transition. The main results of the present work confirm physics predictions from [RTS: J. Stat. Mech. 2009] that link the phase transitions of the decimation process with the performance of the algorithm, and improve over partial results from a recent article [Yung: Proc. ICALP 2024].</description>
      <guid isPermaLink="false">oai:arXiv.org:2501.17657v1</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <pubDate>Thu, 30 Jan 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Arnab Chatterjee, Amin Coja-Oghlan, Mihyun Kang, Lena Krieg, Maurice Rolvien, Gregory B. Sorkin</dc:creator>
    </item>
    <item>
      <title>Using Code Generation to Solve Open Instances of Combinatorial Design Problems</title>
      <link>https://arxiv.org/abs/2501.17725</link>
      <description>arXiv:2501.17725v1 Announce Type: cross 
Abstract: The Handbook of Combinatorial Designs catalogs many types of combinatorial designs, together with lists of open instances for which existence has not yet been determined. We develop a constructive protocol CPro1, which uses Large Language Models (LLMs) to generate code that constructs combinatorial designs and resolves some of these open instances. The protocol starts from a definition of a particular type of design, and a verifier that reliably confirms whether a proposed design is valid. The LLM selects strategies and implements them in code, and scaffolding provides automated hyperparameter tuning and execution feedback using the verifier. Most generated code fails, but by generating many candidates, the protocol automates exploration of a variety of standard methods (e.g. simulated annealing, genetic algorithms) and experimentation with variations (e.g. cost functions) to find successful approaches. Testing on 16 different types of designs, CPro1 constructs solutions to open instances for 6 of them: Symmetric and Skew Weighing Matrices, Equidistant Permutation Arrays, Packing Arrays, Balanced Ternary Designs, and Florentine Rectangles.</description>
      <guid isPermaLink="false">oai:arXiv.org:2501.17725v1</guid>
      <category>cs.AI</category>
      <category>cs.CL</category>
      <category>cs.DM</category>
      <category>math.CO</category>
      <pubDate>Thu, 30 Jan 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Christopher D. Rosin</dc:creator>
    </item>
    <item>
      <title>Discrete Level Set Persistence for Finite Discrete Functions</title>
      <link>https://arxiv.org/abs/2501.17794</link>
      <description>arXiv:2501.17794v1 Announce Type: cross 
Abstract: We study sublevel set and superlevel set persistent homology on discrete functions through the perspective of finite ordered sets of both linearly ordered and cyclically ordered domains. Finite ordered sets also serve as the codomain of our functions making all arguments finite and discrete. We prove duality of filtrations of sublevel sets and superlevel sets that undergirths a range of duality results of sublevel set persistent homology without the need to invoke complications of continuous functions or classical Morse theory. We show that Morse-like behavior can be achieved for flat extrema without assuming genericity. Additionally, we show that with inversion of order, one can compute sublevel set persistence from superlevel set persistence, and vice versa via a duality result that does not require the boundary to be treated as a special case. Furthermore, we discuss aspects of barcode construction rules, surgery of circular and linearly ordered sets, as well as surgery on auxiliary structures such as box snakes, which segment the ordered set by extrema and monotones.</description>
      <guid isPermaLink="false">oai:arXiv.org:2501.17794v1</guid>
      <category>math.AT</category>
      <category>cs.CG</category>
      <category>cs.DM</category>
      <pubDate>Thu, 30 Jan 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Robin Belton, Georg Essl</dc:creator>
    </item>
    <item>
      <title>Single-conflict colorings of degenerate graphs</title>
      <link>https://arxiv.org/abs/2112.06333</link>
      <description>arXiv:2112.06333v2 Announce Type: replace-cross 
Abstract: We consider the single-conflict coloring problem, a graph coloring problem in which each edge of a graph receives a forbidden ordered color pair. The task is to find a vertex coloring such that no two adjacent vertices receive a pair of colors forbidden at an edge joining them. We show that for any assignment of forbidden color pairs to the edges of a $d$-degenerate graph $G$ on $n$ vertices of edge-multiplicity at most $\log \log n$, $O(\sqrt{ d } \log n)$ colors are always enough to color the vertices of $G$ in a way that avoids every forbidden color pair. This answers a question of Dvo\v{r}\'ak, Esperet, Kang, and Ozeki for simple graphs (Journal of Graph Theory 2021).</description>
      <guid isPermaLink="false">oai:arXiv.org:2112.06333v2</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <pubDate>Thu, 30 Jan 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <arxiv:DOI>10.1002/jgt.23025 10.5817/CZ.MUNI.EUROCOMB23-028</arxiv:DOI>
      <arxiv:journal_reference>Journal of Graph Theory; Proceedings: European Conference on Combinatorics, Graph Theory and Applications, EUROCOMB 2023</arxiv:journal_reference>
      <dc:creator>Peter Bradshaw, Tom\'a\v{s} Masa\v{r}\'ik</dc:creator>
    </item>
    <item>
      <title>Finding a Minimum Spanning Tree with a Small Non-Terminal Set</title>
      <link>https://arxiv.org/abs/2310.05494</link>
      <description>arXiv:2310.05494v2 Announce Type: replace-cross 
Abstract: In this paper, we study the problem of finding a minimum weight spanning tree that contains each vertex in a given subset $V_{\rm NT}$ of vertices as an internal vertex. This problem, called Minimum Weight Non-Terminal Spanning Tree, includes $s$-$t$ Hamiltonian Path as a special case, and hence it is NP-hard. In this paper, we first observe that Non-Terminal Spanning Tree, the unweighted counterpart of Minimum Weight Non-Terminal Spanning Tree, is already NP-hard on some special graph classes. Moreover, it is W[1]-hard when parameterized by clique-width. In contrast, we give a $3k$-vertex kernel and $O^*(2^k)$-time algorithm, where $k$ is the size of non-terminal set $V_{\rm NT}$. The latter algorithm can be extended to Minimum Weight Non-Terminal Spanning Tree with the restriction that each edge has a polynomially bounded integral weight. We also show that Minimum Weight Non-Terminal Spanning Tree is fixed-parameter tractable parameterized by the number of edges in the subgraph induced by the non-terminal set $V_{\rm NT}$, extending the fixed-parameter tractability of Minimum Weight Non-Terminal Spanning Tree to the general case. Finally, we give several results for structural parameterization.</description>
      <guid isPermaLink="false">oai:arXiv.org:2310.05494v2</guid>
      <category>cs.DS</category>
      <category>cs.CC</category>
      <category>cs.DM</category>
      <pubDate>Thu, 30 Jan 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Tesshu Hanaka, Yasuaki Kobayashi</dc:creator>
    </item>
    <item>
      <title>Graph Burning: Bounds and Hardness</title>
      <link>https://arxiv.org/abs/2402.18984</link>
      <description>arXiv:2402.18984v3 Announce Type: replace-cross 
Abstract: For an undirected graph $G$, graph burning is defined as follows: at step $t=0$ all vertices in $G$ are unburned. At each step $t\ge 1$, one new unburned vertex is selected to burn until we exhaust all the vertices. If a vertex is burned at step $t$, then all its unburned neighbors are burned in step $t+1$, and the process continues until there are no unburned vertices in $G$. The burning number of a graph $G$, denoted by $b(G)$, is the minimum number of steps required to burn all the vertices of $G$. The Burning Number problem asks whether the burning number of an input graph $G$ is at most $k$ or not. In this paper, we study the Burning Number problem both from an algorithmic and a structural point of view. The Burning Number problem is known to be NP-complete for trees with maximum degree at most three and interval graphs. Here, we prove that this problem is NP-complete even when restricted to connected cubic graphs and connected proper interval graphs. The well-known burning number conjecture asserts that all the vertices of a graph of order $n$ can be burned in $\lceil \sqrt{n}~\rceil$ steps. In line with this conjecture, upper and lower bounds of $b(G)$ are well-studied for various graph classes. Here, we provide an improved upper bound for the burning number of connected $P_k$-free graphs and show that the bound is tight up to an additive constant $1$. Finally, we study two variants of the problem, namely edge burning (only edges are burned) and total burning (both vertices and edges are burned). In particular, we establish their relationship with the burning number problem and evaluate the algorithmic complexity of these variants.</description>
      <guid isPermaLink="false">oai:arXiv.org:2402.18984v3</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <pubDate>Thu, 30 Jan 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Dhanyamol Antony, Anita Das, Shirish Gosavi, Dalu Jacob, Shashanka Kulamarva</dc:creator>
    </item>
    <item>
      <title>Orientable and negative orientable sequences</title>
      <link>https://arxiv.org/abs/2409.00672</link>
      <description>arXiv:2409.00672v3 Announce Type: replace-cross 
Abstract: Analogously to de Bruijn sequences, orientable sequences have application in automatic position-location applications and, until recently, studies of these sequences focused on the binary case. In recent work by Alhakim et al., a range of methods of construction were described for orientable sequences over arbitrary finite alphabets; some of these methods involve using negative orientable sequences as a building block. In this paper we describe three techniques for generating such negative orientable sequences, as well as upper bounds on their period. We then go on to show how these negative orientable sequences can be used to generate orientable sequences with period close to the maximum possible for every non-binary alphabet size and for every tuple length. In doing so we use two closely related approaches described by Alhakim et al.</description>
      <guid isPermaLink="false">oai:arXiv.org:2409.00672v3</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <pubDate>Thu, 30 Jan 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Chris J Mitchell, Peter R Wild</dc:creator>
    </item>
    <item>
      <title>Erd\H{o}s-P\'{o}sa property of cycles that are far apart</title>
      <link>https://arxiv.org/abs/2412.13893</link>
      <description>arXiv:2412.13893v2 Announce Type: replace-cross 
Abstract: We prove that there exist functions $f,g:\mathbb{N}\to\mathbb{N}$ such that for all nonnegative integers $k$ and $d$, for every graph $G$, either $G$ contains $k$ cycles such that vertices of different cycles have distance greater than $d$ in $G$, or there exists a subset $X$ of vertices of $G$ with $|X|\leq f(k)$ such that $G-B_G(X,g(d))$ is a forest, where $B_G(X,r)$ denotes the set of vertices of $G$ having distance at most $r$ from a vertex of $X$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2412.13893v2</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <pubDate>Thu, 30 Jan 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Vida Dujmovi\'c, Gwena\"el Joret, Piotr Micek, Pat Morin</dc:creator>
    </item>
    <item>
      <title>An Efficient Algorithm for Permutation Iteration Using a Singly Linked List</title>
      <link>https://arxiv.org/abs/2501.10102</link>
      <description>arXiv:2501.10102v5 Announce Type: replace-cross 
Abstract: We present a new algorithm for iterating over all permutations of a sequence. The algorithm leverages elementary $O(1)$ operations on recursive lists. As a result, no new nodes are allocated during the computation. Instead, all elements are rearranged within the original nodes of the singly linked list throughout the process. While permutations are generated in an unusual order, the transitions between consecutive permutations remain smooth. A proof of concept written in the Lisp programming language is proposed and discussed.</description>
      <guid isPermaLink="false">oai:arXiv.org:2501.10102v5</guid>
      <category>cs.DS</category>
      <category>cs.DM</category>
      <category>math.CO</category>
      <pubDate>Thu, 30 Jan 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-sa/4.0/</dc:rights>
      <dc:creator>Thomas Baruchel</dc:creator>
    </item>
  </channel>
</rss>
