<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.LO updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.LO</link>
    <description>cs.LO updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.LO" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Fri, 08 Nov 2024 05:00:02 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Fri, 08 Nov 2024 00:00:00 -0500</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>The Functional Machine Calculus III: Choice (Early Announcement)</title>
      <link>https://arxiv.org/abs/2411.04615</link>
      <description>arXiv:2411.04615v1 Announce Type: new 
Abstract: The Functional Machine Calculus (Heijltjes 2022) is an extension of the lambda-calculus that preserves confluent reduction and typed termination, while enabling both call-by-name and call-by-value reduction behaviour and encoding the computational effects of mutable higher-order store, input/output, and probabilistic computation. In this note the calculus is extended to capture exception handling and loop constructs.</description>
      <guid isPermaLink="false">oai:arXiv.org:2411.04615v1</guid>
      <category>cs.LO</category>
      <pubDate>Fri, 08 Nov 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Willem Heijltjes</dc:creator>
    </item>
    <item>
      <title>An Axiomatic Study of the Evaluation of Enthymeme Decoding in Weighted Structured Argumentation</title>
      <link>https://arxiv.org/abs/2411.04555</link>
      <description>arXiv:2411.04555v1 Announce Type: cross 
Abstract: An argument can be seen as a pair consisting of a set of premises and a claim supported by them. Arguments used by humans are often enthymemes, i.e., some premises are implicit. To better understand, evaluate, and compare enthymemes, it is essential to decode them, i.e., to find the missing premisses. Many enthymeme decodings are possible. We need to distinguish between reasonable decodings and unreasonable ones. However, there is currently no research in the literature on "How to evaluate decodings?". To pave the way and achieve this goal, we introduce seven criteria related to decoding, based on different research areas. Then, we introduce the notion of criterion measure, the objective of which is to evaluate a decoding with regard to a certain criterion. Since such measures need to be validated, we introduce several desirable properties for them, called axioms. Another main contribution of the paper is the construction of certain criterion measures that are validated by our axioms. Such measures can be used to identify the best enthymemes decodings.</description>
      <guid isPermaLink="false">oai:arXiv.org:2411.04555v1</guid>
      <category>cs.AI</category>
      <category>cs.LO</category>
      <pubDate>Fri, 08 Nov 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Jonathan Ben-Naim, Victor David, Anthony Hunter</dc:creator>
    </item>
    <item>
      <title>Manifold Diagrams for Higher Categories</title>
      <link>https://arxiv.org/abs/2411.04870</link>
      <description>arXiv:2411.04870v1 Announce Type: cross 
Abstract: We develop a graphical calculus of manifold diagrams which generalises string and surface diagrams to arbitrary dimensions. Manifold diagrams are pasting diagrams for $(\infty, n)$-categories that admit a semi-strict composition operation for which associativity and unitality is strict. The weak interchange law satisfied by composition of manifold diagrams is determined geometrically through isotopies of diagrams. By building upon framed combinatorial topology, we can classify critical points in isotopies at which the arrangement of cells changes. This allows us to represent manifold diagrams combinatorially and use them as shapes with which to probe $(\infty, n)$-categories, presented as $n$-fold Segal spaces. Moreover, for any system of labels for the singularities in a manifold diagram, we show how to generate a free $(\infty, n)$-category.</description>
      <guid isPermaLink="false">oai:arXiv.org:2411.04870v1</guid>
      <category>math.AT</category>
      <category>cs.LO</category>
      <category>math.CT</category>
      <pubDate>Fri, 08 Nov 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Lukas Heidemann</dc:creator>
    </item>
    <item>
      <title>Reasonable Space for the $\lambda$-Calculus, Logarithmically</title>
      <link>https://arxiv.org/abs/2203.00362</link>
      <description>arXiv:2203.00362v5 Announce Type: replace 
Abstract: Can the $\lambda$-calculus be considered a reasonable computational model? Can we use it for measuring the time $\textit{and}$ space consumption of algorithms? While the literature contains positive answers about time, much less is known about space. This paper presents a new reasonable space cost model for the $\lambda$-calculus, based on a variant over the Krivine abstract machine. For the first time, this cost model is able to accommodate logarithmic space. Moreover, we study the time behavior of our machine and show how to transport our results to the call-by-value $\lambda$-calculus.</description>
      <guid isPermaLink="false">oai:arXiv.org:2203.00362v5</guid>
      <category>cs.LO</category>
      <category>cs.CC</category>
      <category>cs.PL</category>
      <pubDate>Fri, 08 Nov 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-sa/4.0/</dc:rights>
      <dc:creator>Beniamino Accattoli, Ugo Dal Lago, Gabriele Vanoni</dc:creator>
    </item>
    <item>
      <title>Equivalence of eval-readback and eval-apply big-step evaluators by structuring the lambda-calculus's strategy space</title>
      <link>https://arxiv.org/abs/2212.02494</link>
      <description>arXiv:2212.02494v5 Announce Type: replace 
Abstract: We study the equivalence between eval-readback and eval-apply big-step evaluators in the general setting of the pure lambda calculus. We study `one-step' equivalence (same strategy) and also discuss `big-step' equivalence (same final result). One-step equivalence extends for free to evaluators in other settings (calculi, programming languages, proof assistants, etc.) by restricting the terms (closed, convergent) while maintaining the strategy. We present a proof that one-step equivalence holds when (1) the `readback' stage satisfies straightforward well-formedness provisos, (2) the `eval' stage implements a `uniform' strategy, and (3) the eval-apply evaluator implements a `balanced hybrid' strategy that has `eval' as a subsidiary strategy. The proof proceeds the `lightweight fusion by fixed-point promotion' program transformation on evaluator implementations to fuse readback and eval into the balanced hybrid. The proof can be followed with no previous knowledge of the transformation. We use Haskell 2010 as the implementation language, with all evaluators written in monadic style to guarantee semantics (strategy) preservation, but the choice of implementation language is immaterial. To illustrate the large scope of the equivalence, we provide an extensive survey of the strategy space using canonical eval-apply evaluators in code and big-step `natural' operational semantics. We discuss the strategies' properties, some of their uses, and their abstract machines. We improve the formal definition of uniform and hybrid strategy, use it to structure the strategy space, and to obtain generic higher-order evaluators which are used in the equivalence proof. We introduce a systematic notation for both evaluator styles and use it to summarise strategy and evaluator equivalences, including (non-)equivalences within a style and (non-)equivalences between styles not proven by the transformation.</description>
      <guid isPermaLink="false">oai:arXiv.org:2212.02494v5</guid>
      <category>cs.LO</category>
      <pubDate>Fri, 08 Nov 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Pablo Nogueira (UDIT University of Design, Innovation and Technology, Madrid, Spain), \'Alvaro Garc\'ia-P\'erez (Universit\'e Paris-Saclay, CEA List, F-91120, Palaiseau, France)</dc:creator>
    </item>
    <item>
      <title>Strategies as Resource Terms, and their Categorical Semantics</title>
      <link>https://arxiv.org/abs/2302.04685</link>
      <description>arXiv:2302.04685v4 Announce Type: replace 
Abstract: As shown by Tsukada and Ong, simply-typed, normal and eta-long resource terms correspond to plays in Hyland-Ong games, quotiented by Melli\`es' homotopy equivalence. The original proof of this inspiring result is indirect, relying on the injectivity of the relational model with respect to both sides of the correspondence -- in particular, the dynamics of the resource calculus is taken into account only via the compatibility of the relational model with the composition of normal terms defined by normalization. In the present paper, we revisit and extend these results. Our first contribution is to restate the correspondence by considering causal structures we call augmentations, which are canonical representatives of Hyland-Ong plays up to homotopy. This allows us to give a direct and explicit account of the connection with normal resource terms. As a second contribution, we extend this account to the reduction of resource terms: building on a notion of strategies as weighted sums of augmentations, we provide a denotational model of the resource calculus, invariant under reduction. A key step -- and our third contribution -- is a categorical model we call a resource category, which is to the resource calculus what differential categories are to the differential lambda-calculus.</description>
      <guid isPermaLink="false">oai:arXiv.org:2302.04685v4</guid>
      <category>cs.LO</category>
      <pubDate>Fri, 08 Nov 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Lison Blondeau-Patissier, Pierre Clairambault, Lionel Vaux Auclair</dc:creator>
    </item>
    <item>
      <title>Constraint Automata on Infinite Data Trees: From CTL(Z)/CTL*(Z) To Decision Procedures</title>
      <link>https://arxiv.org/abs/2302.05327</link>
      <description>arXiv:2302.05327v4 Announce Type: replace 
Abstract: We introduce the class of tree constraint automata with data values in Z (equipped with the less than relation and equality predicates to constants) and we show that the nonemptiness problem is ExpTime-complete. Using an automata-based approach, we establish that the satisfiability problem for CTL(Z) (CTL with constraints in Z) is ExpTime-complete and the satisfiability problem for CTL*(Z) is 2ExpTime-complete solving a longstanding open problem (only decidability was known so far). By-product results with other concrete domains and other logics, such as description logics with concrete domains, are also briefly presented.</description>
      <guid isPermaLink="false">oai:arXiv.org:2302.05327v4</guid>
      <category>cs.LO</category>
      <pubDate>Fri, 08 Nov 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Stephane Demri, Karin Quaas</dc:creator>
    </item>
    <item>
      <title>Verification of Recursively Defined Quantum Circuits</title>
      <link>https://arxiv.org/abs/2404.05934</link>
      <description>arXiv:2404.05934v2 Announce Type: replace-cross 
Abstract: Recursive techniques have recently been introduced into quantum programming so that a variety of large quantum circuits and algorithms can be elegantly and economically programmed. In this paper, we present a proof system for formal verification of the correctness of recursively defined quantum circuits. The soundness and (relative) completeness of the proof system are established. To demonstrating its effectiveness, a series of application examples of the proof system are given, including (multi-qubit) controlled gates, a quantum circuit generating (multi-qubit) GHZ (Greenberger-Horne-Zeilinger) states, recursive definition of quantum Fourier transform, quantum state preparation, and quantum random-access memories (QRAM).</description>
      <guid isPermaLink="false">oai:arXiv.org:2404.05934v2</guid>
      <category>quant-ph</category>
      <category>cs.LO</category>
      <category>cs.PL</category>
      <pubDate>Fri, 08 Nov 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Mingsheng Ying, Zhicheng Zhang</dc:creator>
    </item>
  </channel>
</rss>
