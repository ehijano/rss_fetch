<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.LO updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.LO</link>
    <description>cs.LO updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.LO" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Fri, 03 Oct 2025 04:01:02 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Fri, 03 Oct 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>Sequent Calculi for Data-Aware Modal Logics</title>
      <link>https://arxiv.org/abs/2510.01868</link>
      <description>arXiv:2510.01868v1 Announce Type: new 
Abstract: Data-aware modal logics offer a powerful formalism for reasoning about semi-structured queries in languages such as DataGL, XPath, and GQL. In brief, these logics can be viewed as modal systems capable of expressing both reachability statements and data-aware properties, such as value comparisons. One particularly expressive logic in this landscape is HXpathD, a hybrid modal logic that captures not only the navigational core of XPath but also data comparisons, node labels (keys), and key-based navigation operators. While previous work on HXpathD has primarily focused on its model-theoretic properties, in this paper we approach HXpathD from a proof-theoretic perspective. Concretely, we present a sound and complete Gentzen-style sequent calculus for HXpathD. Moreover, we show all rules in this calculus are invertible, and that it enjoys cut elimination. Our work contributes to the proof-theoretic foundations of data-aware modal logics, and enables a deeper logical analysis of query languages over graph-structured data. Moreover, our results lay the groundwork for extending proof-theoretic techniques to a broader class of modal systems.</description>
      <guid isPermaLink="false">oai:arXiv.org:2510.01868v1</guid>
      <category>cs.LO</category>
      <pubDate>Fri, 03 Oct 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:DOI>10.4204/EPTCS.430.2</arxiv:DOI>
      <arxiv:journal_reference>EPTCS 430, 2025, pp. 8-25</arxiv:journal_reference>
      <dc:creator>Carlos Areces (Universidad Nacional de Cordoba,CONICET), Valentin Cassano (Universidad Nacional de Rio Cuarto,CONICET), Danae Dutto (Universidad Nacional de Cordoba,CONICET), Raul Fervari (Universidad Nacional de Cordoba,CONICET)</dc:creator>
    </item>
    <item>
      <title>Computability of extender sets in multidimensional subshifts: asymptotic growths, dynamical constraints</title>
      <link>https://arxiv.org/abs/2401.07549</link>
      <description>arXiv:2401.07549v3 Announce Type: cross 
Abstract: Subshifts are sets of colorings of $\mathbb{Z}^d$ defined by families of forbidden patterns. In a given subshift, the extender set of a finite pattern is the set of all its admissible completions. Since soficity of $\mathbb{Z}$ subshifts is equivalent to having a finite number of extender sets, it had been conjectured that the number of extender sets could provide a way to separate the classes of sofic and effective subshifts in higher dimensions. We investigate some computational characterizations of extender sets in multidimensional subshifts, and in particular their growth, in terms of extender entropies (arXiv:1711.07515) and extender entropy dimensions. We prove here that sofic and effective subshifts have the same possible extender entropies (exactly the $\Pi_3$-computable real numbers of $[0,+\infty)$) and extender entropy dimensions, and investigate the computational complexity of these growth-type quantities under various dynamical and combinatorial constraints.</description>
      <guid isPermaLink="false">oai:arXiv.org:2401.07549v3</guid>
      <category>cs.DM</category>
      <category>cs.CC</category>
      <category>cs.LO</category>
      <category>math.DS</category>
      <pubDate>Fri, 03 Oct 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:DOI>10.4230/LIPIcs.STACS.2025.21</arxiv:DOI>
      <dc:creator>Antonin Callard, L\'eo Paviet Salomon, Pascal Vanier</dc:creator>
    </item>
    <item>
      <title>MightyPPL: Verification of MITL with Past and Pnueli Modalities</title>
      <link>https://arxiv.org/abs/2510.01490</link>
      <description>arXiv:2510.01490v1 Announce Type: cross 
Abstract: Metric Interval Temporal Logic (MITL) is a popular formalism for specifying properties of reactive systems with timing constraints. Existing approaches to using MITL in verification tasks, however, have notable drawbacks: they either support only limited fragments of the logic or allow for only incomplete verification. This paper introduces MightyPPL, a new tool for translating formulae in Metric Interval Temporal Logic with Past and Pnueli modalities (MITPPL) over the pointwise semantics into timed automata. MightyPPL enables satisfiability and model checking of a much more expressive specification logic over both finite and infinite words and incorporates a number of performance optimisations, including a novel symbolic encoding of transitions and a symmetry reduction technique that leads to an exponential improvement in the number of reachable discrete states. For a given MITPPL formula, MightyPPL can generate either a network of timed automata or a single timed automaton that is language-equivalent and compatible with multiple verification back-ends, including Uppaal, TChecker, and LTSmin, which supports multi-core model checking. We evaluate the performance of the toolchain across various case studies and configuration options.</description>
      <guid isPermaLink="false">oai:arXiv.org:2510.01490v1</guid>
      <category>cs.FL</category>
      <category>cs.LO</category>
      <pubDate>Fri, 03 Oct 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Hsi-Ming Ho, Shankara Narayanan Krishna, Khushraj Madnani, Rupak Majumdar, Paritosh Pandya</dc:creator>
    </item>
    <item>
      <title>Learning Representations Through Contrastive Neural Model Checking</title>
      <link>https://arxiv.org/abs/2510.01853</link>
      <description>arXiv:2510.01853v1 Announce Type: cross 
Abstract: Model checking is a key technique for verifying safety-critical systems against formal specifications, where recent applications of deep learning have shown promise. However, while ubiquitous for vision and language domains, representation learning remains underexplored in formal verification. We introduce Contrastive Neural Model Checking (CNML), a novel method that leverages the model checking task as a guiding signal for learning aligned representations. CNML jointly embeds logical specifications and systems into a shared latent space through a self-supervised contrastive objective. On industry-inspired retrieval tasks, CNML considerably outperforms both algorithmic and neural baselines in cross-modal and intra-modal settings.We further show that the learned representations effectively transfer to downstream tasks and generalize to more complex formulas. These findings demonstrate that model checking can serve as an objective for learning representations for formal languages.</description>
      <guid isPermaLink="false">oai:arXiv.org:2510.01853v1</guid>
      <category>cs.LG</category>
      <category>cs.LO</category>
      <pubDate>Fri, 03 Oct 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Vladimir Krsmanovic, Matthias Cosler, Mohamed Ghanem, Bernd Finkbeiner</dc:creator>
    </item>
    <item>
      <title>A Category-Theoretic Perspective on Higher-Order Approximation Fixpoint Theory</title>
      <link>https://arxiv.org/abs/2408.11712</link>
      <description>arXiv:2408.11712v2 Announce Type: replace 
Abstract: Approximation Fixpoint Theory (AFT) is an algebraic framework designed to study the semantics of non-monotonic logics. Despite its success, AFT is not readily applicable to higher-order definitions. To solve such an issue, we devise a formal mathematical framework employing concepts drawn from Category Theory. In particular, we make use of the notion of Cartesian closed category to inductively construct higher-order approximation spaces while preserving the structures necessary for the correct application of AFT. We show that this novel theoretical approach extends standard AFT to a higher-order environment, and generalizes the AFT setting of arXiv:1804.08335 . Under consideration in Theory and Practice of Logic Programming (TPLP).</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.11712v2</guid>
      <category>cs.LO</category>
      <pubDate>Fri, 03 Oct 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Samuele Pollaci, Babis Kostopoulos, Marc Denecker, Bart Bogaerts</dc:creator>
    </item>
    <item>
      <title>The Complexity of HyperQPTL</title>
      <link>https://arxiv.org/abs/2412.07341</link>
      <description>arXiv:2412.07341v2 Announce Type: replace 
Abstract: HyperQPTL and HyperQPTL$^+$ are expressive specification languages for hyperproperties, i.e., properties that relate multiple executions of a system. Tight complexity bounds are known for HyperQPTL finite-state satisfiability and model-checking. Here, we settle the complexity of satisfiability for HyperQPTL as well as satisfiability, finite-state satisfiability, and model-checking for HyperQPTL$^+$: the former is $\Sigma^2_1$-complete, the latter are all equivalent to truth in third-order arithmetic, i.e., all four are very undecidable.</description>
      <guid isPermaLink="false">oai:arXiv.org:2412.07341v2</guid>
      <category>cs.LO</category>
      <pubDate>Fri, 03 Oct 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Ga\"etan Regaud, Martin Zimmermann</dc:creator>
    </item>
    <item>
      <title>An Architecture for Spatial Networking</title>
      <link>https://arxiv.org/abs/2507.22687</link>
      <description>arXiv:2507.22687v2 Announce Type: replace-cross 
Abstract: Physical spaces are increasingly dense with networked devices, promising seamless coordination and ambient intelligence. Yet today, cloud-first architectures force all communication through wide-area networks regardless of physical proximity. We lack an abstraction for spatial networking: using physical spaces to create boundaries for private, robust, and low-latency communication. We introduce $\textit{Bifr\"ost}$, a programming model that realizes spatial networking using bigraphs to express both containment and connectivity, enabling policies to be scoped by physical boundaries, devices to be named by location, the instantiation of spatial services, and the composition of spaces while maintaining local autonomy. Bifr\"ost enables a new class of spatially-aware applications, where co-located devices communicate directly, physical barriers require explicit gateways, and local control bridges to global coordination.</description>
      <guid isPermaLink="false">oai:arXiv.org:2507.22687v2</guid>
      <category>cs.NI</category>
      <category>cs.AI</category>
      <category>cs.LO</category>
      <category>cs.MA</category>
      <pubDate>Fri, 03 Oct 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Josh Millar, Ryan Gibb, Roy Ang, Hamed Haddadi, Anil Madhavapeddy</dc:creator>
    </item>
    <item>
      <title>Semantic Bridges Between First Order c-Representations and Cost-Based Semantics: An Initial Perspective</title>
      <link>https://arxiv.org/abs/2510.00817</link>
      <description>arXiv:2510.00817v2 Announce Type: replace-cross 
Abstract: Weighted-knowledge bases and cost-based semantics represent a recent formalism introduced by Bienvenu et al. for Ontology Mediated Data Querying in the case where a given knowledge base is inconsistent. This is done by adding a weight to each statement in the knowledge base (KB), and then giving each DL interpretation a cost based on how often it breaks rules in the KB. In this paper we compare this approach with c-representations, a form of non-monotonic reasoning originally introduced by Kern-Isberner. c-Representations describe a means to interpret defeasible concept inclusions in the first-order case. This is done by assigning a numerical ranking to each interpretations via penalties for each violated conditional. We compare these two approaches on a semantic level. In particular, we show that under certain conditions a weighted knowledge base and a set of defeasible conditionals can generate the same ordering on interpretations, and therefore an equivalence of semantic structures up to relative cost. Moreover, we compare entailment described in both cases, where certain notions are equivalently expressible in both formalisms. Our results have the potential to benefit further work on both cost-based semantics and c-representations</description>
      <guid isPermaLink="false">oai:arXiv.org:2510.00817v2</guid>
      <category>cs.AI</category>
      <category>cs.LO</category>
      <pubDate>Fri, 03 Oct 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Nicholas Leisegang, Giovanni Casini, Thomas Meyer</dc:creator>
    </item>
  </channel>
</rss>
