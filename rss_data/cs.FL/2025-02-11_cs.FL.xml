<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.FL updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.FL</link>
    <description>cs.FL updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.FL" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Wed, 12 Feb 2025 02:55:47 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Tue, 11 Feb 2025 00:00:00 -0500</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Universality Frontier for Asynchronous Cellular Automata</title>
      <link>https://arxiv.org/abs/2502.05989</link>
      <description>arXiv:2502.05989v1 Announce Type: new 
Abstract: In this work, we investigate the computational aspects of asynchronous cellular automata (ACAs), a modification of cellular automata in which cells update independently, following an asynchronous schedule. We introduce flip automata networks (FAN), a simple modification of automata networks that remain robust under any asynchronous update schedule. We show that asynchronous automata can efficiently simulate their synchronous counterparts with a linear memory overhead, which improves upon the previously established quadratic bound. Additionally, we address the universality gap for (a)synchronous cellular automata -- the boundary separating universal and non-universal automata, which is still not fully understood. We tighten this boundary by proving that all one-way asynchronous automata lack universal computational power. Conversely, we establish the existence of a universal 6-state first-neighbor automaton in one dimension and a 3-state von Neumann automaton in two dimensions, which represent the smallest known universal constructions to date.</description>
      <guid isPermaLink="false">oai:arXiv.org:2502.05989v1</guid>
      <category>cs.FL</category>
      <pubDate>Tue, 11 Feb 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Ivan Baburin, Matthew Cook, Florian Gr\"otschla, Andreas Plesner, Roger Wattenhofer</dc:creator>
    </item>
    <item>
      <title>Some properties of $\beta$-$\eta$-normal forms in $\lambda$-K-calculus (Alcune propriet\'{a} delle forme $\beta$-$\eta$-normali nel $\lambda$-K-calcolo)</title>
      <link>https://arxiv.org/abs/2502.05774</link>
      <description>arXiv:2502.05774v1 Announce Type: cross 
Abstract: This is a plain English translation of [B\"{o}h68], originally in Italian, by Chun Tian. All footnotes (and citations only found in footnotes, of course) are added by the translator.</description>
      <guid isPermaLink="false">oai:arXiv.org:2502.05774v1</guid>
      <category>math.LO</category>
      <category>cs.FL</category>
      <pubDate>Tue, 11 Feb 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Corrado B\"ohm, Chun Tian</dc:creator>
    </item>
    <item>
      <title>First-Order Intuitionistic Linear Logic and Hypergraph Languages</title>
      <link>https://arxiv.org/abs/2502.05816</link>
      <description>arXiv:2502.05816v1 Announce Type: cross 
Abstract: The Lambek calculus is a substructural logic known to be closely related to the formal language theory: on the one hand, it is used for generating formal languages by means of categorial grammars and, on the other hand, it is sound and complete with respect to formal language semantics. This paper studies a similar relation between first-order intuitionistic linear logic ILL1 along with its multiplicative fragment MILL1 and the hypergraph grammar theory.
  In the first part, we introduce a novel concept of hypergraph first-order logic categorial grammar, which is a generalisation of string MILL1 grammars studied in (Moot, 2014). We prove that hypergraph ILL1 grammars generate all recursively enumerable hypergraph languages and that hypergraph MILL1 grammars are as powerful as linear-time hypergraph transformation systems. Using these results, we solve an open problem from the article (Moot, 2014), which asks whether string MILL1 grammars generate exactly multiple context-free languages. We show that the class of languages generated by string MILL1 grammars is closed under intersection and that it includes a non-semilinar language as well as an NP-complete one. This shows how powerful string MILL1 grammars are as compared to Lambek categorial grammars.
  In the second part, we develop hypergraph language models for MILL1. In such models, formulae of the logic are interpreted as hypergraph languages and multiplicative conjunction is interpreted using parallel composition, which is one of the operations of HR-algebras introduced by Courcelle. We prove completeness of the universal-implicative fragment of MILL1 with respect to these models and thus present a new kind of semantics for a fragment of first-order linear logic.</description>
      <guid isPermaLink="false">oai:arXiv.org:2502.05816v1</guid>
      <category>math.LO</category>
      <category>cs.FL</category>
      <pubDate>Tue, 11 Feb 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Tikhon Pshenitsyn</dc:creator>
    </item>
    <item>
      <title>The memory of $\omega$-regular and BC($\Sigma_2^0$) objectives</title>
      <link>https://arxiv.org/abs/2502.05840</link>
      <description>arXiv:2502.05840v1 Announce Type: cross 
Abstract: In the context of 2-player zero-sum infinite duration games played on (potentially infinite) graphs, we ask the following question: Given an objective $W$ in $\mathrm{BC}(\mathbf{\Sigma}_2^0)$, i.e. recognised by a potentially infinite deterministic parity automaton, what is its memory, meaning the smallest integer $k$ such that in any game won by Eve, she has a strategy with $\leq k$ states of memory. We provide a class of deterministic parity automata that exactly recognise objectives with memory $\leq k$. This leads to the following results:
  (1) For $\omega$-regular objectives, the memory can be computed in NP.
  (2) Given two objectives $W_1$ and $W_2$ in $\mathrm{BC}(\mathbf{\Sigma}_2^0)$ and assuming $W_1$ is prefix-independent, the memory of $W_1 \cup W_2$ is at most the product of the memories of $W_1$ and $W_2$.
  Our results also apply to chromatic memory, the variant where strategies can update their memory state only depending on which colour is seen.</description>
      <guid isPermaLink="false">oai:arXiv.org:2502.05840v1</guid>
      <category>cs.LO</category>
      <category>cs.FL</category>
      <pubDate>Tue, 11 Feb 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Antonio Casares, Pierre Ohlmann</dc:creator>
    </item>
    <item>
      <title>Complete Compositional Syntax for Finite Transducers on Finite and Bi-Infinite Words</title>
      <link>https://arxiv.org/abs/2502.06450</link>
      <description>arXiv:2502.06450v1 Announce Type: cross 
Abstract: Minimizing finite automata, proving trace equivalence of labelled transition systems or representing sofic subshifts involve very similar arguments, which suggests the possibility of a unified formalism. We propose finite states non-deterministic transducer as a lingua franca for automata theory, transition systems, and sofic subshifts. We introduce a compositional diagrammatical syntax for transducers in form of string diagrams interpreted as relations. This syntax comes with sound rewriting rules allowing diagrammatical reasoning. Our main result is the completeness of our equational theory, ensuring that language-equivalence, trace-equivalence, or subshift equivalence can always be proved using our rewriting rules.</description>
      <guid isPermaLink="false">oai:arXiv.org:2502.06450v1</guid>
      <category>cs.LO</category>
      <category>cs.DM</category>
      <category>cs.FL</category>
      <pubDate>Tue, 11 Feb 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Titouan Carette, Marc de Visme, Vivien Ducros, Victor Lutfalla, Etienne Moutot</dc:creator>
    </item>
    <item>
      <title>AutoVerus: Automated Proof Generation for Rust Code</title>
      <link>https://arxiv.org/abs/2409.13082</link>
      <description>arXiv:2409.13082v2 Announce Type: replace-cross 
Abstract: Generative AI has shown its values for many software engineering tasks. Still in its infancy, large language model (LLM)-based proof generation lags behind LLM-based code generation. In this paper, we present AutoVerus. AutoVerus uses LLM to automatically generate correctness proof for Rust code. AutoVerus is designed to match the unique features of Verus, a verification tool that can prove the correctness of Rust code using proofs and specifications also written in Rust. AutoVerus consists of a network of LLM agents that are crafted and orchestrated to mimic human experts' three phases of proof construction: preliminary proof generation, proof refinement guided by generic tips, and proof debugging guided by verification errors. To thoroughly evaluate AutoVerus and help foster future research in this direction, we have built a benchmark suite of 150 non-trivial proof tasks, based on existing code-generation benchmarks and verification benchmarks. Our evaluation shows that AutoVerus can automatically generate correct proof for more than 90% of them, with more than half of them tackled in less than 30 seconds or 3 LLM calls.</description>
      <guid isPermaLink="false">oai:arXiv.org:2409.13082v2</guid>
      <category>cs.SE</category>
      <category>cs.AI</category>
      <category>cs.FL</category>
      <pubDate>Tue, 11 Feb 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Chenyuan Yang, Xuheng Li, Md Rakib Hossain Misu, Jianan Yao, Weidong Cui, Yeyun Gong, Chris Hawblitzel, Shuvendu Lahiri, Jacob R. Lorch, Shuai Lu, Fan Yang, Ziqiao Zhou, Shan Lu</dc:creator>
    </item>
  </channel>
</rss>
