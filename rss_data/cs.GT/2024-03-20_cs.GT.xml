<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.GT updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.GT</link>
    <description>cs.GT updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.GT" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Thu, 21 Mar 2024 04:00:06 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Thu, 21 Mar 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>Uber Stable: Formulating the Rideshare System as a Stable Matching Problem</title>
      <link>https://arxiv.org/abs/2403.13083</link>
      <description>arXiv:2403.13083v1 Announce Type: cross 
Abstract: Peer-to-peer ride-sharing platforms like Uber, Lyft, and DiDi have revolutionized the transportation industry and labor market. At its essence, these systems tackle the bipartite matching problem between two populations: riders and drivers. This research paper comprises two main components: an initial literature review of existing ride-sharing platforms and efforts to enhance driver satisfaction, and the development of a novel algorithm implemented through simulation testing to allow us to make our own observations. The core algorithm utilized is the Gale-Shapley deferred acceptance algorithm, applied to a static matching problem over multiple time periods. In this simulation, we construct a preference-aware task assignment model, considering both overall revenue maximization and individual preference satisfaction. Specifically, the algorithm design incorporates factors such as passenger willingness-to-pay, driver preferences, and location attractiveness, with an overarching goal of achieving equitable income distribution for drivers while maintaining overall system efficiency.
  Through simulation, the paper compares the performance of the proposed algorithm with random matching and closest neighbor algorithms, looking at metrics such as total revenue, revenue per ride, and standard deviation to identify trends and impacts of shifting priorities. Additionally, the DA algorithm is compared to the Boston algorithm, and the paper explores the effect of prioritizing proximity to passengers versus distance from city center. Ultimately, the research underscores the importance of continued exploration in areas such as dynamic pricing models and additional modeling for unconventional driving times to further enhance the findings on the effectiveness and fairness of ride-sharing platforms.</description>
      <guid isPermaLink="false">oai:arXiv.org:2403.13083v1</guid>
      <category>cs.MA</category>
      <category>cs.GT</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Rhea Acharya, Jessica Chen, Helen Xiao</dc:creator>
    </item>
    <item>
      <title>Analysing Guarantees in Australian Senate Outcomes</title>
      <link>https://arxiv.org/abs/2403.13275</link>
      <description>arXiv:2403.13275v1 Announce Type: cross 
Abstract: Single Transferable Vote (STV) is used to elect candidates to the 76 seat Australian Senate across six states and two territories. These eight STV contests are counted using a combination of ballot scanners, manual data entry and tabulation software. On election night, some properties of the set of cast ballots are determined by hand. This includes the first preference tallies of each party. This technical report considers whether there are some properties, such as individual candidates' first preference tallies, that, if assumed to be accurate, imply a portion of the election outcome. The paper also presents an interesting example showing that the rules of STV tabulation used for the Australian Senate can allow bizarre behaviour, such as votes increasing in value over time.</description>
      <guid isPermaLink="false">oai:arXiv.org:2403.13275v1</guid>
      <category>cs.CY</category>
      <category>cs.GT</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Michelle Blom</dc:creator>
    </item>
    <item>
      <title>Game Theory with Simulation of Other Players</title>
      <link>https://arxiv.org/abs/2305.11261</link>
      <description>arXiv:2305.11261v2 Announce Type: replace 
Abstract: Game-theoretic interactions with AI agents could differ from traditional human-human interactions in various ways. One such difference is that it may be possible to simulate an AI agent (for example because its source code is known), which allows others to accurately predict the agent's actions. This could lower the bar for trust and cooperation. In this paper, we formalize games in which one player can simulate another at a cost. We first derive some basic properties of such games and then prove a number of results for them, including: (1) introducing simulation into generic-payoff normal-form games makes them easier to solve; (2) if the only obstacle to cooperation is a lack of trust in the possibly-simulated agent, simulation enables equilibria that improve the outcome for both agents; and however (3) there are settings where introducing simulation results in strictly worse outcomes for both players.</description>
      <guid isPermaLink="false">oai:arXiv.org:2305.11261v2</guid>
      <category>cs.GT</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Vojtech Kovarik, Caspar Oesterheld, Vincent Conitzer</dc:creator>
    </item>
    <item>
      <title>Entropy-Based Strategies for Multi-Bracket Pools</title>
      <link>https://arxiv.org/abs/2308.14339</link>
      <description>arXiv:2308.14339v3 Announce Type: replace 
Abstract: Much work in the parimutuel betting literature has discussed estimating event outcome probabilities or developing optimal wagering strategies, particularly for horse race betting. Some betting pools, however, involve betting not just on a single event, but on a tuple of events. For example, pick six betting in horse racing, March Madness bracket challenges, and predicting a randomly drawn bitstring each involve making a series of individual forecasts. Although traditional optimal wagering strategies work well when the size of the tuple is very small (e.g., betting on the winner of a horse race), they are intractable for more general betting pools in higher dimensions (e.g., March Madness bracket challenges). Hence we pose the multi-brackets problem: supposing we wish to predict a tuple of events and that we know the true probabilities of each potential outcome of each event, what is the best way to tractably generate a set of $n$ predicted tuples? The most general version of this problem is extremely difficult, so we begin with a simpler setting. In particular, we generate $n$ independent predicted tuples according to a distribution having optimal entropy. This entropy-based approach is tractable, scalable, and performs well.</description>
      <guid isPermaLink="false">oai:arXiv.org:2308.14339v3</guid>
      <category>cs.GT</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Ryan S. Brill, Abraham J. Wyner, Ian J. Barnett</dc:creator>
    </item>
    <item>
      <title>Cardinal-Utility Matching Markets: The Quest for Envy-Freeness, Pareto-Optimality, and Efficient Computability</title>
      <link>https://arxiv.org/abs/2402.08851</link>
      <description>arXiv:2402.08851v3 Announce Type: replace 
Abstract: Unlike ordinal-utility matching markets, which are well-developed from the viewpoint of both theory and practice, recent insights from a computer science perspective have left cardinal-utility matching markets in a quandary. The celebrated pricing-based mechanism for one-sided cardinal-utility matching markets due to Hylland and Zeckhauser, which had long eluded efficient algorithms, was finally shown to be PPAD-complete.
  This led us to ask the question: is there an alternative, polynomial time, mechanism for one-sided cardinal-utility matching markets which achieves the desirable properties of HZ, i.e.\ (ex-ante) envy-freeness (EF) and Pareto-optimality (PO)? In this paper we show:
  1. The problem of finding an EF+PO lottery in a one-sided cardinal-utility matching market is PPAD-complete.
  2. A $(2 + \epsilon)$-approximately envy-free and (exactly) Pareto-optimal lottery can be found in polynomial time using Nash bargaining. Moreover, the resulting mechanism is $(2 + \epsilon)$-approximately incentive compatible.
  We also present several results on two-sided cardinal-utility matching markets, including non-existence of EF+PO lotteries as well as existence of justified-envy-free and weak Pareto-optimal lotteries.</description>
      <guid isPermaLink="false">oai:arXiv.org:2402.08851v3</guid>
      <category>cs.GT</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Thorben Tr\"obst, Vijay V. Vazirani</dc:creator>
    </item>
  </channel>
</rss>
