<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.FL updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.FL</link>
    <description>cs.FL updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.FL" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Fri, 23 Aug 2024 04:00:11 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Fri, 23 Aug 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Invariants for One-Counter Automata with Disequality Tests</title>
      <link>https://arxiv.org/abs/2408.11908</link>
      <description>arXiv:2408.11908v1 Announce Type: new 
Abstract: We study the reachability problem for one-counter automata in which transitions can carry disequality tests. A disequality test is a guard that prohibits a specified counter value. This reachability problem has been known to be NP-hard and in PSPACE, and characterising its computational complexity has been left as a challenging open question by Almagor, Cohen, P\'erez, Shirmohammadi, and Worrell (2020). We reduce the complexity gap, placing the problem into the second level of the polynomial hierarchy, namely into the class $\mathsf{coNP}^{\mathsf{NP}}$. In the presence of both equality and disequality tests, our upper bound is at the third level, $\mathsf{P}^{\mathsf{NP}^{\mathsf{NP}}}$.
  To prove this result, we show that non-reachability can be witnessed by a pair of invariants (forward and backward). These invariants are almost inductive. They aim to over-approximate only a "core" of the reachability set instead of the entire set. The invariants are also leaky: it is possible to escape the set. We complement this with separate checks as the leaks can only occur in a controlled way.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.11908v1</guid>
      <category>cs.FL</category>
      <category>cs.LO</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Dmitry Chistikov, J\'er\^ome Leroux, Henry Sinclair-Banks, Nicolas Waldburger</dc:creator>
    </item>
    <item>
      <title>Greybox Learning of Languages Recognizable by Event-Recording Automata</title>
      <link>https://arxiv.org/abs/2408.12551</link>
      <description>arXiv:2408.12551v1 Announce Type: new 
Abstract: In this paper, we revisit the active learning of timed languages recognizable by event-recording automata. Our framework employs a method known as greybox learning, which enables the learning of event-recording automata with a minimal number of control states. This approach avoids learning the region automaton associated with the language, contrasting with existing methods. We have implemented our greybox learning algorithm with various heuristics to maintain low computational complexity. The efficacy of our approach is demonstrated through several examples.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.12551v1</guid>
      <category>cs.FL</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Anirban Majumdar, Sayan Mukherjee, Jean-Fran\c{c}ois Raskin</dc:creator>
    </item>
    <item>
      <title>The Bright Side of Timed Opacity</title>
      <link>https://arxiv.org/abs/2408.12240</link>
      <description>arXiv:2408.12240v1 Announce Type: cross 
Abstract: In 2009, Franck Cassez showed that the timed opacity problem, where an attacker can observe some actions with their timestamps and attempts to deduce information, is undecidable for timed automata (TAs). Moreover, he showed that the undecidability holds even for subclasses such as event-recording automata. In this article, we consider the same definition of opacity for several other subclasses of TAs: with restrictions on the number of clocks, of actions, on the nature of time, or on a new subclass called observable event-recording automata. We show that opacity can mostly be retrieved, except for one-action TAs and for one-clock TAs with epsilon-transitions, for which undecidability remains. We then exhibit a new decidable subclass in which the number of observations made by the attacker is limited.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.12240v1</guid>
      <category>cs.LO</category>
      <category>cs.CR</category>
      <category>cs.FL</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>\'Etienne Andr\'e, Sarah D\'epernet, Engel Lefaucheux</dc:creator>
    </item>
    <item>
      <title>Exploring Complexity: An Extended Study of Formal Properties for Process Model Complexity Measures</title>
      <link>https://arxiv.org/abs/2408.09871</link>
      <description>arXiv:2408.09871v2 Announce Type: replace 
Abstract: A good process model is expected not only to reflect the behavior of the process, but also to be as easy to read and understand as possible. Because preferences vary across different applications, numerous measures provide ways to reflect the complexity of a model with a numeric score. However, this abundance of different complexity measures makes it difficult to select one for analysis. Furthermore, most complexity measures are defined for BPMN or EPC, but not for workflow nets.
  This paper is an extended analysis of complexity measures and their formal properties. It adapts existing complexity measures to the world of workflow nets. It then compares these measures with a set of properties originally defined for software complexity, as well as new extensions to it. We discuss the importance of the properties in theory by evaluating whether matured complexity measures should fulfill them or whether they are optional. We find that not all inspected properties are mandatory, but also demonstrate that the behavior of evolutionary process discovery algorithms is influenced by some of these properties. Our findings help analysts to choose the right complexity measure for their use-case.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.09871v2</guid>
      <category>cs.FL</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Patrizia Schalk, Adam Burke, Robert Lorenz</dc:creator>
    </item>
  </channel>
</rss>
