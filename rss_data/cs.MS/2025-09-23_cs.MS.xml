<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.MS updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.MS</link>
    <description>cs.MS updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.MS" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Wed, 24 Sep 2025 01:52:44 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Tue, 23 Sep 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>A Regularized Riccati Recursion for Interior-Point Optimal Control</title>
      <link>https://arxiv.org/abs/2509.16370</link>
      <description>arXiv:2509.16370v1 Announce Type: cross 
Abstract: We derive a closed-form extension of Riccati's recursion for solving regularized LQR problems. We also show how this can be used to solve general constrained, non-convex, discrete-time optimal control problems via a regularized interior point method, while guaranteeing that each step is a descent direction of an Augmented Barrier-Lagrangian merit function. We also provide MIT-licensed implementations of our method in C++ and JAX.</description>
      <guid isPermaLink="false">oai:arXiv.org:2509.16370v1</guid>
      <category>math.OC</category>
      <category>cs.MS</category>
      <category>cs.RO</category>
      <category>cs.SY</category>
      <category>eess.SY</category>
      <pubDate>Tue, 23 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Jo\~ao Sousa-Pinto, Dominique Orban</dc:creator>
    </item>
    <item>
      <title>Fast and accurate computation of classical Gaussian quadratures</title>
      <link>https://arxiv.org/abs/2509.16716</link>
      <description>arXiv:2509.16716v1 Announce Type: cross 
Abstract: Algorithms for computing classical Gaussian quadrature rules (Gauss-Jacobi, Gauss-Laguerre, and Gauss-Hermite) are presented, based on globally convergent fourth-order iterative methods and asymptotic approximations, which are applied in complementary regions of the parameter space. The combination of these approaches results in methods that surpass previous algorithms in terms of speed, accuracy, and computational range (practically unrestricted). The Gauss-Radau and Gauss-Lobatto variants are also considered, along with the computation of the associated barycentric weights. Arbitrary accuracy algorithms are also provided for the symmetric cases (Gauss-Gegenbauer and Gauss-Hermite).</description>
      <guid isPermaLink="false">oai:arXiv.org:2509.16716v1</guid>
      <category>math.NA</category>
      <category>cs.MS</category>
      <category>cs.NA</category>
      <category>math.CA</category>
      <pubDate>Tue, 23 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>A. Gil, J. Segura, N. M. Temme</dc:creator>
    </item>
    <item>
      <title>Bandicoot: A Templated C++ Library for GPU Linear Algebra</title>
      <link>https://arxiv.org/abs/2508.11385</link>
      <description>arXiv:2508.11385v2 Announce Type: replace 
Abstract: We introduce the Bandicoot C++ library for linear algebra and scientific computing on GPUs, overviewing its user interface and performance characteristics, as well as the technical details of its internal design. Bandicoot is the GPU-enabled counterpart to the well-known Armadillo C++ linear algebra library, aiming to allow users to take advantage of GPU-accelerated computation for their existing codebases without significant changes. Exploiting similar internal template meta-programming techniques that Armadillo uses, Bandicoot is able to provide compile-time optimisation of mathematical expressions within user code, leading to more efficient execution. Empirical evaluations show that Bandicoot can provide significant speedups over Armadillo-based CPU-only computation. Bandicoot is available at https://coot.sourceforge.io and is distributed as open-source software under the permissive Apache 2.0 license.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.11385v2</guid>
      <category>cs.MS</category>
      <pubDate>Tue, 23 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Ryan R. Curtin, Marcus Edel, Conrad Sanderson</dc:creator>
    </item>
  </channel>
</rss>
