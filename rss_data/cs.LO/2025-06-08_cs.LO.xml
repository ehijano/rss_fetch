<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.LO updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.LO</link>
    <description>cs.LO updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.LO" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Mon, 09 Jun 2025 04:01:21 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Mon, 09 Jun 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Model Checking as Program Verification by Abstract Interpretation (Extended Version)</title>
      <link>https://arxiv.org/abs/2506.05525</link>
      <description>arXiv:2506.05525v1 Announce Type: new 
Abstract: Abstract interpretation offers a powerful toolset for static analysis, tackling precision, complexity and state-explosion issues. In the literature, state partitioning abstractions based on (bi)simulation and property-preserving state relations have been successfully applied to abstract model checking. Here, we pursue a different track in which model checking is seen as an instance of program verification. To this purpose, we introduce a suitable language-called MOKA (for MOdel checking as abstract interpretation of Kleene Algebras)-which is used to encode temporal formulae as programs. In particular, we show that (universal fragments of) temporal logics, such as ACTL or, more generally, universal mu-calculus can be transformed into MOKA programs. Such programs return all and only the initial states which violate the formula. By applying abstract interpretation to MOKA programs, we pave the way for reusing more general abstractions than partitions as well as for tuning the precision of the abstraction to remove or avoid false alarms. We show how to perform model checking via a program logic that combines under-approximation and abstract interpretation analysis to avoid false alarms. The notion of locally complete abstraction is used to dynamically improve the analysis precision via counterexample-guided domain refinement.</description>
      <guid isPermaLink="false">oai:arXiv.org:2506.05525v1</guid>
      <category>cs.LO</category>
      <pubDate>Mon, 09 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Paolo Baldan, Roberto Bruni, Francesco Ranzato, Diletta Rigo</dc:creator>
    </item>
    <item>
      <title>Properties of UTxO Ledgers and Programs Implemented on Them</title>
      <link>https://arxiv.org/abs/2506.05832</link>
      <description>arXiv:2506.05832v1 Announce Type: new 
Abstract: Trace-based properties are the gold standard for program behaviour analysis. One of the domains of application of this type of analysis is cryptocurrency ledgers, both for the purpose of analyzing the behaviour of the ledger itself, and any user-defined programs called by it, known as smart contracts. The (extended) UTxO ledger model is a kind of ledger model where all smart contract code is stateless, and additional work must be done to model stateful programs. We formalize the application of trace-based analysis to UTxO ledgers and contracts, expressing it in the languages of topology, as well as graph and category theory. To describe valid traces of UTxO ledger executions, and their relation to the behaviour of stateful programs implemented on the ledger, we define a category of simple graphs, infinite paths in which form an ultra-metric space. Maps in this category are arbitrary partial sieve-define homomorphisms of simple graphs. Programs implemented on the ledger correspond to non-expanding maps out of the graph of valid UTxO execution traces. We reason about safety properties in this framework, and prove properties of valid UTxO ledger traces.</description>
      <guid isPermaLink="false">oai:arXiv.org:2506.05832v1</guid>
      <category>cs.LO</category>
      <pubDate>Mon, 09 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:DOI>10.4204/EPTCS.421.1</arxiv:DOI>
      <arxiv:journal_reference>EPTCS 421, 2025, pp. 1-20</arxiv:journal_reference>
      <dc:creator>Polina Vinogradova (Input Output Global), Alexey Sorokin (Input Output Global)</dc:creator>
    </item>
    <item>
      <title>Fuzzy Lattice-based Description Logic</title>
      <link>https://arxiv.org/abs/2506.05833</link>
      <description>arXiv:2506.05833v1 Announce Type: new 
Abstract: Recently, description logic LE-ALC was introduced for reasoning in the semantic environment of enriched formal contexts, and a polynomial-time tableaux algorithm was developed to check the consistency of knowledge bases with acyclic TBoxes. In this work, we introduce a fuzzy generalization of LE-ALC  called  LE-FALC which provides a description logic counterpart of many-valued normal non-distributive logic a.k.a. many-valued LE-logic. This description logic can be used to represent and reason about knowledge in the formal framework  of fuzzy formal contexts and fuzzy formal concepts. We provide a tableaux algorithm that provides a complete and sound polynomial-time decision procedure to check the consistency of  LE-FALC  ABoxes. As a result, we also obtain an exponential-time decision procedure for checking the consistency of  LE-FALC  with acyclic TBoxes by unraveling. </description>
      <guid isPermaLink="false">oai:arXiv.org:2506.05833v1</guid>
      <category>cs.LO</category>
      <category>cs.AI</category>
      <pubDate>Mon, 09 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:DOI>10.4204/EPTCS.421.3</arxiv:DOI>
      <arxiv:journal_reference>EPTCS 421, 2025, pp. 44-63</arxiv:journal_reference>
      <dc:creator>Yiwen Ding, Krishna Manoorkar</dc:creator>
    </item>
    <item>
      <title>Regional, Lattice and Logical Representations of Neural Networks</title>
      <link>https://arxiv.org/abs/2506.05834</link>
      <description>arXiv:2506.05834v1 Announce Type: new 
Abstract: A possible path to the interpretability of neural networks is to (approximately) represent them in the regional format of piecewise linear functions, where regions of inputs are associated to linear functions computing the network outputs. We present an algorithm for the translation of feedforward neural networks with ReLU activation functions in hidden layers and truncated identity activation functions in the output layer. We also empirically investigate the complexity of regional representations outputted by our method for neural networks with varying sizes. Lattice and logical representations of neural networks are straightforward from regional representations as long as they satisfy a specific property. So we empirically investigate to what extent the translations by our algorithm satisfy such property.</description>
      <guid isPermaLink="false">oai:arXiv.org:2506.05834v1</guid>
      <category>cs.LO</category>
      <category>cs.AI</category>
      <category>cs.LG</category>
      <pubDate>Mon, 09 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:DOI>10.4204/EPTCS.421.4</arxiv:DOI>
      <arxiv:journal_reference>EPTCS 421, 2025, pp. 64-79</arxiv:journal_reference>
      <dc:creator>Sandro Preto (Federal University of ABC, Brazil), Marcelo Finger (University of Sao Paulo, Brazil)</dc:creator>
    </item>
    <item>
      <title>Nominal Equational Rewriting and Narrowing</title>
      <link>https://arxiv.org/abs/2506.05835</link>
      <description>arXiv:2506.05835v1 Announce Type: new 
Abstract: Narrowing is a well-known technique that adds to term rewriting mechanisms the required power to search for solutions to equational problems. Rewriting and narrowing are well-studied in first-order term languages, but several problems remain to be investigated when dealing with languages with binders using nominal techniques. Applications in programming languages and theorem proving require reasoning modulo alpha-equivalence considering structural congruences generated by equational axioms, such as commutativity.  This paper presents the first definitions of nominal rewriting and narrowing modulo an equational theory. We establish a property called nominal E-coherence and demonstrate its role in identifying normal forms of nominal terms. Additionally, we prove the nominal E-Lifting theorem, which ensures the correspondence between sequences of nominal equational rewriting steps and narrowing, crucial for developing a correct algorithm for nominal equational unification via nominal equational narrowing. We illustrate our results using the equational theory for commutativity.</description>
      <guid isPermaLink="false">oai:arXiv.org:2506.05835v1</guid>
      <category>cs.LO</category>
      <category>cs.SC</category>
      <pubDate>Mon, 09 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:DOI>10.4204/EPTCS.421.5</arxiv:DOI>
      <arxiv:journal_reference>EPTCS 421, 2025, pp. 80-97</arxiv:journal_reference>
      <dc:creator>Mauricio Ayala-Rinc\'on (University of Bras\'ilia, Brazil), Maribel Fern\'andez (King's College London, UK), Daniele Nantes-Sobrinho (University of Bras\'ilia, Brazil,Imperial College London, UK), Daniella Santaguida (University of Bras\'ilia, Brazil)</dc:creator>
    </item>
    <item>
      <title>Towards an Analysis of Proofs in Arithmetic</title>
      <link>https://arxiv.org/abs/2506.05837</link>
      <description>arXiv:2506.05837v1 Announce Type: new 
Abstract: Inductive proofs can be represented as proof schemata, i.e. as parameterized sequences of proofs defined in a primitive recursive way. Applications of proof schemata can be found in the area of automated proof analysis where the schemata admit (schematic) cut-elimination and the construction of Herbrand systems. This work focuses on the expressivity of proof schemata. We show that proof schemata can simulate primitive recursive arithmetic. The translation of proofs in arithmetic to proof schemata can be considered as a crucial step in the analysis of inductive proofs.</description>
      <guid isPermaLink="false">oai:arXiv.org:2506.05837v1</guid>
      <category>cs.LO</category>
      <pubDate>Mon, 09 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:DOI>10.4204/EPTCS.421.6</arxiv:DOI>
      <arxiv:journal_reference>EPTCS 421, 2025, pp. 98-111</arxiv:journal_reference>
      <dc:creator>Alexander Leitsch, Anela Loli\'c, Stella Mahler</dc:creator>
    </item>
    <item>
      <title>Paraconsistent Relations as a Variant of Kleene Algebras</title>
      <link>https://arxiv.org/abs/2506.05840</link>
      <description>arXiv:2506.05840v1 Announce Type: new 
Abstract: Kleene algebras (KA) and Kleene algebras with tests (KAT) provide an algebraic framework to capture the behavior of conventional programming constructs. This paper explores a broader understanding of these structures, in order to enable the expression of programs and tests yielding vague or inconsistent outcomes. Within this context, we introduce the concept of a paraconsistent Kleene Algebra with tests (PKAT), capable of capturing vague and contradictory computations. Finally, to establish the semantics of such a structure, we introduce two algebras parametric on a class of twisted structures. We believe this sort of structures, for their huge flexibility, have an interesting application potential.</description>
      <guid isPermaLink="false">oai:arXiv.org:2506.05840v1</guid>
      <category>cs.LO</category>
      <pubDate>Mon, 09 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:DOI>10.4204/EPTCS.421.8</arxiv:DOI>
      <arxiv:journal_reference>EPTCS 421, 2025, pp. 130-147</arxiv:journal_reference>
      <dc:creator>Juliana Cunha, Alexandre Madeira, Lu\'is S. Barbosa</dc:creator>
    </item>
    <item>
      <title>Scalable Counting of Minimal Trap Spaces and Fixed Points in Boolean Networks</title>
      <link>https://arxiv.org/abs/2506.06013</link>
      <description>arXiv:2506.06013v1 Announce Type: new 
Abstract: Boolean Networks (BNs) serve as a fundamental modeling framework for capturing complex dynamical systems across various domains, including systems biology, computational logic, and artificial intelligence. A crucial property of BNs is the presence of trap spaces -- subspaces of the state space that, once entered, cannot be exited. Minimal trap spaces, in particular, play a significant role in analyzing the long-term behavior of BNs, making their efficient enumeration and counting essential. The fixed points in BNs are a special case of minimal trap spaces. In this work, we formulate several meaningful counting problems related to minimal trap spaces and fixed points in BNs. These problems provide valuable insights both within BN theory (e.g., in probabilistic reasoning and dynamical analysis) and in broader application areas, including systems biology, abstract argumentation, and logic programming. To address these computational challenges, we propose novel methods based on {\em approximate answer set counting}, leveraging techniques from answer set programming. Our approach efficiently approximates the number of minimal trap spaces and the number of fixed points without requiring exhaustive enumeration, making it particularly well-suited for large-scale BNs. Our experimental evaluation on an extensive and diverse set of benchmark instances shows that our methods significantly improve the feasibility of counting minimal trap spaces and fixed points, paving the way for new applications in BN analysis and beyond.</description>
      <guid isPermaLink="false">oai:arXiv.org:2506.06013v1</guid>
      <category>cs.LO</category>
      <pubDate>Mon, 09 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Mohimenul Kabir, Van-Giang Trinh, Samuel Pastva, Kuldeep S Meel</dc:creator>
    </item>
    <item>
      <title>Monitorability for the Modal mu-Calculus over Systems with Data: From Practice to Theory</title>
      <link>https://arxiv.org/abs/2506.06172</link>
      <description>arXiv:2506.06172v1 Announce Type: new 
Abstract: Runtime verification, also known as runtime monitoring, consists of checking whether a system satisfies a given specification by observing the trace it produces during its execution. It is used as a lightweight verification technique to complement or substitute costlier methods such as model-checking.
  In the regular setting, Hennessy-Milner logic with recursion, a variant of the modal mu-calculus, provides a versatile formalism for expressing linear- and branching-time specifications of the control flow of the system.
  In this paper, we shift the focus from control to data and study the monitorability of an extension of this logic that allows one to express properties of the data flow. Data values are modelled as values from an infinite domain. They are stored using data variables and manipulated using predicates and first-order quantification.
  The resulting logic is closely related to register automata with guessing. This correspondence yields a monitor synthesis algorithm, and allows us to derive a strict monitorability hierarchy between the different fragments of the logic, in stark contrast to the regular setting. In particular, restricting to deterministic monitors strictly reduces the set of monitorable properties.
  Last, we exhibit a fragment of the logic that can express all monitorable formulae in the logic without greatest fixed-points but not in the full logic. We finally show that this is unavoidable because, in fact, there is no decidable fragment of the logic that captures all monitorable properties.</description>
      <guid isPermaLink="false">oai:arXiv.org:2506.06172v1</guid>
      <category>cs.LO</category>
      <category>cs.FL</category>
      <pubDate>Mon, 09 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-sa/4.0/</dc:rights>
      <dc:creator>Luca Aceto, Antonis Achilleos, Duncan Paul Attard, L\'eo Exibard, Adrian Francalanza, Anna Ing\'olfsd\'ottir, Karoliina Lehtinen</dc:creator>
    </item>
    <item>
      <title>Swap Kripke models for deontic LFIs</title>
      <link>https://arxiv.org/abs/2506.06181</link>
      <description>arXiv:2506.06181v1 Announce Type: new 
Abstract: We present a construction of nondeterministic semantics for some deontic logics based on the class of paraconsistent logics known as Logics of Formal Inconsistency (LFIs), for the first time combining swap structures and Kripke models through the novel notion of swap Kripe models. We start by making use of Nmatrices to characterize systems based on LFIs that do not satisfy axiom (cl), while turning to RNmatrices when the latter is considered in the underlying LFIs. This paper also presents, for the first time, a full axiomatization and a semantics for the $C^{D}_n$ hierarchy, by use of the aforementioned mixed semantics with RNmatrices. This includes the historical system $C^{D}_1$ of da Costa-Carnielli (1986), the first deontic paraconsistent system proposed in the literature.</description>
      <guid isPermaLink="false">oai:arXiv.org:2506.06181v1</guid>
      <category>cs.LO</category>
      <category>math.LO</category>
      <pubDate>Mon, 09 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Mahan Vaz, Marcelo E. Coniglio</dc:creator>
    </item>
    <item>
      <title>Query Answering in Lattice-based Description Logic</title>
      <link>https://arxiv.org/abs/2409.02289</link>
      <description>arXiv:2409.02289v2 Announce Type: replace 
Abstract: Recently, the description logic LE-ALC was introduced for reasoning in the semantic environment of the enriched formal contexts, and a tableaux algorithm was developed for checking the consistency of ABoxes in this logic. In this paper, we study the ontology-mediated query answering in LE-ALC . In particular, we show that several different types of queries can be answered efficiently for LE-ALC knowledge bases with acyclic TBoxes using our tableaux algorithm directly or by extending it with some additional rules. </description>
      <guid isPermaLink="false">oai:arXiv.org:2409.02289v2</guid>
      <category>cs.LO</category>
      <pubDate>Mon, 09 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:DOI>10.4204/EPTCS.421.2</arxiv:DOI>
      <arxiv:journal_reference>EPTCS 421, 2025, pp. 21-43</arxiv:journal_reference>
      <dc:creator>Krishna Manoorkar, Ruoding Wang</dc:creator>
    </item>
    <item>
      <title>Weak Simplicial Bisimilarity and Minimisation for Polyhedral Model Checking</title>
      <link>https://arxiv.org/abs/2411.11428</link>
      <description>arXiv:2411.11428v2 Announce Type: replace 
Abstract: The work described in this paper builds on the polyhedral semantics of the Spatial Logic for Closure Spaces (SLCS) and the geometric spatial model checker PolyLogicA. Polyhedral models are central in domains that exploit mesh processing, such as 3D computer graphics. A discrete representation of polyhedral models is given by cell poset models, which are amenable to geometric spatial model checking on polyhedral models using the logical language SLCS$\eta$, a weaker version of SLCS, where by ``weak'' we mean that the relevant equivalence is coarser than the corresponding one for SLCS, leading to a greater reduction of the size of models and thus to more efficient model checking. We show that the proposed bisimilarities enjoy the Hennessy-Milner property, i.e. two points are weakly simplicial bisimilar if and only if they are logically equivalent for SLCS$\eta$. Similarly, two cells are weakly $\pm$-bisimilar if and only if they are logically equivalent in the poset-model interpretation of SLCS$\eta$. Furthermore we present a model minimisation procedure, and prove that it correctly computes the minimal model with respect to weak $\pm$-bisimilarity, i.e. with respect to logical equivalence of SLCS$\eta$. The procedure works via an encoding into LTSs and then exploits branching bisimilarity on those LTSs, exploiting the minimisation capabilities as included in the mCRL2 toolset. Various examples show the effectiveness of the approach.</description>
      <guid isPermaLink="false">oai:arXiv.org:2411.11428v2</guid>
      <category>cs.LO</category>
      <pubDate>Mon, 09 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Nick Bezhanishvili, Laura Bussi, Vincenzo Ciancia, David Gabelaia, Mamuka Jibladze, Diego Latella, Mieke Massink, Erik P. de Vink</dc:creator>
    </item>
    <item>
      <title>The Annotated Dependency Pair Framework for Almost-Sure Termination of Probabilistic Term Rewriting</title>
      <link>https://arxiv.org/abs/2412.20220</link>
      <description>arXiv:2412.20220v2 Announce Type: replace 
Abstract: Dependency pairs are one of the most powerful techniques to analyze termination of term rewrite systems automatically. We adapt dependency pairs to the probabilistic setting and develop an annotated dependency pair framework for automatically proving almost-sure termination of probabilistic term rewrite systems, both for full and innermost rewriting. To evaluate its power, we implemented our framework in the tool AProVE.</description>
      <guid isPermaLink="false">oai:arXiv.org:2412.20220v2</guid>
      <category>cs.LO</category>
      <pubDate>Mon, 09 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Jan-Christoph Kassing, J\"urgen Giesl</dc:creator>
    </item>
    <item>
      <title>Did Turing prove the undecidability of the halting problem?</title>
      <link>https://arxiv.org/abs/2407.00680</link>
      <description>arXiv:2407.00680v2 Announce Type: replace-cross 
Abstract: We discuss the accuracy of the attribution commonly given to Turing's 1936 paper "On computable numbers..." for the computable undecidability of the halting problem, coming eventually to a nuanced conclusion.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.00680v2</guid>
      <category>math.LO</category>
      <category>cs.LO</category>
      <pubDate>Mon, 09 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Joel David Hamkins, Theodor Nenu</dc:creator>
    </item>
    <item>
      <title>Beyond Winning Strategies: Admissible and Admissible Winning Strategies for Quantitative Reachability Games</title>
      <link>https://arxiv.org/abs/2408.13369</link>
      <description>arXiv:2408.13369v3 Announce Type: replace-cross 
Abstract: Classical reactive synthesis approaches aim to synthesize a reactive system that always satisfies a given specifications. These approaches often reduce to playing a two-player zero-sum game where the goal is to synthesize a winning strategy. However, in many pragmatic domains, such as robotics, a winning strategy does not always exist, yet it is desirable for the system to make an effort to satisfy its requirements instead of "giving up". To this end, this paper investigates the notion of admissible strategies, which formalize "doing-your-best", in quantitative reachability games. We show that, unlike the qualitative case, quantitative admissible strategies are history-dependent even for finite payoff functions, making synthesis a challenging task. In addition, we prove that admissible strategies always exist but may produce undesirable optimistic behaviors. To mitigate this, we propose admissible winning strategies, which enforce the best possible outcome while being admissible. We show that both strategies always exist but are not memoryless. We provide necessary and sufficient conditions for the existence of both strategies and propose synthesis algorithms. Finally, we illustrate the strategies on gridworld and robot manipulator domains.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.13369v3</guid>
      <category>cs.GT</category>
      <category>cs.FL</category>
      <category>cs.LO</category>
      <category>cs.RO</category>
      <pubDate>Mon, 09 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Karan Muvvala, Qi Heng Ho, Morteza Lahijanian</dc:creator>
    </item>
  </channel>
</rss>
