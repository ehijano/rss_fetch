<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.CG updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.CG</link>
    <description>cs.CG updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.CG" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Tue, 01 Jul 2025 02:27:38 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Mon, 30 Jun 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Computing Maximum Cliques in Unit Disk Graphs</title>
      <link>https://arxiv.org/abs/2506.21926</link>
      <description>arXiv:2506.21926v1 Announce Type: new 
Abstract: Given a set $P$ of $n$ points in the plane, the unit-disk graph $G(P)$ is a graph with $P$ as its vertex set such that two points of $P$ have an edge if their Euclidean distance is at most $1$. We consider the problem of computing a maximum clique in $G(P)$. The previously best algorithm for the problem runs in $O(n^{7/3+o(1)})$ time. We show that the problem can be solved in $O(n \log n + n K^{4/3+o(1)})$ time, where $K$ is the maximum clique size. The algorithm is faster than the previous one when $K=o(n)$. In addition, if $P$ is in convex position, we give a randomized algorithm that runs in $O(n^{15/7+o(1)})= O(n^{2.143})$ worst-case time and the algorithm can compute a maximum clique with high probability. For points in convex position, one special case we solve is when a point in the maximum clique is given; we present an $O(n^2\log n)$ time (deterministic) algorithm for this special case.</description>
      <guid isPermaLink="false">oai:arXiv.org:2506.21926v1</guid>
      <category>cs.CG</category>
      <category>cs.DS</category>
      <pubDate>Mon, 30 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Anastasiia Tkachenko, Haitao Wang</dc:creator>
    </item>
    <item>
      <title>The Walk-Length Filtration for Persistent Homology on Weighted Directed Graphs</title>
      <link>https://arxiv.org/abs/2506.22263</link>
      <description>arXiv:2506.22263v1 Announce Type: new 
Abstract: Directed graphs arise in many applications where computing persistent homology helps to encode the shape and structure of the input information. However, there are only a few ways to turn the directed graph information into an undirected simplicial complex filtration required by the standard persistent homology framework. In this paper, we present a new filtration constructed from a directed graph, called the walk-length filtration. This filtration mirrors the behavior of small walks visiting certain collections of vertices in the directed graph. We show that, while the persistence is not stable under the usual $L_\infty$-style network distance, a generalized $L_1$-style distance is, indeed, stable. We further provide an algorithm for its computation, and investigate the behavior of this filtration in examples, including cycle networks and synthetic hippocampal networks with a focus on comparison to the often used Dowker filtration.</description>
      <guid isPermaLink="false">oai:arXiv.org:2506.22263v1</guid>
      <category>cs.CG</category>
      <category>math.AT</category>
      <pubDate>Mon, 30 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>David E. Mu\~noz, Elizabeth Munch, Firas A. Khasawneh</dc:creator>
    </item>
    <item>
      <title>Finding the Cores of Higher Graphs Using Geometric and Topological Means: A Survey</title>
      <link>https://arxiv.org/abs/2506.19857</link>
      <description>arXiv:2506.19857v1 Announce Type: cross 
Abstract: In this survey, we explore recent literature on finding the cores of higher graphs using geometric and topological means. We study graphs, hypergraphs, and simplicial complexes, all of which are models of higher graphs. We study the notion of a core, which is a minimalist representation of a higher graph that retains its geometric or topological information. We focus on geometric and topological methods based on discrete curvatures, effective resistance, and persistent homology. We aim to connect tools from graph theory, discrete geometry, and computational topology to inspire new research on the simplification of higher graphs.</description>
      <guid isPermaLink="false">oai:arXiv.org:2506.19857v1</guid>
      <category>math.HO</category>
      <category>cs.CG</category>
      <category>cs.DM</category>
      <category>math.CO</category>
      <pubDate>Mon, 30 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>In\'es Garc\'ia-Redondo, Claudia Landi, Sarah Percival, Anda Skeja, Bei Wang, Ling Zhou</dc:creator>
    </item>
    <item>
      <title>Faster exponential algorithms for cut problems via geometric data structures</title>
      <link>https://arxiv.org/abs/2506.22281</link>
      <description>arXiv:2506.22281v1 Announce Type: cross 
Abstract: For many hard computational problems, simple algorithms that run in time $2^n \cdot n^{O(1)}$ arise, say, from enumerating all subsets of a size-$n$ set. Finding (exponentially) faster algorithms is a natural goal that has driven much of the field of exact exponential algorithms (e.g., see Fomin and Kratsch, 2010). In this paper we obtain algorithms with running time $O(1.9999977^n)$ on input graphs with $n$ vertices, for the following well-studied problems:
  - $d$-Cut: find a proper cut in which no vertex has more than $d$ neighbors on the other side of the cut;
  - Internal Partition: find a proper cut in which every vertex has at least as many neighbors on its side of the cut as on the other side; and
  - ($\alpha,\beta$)-Domination: given intervals $\alpha,\beta \subseteq [0,n]$, find a subset $S$ of the vertices, so that for every vertex $v \in S$ the number of neighbors of $v$ in $S$ is from $\alpha$ and for every vertex $v \notin S$, the number of neighbors of $v$ in $S$ is from $\beta$.
  Our algorithms are exceedingly simple, combining the split and list technique (Horowitz and Sahni, 1974; Williams, 2005) with a tool from computational geometry: orthogonal range searching in the moderate dimensional regime (Chan, 2017). Our technique is applicable to the decision, optimization and counting versions of these problems and easily extends to various generalizations with more fine-grained, vertex-specific constraints, as well as to directed, balanced, and other variants. Algorithms with running times of the form $c^n$, for $c&lt;2$, were known for the first problem only for constant $d$, and for the third problem for certain special cases of $\alpha$ and $\beta$; for the second problem we are not aware of such results.</description>
      <guid isPermaLink="false">oai:arXiv.org:2506.22281v1</guid>
      <category>cs.DS</category>
      <category>cs.CG</category>
      <pubDate>Mon, 30 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>L\'aszl\'o Kozma, Junqi Tan</dc:creator>
    </item>
    <item>
      <title>The Contiguous Art Gallery Problem is Solvable in Polynomial Time</title>
      <link>https://arxiv.org/abs/2412.13938</link>
      <description>arXiv:2412.13938v3 Announce Type: replace 
Abstract: In this paper, we study the Contiguous Art Gallery Problem, introduced by Thomas C. Shermer at the 2024 Canadian Conference on Computational Geometry, a variant of the classical art gallery problem from 1973 by Victor Klee.
  In the contiguous variant, the input is a simple polygon $P$, and the goal is to partition the boundary into a minimum number of polygonal chains such that each chain is visible to a guard.
  We present a polynomial-time RAM algorithm, which solves the contiguous art gallery problem.
  Our algorithm is simple and practical, and we make a C++ implementation available.
  In contrast, many variations of the art gallery problem are at least NP-hard, making the contiguous variant stand out.
  These include the classical art gallery problem and the edge-covering problem, both of which being proven to be $\exists\mathbb{R}$-complete recently by Abrahamsen, Adamaszek, and Miltzow [J. ACM 2022] and Stade [SoCG 2025], respectively.
  Our algorithm is a greedy algorithm that repeatedly traverses the polygon's boundary.
  To find an optimal solution, we show that it is sufficient to traverse the polygon polynomially many times, resulting in a runtime of $\mathcal{O}\!\left( n^6 \log n \right)$ arithmetic operations. We further bound the bit complexity of the computed values, showing that problem is in P.
  Additionally, we provide algorithms for the restricted settings, where either the endpoints of the polygonal chains or the guards must coincide with the vertices of the polygon.</description>
      <guid isPermaLink="false">oai:arXiv.org:2412.13938v3</guid>
      <category>cs.CG</category>
      <pubDate>Mon, 30 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Magnus Christian Ring Merrild, Casper Moldrup Rysgaard, Jens Kristian Refsgaard Schou, Rolf Svenning</dc:creator>
    </item>
    <item>
      <title>Efficient Reconfiguration of Tile Arrangements by a Single Active Robot</title>
      <link>https://arxiv.org/abs/2502.09299</link>
      <description>arXiv:2502.09299v2 Announce Type: replace 
Abstract: We consider the problem of reconfiguring a two-dimensional connected grid arrangement of passive building blocks from a start configuration to a goal configuration, using a single active robot that can move on the tiles, remove individual tiles from a given location and physically move them to a new position by walking on the remaining configuration. The objective is to determine a schedule that minimizes the overall makespan, while keeping the tile configuration connected.
  We provide both negative and positive results. (1) We generalize the problem by introducing weighted movement costs, which can vary depending on whether tiles are carried or not, and prove that this variant is NP-hard. (2) We give a polynomial-time constant-factor approximation algorithm for the case of disjoint start and target bounding boxes, which additionally yields optimal carry distance for 2-scaled instances.</description>
      <guid isPermaLink="false">oai:arXiv.org:2502.09299v2</guid>
      <category>cs.CG</category>
      <category>cs.DS</category>
      <category>cs.RO</category>
      <pubDate>Mon, 30 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Aaron T. Becker, S\'andor P. Fekete, Jonas Friemel, Ramin Kosfeld, Peter Kramer, Harm Kube, Christian Rieck, Christian Scheffer, Arne Schmidt</dc:creator>
    </item>
    <item>
      <title>Instance-Optimal Imprecise Convex Hull</title>
      <link>https://arxiv.org/abs/2504.02611</link>
      <description>arXiv:2504.02611v3 Announce Type: replace 
Abstract: Imprecise measurements of a point set P = (p1, ..., pn) can be modelled by a family of regions F = (R1, ..., Rn), where each imprecise region Ri contains a unique point pi. A retrieval models an accurate measurement by replacing an imprecise region Ri with its corresponding point pi. We construct the convex hull of an imprecise point set in the plane, where regions in F may be retrieved at unit cost. The goal is to determine the cyclic ordering of the convex hull vertices of P as efficiently as possible. Here, efficiency is interpreted in two ways: (i) minimising the number of retrievals, and (ii) computing each retrieval location quickly.
  Prior works focused on only one of these two aspects: either minimising retrievals or optimising algorithmic runtime. Our contribution is the first to simultaneously achieve both. Let r(F, P) denote the minimal number of retrievals required by any algorithm to determine the convex hull of P for a given instance (F, P). For a family F of n constant-complexity polygons, our main result is a reconstruction algorithm that performs O(r(F, P)) retrievals in O(r(F, P) log^3 n) time.
  Compared to previous approaches that achieve optimal retrieval counts, we improve the runtime per retrieval by a exponential factor, from polynomial to polylogarithmic. Compared to near-linear time algorithms, we significantly reduce the number of retrievals used, and broaden the input families to include overlapping regions. We further extend our results to simple k-gons and to pairwise disjoint disks with radii in [1,k], where our runtime scales linearly with k.</description>
      <guid isPermaLink="false">oai:arXiv.org:2504.02611v3</guid>
      <category>cs.CG</category>
      <pubDate>Mon, 30 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Sarita de Berg, Ivor van der Hoog, Eva Rotenberg, Daniel Rutschmann, Sampson Wong</dc:creator>
    </item>
    <item>
      <title>Fr\'echet Distance in Unweighted Planar Graphs</title>
      <link>https://arxiv.org/abs/2504.17342</link>
      <description>arXiv:2504.17342v3 Announce Type: replace 
Abstract: The Fr\'echet distance is a distance measure between trajectories in the plane or walks in a graph G. Given constant-time shortest path queries in a graph G, the Discrete Fr\'echet distance $F_G(P, Q)$ between two walks P and Q can be computed in $O(|P| \cdot |Q|)$ time using a dynamic program. Driemel, van der Hoog, and Rotenberg [SoCG'22] show that for weighted planar graphs this approach is likely tight, as there can be no strongly subquadratic algorithm to compute a $1.01$-approximation of $F_G(P, Q)$ unless the Orthogonal Vector Hypothesis (OVH) fails.
  Such quadratic-time conditional lower bounds are common to many Fr\'echet distance variants. However, they can be circumvented by assuming that the input comes from some well-behaved class: There exist $(1+\varepsilon)$-approximations, both in weighted graphs and in Rd, that take near-linear time for $c$-packed or $\kappa$-straight walks in the graph. In Rd, there also exists a near-linear time algorithm to compute the Fr\'echet distance whenever all input edges are long compared to the distance.
  We consider computing the Fr\'echet distance in unweighted planar graphs. We show that there exist no 1.25-approximations of the discrete Fr\'echet distance between two disjoint simple paths in an unweighted planar graph in strongly subquadratic time, unless OVH fails. This improves the previous lower bound, both in terms of generality and approximation factor. We subsequently show that adding graph structure circumvents this lower bound: If the graph is a regular tiling with unit-weighted edges, then there exists an $\tilde{O}( (|P| + |Q|)^{1.5})$-time algorithm to compute $D_F(P, Q)$. Our result has natural implications in the plane, as it allows us to define a new class of well-behaved curves that facilitate $(1+\varepsilon)$-approximations of their discrete Fr\'echet distance in subquadratic time.</description>
      <guid isPermaLink="false">oai:arXiv.org:2504.17342v3</guid>
      <category>cs.CG</category>
      <pubDate>Mon, 30 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Ivor van der Hoog, Thijs van der Horst, Eva Rotenberg, Lasse Wulf</dc:creator>
    </item>
    <item>
      <title>A Combinatorial Proof of Universal Optimality for Computing a Planar Convex Hull</title>
      <link>https://arxiv.org/abs/2505.01194</link>
      <description>arXiv:2505.01194v2 Announce Type: replace 
Abstract: For a planar point set $P$, its convex hull is the smallest convex polygon that encloses all points in $P$. The construction of the convex hull from an array $I_P$ containing $P$ is a fundamental problem in computational geometry. By sorting $I_P$ in lexicographical order, one can construct the convex hull of $P$ in $O(n \log n)$ time which is worst-case optimal. Standard worst-case analysis, however, has been criticized as overly coarse or pessimistic, and researchers search for more refined analyses.
  Universal analysis provides an even stronger guarantee. It fixes a point set $P$ and considers the maximum running time across all permutations $I_P$ of $P$. Afshani, Barbay, Chan [FOCS'07] prove that the convex hull construction algorithm by Kirkpatrick, McQueen, and Seidel is universally optimal. Their proof restricts the model of computation to any algebraic decision tree model where the test functions have at most constant degree and at most a constant number of arguments. They rely upon involved algebraic arguments to construct a lower bound for each point set $P$ that matches the universal running time of [SICOMP'86].
  We provide a different proof of universal optimality. Instead of restricting the computational model, we further specify the output. We require as output (1) the convex hull, and (2) for each internal point of $P$ a witness for it being internal. Our argument is shorter, perhaps simpler, and applicable in more general models of computation.</description>
      <guid isPermaLink="false">oai:arXiv.org:2505.01194v2</guid>
      <category>cs.CG</category>
      <pubDate>Mon, 30 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Ivor van der Hoog, Eva Rotenberg, Daniel Rutschmann</dc:creator>
    </item>
    <item>
      <title>Leibniz rule for wedge product in discrete exterior calculus on general polygonal meshes</title>
      <link>https://arxiv.org/abs/2504.14275</link>
      <description>arXiv:2504.14275v3 Announce Type: replace-cross 
Abstract: Discrete exterior calculus offers a coordinate--free discretization of exterior calculus especially suited for computations on curved spaces. In this work, we present a wedge product on 2--dimensional pseudomanifolds, whose faces are any polygons. We prove that this polygonal wedge product is compatible with the discrete exterior derivative in the sense that it satisfies the Leibniz product rule. We thus extend previously studied discretizations of wedge products from simplicial or quadrilateral meshes to surface meshes whose faces are arbitrary simple polygons. We also prove that our discrete wedge product corresponds to a cup product of cochains on 2--pseudomanifolds. By rigorously justifying our construction we add another piece to ever evolving discrete versions of exterior calculus.</description>
      <guid isPermaLink="false">oai:arXiv.org:2504.14275v3</guid>
      <category>math.AT</category>
      <category>cs.CG</category>
      <pubDate>Mon, 30 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-sa/4.0/</dc:rights>
      <dc:creator>Lenka Ptackova</dc:creator>
    </item>
  </channel>
</rss>
