<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.CG updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.CG</link>
    <description>cs.CG updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.CG" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Wed, 03 Jul 2024 20:57:51 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Wed, 03 Jul 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>Spanner for the $0/1/\infty$ weighted region problem</title>
      <link>https://arxiv.org/abs/2407.01951</link>
      <description>arXiv:2407.01951v1 Announce Type: new 
Abstract: We consider the problem of computing an approximate weighted shortest path in a weighted subdivision, with weights assigned from the set $\{0, 1, \infty\}$. We present a data structure $B$, which stores a set of convex, non-overlapping regions. These include zero-cost regions (0-regions) with a weight of $0$ and obstacles with a weight of $\infty$, all embedded in a plane with a weight of $1$. The data structure $B$ can be constructed in expected time $O(N + (n/\varepsilon^3)(\log(n/\varepsilon) + \log N))$, where $n$ is the total number of regions, $N$ represents the total complexity of the regions, and $1 + \varepsilon$ is the approximation factor, for any $0 &lt; \varepsilon &lt; 1$. Using $B$, one can compute an approximate weighted shortest path from any point $s$ to any point $t$ in $O(N + n/\varepsilon^3 + (n/\varepsilon^2) \log(n/\varepsilon) + (\log N)/\varepsilon)$ time. In the special case where the 0-regions and obstacles are polygons (not necessarily convex), $B$ contains a $(1 + \varepsilon)$-spanner of the input vertices.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.01951v1</guid>
      <category>cs.CG</category>
      <category>cs.DS</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Joachim Gudmundsson, Zijin Huang, Andr\'e van Renssen, Sampson Wong</dc:creator>
    </item>
    <item>
      <title>Analysis of Dynamic Voronoi Diagrams in the Hilbert Metric</title>
      <link>https://arxiv.org/abs/2304.02745</link>
      <description>arXiv:2304.02745v4 Announce Type: replace 
Abstract: The Hilbert metric is a projective metric defined on a convex body which generalizes the Cayley-Klein model of hyperbolic geometry to any convex set. In this paper we analyze Hilbert Voronoi diagrams in the Dynamic setting. In addition we introduce dynamic visualization software for Voronoi diagrams in the Hilbert metric on user specified convex polygons.</description>
      <guid isPermaLink="false">oai:arXiv.org:2304.02745v4</guid>
      <category>cs.CG</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Madeline Bumpus, Xufeng Caesar Dai, Auguste H. Gezalyan, Sam Munoz, Renita Santhoshkumar, Songyu Ye, David M. Mount</dc:creator>
    </item>
    <item>
      <title>The Parametrized Complexity of the Segment Number</title>
      <link>https://arxiv.org/abs/2308.15416</link>
      <description>arXiv:2308.15416v3 Announce Type: replace 
Abstract: Given a straight-line drawing of a graph, a segment is a maximal set of edges that form a line segment. Given a planar graph $G$, the segment number of $G$ is the minimum number of segments that can be achieved by any planar straight-line drawing of $G$. The line cover number of $G$ is the minimum number of lines that support all the edges of a planar straight-line drawing of $G$. Computing the segment number or the line cover number of a planar graph is $\exists\mathbb{R}$-complete and, thus, NP-hard.
  We study the problem of computing the segment number from the perspective of parameterized complexity. We show that this problem is fixed-parameter tractable with respect to each of the following parameters: the vertex cover number, the segment number, and the line cover number. We also consider colored versions of the segment and the line cover number.</description>
      <guid isPermaLink="false">oai:arXiv.org:2308.15416v3</guid>
      <category>cs.CG</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Sabine Cornelsen, Giordano Da Lozzo, Luca Grilli, Siddharth Gupta, Jan Kratochv\'il, Alexander Wolff</dc:creator>
    </item>
    <item>
      <title>Dynamically Maintaining the Persistent Homology of Time Series</title>
      <link>https://arxiv.org/abs/2311.01115</link>
      <description>arXiv:2311.01115v2 Announce Type: replace-cross 
Abstract: We present a dynamic data structure for maintaining the persistent homology of a time series of real numbers. The data structure supports local operations, including the insertion and deletion of an item and the cutting and concatenating of lists, each in time $O(\log n + k)$, in which $n$ counts the critical items and $k$ the changes in the augmented persistence diagram. To achieve this, we design a tailor-made tree structure with an unconventional representation, referred to as banana tree, which may be useful in its own right.</description>
      <guid isPermaLink="false">oai:arXiv.org:2311.01115v2</guid>
      <category>cs.DS</category>
      <category>cs.CG</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Sebastiano Cultrera di Montesano, Herbert Edelsbrunner, Monika Henzinger, Lara Ost</dc:creator>
    </item>
    <item>
      <title>Local certification of geometric graph classes</title>
      <link>https://arxiv.org/abs/2311.16953</link>
      <description>arXiv:2311.16953v4 Announce Type: replace-cross 
Abstract: The goal of local certification is to locally convince the vertices of a graph $G$ that $G$ satisfies a given property. A prover assigns short certificates to the vertices of the graph, then the vertices are allowed to check their certificates and the certificates of their neighbors, and based only on this local view, they must decide whether $G$ satisfies the given property. If the graph indeed satisfies the property, all vertices must accept the instance, and otherwise at least one vertex must reject the instance (for any possible assignment of certificates). The goal is to minimize the size of the certificates.
  In this paper we study the local certification of geometric and topological graph classes. While it is known that in $n$-vertex graphs, planarity can be certified locally with certificates of size $O(\log n)$, we show that several closely related graph classes require certificates of size $\Omega(n)$. This includes penny graphs, unit-distance graphs, (induced) subgraphs of the square grid, 1-planar graphs, and unit-square graphs. These bounds are tight up to a constant factor and give the first known examples of hereditary (and even monotone) graph classes for which the certificates must have linear size. For unit-disk graphs we obtain a lower bound of $\Omega(n^{1-\delta})$ for any $\delta&gt;0$ on the size of the certificates, and an upper bound of $O(n \log n)$. The lower bounds are obtained by proving rigidity properties of the considered graphs, which might be of independent interest.</description>
      <guid isPermaLink="false">oai:arXiv.org:2311.16953v4</guid>
      <category>cs.DM</category>
      <category>cs.CG</category>
      <category>cs.DC</category>
      <category>math.CO</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Oscar Defrain, Louis Esperet, Aur\'elie Lagoutte, Pat Morin, Jean-Florent Raymond</dc:creator>
    </item>
  </channel>
</rss>
