<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.FL updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.FL</link>
    <description>cs.FL updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.FL" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Tue, 07 Jan 2025 03:20:10 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Mon, 06 Jan 2025 00:00:00 -0500</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>Monads and limits in bicategories of circuits</title>
      <link>https://arxiv.org/abs/2501.01882</link>
      <description>arXiv:2501.01882v1 Announce Type: cross 
Abstract: We study monads in the (pseudo-)double category $\mathbf{KSW}(\mathcal{K})$ where loose arrows are Mealy automata valued in an ambient monoidal category $\mathcal{K}$, and the category of tight arrows is $\mathcal{K}$. Such monads turn out to be elegantly described through instances of semifree bicrossed products (bicrossed products of monoids, in the sense of Zappa-Sz\'ep-Takeuchi, where one factor is a free monoid). This result which gives an explicit description of the `free monad' double left adjoint to the forgetful functor. (Loose) monad maps are interesting as well, and relate to already known structures in automata theory. In parallel, we outline what double co/limits exist in $\mathbf{KSW}(\mathcal{K})$ and express in a synthetic language, based on double category theory, the bicategorical features of Katis-Sabadini-Walters `bicategory of circuits'.</description>
      <guid isPermaLink="false">oai:arXiv.org:2501.01882v1</guid>
      <category>math.CT</category>
      <category>cs.FL</category>
      <pubDate>Mon, 06 Jan 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Fosco Loregian</dc:creator>
    </item>
    <item>
      <title>Transformers in Uniform TC$^0$</title>
      <link>https://arxiv.org/abs/2409.13629</link>
      <description>arXiv:2409.13629v2 Announce Type: replace-cross 
Abstract: Previous work has shown that the languages recognized by average-hard attention transformers (AHATs) and softmax-attention transformers (SMATs) are within the circuit complexity class TC$^0$. However, these results assume limited-precision arithmetic: using floating-point numbers with O(log n) bits (where n is the length of the input string), Strobl showed that AHATs can be approximated in L-uniform TC$^0$, and Merrill and Sabharwal showed that SMATs can be approximated in DLOGTIME-uniform TC$^0$. Here, we improve these results, showing that AHATs with no approximation, SMATs with O(poly(n)) bits of floating-point precision, and SMATs with at most $2^{-O(poly(n))}$ absolute error are all in DLOGTIME-uniform TC$^0$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2409.13629v2</guid>
      <category>cs.CC</category>
      <category>cs.FL</category>
      <category>cs.LG</category>
      <pubDate>Mon, 06 Jan 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <arxiv:journal_reference>Transactions on Machine Learning Research, January 2025</arxiv:journal_reference>
      <dc:creator>David Chiang</dc:creator>
    </item>
  </channel>
</rss>
