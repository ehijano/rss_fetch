<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.CG updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.CG</link>
    <description>cs.CG updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.CG" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Tue, 19 Mar 2024 04:00:41 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Tue, 19 Mar 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Computing shortest closed curves on non-orientable surfaces</title>
      <link>https://arxiv.org/abs/2403.11749</link>
      <description>arXiv:2403.11749v1 Announce Type: new 
Abstract: We initiate the study of computing shortest non-separating simple closed curves with some given topological properties on non-orientable surfaces. While, for orientable surfaces, any two non-separating simple closed curves are related by a self-homeomorphism of the surface, and computing shortest such curves has been vastly studied, for non-orientable ones the classification of non-separating simple closed curves up to ambient homeomorphism is subtler, depending on whether the curve is one-sided or two-sided, and whether it is orienting or not (whether it cuts the surface into an orientable one).
  We prove that computing a shortest orienting (weakly) simple closed curve on a non-orientable combinatorial surface is NP-hard but fixed-parameter tractable in the genus of the surface. In contrast, we can compute a shortest non-separating non-orienting (weakly) simple closed curve with given sidedness in $g^{O(1)}.n\log n$ time, where $g$ is the genus and $n$ the size of the surface.
  For these algorithms, we develop tools that can be of independent interest, to compute a variation on canonical systems of loops for non-orientable surfaces based on the computation of an orienting curve, and some covering spaces that are essentially quotients of homology covers.</description>
      <guid isPermaLink="false">oai:arXiv.org:2403.11749v1</guid>
      <category>cs.CG</category>
      <category>cs.CC</category>
      <category>math.GT</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Denys Bulavka, \'Eric Colin de Verdi\`ere, Niloufar Fuladi</dc:creator>
    </item>
    <item>
      <title>A Simple 2-Approximation Algorithm For Minimum Manhattan Network Problem</title>
      <link>https://arxiv.org/abs/2403.11811</link>
      <description>arXiv:2403.11811v1 Announce Type: new 
Abstract: Given a n points in two dimensional space, a Manhattan Network G is a network that connects all n points with either horizontal or vertical edges, with the property that for any two point in G should be connected by a Manhattan path and distance between this two points is equal to Manhattan Distance. The Minimum Manhattan Network problem is to find a Manhattan network with minimum network length, i.e., summation of all line segment in network should be minimize. In this paper, we proposed a 2-approximation algorithm with time complexity O(|E|lgN) where |E| is the number of edges and N is the number of nodes. Using randomly generated datasets, we compare our result with the optimal one.</description>
      <guid isPermaLink="false">oai:arXiv.org:2403.11811v1</guid>
      <category>cs.CG</category>
      <category>cs.GT</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Md. Musfiqur Rahman Sanim, Safrunnesa Saira, Fatin Faiaz Ahsan, Rajon Bardhan, S. M. Ferdous</dc:creator>
    </item>
    <item>
      <title>Robustly Guarding Polygons</title>
      <link>https://arxiv.org/abs/2403.11861</link>
      <description>arXiv:2403.11861v1 Announce Type: new 
Abstract: We propose precise notions of what it means to guard a domain "robustly", under a variety of models. While approximation algorithms for minimizing the number of (precise) point guards in a polygon is a notoriously challenging area of investigation, we show that imposing various degrees of robustness on the notion of visibility coverage leads to a more tractable (and realistic) problem for which we can provide approximation algorithms with constant factor guarantees.</description>
      <guid isPermaLink="false">oai:arXiv.org:2403.11861v1</guid>
      <category>cs.CG</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Rathish Das, Omrit Filtser, Matthew J. Katz, Joseph S. B. Mitchell</dc:creator>
    </item>
    <item>
      <title>Efficient Algorithms for Complexes of Persistence Modules with Applications</title>
      <link>https://arxiv.org/abs/2403.10958</link>
      <description>arXiv:2403.10958v1 Announce Type: cross 
Abstract: We extend the persistence algorithm, viewed as an algorithm computing the homology of a complex of free persistence or graded modules, to complexes of modules that are not free. We replace persistence modules by their presentations and develop an efficient algorithm to compute the homology of a complex of presentations. To deal with inputs that are not given in terms of presentations, we give an efficient algorithm to compute a presentation of a morphism of persistence modules. This allows us to compute persistent (co)homology of instances giving rise to complexes of non-free modules. Our methods lead to a new efficient algorithm for computing the persistent homology of simplicial towers and they enable efficient algorithms to compute the persistent homology of cosheaves over simplicial towers and cohomology of persistent sheaves on simplicial complexes. We also show that we can compute the cohomology of persistent sheaves over arbitrary finite posets by reducing the computation to a computation over simplicial complexes.</description>
      <guid isPermaLink="false">oai:arXiv.org:2403.10958v1</guid>
      <category>math.AT</category>
      <category>cs.CG</category>
      <category>math.AC</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Tamal K. Dey, Florian Russold, Shreyas N. Samaga</dc:creator>
    </item>
    <item>
      <title>ETH-Tight Algorithm for Cycle Packing on Unit Disk Graphs</title>
      <link>https://arxiv.org/abs/2403.11426</link>
      <description>arXiv:2403.11426v1 Announce Type: cross 
Abstract: In this paper, we consider the Cycle Packing problem on unit disk graphs defined as follows. Given a unit disk graph G with n vertices and an integer k, the goal is to find a set of $k$ vertex-disjoint cycles of G if it exists. Our algorithm runs in time $2^{O(\sqrt k)}n^{O(1)}$. This improves the $2^{O(\sqrt k\log k)}n^{O(1)}$-time algorithm by Fomin et al. [SODA 2012, ICALP 2017]. Moreover, our algorithm is optimal assuming the exponential-time hypothesis.</description>
      <guid isPermaLink="false">oai:arXiv.org:2403.11426v1</guid>
      <category>cs.DS</category>
      <category>cs.CG</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Shinwoo An, Eunjin Oh</dc:creator>
    </item>
    <item>
      <title>Probabilistic Analysis of Multiparameter Persistence Decompositions</title>
      <link>https://arxiv.org/abs/2403.11939</link>
      <description>arXiv:2403.11939v1 Announce Type: cross 
Abstract: Multiparameter persistence modules can be uniquely decomposed into indecomposable summands. Among these indecomposables, intervals stand out for their simplicity, making them preferable for their ease of interpretation in practical applications and their computational efficiency. Empirical observations indicate that modules that decompose into only intervals are rare. To support this observation, we show that for numerous common multiparameter constructions, such as density- or degree-Rips bifiltrations, and across a general category of point samples, the probability of the homology-induced persistence module decomposing into intervals goes to zero as the sample size goes to infinity.</description>
      <guid isPermaLink="false">oai:arXiv.org:2403.11939v1</guid>
      <category>math.AT</category>
      <category>cs.CG</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>\'Angel Javier Alonso, Michael Kerber, Primoz Skraba</dc:creator>
    </item>
    <item>
      <title>Approximating Multiplicatively Weighted Voronoi Diagrams: Efficient Construction with Linear Size</title>
      <link>https://arxiv.org/abs/2112.12350</link>
      <description>arXiv:2112.12350v2 Announce Type: replace 
Abstract: Given a set of $n$ sites from $\mathbb{R}^d$, each having some positive weight factor, the Multiplicatively Weighted Voronoi Diagram is a subdivision of space that associates each cell to the site whose weighted Euclidean distance is minimal for all points in the cell.
  We give novel approximation algorithms that output a cube-based subdivision such that the weighted distance of a point with respect to the associated site is at most $(1+\varepsilon)$ times the minimum weighted distance, for any fixed parameter $\varepsilon \in (0,1)$. The diagram size is $O_d(n \log(1/\varepsilon)/\varepsilon^{d-1})$ and the construction time is within an $O_D(\log(n)/\varepsilon^{(d+5)/2})$-factor of the size bound. We also prove a matching lower bound for the size, showing that the proposed method is the first to achieve \emph{optimal size}, up to $\Theta(1)^d$-factors. In particular, the obscure $\log(1/\varepsilon)$ factor is unavoidable. As a by-product, we obtain a factor $d^{O(d)}$ improvement in size for the unweighted case and $O(d \log(n) + d^2 \log(1/\varepsilon))$ point-location time in the subdivision, improving the known query bound by one $d$-factor.
  The key ingredients of our approximation algorithms are the study of convex regions that we call cores, an adaptive refinement algorithm to obtain optimal size, and a novel notion of \emph{bisector coresets}, which may be of independent interest. In particular, we show that coresets with $O_d(1/\varepsilon^{(d+3)/2})$ worst-case size can be computed in near-linear time.</description>
      <guid isPermaLink="false">oai:arXiv.org:2112.12350v2</guid>
      <category>cs.CG</category>
      <category>cs.DS</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Joachim Gudmundsson, Martin P. Seybold, Sampson Wong</dc:creator>
    </item>
    <item>
      <title>Cup Product Persistence and Its Efficient Computation</title>
      <link>https://arxiv.org/abs/2212.01633</link>
      <description>arXiv:2212.01633v3 Announce Type: replace 
Abstract: It is well-known that the cohomology ring has a richer structure than homology groups. However, until recently, the use of cohomology in persistence setting has been limited to speeding up of barcode computations. Some of the recently introduced invariants, namely, persistent cup-length, persistent cup modules and persistent Steenrod modules, to some extent, fill this gap. When added to the standard persistence barcode, they lead to invariants that are more discriminative than the standard persistence barcode. In this work, we devise an $O(d n^4)$ algorithm for computing the persistent $k$-cup modules for all $k \in \{2, \dots, d\}$, where $d$ denotes the dimension of the filtered complex, and $n$ denotes its size. Moreover, we note that since the persistent cup length can be obtained as a byproduct of our computations, this leads to a faster algorithm for computing it for $d&gt;3$. Finally, we introduce a new stable invariant called partition modules of cup product that is more discriminative than persistent $k$-cup modules and devise an $O(c(d)n^4)$ algorithm for computing it, where $c(d)$ is subexponential in $d$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2212.01633v3</guid>
      <category>cs.CG</category>
      <category>math.AT</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Tamal K. Dey, Abhishek Rathod</dc:creator>
    </item>
    <item>
      <title>Hopf Arborescent Links, Minor Theory, and Decidability of the Genus Defect</title>
      <link>https://arxiv.org/abs/2312.09094</link>
      <description>arXiv:2312.09094v2 Announce Type: replace 
Abstract: While the problem of computing the genus of a knot is now fairly well understood, no algorithm is known for its four-dimensional variants, both in the smooth and in the topological locally flat category. In this article, we investigate a class of knots and links called Hopf arborescent links, which are obtained as the boundaries of some iterated plumbings of Hopf bands. We show that for such links, computing the genus defects, which measure how much the four-dimensional genera differ from the classical genus, is decidable. Our proof is non-constructive, and is obtained by proving that Seifert surfaces of Hopf arborescent links under a relation of minors defined by containment of their Seifert surfaces form a well-quasi-order.</description>
      <guid isPermaLink="false">oai:arXiv.org:2312.09094v2</guid>
      <category>cs.CG</category>
      <category>math.GT</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Pierre Dehornoy, Corentin Lunel, Arnaud de Mesmay</dc:creator>
    </item>
    <item>
      <title>Eight-Partitioning Points in 3D, and Efficiently Too</title>
      <link>https://arxiv.org/abs/2403.02627</link>
      <description>arXiv:2403.02627v2 Announce Type: replace 
Abstract: An \emph{eight-partition} of a finite set of points (respectively, of a continuous mass distribution) in $\mathbb{R}^3$ consists of three planes that divide the space into $8$ octants, such that each open octant contains at most $1/8$ of the points (respectively, of the mass). In 1966, Hadwiger showed that any mass distribution in $\mathbb{R}^3$ admits an eight-partition; moreover, one can prescribe the normal direction of one of the three planes. The analogous result for finite point sets follows by a standard limit argument.
  We prove the following variant of this result: Any mass distribution (or point set) in $\mathbb{R}^3$ admits an eight-partition for which the intersection of two of the planes is a line with a prescribed direction.
  Moreover, we present an efficient algorithm for calculating an eight-partition of a set of $n$ points in~$\mathbb{R}^3$ (with prescribed normal direction of one of the planes) in time $O^{*}(n^{5/2})$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2403.02627v2</guid>
      <category>cs.CG</category>
      <category>math.CO</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Boris Aronov, Abdul Basit, Indu Ramesh, Gianluca Tasinato, Uli Wagner</dc:creator>
    </item>
  </channel>
</rss>
