<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.SC updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.SC</link>
    <description>cs.SC updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.SC" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Wed, 17 Apr 2024 04:00:10 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Wed, 17 Apr 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>Computing with Hypergeometric-Type Terms</title>
      <link>https://arxiv.org/abs/2404.10143</link>
      <description>arXiv:2404.10143v1 Announce Type: new 
Abstract: Take a multiplicative monoid of sequences in which the multiplication is given by Hadamard product. The set of linear combinations of interleaving monoid elements then yields a ring. We consider such a construction for the monoid of hypergeometric sequences, yielding what we call the ring of hypergeometric-type sequences -- a subring of the ring of holonomic sequences. We present two algorithms in this setting: one for computing holonomic recurrence equations from hypergeometric-type normal forms and the other for finding products of hypergeometric-type terms. These are newly implemented commands in our Maple package $\texttt{HyperTypeSeq}$, which we also describe.</description>
      <guid isPermaLink="false">oai:arXiv.org:2404.10143v1</guid>
      <category>cs.SC</category>
      <category>cs.DM</category>
      <category>cs.MS</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Bertrand Teguia Tabuguia</dc:creator>
    </item>
    <item>
      <title>Primary Decomposition of Symmetric Ideals</title>
      <link>https://arxiv.org/abs/2404.10482</link>
      <description>arXiv:2404.10482v1 Announce Type: cross 
Abstract: We propose an effective method for primary decomposition of symmetric ideals. Let $K[X]=K[x_1,\ldots,x_n]$ be the $n$-valuables polynomial ring over a field $K$ and $\mathfrak{S}_n$ the symmetric group of order $n$. We consider the canonical action of $\mathfrak{S}_n$ on $K[X]$ i.e. $\sigma(f(x_1,\ldots,x_n))=f(x_{\sigma(1)},\ldots,x_{\sigma(n)})$ for $\sigma\in \mathfrak{S}_n$. For an ideal $I$ of $K[X]$, $I$ is called {\em symmetric} if $\sigma(I)=I$ for any $\sigma\in \mathfrak{S}_n$. For a minimal primary decomposition $I=Q_1\cap \cdots \cap Q_r$ of a symmetric ideal $I$, $\sigma(I)=\sigma (Q_1)\cap \cdots \cap \sigma(Q_r)$ is a minimal primary decomposition of $I$ for any $\sigma\in \mathfrak{S}_n$. We utilize this property to compute a full primary decomposition of $I$ efficiently from partial primary components. We investigate the effectiveness of our algorithm by implementing it in the computer algebra system Risa/Asir.</description>
      <guid isPermaLink="false">oai:arXiv.org:2404.10482v1</guid>
      <category>math.AC</category>
      <category>cs.SC</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Yuki Ishihara</dc:creator>
    </item>
    <item>
      <title>LogicMP: A Neuro-symbolic Approach for Encoding First-order Logic Constraints</title>
      <link>https://arxiv.org/abs/2309.15458</link>
      <description>arXiv:2309.15458v3 Announce Type: replace-cross 
Abstract: Integrating first-order logic constraints (FOLCs) with neural networks is a crucial but challenging problem since it involves modeling intricate correlations to satisfy the constraints. This paper proposes a novel neural layer, LogicMP, whose layers perform mean-field variational inference over an MLN. It can be plugged into any off-the-shelf neural network to encode FOLCs while retaining modularity and efficiency. By exploiting the structure and symmetries in MLNs, we theoretically demonstrate that our well-designed, efficient mean-field iterations effectively mitigate the difficulty of MLN inference, reducing the inference from sequential calculation to a series of parallel tensor operations. Empirical results in three kinds of tasks over graphs, images, and text show that LogicMP outperforms advanced competitors in both performance and efficiency.</description>
      <guid isPermaLink="false">oai:arXiv.org:2309.15458v3</guid>
      <category>cs.AI</category>
      <category>cs.SC</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Weidi Xu, Jingwei Wang, Lele Xie, Jianshan He, Hongting Zhou, Taifeng Wang, Xiaopei Wan, Jingdong Chen, Chao Qu, Wei Chu</dc:creator>
    </item>
    <item>
      <title>Performant Dynamically Typed E-Graphs in Pure Julia</title>
      <link>https://arxiv.org/abs/2404.08751</link>
      <description>arXiv:2404.08751v2 Announce Type: replace-cross 
Abstract: We introduce the third major version of Metatheory.jl, a Julia library for general-purpose metaprogramming and symbolic computation. Metatheory.jl provides a flexible and performant implementation of e-graphs and Equality Saturation (EqSat) that addresses the two-language problem in high-level compiler optimizations, symbolics and metaprogramming. We present results from our ongoing optimization efforts, comparing the state-of-the-art egg Rust library's performance against our system and show that performant EqSat implementations are possible without sacrificing the comfort of a direct 1-1 integration with a dynamic, high-level and an interactive host programming language.</description>
      <guid isPermaLink="false">oai:arXiv.org:2404.08751v2</guid>
      <category>cs.PL</category>
      <category>cs.SC</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Alessandro Cheli, Niklas Heim</dc:creator>
    </item>
  </channel>
</rss>
