<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.FL updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.FL</link>
    <description>cs.FL updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.FL" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Fri, 18 Oct 2024 02:20:10 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Thu, 17 Oct 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Expressivity of Linear Temporal Logic for Pomset Languages of Higher Dimensional Automata</title>
      <link>https://arxiv.org/abs/2410.12493</link>
      <description>arXiv:2410.12493v1 Announce Type: new 
Abstract: Temporal logics are a powerful tool to specify properties of computational systems. For concurrent programs, Higher Dimensional Automata (HDA) are a very expressive model of non-interleaving concurrency. HDA recognize languages of partially ordered multisets, or pomsets. Recent work has shown that Monadic Second Order (MSO) logic is as expressive as HDA for pomset languages. In this paper, we investigate the class of pomset languages that are definable in First Order (FO) logic. As expected, this is a strict subclass of MSO-definable languages. In the case of words, Kamp's theorem states that FO is as expressive as Linear Temporal Logic (LTL). Our aim is to prove a variant of Kamp's theorem for pomset languages. Thus, we define a temporal logic called Sparse Pomset Temporal Logic (SPTL), and show that it is equivalent to FO, when there is no autoconcurrency.</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.12493v1</guid>
      <category>cs.FL</category>
      <pubDate>Thu, 17 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Emily Clement, Enzo Erlich, J\'er\'emy Ledent</dc:creator>
    </item>
    <item>
      <title>Algebraic Language Theory with Effects</title>
      <link>https://arxiv.org/abs/2410.12569</link>
      <description>arXiv:2410.12569v1 Announce Type: new 
Abstract: Regular languages - the languages accepted by deterministic finite automata - are known to be precisely the languages recognized by finite monoids. This characterization is the origin of algebraic language theory. In the present paper, we generalize this result to automata with computational effects given by a monad, thereby providing the foundations of an effectful algebraic language theory. Our prime application is a novel algebraic approach to languages computed by probabilistic finite automata, which are shown to coincide with (1) languages recognized by finite monoids via probabilistic monoid morphisms, and (2) languages recognized by convex monoids based on finitely generated convex sets. Further characterizations are derived for nondeterministic probabilistic finite automata, and weighted finite automata over arbitrary semirings.</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.12569v1</guid>
      <category>cs.FL</category>
      <pubDate>Thu, 17 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Fabian Birkmann, Stefan Milius, Henning Urbat, Thorsten Wi{\ss}mann</dc:creator>
    </item>
    <item>
      <title>The rotating normal form of braids is regular</title>
      <link>https://arxiv.org/abs/1606.08970</link>
      <description>arXiv:1606.08970v4 Announce Type: replace-cross 
Abstract: Defined on Birman-Ko-Lee monoids, the rotating normal form has strong connections with the Dehornoy's braid ordering. It can be seen as a process for selecting between all the representative words of a Birman-Ko-Lee braid a particular one, called rotating word. In this paper we construct, for all n   2, a finite-state automaton which recognizes rotating words on n strands, proving that the rotating normal form is regular. As a consequence we obtain the regularity of a $\sigma$-definite normal form defined on the whole braid group.</description>
      <guid isPermaLink="false">oai:arXiv.org:1606.08970v4</guid>
      <category>math.GR</category>
      <category>cs.CL</category>
      <category>cs.FL</category>
      <pubDate>Thu, 17 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <arxiv:DOI>10.1016/j.jalgebra.2018.01.001</arxiv:DOI>
      <arxiv:journal_reference>Journal of Algebra, 2018, 501, pp.545-570</arxiv:journal_reference>
      <dc:creator>Jean Fromentin (LMPA)</dc:creator>
    </item>
    <item>
      <title>AI-Oracle Machines for Intelligent Computing</title>
      <link>https://arxiv.org/abs/2406.12213</link>
      <description>arXiv:2406.12213v4 Announce Type: replace-cross 
Abstract: We introduce the concept of AI-oracle machines for intelligent computing and outline several applications to demonstrate their potential. Following this, we advocate for the development of a comprehensive platform to streamline the implementation of AI-oracle machines.</description>
      <guid isPermaLink="false">oai:arXiv.org:2406.12213v4</guid>
      <category>cs.CL</category>
      <category>cs.AI</category>
      <category>cs.FL</category>
      <pubDate>Thu, 17 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Jie Wang</dc:creator>
    </item>
    <item>
      <title>Smart Casual Verification of the Confidential Consortium Framework</title>
      <link>https://arxiv.org/abs/2406.17455</link>
      <description>arXiv:2406.17455v2 Announce Type: replace-cross 
Abstract: The Confidential Consortium Framework (CCF) is an open-source platform for developing trustworthy and reliable cloud applications. CCF powers Microsoft's Azure Confidential Ledger service and as such it is vital to build confidence in the correctness of CCF's design and implementation. This paper reports our experiences applying smart casual verification to validate the correctness of CCF's novel distributed protocols, focusing on its unique distributed consensus protocol and its custom client consistency model. We use the term smart casual verification to describe our hybrid approach, which combines the rigor of formal specification and model checking with the pragmatism of automated testing, in our case binding the formal specification in TLA+ to the C++ implementation. While traditional formal methods approaches require substantial buy-in and are often one-off efforts by domain experts, we have integrated our smart casual verification approach into CCF's CI pipeline, allowing contributors to continuously validate CCF as it evolves. We describe the challenges we faced in applying smart casual verification to a complex existing codebase and how we overcame them to find six subtle bugs in the design and implementation before they could impact production</description>
      <guid isPermaLink="false">oai:arXiv.org:2406.17455v2</guid>
      <category>cs.DC</category>
      <category>cs.FL</category>
      <category>cs.SE</category>
      <pubDate>Thu, 17 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Heidi Howard, Markus A. Kuppe, Edward Ashton, Amaury Chamayou, Natacha Crooks</dc:creator>
    </item>
  </channel>
</rss>
