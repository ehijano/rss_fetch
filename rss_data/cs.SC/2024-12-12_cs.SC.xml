<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.SC updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.SC</link>
    <description>cs.SC updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.SC" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Fri, 13 Dec 2024 02:44:05 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Thu, 12 Dec 2024 00:00:00 -0500</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>A Monadic Calculus with Episodic Flows</title>
      <link>https://arxiv.org/abs/2412.07939</link>
      <description>arXiv:2412.07939v1 Announce Type: new 
Abstract: We define computational atoms named "actions" equipped primarily with three operations: reduction, collection, and inspection. We show how actions can be used for decision-making algorithms from simple axioms. We describe the encodings of typical data structures as actions, and provide a method of analysis for algorithms on the basis of data mutation.</description>
      <guid isPermaLink="false">oai:arXiv.org:2412.07939v1</guid>
      <category>cs.SC</category>
      <pubDate>Thu, 12 Dec 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Sotirios Henning</dc:creator>
    </item>
    <item>
      <title>Positivity Proofs for Linear Recurrences through Contracted Cones</title>
      <link>https://arxiv.org/abs/2412.08576</link>
      <description>arXiv:2412.08576v1 Announce Type: new 
Abstract: Deciding the positivity of a sequence defined by a linear recurrence with polynomial coefficients and initial condition is difficult in general. Even in the case of recurrences with constant coefficients, it is known to be decidable only for order up to~5. We consider a large class of linear recurrences of arbitrary order, with polynomial coefficients, for which an algorithm decides positivity for initial conditions outside of a hyperplane. The underlying algorithm constructs a cone, contracted by the recurrence operator, that allows a proof of positivity by induction. The existence and construction of such cones relies on the extension of the classical Perron-Frobenius theory to matrices leaving a cone invariant.</description>
      <guid isPermaLink="false">oai:arXiv.org:2412.08576v1</guid>
      <category>cs.SC</category>
      <pubDate>Thu, 12 Dec 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Alaa Ibrahim, Bruno Salvy</dc:creator>
    </item>
    <item>
      <title>The B2Scala Tool: Integrating Bach in Scala with Security in Mind</title>
      <link>https://arxiv.org/abs/2412.08235</link>
      <description>arXiv:2412.08235v1 Announce Type: cross 
Abstract: Process algebras have been widely used to verify security protocols in a formal manner. However they mostly focus on synchronous communication based on the exchange of messages. We present an alternative approach relying on asynchronous communication obtained through information available on a shared space. More precisely this paper first proposes an embedding in Scala of a Linda-like language, called Bach.  It consists of a Domain Specific Language, internal to Scala, that allows us to experiment programs developed in Bach while benefiting from the Scala eco-system, in particular from its type system as well as program fragments developed in Scala. Moreover, we introduce a logic that allows to restrict the executions of programs to those meeting logic formulae. Our work is illustrated on the Needham-Schroeder security protocol, for which we manage to automatically rediscover the man-in-the-middle attack first put in evidence by G. Lowe.</description>
      <guid isPermaLink="false">oai:arXiv.org:2412.08235v1</guid>
      <category>cs.PL</category>
      <category>cs.MA</category>
      <category>cs.SC</category>
      <pubDate>Thu, 12 Dec 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:DOI>10.4204/EPTCS.414.4</arxiv:DOI>
      <arxiv:journal_reference>EPTCS 414, 2024, pp. 58-76</arxiv:journal_reference>
      <dc:creator>Doha Ouardi (University of Namur), Manel Barkallah (University of Namur), Jean-Marie Jacquet (University of Namur)</dc:creator>
    </item>
  </channel>
</rss>
