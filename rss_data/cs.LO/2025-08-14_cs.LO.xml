<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.LO updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.LO</link>
    <description>cs.LO updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.LO" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Fri, 15 Aug 2025 01:27:33 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Thu, 14 Aug 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>TPTP World Infrastructure for Non-classical Logics</title>
      <link>https://arxiv.org/abs/2508.09318</link>
      <description>arXiv:2508.09318v1 Announce Type: new 
Abstract: The TPTP World is the well established infrastructure that supports research, development, and deployment of Automated Theorem Proving (ATP) systems. The TPTP World supports a range of classical logics, and since release v9.0.0 has supported non-classical logics. This paper provides a self-contained comprehensive overview of the TPTP World infrastructure for ATP in non-classical logics: the non-classical language extension, problems and solutions, and tool support. A detailed description of use of the infrastructure for quantified normal multi-modal logic is given.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.09318v1</guid>
      <category>cs.LO</category>
      <category>cs.AI</category>
      <pubDate>Thu, 14 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Alexander Steen, Geoff Sutcliffe</dc:creator>
    </item>
    <item>
      <title>On Middle Grounds for Preference Statements</title>
      <link>https://arxiv.org/abs/2508.09553</link>
      <description>arXiv:2508.09553v1 Announce Type: new 
Abstract: In group decisions or deliberations, stakeholders are often confronted with conflicting opinions. We investigate a logic-based way of expressing such opinions and a formal general notion of a middle ground between stakeholders. Inspired by the literature on preferences with hierarchical and lexicographic models, we instantiate our general framework to the case where stakeholders express their opinions using preference statements of the form I prefer 'a' to 'b', where 'a' and 'b' are alternatives expressed over some attributes, e.g., in a trolley problem, one can express I prefer to save 1 adult and 1 child to 2 adults (and 0 children). We prove theoretical results on the existence and uniqueness of middle grounds. In particular, we show that, for preference statements, middle grounds may not exist and may not be unique. We also provide algorithms for deciding the existence and finding middle grounds.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.09553v1</guid>
      <category>cs.LO</category>
      <category>cs.CC</category>
      <pubDate>Thu, 14 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Anne-Marie George, Ana Ozaki</dc:creator>
    </item>
    <item>
      <title>Short proofs without interference</title>
      <link>https://arxiv.org/abs/2508.09851</link>
      <description>arXiv:2508.09851v1 Announce Type: new 
Abstract: Interference is a phenomenon on proof systems for SAT solving that is both counter-intuitive and bothersome when developing proof-logging techniques. However, all existing proof systems that can produce short proofs for all inprocessing techniques deployed by SAT present this feature. Based on insights from propositional dynamic logic, we propose a framework that eliminates interference while preserving the same expressive power of interference-based proofs. Furthermore, we propose a first building blocks towards RUP-like decision procedures for our dynamic logic-based frameworks, which are essential to developing effective proof checking methods.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.09851v1</guid>
      <category>cs.LO</category>
      <pubDate>Thu, 14 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <dc:creator>Adrian Rebola-Pardo</dc:creator>
    </item>
    <item>
      <title>Efficient Volume Computation for SMT Formulas</title>
      <link>https://arxiv.org/abs/2508.09934</link>
      <description>arXiv:2508.09934v1 Announce Type: new 
Abstract: Satisfiability Modulo Theory (SMT) has recently emerged as a powerful tool for solving various automated reasoning problems across diverse domains. Unlike traditional satisfiability methods confined to Boolean variables, SMT can reason on real-life variables like bitvectors, integers, and reals. A natural extension in this context is to ask quantitative questions. One such query in the SMT theory of Linear Real Arithmetic (LRA) is computing the volume of the entire satisfiable region defined by SMT formulas. This problem is important in solving different quantitative verification queries in software verification, cyber-physical systems, and neural networks, to mention a few.
  We introduce ttc, an efficient algorithm that extends the capabilities of SMT solvers to volume computation. Our method decomposes the solution space of SMT Linear Real Arithmetic formulas into a union of overlapping convex polytopes, then computes their volumes and calculates their union. Our algorithm builds on recent developments in streaming-mode set unions, volume computation algorithms, and AllSAT techniques. Experimental evaluations demonstrate significant performance improvements over existing state-of-the-art approaches.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.09934v1</guid>
      <category>cs.LO</category>
      <pubDate>Thu, 14 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Arijit Shaw, Uddalok Sarkar, Kuldeep S. Meel</dc:creator>
    </item>
    <item>
      <title>Value Function Initialization for Knowledge Transfer and Jump-start in Deep Reinforcement Learning</title>
      <link>https://arxiv.org/abs/2508.09277</link>
      <description>arXiv:2508.09277v1 Announce Type: cross 
Abstract: Value function initialization (VFI) is an effective way to achieve a jumpstart in reinforcement learning (RL) by leveraging value estimates from prior tasks. While this approach is well established in tabular settings, extending it to deep reinforcement learning (DRL) poses challenges due to the continuous nature of the state-action space, the noisy approximations of neural networks, and the impracticality of storing all past models for reuse. In this work, we address these challenges and introduce DQInit, a method that adapts value function initialization to DRL. DQInit reuses compact tabular Q-values extracted from previously solved tasks as a transferable knowledge base. It employs a knownness-based mechanism to softly integrate these transferred values into underexplored regions and gradually shift toward the agent's learned estimates, avoiding the limitations of fixed time decay. Our approach offers a novel perspective on knowledge transfer in DRL by relying solely on value estimates rather than policies or demonstrations, effectively combining the strengths of jumpstart RL and policy distillation while mitigating their drawbacks. Experiments across multiple continuous control tasks demonstrate that DQInit consistently improves early learning efficiency, stability, and overall performance compared to standard initialization and existing transfer techniques.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.09277v1</guid>
      <category>cs.AI</category>
      <category>cs.LG</category>
      <category>cs.LO</category>
      <pubDate>Thu, 14 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-sa/4.0/</dc:rights>
      <dc:creator>Soumia Mehimeh</dc:creator>
    </item>
    <item>
      <title>Reasoning About Knowledge on Regular Expressions is 2EXPTIME-complete</title>
      <link>https://arxiv.org/abs/2508.09784</link>
      <description>arXiv:2508.09784v1 Announce Type: cross 
Abstract: Logics for reasoning about knowledge and actions have seen many applications in various domains of multi-agent systems, including epistemic planning. Change of knowledge based on observations about the surroundings forms a key aspect in such planning scenarios. Public Observation Logic (POL) is a variant of public announcement logic for reasoning about knowledge that gets updated based on public observations. Each state in an epistemic (Kripke) model is equipped with a set of expected observations. These states evolve as the expectations get matched with the actual observations. In this work, we prove that the satisfiability problem of $\POL$ is 2EXPTIME-complete.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.09784v1</guid>
      <category>cs.AI</category>
      <category>cs.CC</category>
      <category>cs.LO</category>
      <pubDate>Thu, 14 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Avijeet Ghosh, Sujata Ghosh, Fran\c{c}ois Schwarzentruber</dc:creator>
    </item>
    <item>
      <title>Verifying Quantized Graph Neural Networks is PSPACE-complete</title>
      <link>https://arxiv.org/abs/2502.16244</link>
      <description>arXiv:2502.16244v2 Announce Type: replace 
Abstract: In this paper, we investigate the verification of quantized Graph Neural Networks (GNNs), where some fixed-width arithmetic is used to represent numbers. We introduce the linear-constrained validity (LVP) problem for verifying GNNs properties, and provide an efficient translation from LVP instances into a logical language. We show that LVP is in PSPACE, for any reasonable activation functions. We provide a proof system. We also prove PSPACE-hardness, indicating that while reasoning about quantized GNNs is feasible, it remains generally computationally challenging.</description>
      <guid isPermaLink="false">oai:arXiv.org:2502.16244v2</guid>
      <category>cs.LO</category>
      <category>cs.CC</category>
      <category>cs.LG</category>
      <pubDate>Thu, 14 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-sa/4.0/</dc:rights>
      <dc:creator>Marco S\"alzer, Fran\c{c}ois Schwarzentruber, Nicolas Troquard</dc:creator>
    </item>
    <item>
      <title>Owicki--Gries Logic for Timestamp Semantics</title>
      <link>https://arxiv.org/abs/2505.15053</link>
      <description>arXiv:2505.15053v5 Announce Type: replace 
Abstract: Whereas an extension with non-interference of Hoare logic for sequential programs Owicki--Gries logic ensures the correctness of concurrent programs on strict consistency, it is unsound to weak memory models adopted by modern computer architectures and specifications of programming languages. This paper proposes a novel non-interference notion and provides concurrent program logic sound to timestamp semantics corresponding to a weak memory model that allows delays in the effects of store instructions. This paper reports three theoretically interesting techniques for modifying non-interference to support delays in the effects of store instructions. The techniques contribute to a better understanding of constructing concurrent program logic.</description>
      <guid isPermaLink="false">oai:arXiv.org:2505.15053v5</guid>
      <category>cs.LO</category>
      <pubDate>Thu, 14 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Tatsuya Abe</dc:creator>
    </item>
    <item>
      <title>Complexity of Abduction in \L{}ukasiewicz Logic</title>
      <link>https://arxiv.org/abs/2507.13847</link>
      <description>arXiv:2507.13847v3 Announce Type: replace 
Abstract: We explore the problem of explaining observations in contexts involving statements with truth degrees such as `the lift is loaded', `the symptoms are severe', etc. To formalise these contexts, we consider infinitely-valued {\L}ukasiewicz fuzzy logic. We define and motivate the notions of abduction problems and explanations in the language of {\L}ukasiewicz logic expanded with `interval literals' of the form $p\geq\mathbf{c}$, $p\leq\mathbf{c}$, and their negations that express the set of values a variable can have. We analyse the complexity of standard abductive reasoning tasks (solution recognition, solution existence, and relevance / necessity of hypotheses) in {\L}ukasiewicz logic for the case of the full language and for the case of theories containing only disjunctive clauses and show that in contrast to classical propositional logic, the abduction in the clausal fragment has lower complexity than in the general case.</description>
      <guid isPermaLink="false">oai:arXiv.org:2507.13847v3</guid>
      <category>cs.LO</category>
      <pubDate>Thu, 14 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Katsumi Inoue, Daniil Kozhemiachenko</dc:creator>
    </item>
    <item>
      <title>Synthesis Benchmarks for Automated Reasoning</title>
      <link>https://arxiv.org/abs/2507.19827</link>
      <description>arXiv:2507.19827v3 Announce Type: replace 
Abstract: Program synthesis is the task of constructing a program conforming to a given specification. We focus on deductive synthesis, and in particular on synthesis problems with specifications given as $\forall\exists$-formulas, expressing the existence of an output corresponding to any input. So far there has been no canonical benchmark set for deductive synthesis using the $\forall\exists$-format and supporting the so-called uncomputable symbol restriction. This work presents such a data set, composed by complementing existing benchmarks by new ones. Our data set is dynamically growing and should motivate future developments in the theory and practice of automating synthesis.</description>
      <guid isPermaLink="false">oai:arXiv.org:2507.19827v3</guid>
      <category>cs.LO</category>
      <pubDate>Thu, 14 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>M\'arton Hajdu, Petra Hozzov\'a, Laura Kov\'acs, Andrei Voronkov, Eva Maria Wagner, Richard Steven \v{Z}ilin\v{c}\'ik</dc:creator>
    </item>
    <item>
      <title>A non-uniform view of Craig interpolation in modal logics with linear frames</title>
      <link>https://arxiv.org/abs/2312.05929</link>
      <description>arXiv:2312.05929v2 Announce Type: replace-cross 
Abstract: Normal modal logics extending the logic K4.3 of linear transitive frames are known to lack the Craig interpolation property, except some logics of bounded depth such as S5. We turn this `negative' fact into a research question and pursue a non-uniform approach to Craig interpolation by investigating the following interpolant existence problem: decide whether there exists a Craig interpolant between two given formulas in any fixed logic above K4.3. Using a bisimulation-based characterisation of interpolant existence for descriptive frames, we show that this problem is decidable and coNP-complete for all finitely axiomatisable normal modal logics containing K4.3. It is thus not harder than entailment in these logics, which is in sharp contrast to other recent non-uniform interpolation results. We also extend our approach to Priorean temporal logics (with both past and future modalities) over the standard time flows-the integers, rationals, reals, and finite strict linear orders-none of which is blessed with the Craig interpolation property.</description>
      <guid isPermaLink="false">oai:arXiv.org:2312.05929v2</guid>
      <category>math.LO</category>
      <category>cs.LO</category>
      <pubDate>Thu, 14 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Agi Kurucz, Frank Wolter, Michael Zakharyaschev</dc:creator>
    </item>
    <item>
      <title>Halting Recurrent GNNs and the Graded $\mu$-Calculus</title>
      <link>https://arxiv.org/abs/2505.11050</link>
      <description>arXiv:2505.11050v2 Announce Type: replace-cross 
Abstract: Graph Neural Networks (GNNs) are a class of machine-learning models that operate on graph-structured data. Their expressive power is intimately related to logics that are invariant under graded bisimilarity. Current proposals for recurrent GNNs either assume that the graph size is given to the model, or suffer from a lack of termination guarantees. In this paper, we propose a halting mechanism for recurrent GNNs. We prove that our halting model can express all node classifiers definable in graded modal mu-calculus, even for the standard GNN variant that is oblivious to the graph size. To prove our main result, we develop a new approximate semantics for graded mu-calculus, which we believe to be of independent interest. We leverage this new semantics into a new model-checking algorithm, called the counting algorithm, which is oblivious to the graph size. In a final step we show that the counting algorithm can be implemented on a halting recurrent GNN.</description>
      <guid isPermaLink="false">oai:arXiv.org:2505.11050v2</guid>
      <category>cs.LG</category>
      <category>cs.AI</category>
      <category>cs.LO</category>
      <pubDate>Thu, 14 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Jeroen Bollen, Jan Van den Bussche, Stijn Vansummeren, Jonni Virtema</dc:creator>
    </item>
  </channel>
</rss>
