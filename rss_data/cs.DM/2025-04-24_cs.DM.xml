<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.DM updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.DM</link>
    <description>cs.DM updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.DM" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Fri, 25 Apr 2025 04:00:10 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Fri, 25 Apr 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>Parallelizing the Approximate Minimum Degree Ordering Algorithm: Strategies and Evaluation</title>
      <link>https://arxiv.org/abs/2504.17097</link>
      <description>arXiv:2504.17097v1 Announce Type: cross 
Abstract: The approximate minimum degree algorithm is widely used before numerical factorization to reduce fill-in for sparse matrices. While considerable attention has been given to the numerical factorization process, less focus has been placed on parallelizing the approximate minimum degree algorithm itself. In this paper, we explore different parallelization strategies, and introduce a novel parallel framework that leverages multiple elimination on distance-2 independent sets. Our evaluation shows that parallelism within individual elimination steps is limited due to low computational workload and significant memory contention. In contrast, our proposed framework overcomes these challenges by parallelizing the work across elimination steps. To the best of our knowledge, our implementation is the first scalable shared memory implementation of the approximate minimum degree algorithm. Experimental results show that we achieve up to an 8.30x speedup using 64 threads over the state-of-the-art sequential implementation in SuiteSparse.</description>
      <guid isPermaLink="false">oai:arXiv.org:2504.17097v1</guid>
      <category>cs.DC</category>
      <category>cs.DM</category>
      <category>cs.DS</category>
      <pubDate>Fri, 25 Apr 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Yen-Hsiang Chang, Ayd{\i}n Bulu\c{c}, James Demmel</dc:creator>
    </item>
    <item>
      <title>Vertex evaluation of multiplex graphs using Forman Curvature</title>
      <link>https://arxiv.org/abs/2504.17286</link>
      <description>arXiv:2504.17286v1 Announce Type: cross 
Abstract: Identifying vertices that play a central role is a fundamental problem in network analysis. Although traditional centrality measures have been widely used for this purpose, the growing complexity of contemporary networks necessitates more sophisticated indicators. Forman curvature has recently emerged as a promising approach. In this paper, we define Forman curvature for multilayer networks, a class of complex networks characterized by multiple types of connections or layers between nodes, which are increasingly used to model intricate real-world phenomena. We establish the key properties of Forman curvature in the context of multilayer networks and demonstrate its utility for identifying vertices that hold central positions within these networks. Furthermore, we show that Forman curvature can also serve as an effective tool for the structural classification of entire multilayer networks.</description>
      <guid isPermaLink="false">oai:arXiv.org:2504.17286v1</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <pubDate>Fri, 25 Apr 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Taiki Yamada</dc:creator>
    </item>
    <item>
      <title>Morphisms and BWT-run Sensitivity</title>
      <link>https://arxiv.org/abs/2504.17443</link>
      <description>arXiv:2504.17443v1 Announce Type: cross 
Abstract: We study how the application of injective morphisms affects the number $r$ of equal-letter runs in the Burrows-Wheeler Transform (BWT). This parameter has emerged as a key repetitiveness measure in compressed indexing. We focus on the notion of BWT-run sensitivity after application of an injective morphism. For binary alphabets, we characterize the class of morphisms that preserve the number of BWT-runs up to a bounded additive increase, by showing that it coincides with the known class of primitivity-preserving morphisms, which are those that map primitive words to primitive words. We further prove that deciding whether a given binary morphism has bounded BWT-run sensitivity is possible in polynomial time with respect to the total length of the images of the two letters. Additionally, we explore new structural and combinatorial properties of synchronizing and recognizable morphisms. These results establish new connections between BWT-based compressibility, code theory, and symbolic dynamics.</description>
      <guid isPermaLink="false">oai:arXiv.org:2504.17443v1</guid>
      <category>cs.FL</category>
      <category>cs.DM</category>
      <category>cs.DS</category>
      <category>math.CO</category>
      <pubDate>Fri, 25 Apr 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Gabriele Fici, Giuseppe Romana, Marinella Sciortino, Cristian Urbina</dc:creator>
    </item>
    <item>
      <title>Boundedness and Separation in the Graph Covering Number Framework</title>
      <link>https://arxiv.org/abs/2504.17458</link>
      <description>arXiv:2504.17458v1 Announce Type: cross 
Abstract: For a graph class $\mathcal G$ and a graph $H$, the four $\mathcal G$-covering numbers of $H$, namely global ${\rm cn}_{g}^{\mathcal{G}}(H)$, union ${\rm cn}_{u}^{\mathcal{G}}(H)$, local ${\rm cn}_{l}^{\mathcal{G}}(H)$, and folded ${\rm cn}_{f}^{\mathcal{G}}(H)$, each measure in a slightly different way how well $H$ can be covered with graphs from $\mathcal G$. For every $\mathcal G$ and $H$ it holds \[
  {\rm cn}_{g}^{\mathcal{G}}(H) \geq {\rm cn}_{u}^{\mathcal{G}}(H) \geq {\rm cn}_{l}^{\mathcal{G}}(H) \geq {\rm cn}_{f}^{\mathcal{G}}(H) \] and in general each inequality can be arbitrarily far apart. We investigate structural properties of graph classes $\mathcal G$ and $\mathcal H$ such that for all graphs $H \in \mathcal{H}$, a larger $\mathcal G$-covering number of $H$ can be bounded in terms of a smaller $\mathcal G$-covering number of $H$. For example, we prove that if $\mathcal G$ is hereditary and the chromatic number of graphs in $\mathcal H$ is bounded, then there exists a function $f$ (called a binding function) such that for all $H \in \mathcal{H}$ it holds ${\rm cn}_{u}^{\mathcal{G}}(H) \leq f({\rm cn}_{g}^{\mathcal{G}}(H))$.
  For $\mathcal G$ we consider graph classes that are component-closed, hereditary, monotone, sparse, or of bounded chromatic number. For $\mathcal H$ we consider graph classes that are sparse, $M$-minor-free, of bounded chromatic number, or of bounded treewidth. For each combination and every pair of $\mathcal G$-covering numbers, we either give a binding function $f$ or provide an example of such $\mathcal{G},\mathcal{H}$ for which no binding function exists.</description>
      <guid isPermaLink="false">oai:arXiv.org:2504.17458v1</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <pubDate>Fri, 25 Apr 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Miriam Goetze, Peter Stumpf, Torsten Ueckerdt</dc:creator>
    </item>
  </channel>
</rss>
