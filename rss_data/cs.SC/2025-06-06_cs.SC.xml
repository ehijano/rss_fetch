<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.SC updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.SC</link>
    <description>cs.SC updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.SC" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Fri, 06 Jun 2025 04:03:46 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Fri, 06 Jun 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Beyond Worst-Case Analysis for Symbolic Computation: Root Isolation Algorithms</title>
      <link>https://arxiv.org/abs/2506.04436</link>
      <description>arXiv:2506.04436v1 Announce Type: new 
Abstract: We introduce beyond-worst-case analysis into symbolic computation. This is an extensive field which almost entirely relies on worst-case bit complexity, and we start from a basic problem in the field: isolating the real roots of univariate polynomials. This is a fundamental problem in symbolic computation and it is arguably one of the most basic problems in computational mathematics. The problem has a long history decorated with numerous ingenious algorithms and furnishes an active area of research. However, most available results in literature either focus on worst-case analysis in the bit complexity model or simply provide experimental benchmarking without any theoretical justifications of the observed results. We aim to address the discrepancy between practical performance of root isolation algorithms and prescriptions of worst-case complexity theory: We develop a smoothed analysis framework for polynomials with integer coefficients to bridge this gap. We demonstrate (quasi-)linear (expected and smoothed) complexity bounds for Descartes algorithm, that is one most well know symbolic algorithms for isolating the real roots of univariate polynomials with integer coefficients. Our results explain the surprising efficiency of Descartes solver in comparison to sophisticated algorithms that have superior worst-case complexity. We also analyse the Sturm solver, ANewDsc a symbolic-numeric algorithm that combines Descartes with Newton operator, and a symbolic algorithm for sparse polynomials.</description>
      <guid isPermaLink="false">oai:arXiv.org:2506.04436v1</guid>
      <category>cs.SC</category>
      <category>cs.CC</category>
      <category>math.AG</category>
      <category>math.PR</category>
      <pubDate>Fri, 06 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Alperen A. Erg\"ur, Josu\'e Tonelli-Cueto, Elias Tsigaridas</dc:creator>
    </item>
    <item>
      <title>Proceedings of the 19th International Workshop on Logical and Semantic Frameworks, with Applications</title>
      <link>https://arxiv.org/abs/2506.05219</link>
      <description>arXiv:2506.05219v1 Announce Type: cross 
Abstract: This volume contains the post-proceedings of the 19th LSFA, which was held in Goi\^ania, the capital of Goi\'as state in Brazil, from September 18 to September 20, 2024.
  Logical and semantic frameworks are formal languages used to represent logics, languages and systems. These frameworks provide foundations for the formal specification of systems and programming languages, supporting tool development and reasoning. 
  The aim of this series is bringing together theoreticians and practitioners to promote new techniques and results, from the theoretical side, and feedback on the implementation and use of such techniques and results, from the practical side. LSFA includes areas such as proof and type theory, equational deduction and rewriting systems, automated reasoning and concurrency theory.
</description>
      <guid isPermaLink="false">oai:arXiv.org:2506.05219v1</guid>
      <category>cs.LO</category>
      <category>cs.SC</category>
      <pubDate>Fri, 06 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:DOI>10.4204/EPTCS.421</arxiv:DOI>
      <arxiv:journal_reference>EPTCS 421, 2025</arxiv:journal_reference>
      <dc:creator>Cynthia Kop (Radboud Universiteit Nijmegen), Helida Salles Santos (Universidade Federal do Rio Grande)</dc:creator>
    </item>
    <item>
      <title>Analytical Lyapunov Function Discovery: An RL-based Generative Approach</title>
      <link>https://arxiv.org/abs/2502.02014</link>
      <description>arXiv:2502.02014v3 Announce Type: replace-cross 
Abstract: Despite advances in learning-based methods, finding valid Lyapunov functions for nonlinear dynamical systems remains challenging. Current neural network approaches face two main issues: challenges in scalable verification and limited interpretability. To address these, we propose an end-to-end framework using transformers to construct analytical Lyapunov functions (local), which simplifies formal verification, enhances interpretability, and provides valuable insights for control engineers. Our framework consists of a transformer-based trainer that generates candidate Lyapunov functions and a falsifier that verifies candidate expressions and refines the model via risk-seeking policy gradient. Unlike Alfarano et al. (2024), which utilizes pre-training and seeks global Lyapunov functions for low-dimensional systems, our model is trained from scratch via reinforcement learning (RL) and succeeds in finding local Lyapunov functions for high-dimensional and non-polynomial systems. Given the analytical nature of the candidates, we employ efficient optimization methods for falsification during training and formal verification tools for the final verification. We demonstrate the efficiency of our approach on a range of nonlinear dynamical systems with up to ten dimensions and show that it can discover Lyapunov functions not previously identified in the control literature. Full implementation is available on \href{https://github.com/JieFeng-cse/Analytical-Lyapunov-Function-Discovery}{Github}</description>
      <guid isPermaLink="false">oai:arXiv.org:2502.02014v3</guid>
      <category>cs.LG</category>
      <category>cs.AI</category>
      <category>cs.SC</category>
      <category>cs.SY</category>
      <category>eess.SY</category>
      <pubDate>Fri, 06 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-sa/4.0/</dc:rights>
      <dc:creator>Haohan Zou, Jie Feng, Hao Zhao, Yuanyuan Shi</dc:creator>
    </item>
    <item>
      <title>Simultaneous Rational Number Codes: Decoding Beyond Half the Minimum Distance with Multiplicities and Bad Primes</title>
      <link>https://arxiv.org/abs/2504.08472</link>
      <description>arXiv:2504.08472v2 Announce Type: replace-cross 
Abstract: In this paper, we extend the work of (Abbondati et al., 2024) on decoding simultaneous rational number codes by addressing two important scenarios: multiplicities and the presence of bad primes (divisors of denominators). First, we generalize previous results to multiplicity rational codes by considering modular reductions with respect to prime power moduli. Then, using hybrid analysis techniques, we extend our approach to vectors of fractions that may present bad primes. Our contributions include: a decoding algorithm for simultaneous rational number reconstruction with multiplicities, a rigorous analysis of the algorithm's failure probability that generalizes several previous results, an extension to a hybrid model handling situations where not all errors can be assumed random, and a unified approach to handle bad primes within multiplicities. The theoretical results provide a comprehensive probabilistic analysis of reconstruction failure in these more complex scenarios, advancing the state of the art in error correction for rational number codes.</description>
      <guid isPermaLink="false">oai:arXiv.org:2504.08472v2</guid>
      <category>cs.IT</category>
      <category>cs.SC</category>
      <category>math.IT</category>
      <pubDate>Fri, 06 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Matteo Abbondati (LIRMM | ECO), Eleonora Guerrini (LIRMM | ECO), Romain Lebreton (LIRMM | ECO)</dc:creator>
    </item>
    <item>
      <title>PyRigi -- a general-purpose Python package for the rigidity and flexibility of bar-and-joint frameworks</title>
      <link>https://arxiv.org/abs/2505.22652</link>
      <description>arXiv:2505.22652v2 Announce Type: replace-cross 
Abstract: We present PyRigi, a novel Python package designed to study the rigidity properties of graphs and frameworks. Among many other capabilities, PyRigi can determine whether a graph admits only finitely many ways, up to isometries, of being drawn in the plane once the edge lengths are fixed, whether it has a unique embedding, or whether it satisfied such properties even after the removal of any of its edges. By implementing algorithms from the scientific literature, PyRigi enables the exploration of rigidity properties of structures that would be out of reach for computations by hand. With reliable and robust algorithms, as well as clear, well-documented methods that are closely connected to the underlying mathematical definitions and results, PyRigi aims to be a practical and powerful general-purpose tool for the working mathematician interested in rigidity theory. PyRigi is open source and easy to use, and awaits researchers to benefit from its computational potential.</description>
      <guid isPermaLink="false">oai:arXiv.org:2505.22652v2</guid>
      <category>math.MG</category>
      <category>cs.CG</category>
      <category>cs.SC</category>
      <category>math.CO</category>
      <pubDate>Fri, 06 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Matteo Gallet, Georg Grasegger, Matthias Himmelmann, Jan Legersk\'y</dc:creator>
    </item>
  </channel>
</rss>
