<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.DS updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.DS</link>
    <description>cs.DS updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.DS" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Thu, 08 Aug 2024 04:00:02 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Thu, 08 Aug 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>Rapid mixing of the down-up walk on matchings of a fixed size</title>
      <link>https://arxiv.org/abs/2408.03466</link>
      <description>arXiv:2408.03466v1 Announce Type: new 
Abstract: Let $G = (V,E)$ be a graph on $n$ vertices and let $m^*(G)$ denote the size of a maximum matching in $G$. We show that for any $\delta &gt; 0$ and for any $1 \leq k \leq (1-\delta)m^*(G)$, the down-up walk on matchings of size $k$ in $G$ mixes in time polynomial in $n$. Previously, polynomial mixing was not known even for graphs with maximum degree $\Delta$, and our result makes progress on a conjecture of Jain, Perkins, Sah, and Sawhney [STOC, 2022] that the down-up walk mixes in optimal time $O_{\Delta,\delta}(n\log{n})$.
  In contrast with recent works analyzing mixing of down-up walks in various settings using the spectral independence framework, we bound the spectral gap by constructing and analyzing a suitable multi-commodity flow. In fact, we present constructions demonstrating the limitations of the spectral independence approach in our setting.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.03466v1</guid>
      <category>cs.DS</category>
      <category>math.CO</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Vishesh Jain, Clayton Mizgerd</dc:creator>
    </item>
    <item>
      <title>Deterministic Algorithm and Faster Algorithm for Submodular Maximization subject to a Matroid Constraint</title>
      <link>https://arxiv.org/abs/2408.03583</link>
      <description>arXiv:2408.03583v1 Announce Type: new 
Abstract: We study the problem of maximizing a monotone submodular function subject to a matroid constraint, and present for it a deterministic non-oblivious local search algorithm that has an approximation guarantee of $1 - 1/e - \varepsilon$ (for any $\varepsilon&gt; 0$) and query complexity of $\tilde{O}_\varepsilon(nr)$, where $n$ is the size of the ground set and $r$ is the rank of the matroid. Our algorithm vastly improves over the previous state-of-the-art $0.5008$-approximation deterministic algorithm, and in fact, shows that there is no separation between the approximation guarantees that can be obtained by deterministic and randomized algorithms for the problem considered. The query complexity of our algorithm can be improved to $\tilde{O}_\varepsilon(n + r\sqrt{n})$ using randomization, which is nearly-linear for $r = O(\sqrt{n})$, and is always at least as good as the previous state-of-the-art algorithms.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.03583v1</guid>
      <category>cs.DS</category>
      <category>cs.DM</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Niv Buchbinder, Moran Feldman</dc:creator>
    </item>
    <item>
      <title>Longest Common Extensions with Wildcards: Trade-off and Applications</title>
      <link>https://arxiv.org/abs/2408.03610</link>
      <description>arXiv:2408.03610v1 Announce Type: new 
Abstract: We study the Longest Common Extension (LCE) problem in a string containing wildcards. Wildcards (also called "don't cares" or "holes") are special characters that match any other character in the alphabet, similar to the character "?" in Unix commands or "." in regular expression engines.
  We consider the problem parametrized by $G$, the number of maximal contiguous groups of wildcards in the input string. Our main contribution is a simple data structure for this problem that can be built in $O(n (G/t) \log n)$ time, occupies $O(nG/t)$ space, and answers queries in $O(t)$ time, for any $t \in [1 .. G]$. Up to the $O(\log n)$ factor, this interpolates smoothly between the data structure of Crochemore et al. [JDA 2015], which has $O(nG)$ preprocessing time and space, and $O(1)$ query time, and a simple solution based on the ``kangaroo jumping'' technique [Landau and Vishkin, STOC 1986], which has $O(n)$ preprocessing time and space, and $O(G)$ query time.
  By establishing a connection between this problem and Boolean matrix multiplication, we show that our solution is optimal up to subpolynomial factors when $G = \Omega(n)$ under a widely believed hypothesis. In addition, we develop a new simple, deterministic and combinatorial algorithm for sparse Boolean matrix multiplication.
  Finally, we show that our data structure can be used to obtain efficient algorithms for approximate pattern matching and structural analysis of strings with wildcards.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.03610v1</guid>
      <category>cs.DS</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Gabriel Bathie, Panagiotis Charalampopoulos, Tatiana Starikovskaya</dc:creator>
    </item>
    <item>
      <title>Deterministic Online Bipartite Edge Coloring</title>
      <link>https://arxiv.org/abs/2408.03661</link>
      <description>arXiv:2408.03661v1 Announce Type: new 
Abstract: We study online bipartite edge coloring, with nodes on one side of the graph revealed sequentially. The trivial greedy algorithm is $(2-o(1))$-competitive, which is optimal for graphs of low maximum degree, $\Delta=O(\log n)$ [BNMN IPL'92]. Numerous online edge-coloring algorithms outperforming the greedy algorithm in various settings were designed over the years (e.g., AGKM FOCS'03, BMM SODA'10, CPW FOCS'19, BGW SODA'21, KLSST STOC'22, BSVW STOC'24), all crucially relying on randomization. A commonly-held belief, first stated by [BNMN IPL'92], is that randomization is necessary to outperform greedy.
  Surprisingly, we refute this belief, by presenting a deterministic algorithm that beats greedy for sufficiently large $\Delta=\Omega(\log n)$, and in particular has competitive ratio $\frac{e}{e-1}+o(1)$ for all $\Delta=\omega(\log n)$. We obtain our result via a new and surprisingly simple randomized algorithm that works against adaptive adversaries (as opposed to oblivious adversaries assumed by prior work), which implies the existence of a similarly-competitive deterministic algorithm [BDBKTW STOC'90].</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.03661v1</guid>
      <category>cs.DS</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Joakim Blikstad, Ola Svensson, Radu Vintan, David Wajc</dc:creator>
    </item>
    <item>
      <title>Finding longer cycles via shortest colourful cycle</title>
      <link>https://arxiv.org/abs/2408.03699</link>
      <description>arXiv:2408.03699v1 Announce Type: new 
Abstract: We consider the parameterised $k,e$-Long Cycle problem, in which you are given an $n$-vertex undirected graph $G$, a specified edge $e$ in $G$, and a positive integer $k$, and are asked to decide if the graph $G$ has a simple cycle through $e$ of length at least $k$. We show that the problem can be solved in $1.731^k\operatorname{poly}(n)$ time, improving over the previously best known $2^k\operatorname{poly}(n)$ time algorithm and solving an open problem [Fomin et al., TALG 2024]. When the graph is bipartite, we can solve the problem in $2^{k/2}\operatorname{poly}(n)$ time, matching the fastest known algorithm for finding a cycle of length exactly $k$ in an undirected bipartite graph [Bj\"orklund et al., JCSS 2017].
  Our results follow the approach taken by [Fomin et al., TALG 2024], which describes an efficient algorithm for finding cycles using many colours in a vertex-coloured undirected graph. Our contribution is twofold. First, we describe a new algorithm and analysis for the central colourful cycle problem, with the aim of providing a comparatively short and self-contained proof of correctness. Second, we give tighter reductions from $k,e$-Long Cycle to the colourful cycle problem, which lead to our improved running times.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.03699v1</guid>
      <category>cs.DS</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Andreas Bj\"orklund, Thore Husfeldt</dc:creator>
    </item>
    <item>
      <title>Lower Bounds for Approximate (&amp; Exact) k-Disjoint-Shortest-Paths</title>
      <link>https://arxiv.org/abs/2408.03933</link>
      <description>arXiv:2408.03933v1 Announce Type: new 
Abstract: Given a graph $G=(V,E)$ and a set $T=\{ (s_i, t_i) : 1\leq i\leq k \}\subseteq V\times V$ of $k$ pairs, the $k$-vertex-disjoint-paths (resp. $k$-edge-disjoint-paths) problem asks to determine whether there exist~$k$ pairwise vertex-disjoint (resp. edge-disjoint) paths $P_1, P_2, ..., P_k$ in $G$ such that, for each $1\leq i\leq k$, $P_i$ connects $s_i$ to $t_i$. Both the edge-disjoint and vertex-disjoint versions in undirected graphs are famously known to be FPT (parameterized by $k$) due to the Graph Minor Theory of Robertson and Seymour. Eilam-Tzoreff [DAM `98] introduced a variant, known as the $k$-disjoint-shortest-paths problem, where each individual path is further required to be a shortest path connecting its pair. They showed that the $k$-disjoint-shortest-paths problem is NP-complete on both directed and undirected graphs; this holds even if the graphs are planar and have unit edge lengths. We focus on four versions of the problem, corresponding to considering edge/vertex disjointness, and to considering directed/undirected graphs. Building on the reduction of Chitnis [SIDMA `23] for $k$-edge-disjoint-paths on planar DAGs, we obtain the following inapproximability lower bound for each of the four versions of $k$-disjoint-shortest-paths on $n$-vertex graphs: - Under Gap-ETH, there exists a constant $\delta&gt;0$ such that for any constant $0&lt;\epsilon\leq \frac{1}{2}$ and any computable function $f$, there is no $(\frac{1}{2}+\epsilon)$-approx in $f(k)\cdot n^{\delta\cdot k}$ time. We further strengthen our results as follows: Directed: Inapprox lower bound for edge-disjoint (resp. vertex-disjoint) paths holds even if the input graph is a planar (resp. 1-planar) DAG with max in-degree and max out-degree at most $2$. Undirected: Inapprox lower bound for edge-disjoint (resp. vertex-disjoint) paths hold even if the input graph is planar (resp. 1-planar) and has max degree $4$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.03933v1</guid>
      <category>cs.DS</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Rajesh Chitnis, Samuel Thomas, Anthony Wirth</dc:creator>
    </item>
    <item>
      <title>On the geometry of $k$-SAT solutions: what more can PPZ and Sch\"oning's algorithms do?</title>
      <link>https://arxiv.org/abs/2408.03465</link>
      <description>arXiv:2408.03465v1 Announce Type: cross 
Abstract: Given a $k$-CNF formula and an integer $s$, we study algorithms that obtain $s$ solutions to the formula that are maximally dispersed. For $s=2$, the problem of computing the diameter of a $k$-CNF formula was initiated by Creszenzi and Rossi, who showed strong hardness results even for $k=2$. Assuming SETH, the current best upper bound [Angelsmark and Thapper '04] goes to $4^n$ as $k \rightarrow \infty$. As our first result, we give exact algorithms for using the Fast Fourier Transform and clique-finding that run in $O^*(2^{(s-1)n})$ and $O^*(s^2 |\Omega_{F}|^{\omega \lceil s/3 \rceil})$ respectively, where $|\Omega_{F}|$ is the size of the solution space of the formula $F$ and $\omega$ is the matrix multiplication exponent.
  As our main result, we re-analyze the popular PPZ (Paturi, Pudlak, Zane '97) and Sch\"{o}ning's ('02) algorithms (which find one solution in time $O^*(2^{\varepsilon_{k}n})$ for $\varepsilon_{k} \approx 1-\Theta(1/k)$), and show that in the same time, they can be used to approximate the diameter as well as the dispersion ($s&gt;2$) problems. While we need to modify Sch\"{o}ning's original algorithm, we show that the PPZ algorithm, without any modification, samples solutions in a geometric sense. We believe that this property may be of independent interest.
  Finally, we present algorithms to output approximately diverse, approximately optimal solutions to NP-complete optimization problems running in time $\text{poly}(s)O^*(2^{\varepsilon n})$ with $\varepsilon&lt;1$ for several problems such as Minimum Hitting Set and Feedback Vertex Set. For these problems, all existing exact methods for finding optimal diverse solutions have a runtime with at least an exponential dependence on the number of solutions $s$. Our methods find bi-approximations with polynomial dependence on $s$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.03465v1</guid>
      <category>cs.CC</category>
      <category>cs.DS</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Per Austrin, Ioana O. Bercea, Mayank Goswami, Nutan Limaye, Adarsh Srinivasan</dc:creator>
    </item>
    <item>
      <title>Parameterized Quantum Query Algorithms for Graph Problems</title>
      <link>https://arxiv.org/abs/2408.03864</link>
      <description>arXiv:2408.03864v1 Announce Type: cross 
Abstract: In this paper, we consider the parameterized quantum query complexity for graph problems. We design parameterized quantum query algorithms for $k$-vertex cover and $k$-matching problems, and present lower bounds on the parameterized quantum query complexity. Then, we show that our quantum query algorithms are optimal up to a constant factor when the parameters are small.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.03864v1</guid>
      <category>quant-ph</category>
      <category>cs.DS</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Tatsuya Terao, Ryuhei Mori</dc:creator>
    </item>
    <item>
      <title>Simple and Optimal Sublinear Algorithms for Mean Estimation</title>
      <link>https://arxiv.org/abs/2406.05254</link>
      <description>arXiv:2406.05254v2 Announce Type: replace 
Abstract: We study the sublinear multivariate mean estimation problem in $d$-dimensional Euclidean space. Specifically, we aim to find the mean $\mu$ of a ground point set $A$, which minimizes the sum of squared Euclidean distances of the points in $A$ to $\mu$. We first show that a multiplicative $(1+\varepsilon)$ approximation to $\mu$ can be found with probability $1-\delta$ using $O(\varepsilon^{-1}\log \delta^{-1})$ many independent uniform random samples, and provide a matching lower bound. Furthermore, we give two sublinear time algorithms of optimal sample complexity for extracting a suitable approximate mean:
  1. Our first algorithm is based on gradient descent and exploits properties of the geometric median to estimate the mean. It runs in time $O((\varepsilon^{-1}+\log \delta^{-1})\cdot \log \delta^{-1} \cdot d)$.
  2. Our second algorithm leverages properties of empirical means order statistics as well as clustering to estimate the mean. This allows to decrease the running time to near-optimal, namely $O\left((\varepsilon^{-1}+\log^{\gamma}\delta^{-1})\cdot \log \delta^{-1} \cdot d\right)$ for any constant $\gamma&gt;0$.
  Throughout our analysis, we also generalize the familiar median-of-means estimator to the multivariate case, showing that the geometric median of $\log \delta^{-1}$ empirical means well-estimates the mean $\mu$, which may be of independent interest.</description>
      <guid isPermaLink="false">oai:arXiv.org:2406.05254v2</guid>
      <category>cs.DS</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Beatrice Bertolotti, Matteo Russo, Chris Schwiegelshohn</dc:creator>
    </item>
  </channel>
</rss>
