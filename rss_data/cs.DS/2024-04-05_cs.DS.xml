<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.DS updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.DS</link>
    <description>cs.DS updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.DS" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Fri, 05 Apr 2024 04:00:00 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Fri, 05 Apr 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Lower bounds for graph reconstruction with maximal independent set queries</title>
      <link>https://arxiv.org/abs/2404.03472</link>
      <description>arXiv:2404.03472v1 Announce Type: new 
Abstract: We investigate the number of maximal independent set queries required to reconstruct the edges of a hidden graph. We show that randomised adaptive algorithms need at least $\Omega(\Delta^2 \log(n / \Delta) / \log \Delta)$ queries to reconstruct $n$-vertex graphs of maximum degree $\Delta$ with success probability at least $1/2$, and we further improve this lower bound to $\Omega(\Delta^2 \log(n / \Delta))$ for randomised non-adaptive algorithms. We also prove that deterministic non-adaptive algorithms require at least $\Omega(\Delta^3 \log n / \log \Delta)$ queries.
  This improves bounds of Konrad, O'Sullivan, and Traistaru, and answers one of their questions. The proof of the lower bound for deterministic non-adaptive algorithms relies on a connection to cover-free families, for which we also improve known bounds.</description>
      <guid isPermaLink="false">oai:arXiv.org:2404.03472v1</guid>
      <category>cs.DS</category>
      <category>math.CO</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Lukas Michel, Alex Scott</dc:creator>
    </item>
    <item>
      <title>A Unified Algorithmic Framework for Dynamic Assortment Optimization under MNL Choice</title>
      <link>https://arxiv.org/abs/2404.03604</link>
      <description>arXiv:2404.03604v1 Announce Type: cross 
Abstract: We consider assortment and inventory planning problems with dynamic stockout-based substitution effects and no replenishment. We consider two settings: 1. Customers can see all available products when they arrive, which is commonly seen in physical stores. 2. The seller can choose to offer a subset of available products to each customer, which is typical on online platforms. Both settings are known to be computationally challenging, and the current approximation algorithms for the two settings are quite different. We develop a unified algorithm framework under the MNL choice model for both settings. Our algorithms improve on the state-of-the-art algorithms in terms of approximation guarantee, runtime, and the ability to manage uncertainty in the total number of customers and handle more complex constraints. In the process, we establish various novel properties of dynamic assortment planning (under the MNL choice) that may be useful more broadly.</description>
      <guid isPermaLink="false">oai:arXiv.org:2404.03604v1</guid>
      <category>math.OC</category>
      <category>cs.DS</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Shuo Sun (Max), Rajan Udwani (Max),  Zuo-Jun (Max),  Shen</dc:creator>
    </item>
    <item>
      <title>Amortized Analysis via Coalgebra</title>
      <link>https://arxiv.org/abs/2404.03641</link>
      <description>arXiv:2404.03641v1 Announce Type: cross 
Abstract: Amortized analysis is a cost analysis technique for data structures in which cost is studied in aggregate, rather than considering the maximum cost of a single operation. Traditionally, amortized analysis has been phrased inductively, in terms of finite sequences of operations. Connecting to prior work on coalgebraic semantics for data structures, we develop the perspective that amortized analysis is naturally viewed coalgebraically in the category of algebras for a cost monad, where a morphism of coalgebras serves as a first-class generalization of potential function suitable for integrating cost and behavior. Using this simple definition, we consider amortization of other effects, such as randomization, and we compose amortization arguments in the indexed category of coalgebras. We generalize this to parallel data structure usage patterns by using coalgebras for an endoprofunctor instead of an endofunctor, combining potential using a monoidal structure on the underlying category. Finally, we adapt our discussion to the bicategorical setting, supporting imprecise amortized upper bounds.</description>
      <guid isPermaLink="false">oai:arXiv.org:2404.03641v1</guid>
      <category>cs.PL</category>
      <category>cs.DS</category>
      <category>math.CT</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Harrison Grodin, Robert Harper</dc:creator>
    </item>
    <item>
      <title>New Prophet Inequalities via Poissonization and Sharding</title>
      <link>https://arxiv.org/abs/2307.00971</link>
      <description>arXiv:2307.00971v4 Announce Type: replace 
Abstract: This work introduces \emph{sharding} and \emph{Poissonization} as a unified framework for analyzing prophet inequalities. Sharding involves splitting a random variable into several independent random variables, shards, that collectively mimic the original variable's behavior. We combine this with Poissonization, where these shards are modeled using a Poisson distribution. Despite the simplicity of our framework, we improve the competitive ratio analysis of a dozen well studied prophet inequalities in the literature, some of which have been studied for decades. This includes the \textsc{Top-$1$-of-$k$} prophet inequality, prophet secretary inequality, and semi-online prophet inequality, among others. This approach not only refines the constants but also offers a more intuitive and streamlined analysis for many prophet inequalities in the literature. Furthermore, it simplifies proofs of several known results and may be of independent interest for other variants of the prophet inequality, such as order-selection.</description>
      <guid isPermaLink="false">oai:arXiv.org:2307.00971v4</guid>
      <category>cs.DS</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Elfarouk Harb</dc:creator>
    </item>
    <item>
      <title>A Sampling Lov\'{a}sz Local Lemma for Large Domain Sizes</title>
      <link>https://arxiv.org/abs/2307.14872</link>
      <description>arXiv:2307.14872v2 Announce Type: replace 
Abstract: We present polynomial-time algorithms for approximate counting and sampling solutions to constraint satisfaction problems (CSPs) with atomic constraints within the local lemma regime: $$ pD^{2+o_q(1)}\lesssim 1. $$ When the domain size $q$ of each variable becomes sufficiently large, this almost matches the known lower bound $pD^2\gtrsim 1$ for approximate counting and sampling solutions to atomic CSPs [Bez\'akov\'a et al, SICOMP '19; Galanis, Guo, Wang, TOCT '22], thus establishing an almost tight sampling Lov\'{a}sz local lemma for large domain sizes.</description>
      <guid isPermaLink="false">oai:arXiv.org:2307.14872v2</guid>
      <category>cs.DS</category>
      <category>math.PR</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Chunyang Wang, Yitong Yin</dc:creator>
    </item>
    <item>
      <title>Superpolynomial smoothed complexity of 3-FLIP in Local Max-Cut</title>
      <link>https://arxiv.org/abs/2310.19594</link>
      <description>arXiv:2310.19594v2 Announce Type: replace 
Abstract: Local search algorithms for NP-hard problems such as Max-Cut frequently perform much better in practice than worst-case analysis suggests. Smoothed analysis has proved an effective approach to understanding this: a substantial literature shows that when a small amount of random noise is added to input data, local search algorithms typically run in polynomial or quasi-polynomial time. In this paper, we provide the first example where a local search algorithm for the Max-Cut problem fails to be efficient in the framework of smoothed analysis. Specifically, we construct a graph with $n$ vertices where the smoothed runtime of the 3-FLIP algorithm can be as large as $2^{\Omega(\sqrt{n})}$.
  Additionally, for the setting without random noise, we give a new construction of graphs where the runtime of the FLIP algorithm is $2^{\Omega(n)}$ for any pivot rule. These graphs are much smaller and have a simpler structure than previous constructions.</description>
      <guid isPermaLink="false">oai:arXiv.org:2310.19594v2</guid>
      <category>cs.DS</category>
      <category>cs.CC</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Lukas Michel, Alex Scott</dc:creator>
    </item>
    <item>
      <title>History Trees and Their Applications</title>
      <link>https://arxiv.org/abs/2404.02673</link>
      <description>arXiv:2404.02673v2 Announce Type: replace-cross 
Abstract: In the theoretical study of distributed communication networks, "history trees" are a discrete structure that naturally models the concept that anonymous agents become distinguishable upon receiving different sets of messages from neighboring agents. By conveniently organizing temporal information in a systematic manner, history trees have been instrumental in the development of optimal deterministic algorithms for networks that are both anonymous and dynamically evolving.
  This note provides an accessible introduction to history trees, drawing comparisons with more traditional structures found in existing literature and reviewing the latest advancements in the applications of history trees, especially within dynamic networks. Furthermore, it expands the theoretical framework of history trees in new directions, also highlighting several open problems for further investigation.</description>
      <guid isPermaLink="false">oai:arXiv.org:2404.02673v2</guid>
      <category>cs.DC</category>
      <category>cs.DS</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Giovanni Viglietta</dc:creator>
    </item>
    <item>
      <title>Forming Large Patterns with Local Robots in the OBLOT Model</title>
      <link>https://arxiv.org/abs/2404.02771</link>
      <description>arXiv:2404.02771v2 Announce Type: replace-cross 
Abstract: In the arbitrary pattern formation problem, $n$ autonomous, mobile robots must form an arbitrary pattern $P \subseteq \mathbb{R}^2$. The (deterministic) robots are typically assumed to be indistinguishable, disoriented, and unable to communicate. An important distinction is whether robots have memory and/or a limited viewing range. Previous work managed to form $P$ under a natural symmetry condition if robots have no memory but an unlimited viewing range [22] or if robots have a limited viewing range but memory [25]. In the latter case, $P$ is only formed in a shrunk version that has constant diameter.
  Without memory and with limited viewing range, forming arbitrary patterns remains an open problem. We provide a partial solution by showing that $P$ can be formed under the same symmetry condition if the robots' initial diameter is $\leq 1$. Our protocol partitions $P$ into rotation-symmetric components and exploits the initial mutual visibility to form one cluster per component. Using a careful placement of the clusters and their robots, we show that a cluster can move in a coordinated way through its component while drawing $P$ by dropping one robot per pattern coordinate.</description>
      <guid isPermaLink="false">oai:arXiv.org:2404.02771v2</guid>
      <category>cs.RO</category>
      <category>cs.DS</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Christopher Hahn, Jonas Harbig, Peter Kling</dc:creator>
    </item>
  </channel>
</rss>
