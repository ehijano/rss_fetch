<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.PF updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.PF</link>
    <description>cs.PF updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.PF" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Fri, 22 Aug 2025 01:20:22 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Thu, 21 Aug 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>SYCL for Energy-Efficient Numerical Astrophysics: the case of DPEcho</title>
      <link>https://arxiv.org/abs/2508.14117</link>
      <description>arXiv:2508.14117v1 Announce Type: cross 
Abstract: Energy awareness and efficiency policies are gaining more attention, over pure performance (time-to-solution) Key Performance Indicators (KPIs) when comparing the possibilities offered by accelerated systems. But in a field such as numerical astrophysics, which is struggling with code refactorings for GPUs, viable porting paths have to be shown before first. After summarizing the status and recurring problems of astrophysical code accelerations, we highlight how the field would benefit from portable, vendor-agnostic GPU portings. We then employ the DPEcho SYCL benchmark to compare raw performance and energy efficiency for heterogeneous hardware on a realistic application, with the goal of helping computational astrophysicists and HPC providers make informed decisions on the most suitable hardware. Aside from GPUs showing higher efficiency, we argue on the more informative nature of energy-aware KPIs, in that they convey the specific device performance in a data-driven way. We also present a convenient, flexible and cross-platform energy-measuring pipeline. Finally, we contextualize our results through measures with different compilers, presenting device (at the cores) versus node (at the plug) energy and comparing DPEcho with the High- Performance Linpack (HPL) benchmark.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.14117v1</guid>
      <category>astro-ph.IM</category>
      <category>cs.PF</category>
      <pubDate>Thu, 21 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <arxiv:journal_reference>PECS workshop proceedings at EUROPAR 2025</arxiv:journal_reference>
      <dc:creator>Salvatore Cielo, Alexander P\"oppl, Ivan Pribec</dc:creator>
    </item>
    <item>
      <title>A High Performance GPU CountSketch Implementation and Its Application to Multisketching and Least Squares Problems</title>
      <link>https://arxiv.org/abs/2508.14209</link>
      <description>arXiv:2508.14209v1 Announce Type: cross 
Abstract: Random sketching is a dimensionality reduction technique that approximately preserves norms and singular values up to some $O(1)$ distortion factor with high probability. The most popular sketches in literature are the Gaussian sketch and the subsampled randomized Hadamard transform, while the CountSketch has lower complexity. Combining two sketches, known as multisketching, offers an inexpensive means of quickly reducing the dimension of a matrix by combining a CountSketch and Gaussian sketch.
  However, there has been little investigation into high performance CountSketch implementations. In this work, we develop an efficient GPU implementation of the CountSketch, and demonstrate the performance of multisketching using this technique. We also demonstrate the potential for using this implementation within a multisketched least squares solver that is up to $77\%$ faster than the normal equations with significantly better numerical stability, at the cost of an $O(1)$ multiplicative factor introduced into the relative residual norm.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.14209v1</guid>
      <category>math.NA</category>
      <category>cs.DC</category>
      <category>cs.NA</category>
      <category>cs.PF</category>
      <pubDate>Thu, 21 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Andrew J. Higgins, Erik G. Boman, Ichitaro Yamazaki</dc:creator>
    </item>
  </channel>
</rss>
