<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.CG updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.CG</link>
    <description>cs.CG updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.CG" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Thu, 17 Apr 2025 01:47:41 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Wed, 16 Apr 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>Balanced TSP partitioning</title>
      <link>https://arxiv.org/abs/2504.10657</link>
      <description>arXiv:2504.10657v1 Announce Type: new 
Abstract: The traveling salesman problem (TSP) famously asks for a shortest tour that a salesperson can take to visit a given set of cities in any order. In this paper, we ask how much faster $k \ge 2$ salespeople can visit the cities if they divide the task among themselves. We show that, in the two-dimensional Euclidean setting, two salespeople can always achieve a speedup of at least $\frac12 + \frac1\pi \approx 0.818$, for any given input, and there are inputs where they cannot do better. We also give (non-matching) upper and lower bounds for $k \geq 3$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2504.10657v1</guid>
      <category>cs.CG</category>
      <category>cs.DS</category>
      <pubDate>Wed, 16 Apr 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Benjamin Aram Berendsohn, Hwi Kim, L\'aszl\'o Kozma</dc:creator>
    </item>
    <item>
      <title>A Sublinear Algorithm for Path Feasibility Among Rectangular Obstacles</title>
      <link>https://arxiv.org/abs/2504.10859</link>
      <description>arXiv:2504.10859v1 Announce Type: new 
Abstract: The problem of finding a path between two points while avoiding obstacles is critical in robotic path planning. We focus on the feasibility problem: determining whether such a path exists. We model the robot as a query-specific rectangular object capable of moving parallel to its sides. The obstacles are axis-aligned, rectangular, and may overlap. Most previous works only consider nondisjoint rectangular objects and point-sized or statically sized robots. Our approach introduces a novel technique leveraging generalized Gabriel graphs and constructs a data structure to facilitate online queries regarding path feasibility with varying robot sizes in sublinear time. To efficiently handle feasibility queries, we propose an online algorithm utilizing sweep line to construct a generalized Gabriel graph under the $L_\infty$ norm, capturing key gap constraints between obstacles. We utilize a persistent disjoint-set union data structure to efficiently determine feasibility queries in $\mathcal{O}(\log n)$ time and $\mathcal{O}(n)$ total space.</description>
      <guid isPermaLink="false">oai:arXiv.org:2504.10859v1</guid>
      <category>cs.CG</category>
      <category>cs.RO</category>
      <pubDate>Wed, 16 Apr 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Alex Fan, Alicia Li, Arul Kolla, Jason Gonzalez</dc:creator>
    </item>
    <item>
      <title>Braiding vineyards</title>
      <link>https://arxiv.org/abs/2504.11203</link>
      <description>arXiv:2504.11203v1 Announce Type: new 
Abstract: Vineyards are a common way to study persistence diagrams of a data set which is changing, as strong stability means that it is possible to pair points in ``nearby'' persistence diagrams, yielding a family of point sets which connect into curves when stacked. Recent work has also studied monodromy in the persistent homology transform, demonstrating some interesting connections between an input shape and monodromy in the persistent homology transform for 0-dimensional homology embedded in $\mathbb{R}^2$. In this work, we re-characterize monodromy in terms of periodicity of the associated vineyard of persistence diagrams.
  We construct a family of objects in any dimension which have non-trivial monodromy for $l$-persistence of any periodicity and for any $l$. More generally we prove that any knot or link can appear as a vineyard for a shape in $\mathbb{R}^d$, with $d\geq 3$. This shows an intriguing and, to the best of our knowledge, previously unknown connection between knots and persistence vineyards. In particular this shows that vineyards are topologically as rich as one could possibly hope.</description>
      <guid isPermaLink="false">oai:arXiv.org:2504.11203v1</guid>
      <category>cs.CG</category>
      <category>math.AT</category>
      <category>math.GT</category>
      <pubDate>Wed, 16 Apr 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Erin Chambers, Christopher Fillmore, Elizabeth Stephenson, Mathijs Wintraecken</dc:creator>
    </item>
    <item>
      <title>Superfast Configuration-Space Convex Set Computation on GPUs for Online Motion Planning</title>
      <link>https://arxiv.org/abs/2504.10783</link>
      <description>arXiv:2504.10783v1 Announce Type: cross 
Abstract: In this work, we leverage GPUs to construct probabilistically collision-free convex sets in robot configuration space on the fly. This extends the use of modern motion planning algorithms that leverage such representations to changing environments. These planners rapidly and reliably optimize high-quality trajectories, without the burden of challenging nonconvex collision-avoidance constraints. We present an algorithm that inflates collision-free piecewise linear paths into sequences of convex sets (SCS) that are probabilistically collision-free using massive parallelism. We then integrate this algorithm into a motion planning pipeline, which leverages dynamic roadmaps to rapidly find one or multiple collision-free paths, and inflates them. We then optimize the trajectory through the probabilistically collision-free sets, simultaneously using the candidate trajectory to detect and remove collisions from the sets. We demonstrate the efficacy of our approach on a simulation benchmark and a KUKA iiwa 7 robot manipulator with perception in the loop. On our benchmark, our approach runs 17.1 times faster and yields a 27.9% increase in reliability over the nonlinear trajectory optimization baseline, while still producing high-quality motion plans.</description>
      <guid isPermaLink="false">oai:arXiv.org:2504.10783v1</guid>
      <category>cs.RO</category>
      <category>cs.CG</category>
      <pubDate>Wed, 16 Apr 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-sa/4.0/</dc:rights>
      <dc:creator>Peter Werner, Richard Cheng, Tom Stewart, Russ Tedrake, Daniela Rus</dc:creator>
    </item>
    <item>
      <title>Efficient and Stable Multi-Dimensional Kolmogorov-Smirnov Distance</title>
      <link>https://arxiv.org/abs/2504.11299</link>
      <description>arXiv:2504.11299v1 Announce Type: cross 
Abstract: We revisit extending the Kolmogorov-Smirnov distance between probability distributions to the multidimensional setting and make new arguments about the proper way to approach this generalization. Our proposed formulation maximizes the difference over orthogonal dominating rectangular ranges (d-sided rectangles in R^d), and is an integral probability metric. We also prove that the distance between a distribution and a sample from the distribution converges to 0 as the sample size grows, and bound this rate. Moreover, we show that one can, up to this same approximation error, compute the distance efficiently in 4 or fewer dimensions; specifically the runtime is near-linear in the size of the sample needed for that error. With this, we derive a delta-precision two-sample hypothesis test using this distance. Finally, we show these metric and approximation properties do not hold for other popular variants.</description>
      <guid isPermaLink="false">oai:arXiv.org:2504.11299v1</guid>
      <category>stat.CO</category>
      <category>cs.CG</category>
      <category>cs.LG</category>
      <pubDate>Wed, 16 Apr 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Peter Matthew Jacobs, Foad Namjoo, Jeff M. Phillips</dc:creator>
    </item>
    <item>
      <title>Robust Containment Queries over Collections of Trimmed NURBS Surfaces via Generalized Winding Numbers</title>
      <link>https://arxiv.org/abs/2504.11435</link>
      <description>arXiv:2504.11435v1 Announce Type: cross 
Abstract: Efficient and accurate evaluation of containment queries for regions bound by trimmed NURBS surfaces is important in many graphics and engineering applications. However, the algebraic complexity of surface-surface intersections makes gaps and overlaps between surfaces difficult to avoid for in-the-wild surface models. By considering this problem through the lens of the generalized winding number (GWN), a mathematical construction that is indifferent to the arrangement of surfaces in the shape, we can define a containment query that is robust to model watertightness. Applying contemporary techniques for the 3D GWN on arbitrary curved surfaces would require some form of geometric discretization, potentially inducing containment misclassifications near boundary components. In contrast, our proposed method computes an accurate GWN directly on the curved geometry of the input model. We accomplish this using a novel reformulation of the relevant surface integral using Stokes' theorem, which in turn permits an efficient adaptive quadrature calculation on the boundary and trimming curves of the model. While this is sufficient for "far-field" query points that are distant from the surface, we augment this approach for "near-field" query points (i.e., within a bounding box) and even those coincident to the surface patches via a strategy that directly identifies and accounts for the jump discontinuity in the scalar field. We demonstrate that our method of evaluating the GWN field is robust to complex trimming geometry in a CAD model, and is accurate up to arbitrary precision at arbitrary distances from the surface. Furthermore, the derived containment query is robust to non-watertightness while respecting all curved features of the input shape.</description>
      <guid isPermaLink="false">oai:arXiv.org:2504.11435v1</guid>
      <category>cs.GR</category>
      <category>cs.CG</category>
      <category>cs.NA</category>
      <category>math.NA</category>
      <pubDate>Wed, 16 Apr 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Jacob Spainhour, Kenneth Weiss</dc:creator>
    </item>
    <item>
      <title>Connecting 3-manifold triangulations with unimodal sequences of elementary moves</title>
      <link>https://arxiv.org/abs/2012.02398</link>
      <description>arXiv:2012.02398v3 Announce Type: replace-cross 
Abstract: A key result in computational 3-manifold topology is that any two triangulations of the same 3-manifold are connected by a finite sequence of bistellar flips, also known as Pachner moves. One limitation of this result is that little is known about the structure of this sequence; knowing more about the structure could help both proofs and algorithms. Motivated by this, we consider sequences of moves that are "unimodal" in the sense that they break up into two parts: first, a sequence that monotonically increases the size of the triangulation; and second, a sequence that monotonically decreases the size. We prove that any two one-vertex triangulations of the same 3-manifold, each with at least two tetrahedra, are connected by a unimodal sequence of 2-3 and 2-0 moves. We also study the practical utility of unimodal sequences; specifically, we implement an algorithm to find such sequences, and use this algorithm to perform some detailed computational experiments.</description>
      <guid isPermaLink="false">oai:arXiv.org:2012.02398v3</guid>
      <category>math.GT</category>
      <category>cs.CG</category>
      <pubDate>Wed, 16 Apr 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Benjamin A. Burton, Alexander He</dc:creator>
    </item>
    <item>
      <title>Interval Decomposition of Persistence Modules over a Principal Ideal Domain</title>
      <link>https://arxiv.org/abs/2310.07971</link>
      <description>arXiv:2310.07971v4 Announce Type: replace-cross 
Abstract: The study of persistent homology has contributed new insights and perspectives into a variety of interesting problems in science and engineering. Work in this domain relies on the result that any finitely-indexed persistence module of finite-dimensional vector spaces admits an interval decomposition -- that is, a decomposition as a direct sum of simpler components called interval modules. This result fails if we replace vector spaces with modules over more general coefficient rings.
  We introduce an algorithm to determine whether a persistence module of pointwise free and finitely-generated modules over a principal ideal domain (PID) splits as a direct sum of interval submodules. If one exists, our algorithm outputs an interval decomposition. When considering persistence modules with coefficients in $\Z$ or $\Q[x]$, our algorithm computes an interval decomposition in polynomial time. This is the first algorithm with these properties of which we are aware.
  We also show that a persistence module of pointwise free and finitely-generated modules over a PID splits as a direct sum of interval submodules if and only if the cokernel of every structure map is free. This result underpins the formulation of our algorithm. It also complements prior findings by Obayashi and Yoshiwaki regarding persistent homology, including a criterion for field independence and an algorithm to decompose persistence homology modules of simplex-wise filtrations.</description>
      <guid isPermaLink="false">oai:arXiv.org:2310.07971v4</guid>
      <category>math.AT</category>
      <category>cs.CG</category>
      <category>math.CT</category>
      <pubDate>Wed, 16 Apr 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Jiajie Luo, Gregory Henselman-Petrusek</dc:creator>
    </item>
    <item>
      <title>Super-Polynomial Growth of the Generalized Persistence Diagram</title>
      <link>https://arxiv.org/abs/2412.04889</link>
      <description>arXiv:2412.04889v2 Announce Type: replace-cross 
Abstract: The Generalized Persistence Diagram (GPD) for multi-parameter persistence naturally extends the classical notion of persistence diagram for one-parameter persistence. However, unlike its classical counterpart, computing the GPD remains a significant challenge. The main hurdle is that, while the GPD is defined as the M\"obius inversion of the Generalized Rank Invariant (GRI), computing the GRI is intractable due to the formidable size of its domain, i.e., the set of all connected and convex subsets in a finite grid in $\mathbb{R}^d$ with $d \geq 2$. This computational intractability suggests seeking alternative approaches to computing the GPD.
  In order to study the complexity associated to computing the GPD, it is useful to consider its classical one-parameter counterpart, where for a filtration of a simplicial complex with $n$ simplices, its persistence diagram contains at most $n$ points. This observation leads to the question: 'Given a $d$-parameter simplicial filtration, could the cardinality of its GPD (specifically, the support of the GPD) also be bounded by a polynomial in the number of simplices in the filtration?' This is the case for $d=1$, where we compute the persistence diagram directly at the simplicial filtration level. If this were also the case for $d\geq2$, it might be possible to compute the GPD directly and much more efficiently without relying on the GRI.
  We show that the answer to the question above is negative, demonstrating the inherent difficulty of computing the GPD. More specifically, we construct a sequence of $d$-parameter simplicial filtrations where the cardinalities of their GPDs are not bounded by any polynomial in the the number of simplices. Furthermore, we show that several commonly used methods for constructing multi-parameter filtrations can give rise to such "wild" filtrations.</description>
      <guid isPermaLink="false">oai:arXiv.org:2412.04889v2</guid>
      <category>math.AT</category>
      <category>cs.CG</category>
      <pubDate>Wed, 16 Apr 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Donghan Kim, Woojin Kim, Wonjun Lee</dc:creator>
    </item>
  </channel>
</rss>
