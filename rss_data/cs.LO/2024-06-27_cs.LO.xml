<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.LO updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.LO</link>
    <description>cs.LO updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.LO" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Fri, 28 Jun 2024 04:00:09 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Fri, 28 Jun 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>Demonic variance and a non-determinism score for Markov decision processes</title>
      <link>https://arxiv.org/abs/2406.18727</link>
      <description>arXiv:2406.18727v1 Announce Type: new 
Abstract: This paper studies the influence of probabilism and non-determinism on some quantitative aspect X of the execution of a system modeled as a Markov decision process (MDP). To this end, the novel notion of demonic variance is introduced: For a random variable X in an MDP M, it is defined as 1/2 times the maximal expected squared distance of the values of X in two independent execution of M in which also the non-deterministic choices are resolved independently by two distinct schedulers. It is shown that the demonic variance is between 1 and 2 times as large as the maximal variance of X in M that can be achieved by a single scheduler. This allows defining a non-determinism score for M and X measuring how strongly the difference of X in two executions of M can be influenced by the non-deterministic choices. Properties of MDPs M with extremal values of the non-determinism score are established. Further, the algorithmic problems of computing the maximal variance and the demonic variance are investigated for two random variables, namely weighted reachability and accumulated rewards. In the process, also the structure of schedulers maximizing the variance and of scheduler pairs realizing the demonic variance is analyzed.</description>
      <guid isPermaLink="false">oai:arXiv.org:2406.18727v1</guid>
      <category>cs.LO</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Jakob Piribauer</dc:creator>
    </item>
    <item>
      <title>Higher-Order Constrained Dependency Pairs for (Universal) Computability</title>
      <link>https://arxiv.org/abs/2406.19379</link>
      <description>arXiv:2406.19379v1 Announce Type: new 
Abstract: Dependency pairs constitute a series of very effective techniques for the termination analysis of term rewriting systems. In this paper, we adapt the static dependency pair framework to logically constrained simply-typed term rewriting systems (LCSTRSs), a higher-order formalism with logical constraints built in. We also propose the concept of universal computability, which enables a form of open-world termination analysis through the use of static dependency pairs.</description>
      <guid isPermaLink="false">oai:arXiv.org:2406.19379v1</guid>
      <category>cs.LO</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Liye Guo, Kasper Hagens, Cynthia Kop, Deivid Vale</dc:creator>
    </item>
    <item>
      <title>The nonexistence of unicorns and many-sorted L\"owenheim-Skolem theorems</title>
      <link>https://arxiv.org/abs/2406.18912</link>
      <description>arXiv:2406.18912v1 Announce Type: cross 
Abstract: Stable infiniteness, strong finite witnessability, and smoothness are model-theoretic properties relevant to theory combination in satisfiability modulo theories. Theories that are strongly finitely witnessable and smooth are called strongly polite and can be effectively combined with other theories. Toledo, Zohar, and Barrett conjectured that stably infinite and strongly finitely witnessable theories are smooth and therefore strongly polite. They called counterexamples to this conjecture unicorn theories, as their existence seemed unlikely. We prove that, indeed, unicorns do not exist. We also prove versions of the L\"owenheim-Skolem theorem and the {\L}o\'s-Vaught test for many-sorted logic.</description>
      <guid isPermaLink="false">oai:arXiv.org:2406.18912v1</guid>
      <category>math.LO</category>
      <category>cs.LO</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Benjamin Przybocki, Guilherme Toledo, Yoni Zohar, Clark Barrett</dc:creator>
    </item>
    <item>
      <title>Reasoning About Action and Change</title>
      <link>https://arxiv.org/abs/2406.18930</link>
      <description>arXiv:2406.18930v1 Announce Type: cross 
Abstract: The purpose of this book is to provide an overview of AI research, ranging from basic work to interfaces and applications, with as much emphasis on results as on current issues. It is aimed at an audience of master students and Ph.D. students, and can be of interest as well for researchers and engineers who want to know more about AI. The book is split into three volumes.</description>
      <guid isPermaLink="false">oai:arXiv.org:2406.18930v1</guid>
      <category>cs.AI</category>
      <category>cs.DM</category>
      <category>cs.LO</category>
      <category>cs.SC</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <arxiv:DOI>10.1007/978-3-030-06164-7_15</arxiv:DOI>
      <arxiv:journal_reference>Marquis, Pierre; Papini, Odile; Prade, Henri. A Guided Tour of Artificial Intelligence Research, 1 / 3, Springer International Publishing, pp.487-518, 2020, Knowledge Representation, Reasoning and Learning, 978-3-030-06163-0</arxiv:journal_reference>
      <dc:creator>Florence Dupin de Saint-Cyr (IRIT-ADRIA, UT3), Andreas Herzig (IRIT-LILaC, CNRS), J\'er\^ome Lang (LAMSADE, PSL, IRIT-ADRIA), Pierre Marquis (CRIL)</dc:creator>
    </item>
    <item>
      <title>Drag Rewriting</title>
      <link>https://arxiv.org/abs/2406.16046</link>
      <description>arXiv:2406.16046v2 Announce Type: replace 
Abstract: We present a new and powerful algebraic framework for graph rewriting, based on drags, a class of graphs enjoying a novel composition operator. Graphs are embellished with roots and sprouts, which can be wired together to form edges. Drags enjoy a rich algebraic structure with sums and products. Drag rewriting naturally extends graph rewriting, dag rewriting, and term rewriting models.</description>
      <guid isPermaLink="false">oai:arXiv.org:2406.16046v2</guid>
      <category>cs.LO</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Nachum Dershowitz, Jean-Pierre Jouannaud, Fernando Orejas</dc:creator>
    </item>
    <item>
      <title>Rely-Guarantee Reasoning for Causally Consistent Shared Memory (Extended Version)</title>
      <link>https://arxiv.org/abs/2305.08486</link>
      <description>arXiv:2305.08486v2 Announce Type: replace-cross 
Abstract: Rely-guarantee (RG) is a highly influential compositional proof technique for concurrent programs, which was originally developed assuming a sequentially consistent shared memory. In this paper, we first generalize RG to make it parametric with respect to the underlying memory model by introducing an RG framework that is applicable to any model axiomatically characterized by Hoare triples. Second, we instantiate this framework for reasoning about concurrent programs under causally consistent memory, which is formulated using a recently proposed potential-based operational semantics, thereby providing the first reasoning technique for such semantics. The proposed program logic, which we call Piccolo, employs a novel assertion language allowing one to specify ordered sequences of states that each thread may reach. We employ Piccolo for multiple litmus tests, as well as for an adaptation of Peterson's algorithm for mutual exclusion to causally consistent memory.</description>
      <guid isPermaLink="false">oai:arXiv.org:2305.08486v2</guid>
      <category>cs.PL</category>
      <category>cs.LO</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Ori Lahav, Brijesh Dongol, Heike Wehrheim</dc:creator>
    </item>
    <item>
      <title>Higher-Order Asynchronous Effects</title>
      <link>https://arxiv.org/abs/2307.13795</link>
      <description>arXiv:2307.13795v3 Announce Type: replace-cross 
Abstract: We explore asynchronous programming with algebraic effects. We complement their conventional synchronous treatment by showing how to naturally also accommodate asynchrony within them, namely, by decoupling the execution of operation calls into signalling that an operation's implementation needs to be executed, and interrupting a running computation with the operation's result, to which the computation can react by installing interrupt handlers. We formalise these ideas in a small core calculus and demonstrate its flexibility using examples ranging from a multi-party web application, to pre-emptive multi-threading, to (cancellable) remote function calls, to a parallel variant of runners of algebraic effects. In addition, the paper is accompanied by a formalisation of the calculus's type safety proofs in Agda, and a prototype implementation in OCaml.</description>
      <guid isPermaLink="false">oai:arXiv.org:2307.13795v3</guid>
      <category>cs.PL</category>
      <category>cs.LO</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Danel Ahman, Matija Pretnar</dc:creator>
    </item>
    <item>
      <title>Global Benchmark Database</title>
      <link>https://arxiv.org/abs/2405.10045</link>
      <description>arXiv:2405.10045v2 Announce Type: replace-cross 
Abstract: This paper presents Global Benchmark Database (GBD), a comprehensive suite of tools for provisioning and sustainably maintaining benchmark instances and their metadata. The availability of benchmark metadata is essential for many tasks in empirical research, e.g., for the data-driven compilation of benchmarks, the domain-specific analysis of runtime experiments, or the instance-specific selection of solvers. In this paper, we introduce the data model of GBD as well as its interfaces and provide examples of how to interact with them. We also demonstrate the integration of custom data sources and explain how to extend GBD with additional problem domains, instance formats and feature extractors.</description>
      <guid isPermaLink="false">oai:arXiv.org:2405.10045v2</guid>
      <category>cs.DB</category>
      <category>cs.AI</category>
      <category>cs.LO</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Markus Iser, Christoph Jabs</dc:creator>
    </item>
  </channel>
</rss>
