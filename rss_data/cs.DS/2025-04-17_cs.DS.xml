<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.DS updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.DS</link>
    <description>cs.DS updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.DS" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Fri, 18 Apr 2025 01:43:33 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Thu, 17 Apr 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>Engineering MultiQueues: Fast Relaxed Concurrent Priority Queues</title>
      <link>https://arxiv.org/abs/2504.11652</link>
      <description>arXiv:2504.11652v1 Announce Type: new 
Abstract: Priority queues are used in a wide range of applications, including prioritized online scheduling, discrete event simulation, and greedy algorithms. In parallel settings, classical priority queues often become a severe bottleneck, resulting in low throughput. Consequently, there has been significant interest in concurrent priority queues with relaxed semantics. In this article, we present the MultiQueue, a flexible approach to relaxed priority queues that uses multiple internal sequential priority queues. The scalability of the MultiQueue is enhanced by buffering elements, batching operations on the internal queues, and optimizing access patterns for high cache locality. We investigate the complementary quality criteria of rank error, which measures how close deleted elements are to the global minimum, and delay, which quantifies how many smaller elements were deleted before a given element. Extensive experimental evaluation shows that the MultiQueue outperforms competing approaches across several benchmarks. This includes shortest-path and branch-and-bound benchmarks that resemble real applications. Moreover, the MultiQueue can be configured easily to balance throughput and quality according to the application's requirements. We employ a seemingly paradoxical technique of wait-free locking that might be of broader interest for converting sequential data structures into relaxed concurrent data structures.</description>
      <guid isPermaLink="false">oai:arXiv.org:2504.11652v1</guid>
      <category>cs.DS</category>
      <category>cs.DC</category>
      <category>cs.PF</category>
      <pubDate>Thu, 17 Apr 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Marvin Williams, Peter Sanders</dc:creator>
    </item>
    <item>
      <title>Enumeration of Bases in Matroid with Exponentially Large Ground Set</title>
      <link>https://arxiv.org/abs/2504.11728</link>
      <description>arXiv:2504.11728v1 Announce Type: new 
Abstract: When we deal with a matroid ${\mathcal M}=(U,{\mathcal I})$, we usually assume that it is implicitly given by means of the membership (MEM) oracle. Many existing efficient algorithms run in polynomial time with respect to $|U|$ and the running time of the MEM-oracle. However, they are not efficient any more when $U$ is exponentially large in some context. In this paper, we study two problems of enumerating bases in such matroids. First, we present an incremental-polynomial algorithm that enumerates all minimum-weighted bases, where the bounding polynomial does not depend on $|U|$. To design the algorithm, we assume two oracles other than the MEM-oracle: the MinB-oracle that returns a minimum basis and the REL-oracle that returns a relevant element one by one in non-decreasing order of weight. The proposed algorithm is applicable to enumeration of minimum bases of binary matroids from cycle space, path space and cut space, all of which have exponentially large $U$ with respect to a given graph. The highlight in this context is that, to design the REL-oracle for cut space, we develop the first polynomial-delay algorithm that enumerates all relevant cuts of a given graph in non-decreasing order of weight. Finally, we present a polynomial-delay algorithm that enumerates all sets of linearly independent $r$-dimensional $r$ vectors over $\mathit{GF}(2)$. Using the algorithm, we can enumerate all unweighted bases of a binary matroid such that elements are closed under addition, in polynomial-delay with respect to the matroid rank $r$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2504.11728v1</guid>
      <category>cs.DS</category>
      <category>cs.DM</category>
      <pubDate>Thu, 17 Apr 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Yuki Nishimura, Kazuya Haraguchi</dc:creator>
    </item>
    <item>
      <title>Static to Dynamic Correlation Clustering</title>
      <link>https://arxiv.org/abs/2504.12060</link>
      <description>arXiv:2504.12060v1 Announce Type: new 
Abstract: Correlation clustering is a well-studied problem, first proposed by Bansal, Blum, and Chawla [BBC04]. The input is an unweighted, undirected graph. The problem is to cluster the vertices so as to minimizing the number of edges between vertices in different clusters and missing edges between vertices inside the same cluster. This problem has a wide application in data mining and machine learning. We introduce a general framework that transforms existing static correlation clustering algorithms into fully-dynamic ones that work against an adaptive adversary.
  We show how to apply our framework to known efficient correlation clustering algorithms, starting from the classic 3-approximate Pivot algorithm from [ACN08]. Applied to the most recent near-linear 1.437-approximation algorithm from [CCL+25], we get a 1.437-approximation fully-dynamic algorithm that works with worst-case constant update time. The original static algorithm gets its approximation factor with constant probability, and we get the same against an adaptive adversary in the sense that for any given update step not known to our algorithm, our solution is a 1.437-approximation with constant probability when we reach this update.
  Previous dynamic algorithms had approximation factors around 3 in expectation, and they could only handle an oblivious adversary.</description>
      <guid isPermaLink="false">oai:arXiv.org:2504.12060v1</guid>
      <category>cs.DS</category>
      <pubDate>Thu, 17 Apr 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Nairen Cao, Vincent Cohen-Addad, Euiwoong Lee, Shi Li, David Rasmussen Lolck, Alantha Newman, Mikkel Thorup, Lukas Vogl, Shuyi Yan, Hanwen Zhang</dc:creator>
    </item>
    <item>
      <title>Kernels for Storage Capacity and Dual Index Coding</title>
      <link>https://arxiv.org/abs/2504.12274</link>
      <description>arXiv:2504.12274v1 Announce Type: new 
Abstract: The storage capacity of a graph measures the maximum amount of information that can be stored across its vertices, such that the information at any vertex can be recovered from the information stored at its neighborhood. The study of this graph quantity is motivated by applications in distributed storage and by its intimate relations to the index coding problem from the area of network information theory. In the latter, one wishes to minimize the amount of information that has to be transmitted to a collection of receivers, in a way that enables each of them to discover its required data using some prior side information.
  In this paper, we initiate the study of the Storage Capacity and Index Coding problems from the perspective of parameterized complexity. We prove that the Storage Capacity problem parameterized by the solution size admits a kernelization algorithm producing kernels of linear size. We also provide such a result for the Index Coding problem, in the linear and non-linear settings, where it is parameterized by the dual value of the solution, i.e., the length of the transmission that can be saved using the side information. A key ingredient in the proofs is the crown decomposition technique due to Chor, Fellows, and Juedes (WG 2003, WG 2004). As an application, we significantly extend an algorithmic result of Dau, Skachek, and Chee (IEEE Trans. Inform. Theory, 2014).</description>
      <guid isPermaLink="false">oai:arXiv.org:2504.12274v1</guid>
      <category>cs.DS</category>
      <category>cs.IT</category>
      <category>math.IT</category>
      <pubDate>Thu, 17 Apr 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Ishay Haviv</dc:creator>
    </item>
    <item>
      <title>A Near-Optimal Kernel for a Coloring Problem</title>
      <link>https://arxiv.org/abs/2504.12281</link>
      <description>arXiv:2504.12281v1 Announce Type: new 
Abstract: For a fixed integer $q$, the $q$-Coloring problem asks to decide if a given graph has a vertex coloring with $q$ colors such that no two adjacent vertices receive the same color. In a series of papers, it has been shown that for every $q \geq 3$, the $q$-Coloring problem parameterized by the vertex cover number $k$ admits a kernel of bit-size $\widetilde{O}(k^{q-1})$, but admits no kernel of bit-size $O(k^{q-1-\varepsilon})$ for $\varepsilon &gt;0$ unless $\mathsf{NP} \subseteq \mathsf{coNP/poly}$ (Jansen and Kratsch, 2013; Jansen and Pieterse, 2019). In 2020, Schalken proposed the question of the kernelizability of the $q$-Coloring problem parameterized by the number $k$ of vertices whose removal results in a disjoint union of edges and isolated vertices. He proved that for every $q \geq 3$, the problem admits a kernel of bit-size $\widetilde{O}(k^{2q-2})$, but admits no kernel of bit-size $O(k^{2q-3-\varepsilon})$ for $\varepsilon &gt;0$ unless $\mathsf{NP} \subseteq \mathsf{coNP/poly}$. He further proved that for $q \in \{3,4\}$ the problem admits a near-optimal kernel of bit-size $\widetilde{O}(k^{2q-3})$ and asked whether such a kernel is achievable for all integers $q \geq 3$. In this short paper, we settle this question in the affirmative.</description>
      <guid isPermaLink="false">oai:arXiv.org:2504.12281v1</guid>
      <category>cs.DS</category>
      <pubDate>Thu, 17 Apr 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Ishay Haviv, Dror Rabinovich</dc:creator>
    </item>
    <item>
      <title>On the Problem of Best Arm Retention</title>
      <link>https://arxiv.org/abs/2504.11866</link>
      <description>arXiv:2504.11866v1 Announce Type: cross 
Abstract: This paper presents a comprehensive study on the problem of Best Arm Retention (BAR), which has recently found applications in streaming algorithms for multi-armed bandits. In the BAR problem, the goal is to retain $m$ arms with the best arm included from $n$ after some trials, in stochastic multi-armed bandit settings. We first investigate pure exploration for the BAR problem under different criteria, and then minimize the regret with specific constraints, in the context of further exploration in streaming algorithms.
  - We begin by revisiting the lower bound for the $(\varepsilon,\delta)$-PAC algorithm for Best Arm Identification (BAI) and adapt the classical KL-divergence argument to derive optimal bounds for $(\varepsilon,\delta)$-PAC algorithms for BAR.
  - We further study another variant of the problem, called $r$-BAR, which requires the expected gap between the best arm and the optimal arm retained is less than $r$. We prove tight sample complexity for the problem.
  - We explore the regret minimization problem for $r$-BAR and develop algorithm beyond pure exploration. We conclude with a conjecture on the optimal regret in this setting.</description>
      <guid isPermaLink="false">oai:arXiv.org:2504.11866v1</guid>
      <category>cs.LG</category>
      <category>cs.DS</category>
      <pubDate>Thu, 17 Apr 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <arxiv:DOI>10.1016/j.tcs.2025.115213</arxiv:DOI>
      <arxiv:journal_reference>Theoretical Computer Science, Volume 1041, 2025,</arxiv:journal_reference>
      <dc:creator>Houshuang Chen, Yuchen He, Chihao Zhang</dc:creator>
    </item>
    <item>
      <title>Sublinear Space Graph Algorithms in the Continual Release Model</title>
      <link>https://arxiv.org/abs/2407.17619</link>
      <description>arXiv:2407.17619v3 Announce Type: replace 
Abstract: The graph continual release model of differential privacy seeks to produce differentially private solutions to graph problems under a stream of edge updates where new private solutions are released after each update. Thus far, previously known edge-differentially private algorithms for most graph problems including densest subgraph and matchings in the continual release setting only output real-value estimates (not vertex subset solutions) and do not use sublinear space. Instead, they rely on computing exact graph statistics on the input [FHO21,SLMVC18]. In this paper, we leverage sparsification to address the above shortcomings for edge-insertion streams. Our edge-differentially private algorithms use sublinear space with respect to the number of edges in the graph while some also achieve sublinear space in the number of vertices in the graph. In addition, for the densest subgraph problem, we also output edge-differentially private vertex subset solutions; no previous graph algorithms in the continual release model output such subsets.
  We make novel use of assorted sparsification techniques from the non-private streaming and static graph algorithms literature to achieve new results in the sublinear space, continual release setting. This includes algorithms for densest subgraph, maximum matching, as well as the first continual release $k$-core decomposition algorithm. We also develop a novel sparse level data structure for $k$-core decomposition that may be of independent interest. To complement our insertion-only algorithms, we conclude with polynomial additive error lower bounds for edge-privacy in the fully dynamic setting, where only logarithmic lower bounds were previously known.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.17619v3</guid>
      <category>cs.DS</category>
      <category>cs.CR</category>
      <pubDate>Thu, 17 Apr 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Alessandro Epasto, Quanquan C. Liu, Tamalika Mukherjee, Felix Zhou</dc:creator>
    </item>
    <item>
      <title>New Separations and Reductions for Directed Preservers and Hopsets</title>
      <link>https://arxiv.org/abs/2411.08151</link>
      <description>arXiv:2411.08151v2 Announce Type: replace 
Abstract: We study distance preservers, hopsets, and shortcut sets in $n$-node, $m$-edge directed graphs, and show improved bounds and new reductions for various settings of these problems. Our first set of results is about exact and approximate distance preservers. We give the following bounds on the size of directed distance preservers with $p$ demand pairs: 1) $\tilde{O}(n^{5/6}p^{2/3} + n)$ edges for exact distance preservers in unweighted graphs; and 2) $\Omega(n^{2/3}p^{2/3})$ edges for approximate distance preservers with any given finite stretch, in graphs with arbitrary aspect ratio.
  Additionally, we establish a new directed-to-undirected reduction for exact distance preservers. We show that if undirected distance preservers have size $O(n^{\lambda}p^{\mu} + n)$ for constants $\lambda, \mu &gt; 0$, then directed distance preservers have size $O\left( n^{\frac{1}{2-\lambda}}p^{\frac{1+\mu-\lambda}{2-\lambda}} + n^{1/2}p + n\right).$ As a consequence of the reduction, if current upper bounds for undirected preservers can be improved for some $p \leq n$, then so can current upper bounds for directed preservers.
  Our second set of results is about directed hopsets and shortcut sets. For hopsets in directed graphs, we prove that the hopbound is: 1) $\Omega(n^{2/9})$ for $O(m)$-size shortcut sets, improving the previous $\Omega(n^{1/5})$ bound [Vassilevska Williams, Xu and Xu, SODA 2024]; 2) $\Omega(n^{2/7})$ for $O(m)$-size exact hopsets in unweighted graphs, improving the previous $\Omega(n^{1/4})$ bound [Bodwin and Hoppenworth, FOCS 2023]; and 3) $\Omega(n^{1/2})$ for $O(n)$-size approximate hopsets with any given finite stretch, in graphs with arbitrary aspect ratio. This result establishes a separation between this setting and $O(n)$-size approximate hopsets for graphs with polynomial aspect ratio, which have hopbound $\widetilde{O}(n^{1/3})$ [Bernstein and Wein, SODA 2023].</description>
      <guid isPermaLink="false">oai:arXiv.org:2411.08151v2</guid>
      <category>cs.DS</category>
      <pubDate>Thu, 17 Apr 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Gary Hoppenworth, Yinzhan Xu, Zixuan Xu</dc:creator>
    </item>
    <item>
      <title>Streaming Algorithms for Network Design</title>
      <link>https://arxiv.org/abs/2503.00712</link>
      <description>arXiv:2503.00712v2 Announce Type: replace 
Abstract: We consider the Survivable Network Design problem (SNDP) in the single-pass insertion-only streaming model. The input to SNDP is an edge-weighted graph $G = (V, E)$ and an integer connectivity requirement $r(uv)$ for each $u, v \in V$. The objective is to find a min-weight subgraph $H \subseteq G$ s.t., for every pair of $u, v \in V$, $u$ and $v$ are $r(uv)$-edge/vertex-connected. Recent work by Jin et al. [JKMV24] obtained approximation algorithms for edge-connectivity augmentation, and via that, also derived algorithms for edge-connectivity SNDP (EC-SNDP). We consider vertex-connectivity setting (VC-SNDP) and obtain several results for it as well as improved results for EC-SNDP.
  * We provide a general framework for solving connectivity problems in streaming; this is based on a connection to fault-tolerant spanners. For VC-SNDP, we provide an $O(tk)$-approximation in $\tilde O(k^{1-1/t}n^{1 + 1/t})$ space, where $k$ is the maximum connectivity requirement, assuming an exact algorithm at the end of the stream. Using a refined LP-based analysis, we provide an $O(\beta t)$-approximation where $\beta$ is the integrality gap of the natural cut-based LP relaxation. When applied to the EC-SNDP, our framework provides an $O(t)$-approximation in $\tilde O(k^{1/2-1/(2t)}n^{1 + 1/t} + kn)$ space, improving the $O(t \log k)$-approximation of [JKMV24] using $\tilde O(kn^{1+1/t})$ space; this also extends to element-connectivity SNDP.
  * We consider vertex connectivity-augmentation in the link-arrival model. The input is a $k$-vertex-connected subgraph $G$, and the weighted links $L$ arrive in the stream; the goal is to store the min-weight set of links s.t. $G \cup L$ is $(k+1)$-vertex-connected. We obtain $O(1)$ approximations in near-linear space for $k = 1, 2$. Our result for $k=2$ is based on SPQR tree, a novel application for this well-known representation of $2$-connected graphs.</description>
      <guid isPermaLink="false">oai:arXiv.org:2503.00712v2</guid>
      <category>cs.DS</category>
      <pubDate>Thu, 17 Apr 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Chandra Chekuri, Rhea Jain, Sepideh Mahabadi, Ali Vakilian</dc:creator>
    </item>
    <item>
      <title>A PTAS for Travelling Salesman Problem with Neighbourhoods Over Parallel Line Segments of Similar Length</title>
      <link>https://arxiv.org/abs/2504.02190</link>
      <description>arXiv:2504.02190v2 Announce Type: replace 
Abstract: We consider the Travelling Salesman Problem with Neighbourhoods (TSPN) on the Euclidean plane ($\mathbb{R}^2$) and present a Polynomial-Time Approximation Scheme (PTAS) when the neighbourhoods are parallel line segments with lengths between $[1, \lambda]$ for any constant value $\lambda \ge 1$. In TSPN (which generalizes classic TSP), each client represents a set (or neighbourhood) of points in a metric and the goal is to find a minimum cost TSP tour that visits at least one point from each client set. In the Euclidean setting, each neighbourhood is a region on the plane. TSPN is significantly more difficult than classic TSP even in the Euclidean setting, as it captures group TSP. A notable case of TSPN is when each neighbourhood is a line segment. Although there are PTASs for when neighbourhoods are fat objects (with limited overlap), TSPN over line segments is APX-hard even if all the line segments have unit length. For parallel (unit) line segments, the best approximation factor is $3\sqrt2$ from more than two decades ago [DM03]. The PTAS we present in this paper settles the approximability of this case of the problem. Our algorithm finds a $(1 + \epsilon)$-factor approximation for an instance of the problem for $n$ segments with lengths in $ [1,\lambda] $ in time $ n^{O(\lambda/\epsilon^3)} $.</description>
      <guid isPermaLink="false">oai:arXiv.org:2504.02190v2</guid>
      <category>cs.DS</category>
      <category>cs.CG</category>
      <pubDate>Thu, 17 Apr 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Benyamin Ghaseminia, Mohammad R. Salavatipour</dc:creator>
    </item>
  </channel>
</rss>
