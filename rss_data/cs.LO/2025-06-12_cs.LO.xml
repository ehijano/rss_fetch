<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.LO updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.LO</link>
    <description>cs.LO updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.LO" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Fri, 13 Jun 2025 04:01:15 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Fri, 13 Jun 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Growing a Modular Framework for Modal Systems- HOLMS: a HOL Light Library</title>
      <link>https://arxiv.org/abs/2506.10048</link>
      <description>arXiv:2506.10048v1 Announce Type: new 
Abstract: The present dissertation introduces the research project on HOLMS (\textbf{HOL} Light Library for \textbf{M}odal \textbf{S}ystems), a growing modular framework for modal reasoning within the HOL Light proof assistant. To provide an accessible introduction to the library, the fundamentals of modal logic are outlined first, followed by a concise manual for the proof assistant itself. The core contribution of this work on HOLMS is the development of a unified and modular strategy for proving adequacy theorems with respect to relational semantics directly within HOL Light for several normal modal systems, currently including K, T, K4, and GL. Adequacy theorems establish a formal connection between syntactic proof systems and their intended relational models, ensuring that derivable statements align with valid ones. This approach extends previous research on G\"odel-L\"ob logic (GL) by two HOLMS developers. It also assesses the generality and compositionality of the completeness proofs in George Boolos' monograph \textit{The logic of provability}. Beyond theoretical contributions, HOLMS incorporates automated decision procedures and a countermodel constructor for K, T, K4, and GL, illustrating how general-purpose proof assistants can be effectively combined with research on labelled sequent calculi and key insights from correspondence and bisimulation theories. The implementation in HOL Light demonstrates the feasibility of mechanising modal reasoning in a flexible and robust manner, paving the way for further developments of the HOLMS framework.</description>
      <guid isPermaLink="false">oai:arXiv.org:2506.10048v1</guid>
      <category>cs.LO</category>
      <category>math.LO</category>
      <pubDate>Fri, 13 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Antonella Bilotta</dc:creator>
    </item>
    <item>
      <title>Notes on applicative matching logic</title>
      <link>https://arxiv.org/abs/2506.10088</link>
      <description>arXiv:2506.10088v1 Announce Type: new 
Abstract: Matching logic (ML) was developed by Grigore Ro\c{s}u and collaborators as a logic for defining the formal semantics of programming languages and for specifying and reasoning about the behavior of programs. These lecture notes present basic definitions and results on applicative matching logic (AML), a functional variant of ML introduced recently by Xiaohong Chen and Grigore Ro\c{s}u. They can be used as an introductory text in the theory of AML. Monk's textbook on mathematical logic has an enormous influence on the notes.</description>
      <guid isPermaLink="false">oai:arXiv.org:2506.10088v1</guid>
      <category>cs.LO</category>
      <category>math.LO</category>
      <pubDate>Fri, 13 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Laurentiu Leustean</dc:creator>
    </item>
    <item>
      <title>StepProof: Step-by-step verification of natural language mathematical proofs</title>
      <link>https://arxiv.org/abs/2506.10558</link>
      <description>arXiv:2506.10558v1 Announce Type: new 
Abstract: Interactive theorem provers (ITPs) are powerful tools for the formal verification of mathematical proofs down to the axiom level. However, their lack of a natural language interface remains a significant limitation. Recent advancements in large language models (LLMs) have enhanced the understanding of natural language inputs, paving the way for autoformalization - the process of translating natural language proofs into formal proofs that can be verified. Despite these advancements, existing autoformalization approaches are limited to verifying complete proofs and lack the capability for finer, sentence-level verification. To address this gap, we propose StepProof, a novel autoformalization method designed for granular, step-by-step verification. StepProof breaks down complete proofs into multiple verifiable subproofs, enabling sentence-level verification. Experimental results demonstrate that StepProof significantly improves proof success rates and efficiency compared to traditional methods. Additionally, we found that minor manual adjustments to the natural language proofs, tailoring them for step-level verification, further enhanced StepProof's performance in autoformalization.</description>
      <guid isPermaLink="false">oai:arXiv.org:2506.10558v1</guid>
      <category>cs.LO</category>
      <category>cs.AI</category>
      <pubDate>Fri, 13 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Xiaolin Hu, Qinghua Zhou, Bogdan Grechuk, Ivan Y. Tyukin</dc:creator>
    </item>
    <item>
      <title>Encoding call-by-push-value in the pi-calculus</title>
      <link>https://arxiv.org/abs/2506.10584</link>
      <description>arXiv:2506.10584v1 Announce Type: new 
Abstract: In this report we define an encoding of Levys call-by-push-value lambda-calculus (CBPV) in the pi-calculus, and prove that our encoding is both sound and complete. We present informal (by-hand) proofs of soundness, completeness, and all required lemmas. The encoding is specialized to the internal pi-calculus (pi-i-calculus) to circumvent certain challenges associated with using de Bruijn index in a formalization, and it also helps with bisimulation as early-, late- and open-bisimulation coincide in this setting, furthermore bisimulation is a congruence. Additionally, we argue that our encoding also satisfies the five criteria for good encodings proposed by Gorla, as well as show similarities between Milners and our encoding. This paper includes encodings from CBPV in the pi-i-calculus, asynchronous polyadic pi-calculus and the local pi-calculus. We begin a formalization of the proof in Coq for the soundness and completeness of the encoding in the pi-i-calculus. Not all lemmas used in the formalization are themselves formally proven. However, we argue that the non-proven lemmas are reasonable, as they are proven by hand, or amount to Coq formalities that are straightforward given informal arguments.</description>
      <guid isPermaLink="false">oai:arXiv.org:2506.10584v1</guid>
      <category>cs.LO</category>
      <category>cs.CL</category>
      <pubDate>Fri, 13 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Benjamin Bennetzen, Nikolaj Rossander Kristensen, Peter Buus Steffensen</dc:creator>
    </item>
    <item>
      <title>System ASPMT2SMT:Computing ASPMT Theories by SMT Solvers</title>
      <link>https://arxiv.org/abs/2506.10708</link>
      <description>arXiv:2506.10708v1 Announce Type: cross 
Abstract: Answer Set Programming Modulo Theories (ASPMT) is an approach to combining answer set programming and satisfiability modulo theories based on the functional stable model semantics. It is shown that the tight fragment of ASPMT programs can be turned into SMT instances, thereby allowing SMT solvers to compute stable models of ASPMT programs. In this paper we present a compiler called {\sc aspsmt2smt}, which implements this translation. The system uses ASP grounder {\sc gringo} and SMT solver {\sc z3}. {\sc gringo} partially grounds input programs while leaving some variables to be processed by {\sc z3}. We demonstrate that the system can effectively handle real number computations for reasoning about continuous changes.</description>
      <guid isPermaLink="false">oai:arXiv.org:2506.10708v1</guid>
      <category>cs.AI</category>
      <category>cs.LO</category>
      <pubDate>Fri, 13 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Michael Bartholomew, Joohyung Lee</dc:creator>
    </item>
    <item>
      <title>AProVE: Modular Termination Analysis of Memory-Manipulating C Programs</title>
      <link>https://arxiv.org/abs/2302.02382</link>
      <description>arXiv:2302.02382v2 Announce Type: replace 
Abstract: Termination analysis of C programs is a challenging task. On the one hand, the analysis needs to be precise enough to draw meaningful conclusions. On the other hand, relevant programs in practice are large and require substantial abstraction. It is this inherent trade-off that is the crux of the problem. In this work, we present AProVE, a tool that uses symbolic execution to analyze termination of memory-manipulating C programs. While traditionally, AProVE's focus was on the preciseness of the analysis, we describe how we adapted our approach towards a modular analysis. Due to this adaption, our approach can now also handle recursive programs. Moreover, we present further performance improvements which we developed to make AProVE scale to large programs.</description>
      <guid isPermaLink="false">oai:arXiv.org:2302.02382v2</guid>
      <category>cs.LO</category>
      <pubDate>Fri, 13 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Frank Emrich, Jera Hensel, J\"urgen Giesl</dc:creator>
    </item>
    <item>
      <title>Positionality in {\Sigma}_0^2 and a completeness result</title>
      <link>https://arxiv.org/abs/2309.17022</link>
      <description>arXiv:2309.17022v3 Announce Type: replace 
Abstract: We study the existence of positional strategies for the protagonist in infinite duration games over arbitrary game graphs. We prove that prefix-independent objectives in {\Sigma}_0^2 which are positional and admit a (strongly) neutral letter are exactly those that are recognised by history-deterministic monotone co-B\"uchi automata over countable ordinals. This generalises a criterion proposed by [Kopczy\'nski, ICALP 2006] and gives an alternative proof of closure under union for these objectives, which was known from [Ohlmann, TheoretiCS 2023].
  We then give two applications of our result. First, we prove that the mean-payoff objective is positional over arbitrary game graphs. Second, we establish the following completeness result: for any objective W which is prefix-independent, admits a (weakly) neutral letter, and is positional over finite game graphs, there is an objective W' which is equivalent to W over finite game graphs and positional over arbitrary game graphs.</description>
      <guid isPermaLink="false">oai:arXiv.org:2309.17022v3</guid>
      <category>cs.LO</category>
      <pubDate>Fri, 13 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Pierre Ohlmann, Micha{\l} Skrzypczak</dc:creator>
    </item>
    <item>
      <title>Dilations and information flow axioms in categorical probability</title>
      <link>https://arxiv.org/abs/2211.02507</link>
      <description>arXiv:2211.02507v3 Announce Type: replace-cross 
Abstract: We study the positivity and causality axioms for Markov categories as properties of dilations and information flow in Markov categories, and in variations thereof for arbitrary semicartesian monoidal categories. These help us show that being a positive Markov category is merely an additional property of a symmetric monoidal category (rather than extra structure). We also characterize the positivity of representable Markov categories and prove that causality implies positivity, but not conversely. Finally, we note that positivity fails for quasi-Borel spaces and interpret this failure as a privacy property of probabilistic name generation.</description>
      <guid isPermaLink="false">oai:arXiv.org:2211.02507v3</guid>
      <category>math.CT</category>
      <category>cs.IT</category>
      <category>cs.LO</category>
      <category>math.IT</category>
      <category>math.PR</category>
      <pubDate>Fri, 13 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <arxiv:DOI>10.1017/S0960129523000324</arxiv:DOI>
      <arxiv:journal_reference>Mathematical Structures in Computer Science 33(10), 913-957 (2023)</arxiv:journal_reference>
      <dc:creator>Tobias Fritz, Tom\'a\v{s} Gonda, Nicholas Gauguin Houghton-Larsen, Antonio Lorenzin, Paolo Perrone, Dario Stein</dc:creator>
    </item>
    <item>
      <title>Formalizing zeta and L-functions in Lean</title>
      <link>https://arxiv.org/abs/2503.00959</link>
      <description>arXiv:2503.00959v3 Announce Type: replace-cross 
Abstract: The Riemann zeta function, and more generally the L-functions of Dirichlet characters, are among the central objects of study in number theory. We report on a project to formalize the theory of these objects in Lean's "Mathlib" library, including a proof of Dirichlet's theorem on primes in arithmetic progressions and a formal statement of the Riemann hypothesis</description>
      <guid isPermaLink="false">oai:arXiv.org:2503.00959v3</guid>
      <category>math.NT</category>
      <category>cs.FL</category>
      <category>cs.LO</category>
      <pubDate>Fri, 13 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>David Loeffler, Michael Stoll</dc:creator>
    </item>
  </channel>
</rss>
