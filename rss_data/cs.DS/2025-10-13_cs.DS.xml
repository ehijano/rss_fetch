<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.DS updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.DS</link>
    <description>cs.DS updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.DS" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Tue, 14 Oct 2025 03:09:44 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Mon, 13 Oct 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>The Online Submodular Cover Problem</title>
      <link>https://arxiv.org/abs/2510.08883</link>
      <description>arXiv:2510.08883v1 Announce Type: new 
Abstract: In the submodular cover problem, we are given a monotone submodular function $f$, and we want to pick the min-cost set $S$ such that $f(S) = f(N)$. Motivated by problems in network monitoring and resource allocation, we consider the submodular cover problem in an online setting. As a concrete example, suppose at each time $t$, a nonnegative monotone submodular function $g_t$ is given to us. We define $f^{(t)} = \sum_{s \leq t} g_s$ as the sum of all functions seen so far. We need to maintain a submodular cover of these submodular functions $f^{(1)}, f^{(2)}, \ldots f^{(T)}$ in an online fashion; i.e., we cannot revoke previous choices. Formally, at each time $t$ we produce a set $S_t \subseteq N$ such that $f^{(t)}(S_t) = f^{(t)}(N)$ -- i.e., this set $S_t$ is a cover -- such that $S_{t-1} \subseteq S_t$, so previously decisions to pick elements cannot be revoked. (We actually allow more general sequences $\{f^{(t)}\}$ of submodular functions, but this sum-of-simpler-submodular-functions case is useful for concreteness.)
  We give polylogarithmic competitive algorithms for this online submodular cover problem. The competitive ratio on an input sequence of length $T$ is $O(\ln n \ln (T \cdot f(N) / f_{\text{min}}))$, where $f_{\text{min}}$ is the smallest nonzero marginal for functions $f^{(t)}$, and $|N| = n$. For the special case of online set cover, our competitive ratio matches that of Alon et al. [SIAM J. Comp. 03], which are best possible for polynomial-time online algorithms unless $NP \subseteq BPP$ (see Korman 04). Since existing offline algorithms for submodular cover are based on greedy approaches which seem difficult to implement online, the technical challenge is to (approximately) solve the exponential-sized linear programming relaxation for submodular cover, and to round it, both in the online setting.</description>
      <guid isPermaLink="false">oai:arXiv.org:2510.08883v1</guid>
      <category>cs.DS</category>
      <pubDate>Mon, 13 Oct 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Anupam Gupta, Roie Levin</dc:creator>
    </item>
    <item>
      <title>Planar Length-Constrained Minimum Spanning Trees</title>
      <link>https://arxiv.org/abs/2510.09002</link>
      <description>arXiv:2510.09002v1 Announce Type: new 
Abstract: In length-constrained minimum spanning tree (MST) we are given an $n$-node graph $G = (V,E)$ with edge weights $w : E \to \mathbb{Z}_{\geq 0}$ and edge lengths $l: E \to \mathbb{Z}_{\geq 0}$ along with a root node $r \in V$ and a length-constraint $h \in \mathbb{Z}_{\geq 0}$. Our goal is to output a spanning tree of minimum weight according to $w$ in which every node is at distance at most $h$ from $r$ according to $l$.
  We give a polynomial-time algorithm for planar graphs which, for any constant $\epsilon &gt; 0$, outputs an $O\left(\log^{1+\epsilon} n\right)$-approximate solution with every node at distance at most $(1+\epsilon)h$ from $r$ for any constant $\epsilon &gt; 0$. Our algorithm is based on new length-constrained versions of classic planar separators which may be of independent interest. Additionally, our algorithm works for length-constrained Steiner tree. Complementing this, we show that any algorithm on general graphs for length-constrained MST in which nodes are at most $2h$ from $r$ cannot achieve an approximation of $O\left(\log ^{2-\epsilon} n\right)$ for any constant $\epsilon &gt; 0$ under standard complexity assumptions; as such, our results separate the approximability of length-constrained MST in planar and general graphs.</description>
      <guid isPermaLink="false">oai:arXiv.org:2510.09002v1</guid>
      <category>cs.DS</category>
      <pubDate>Mon, 13 Oct 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>D Ellis Hershkowitz, Richard Z Huang</dc:creator>
    </item>
    <item>
      <title>A Faster Randomized Algorithm for Vertex Cover: An Automated Approach</title>
      <link>https://arxiv.org/abs/2510.09027</link>
      <description>arXiv:2510.09027v1 Announce Type: new 
Abstract: This work introduces two techniques for the design and analysis of branching algorithms, illustrated through the case study of the Vertex Cover problem. First, we present a method for automatically generating branching rules through a systematic case analysis of local structures. Second, we develop a new technique for analyzing randomized branching algorithms using the Measure &amp; Conquer method, offering greater flexibility in formulating branching rules. By combining these innovations with additional techniques, we obtain the fastest known randomized algorithms in different parameters for the Vertex Cover problem on graphs with bounded degree (up to 6) and on general graphs. For example, our algorithm solves Vertex Cover on subcubic graphs in $O^*(1.07625^n)$ time and $O^*(1.13132^k)$ time, respectively. For graphs with maximum degree 4, we achieve running times of $O^*(1.13735^n)$ and $O^*(1.21103^k)$, while for general graphs we achieve $O^*(1.25281^k)$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2510.09027v1</guid>
      <category>cs.DS</category>
      <category>cs.CC</category>
      <pubDate>Mon, 13 Oct 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Katie Clinch, Serge Gaspers, Tao Zixu He, Simon Mackenzie, Tiankuang Zhang</dc:creator>
    </item>
    <item>
      <title>Multi-product Influence Maximization in Billboard Advertisement</title>
      <link>https://arxiv.org/abs/2510.09050</link>
      <description>arXiv:2510.09050v1 Announce Type: new 
Abstract: Billboard Advertisement has emerged as an effective out-of-home advertisement technique where the goal is to select a limited number of slots and play advertisement content over there with the hope that this will be observed by many people, and effectively, a significant number of them will be influenced towards the brand. Given a trajectory and a billboard database and a positive integer $k$, how can we select $k$ highly influential slots to maximize influence? In this paper, we study a variant of this problem where a commercial house wants to make a promotion of multiple products, and there is an influence demand for each product. We have studied two variants of the problem. In the first variant, our goal is to select $k$ slots such that the respective influence demand of each product is satisfied. In the other variant of the problem, we are given with $\ell$ integers $k_1,k_2, \ldots, k_{\ell}$, the goal here is to search for $\ell$ many set of slots $S_1, S_2, \ldots, S_{\ell}$ such that for all $i \in [\ell]$, $|S_{i}| \leq k_i$ and for all $i \neq j$, $S_i \cap S_j=\emptyset$ and the influence demand of each of the products gets satisfied. We model the first variant of the problem as a multi-submodular cover problem and the second variant as its generalization. For solving the first variant, we adopt the bi-criteria approximation algorithm, and for the other variant, we propose a sampling-based approximation algorithm. Extensive experiments with real-world trajectory and billboard datasets highlight the effectiveness and efficiency of the proposed solution approach.</description>
      <guid isPermaLink="false">oai:arXiv.org:2510.09050v1</guid>
      <category>cs.DS</category>
      <category>cs.DB</category>
      <pubDate>Mon, 13 Oct 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Dildar Ali, Rajibul Islam, Suman Banerjee</dc:creator>
    </item>
    <item>
      <title>Random-Shift Revisited: Tight Approximations for Tree Embeddings and L1-Oblivious Routings</title>
      <link>https://arxiv.org/abs/2510.09124</link>
      <description>arXiv:2510.09124v1 Announce Type: new 
Abstract: We present a new and surprisingly simple analysis of random-shift decompositions -- originally proposed by Miller, Peng, and Xu [SPAA'13]: We show that decompositions for exponentially growing scales $D = 2^0, 2^1, \ldots, 2^{\log_2(\operatorname{diam}(G))}$, have a tight constant trade-off between distance-to-center and separation probability on average across the distance scales -- opposed to a necessary $\Omega(\log n)$ trade-off for a single scale.
  This almost immediately yields a way to compute a tree $T$ for graph $G$ that preserves all graph distances with expected $O(\log n)$-stretch. This gives an alternative proof that obtains tight approximation bounds of the seminal result by Fakcharoenphol, Rao, and Talwar [STOC'03] matching the $\Omega(\log n)$ lower bound by Bartal [FOCS'96]. Our insights can also be used to refine the analysis of a simple $\ell_1$-oblivious routing proposed in [FOCS'22], yielding a tight $O(\log n)$ competitive ratio.
  Our algorithms for constructing tree embeddings and $\ell_1$-oblivious routings can be implemented in the sequential, parallel, and distributed settings with optimal work, depth, and rounds, up to polylogarithmic factors. Previously, fast algorithms with tight guarantees were not known for tree embeddings in parallel and distributed settings, and for $\ell_1$-oblivious routings, not even a fast sequential algorithm was known.</description>
      <guid isPermaLink="false">oai:arXiv.org:2510.09124v1</guid>
      <category>cs.DS</category>
      <pubDate>Mon, 13 Oct 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Rasmus Kyng, Maximilian Probst Gutenberg, Tim Rieder</dc:creator>
    </item>
    <item>
      <title>Confluence of the Node-Domination and Edge-Domination Hypergraph Rewrite Rules</title>
      <link>https://arxiv.org/abs/2510.09286</link>
      <description>arXiv:2510.09286v1 Announce Type: new 
Abstract: In this note, we study two rewrite rules on hypergraphs, called edge-domination and node-domination, and show that they are confluent. These rules are rather natural and commonly used before computing the minimum hitting sets of a hypergraph. Intuitively, edge-domination allows us to remove hyperedges that are supersets of another hyperedge, and node-domination allows us to remove nodes whose incident hyperedges are a subset of that of another node. We show that these rules are confluent up to isomorphism, i.e., if we apply any sequences of edge-domination and node-domination rules, then the resulting hypergraphs can be made isomorphic via more rule applications. This in particular implies the existence of a unique minimal hypergraph, up to isomorphism.</description>
      <guid isPermaLink="false">oai:arXiv.org:2510.09286v1</guid>
      <category>cs.DS</category>
      <pubDate>Mon, 13 Oct 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Antoine Amarilli, Mika\"el Monet, R\'emi De Pretto</dc:creator>
    </item>
    <item>
      <title>Improved Extended Regular Expression Matching</title>
      <link>https://arxiv.org/abs/2510.09311</link>
      <description>arXiv:2510.09311v1 Announce Type: new 
Abstract: An extended regular expression $R$ specifies a set of strings formed by characters from an alphabet combined with concatenation, union, intersection, complement, and star operators. Given an extended regular expression $R$ and a string $Q$, the extended regular expression matching problem is to decide if $Q$ matches any of the strings specified by $R$. Extended regular expressions are a basic concept in formal language theory and a basic primitive for searching and processing data. Extended regular expression matching was introduced by Hopcroft and Ullmann in the 1970s [\textit{Introduction to Automata Theory, Languages and Computation}, 1979], who gave a simple dynamic programming solution using $O(n^3m)$ time and $O(n^2m)$ space, where $n$ is the length of $Q$ and $m$ is the length of $R$. Since then, several solutions have been proposed, but few significant asymptotic improvements have been obtained. The current state-of-the art solution, by Yamamoto and Miyazaki~[COCOON, 2003], uses $O(\frac{n^3k + n^2m}{w} + n + m)$ time and $O(\frac{n^2k + nm}{w} + n + m)$ space, where $k$ is the number of negation and complement operators in $R$ and $w$ is the number of bits in a word. This roughly replaces the $m$ factor with $k$ in the dominant terms of both the space and time bounds of the Hopcroft and Ullmann algorithm.
  We revisit the problem and present a new solution that significantly improves the previous time and space bounds. Our main result is a new algorithm that solves extended regular expression matching in \[O\left(n^\omega k + \frac{n^2m}{\min(w/\log w, \log n)} + m\right)\] time and $O(\frac{n^2 \log k}{w} + n + m) = O(n^2 +m)$ space, where $\omega \approx 2.3716$ is the exponent of matrix multiplication. Essentially, this replaces the dominant $n^3k$ term with $n^\omega k$ in the time bound, while simultaneously improving the $n^2k$ term in the space to $O(n^2)$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2510.09311v1</guid>
      <category>cs.DS</category>
      <pubDate>Mon, 13 Oct 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Philip Bille, Inge Li G{\o}rtz, Rikke Schjeldrup Jessen</dc:creator>
    </item>
    <item>
      <title>Optimizing Administrative Divisions: A Vertex $k$-Center Approach for Edge-Weighted Road Graphs</title>
      <link>https://arxiv.org/abs/2510.09334</link>
      <description>arXiv:2510.09334v1 Announce Type: new 
Abstract: Efficient and equitable access to municipal services hinges on well-designed administrative divisions. It requires ongoing adaptation to changing demographics, infrastructure, and economic factors. This article proposes a novel transparent data-driven method for territorial division based on the Voronoi partition of edge-weighted road graphs and the vertex $k$-center problem as a special case of the minimax facility location problem. By considering road network structure and strategic placement of administrative centers, this method seeks to minimize travel time disparities and ensure a more balanced distribution of administrative time burden for the population. We show implementations of this approach in the context of Latvia, a country with complex geographical features and diverse population distribution.</description>
      <guid isPermaLink="false">oai:arXiv.org:2510.09334v1</guid>
      <category>cs.DS</category>
      <pubDate>Mon, 13 Oct 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:DOI>10.22364/bjmc.2024.12.2.04</arxiv:DOI>
      <arxiv:journal_reference>Baltic J. Modern Computing, Vol.12 (2024), No.2, pp.176-188</arxiv:journal_reference>
      <dc:creator>Peteris Daugulis</dc:creator>
    </item>
    <item>
      <title>On Stable Cutsets in General and Minimum Degree Constrained Graphs</title>
      <link>https://arxiv.org/abs/2510.09432</link>
      <description>arXiv:2510.09432v1 Announce Type: new 
Abstract: A stable cutset is a set of vertices $S$ of a connected graph, that is pairwise non-adjacent and when deleting $S$, the graph becomes disconnected. Determining the existence of a stable cutset in a graph is known to be NP-complete. In this paper, we introduce a new exact algorithm for Stable Cutset. By branching on graph configurations and using the $O^*(1.3645)$ algorithm for the (3,2)-Constraint Satisfaction Problem presented by Beigel and Eppstein, we achieve an improved running time of $O^*(1.2972^n)$.
  In addition, we investigate the Stable Cutset problem for graphs with a bound on the minimum degree $\delta$. First, we show that if the minimum degree of a graph $G$ is at least $\frac{2}{3}(n-1)$, then $G$ does not contain a stable cutset. Furthermore, we provide a polynomial-time algorithm for graphs where $\delta \geq \tfrac{1}{2}n$, and a similar kernelisation algorithm for graphs where $\delta = \tfrac{1}{2}n - k$.
  Finally, we prove that Stable Cutset remains NP-complete for graphs with minimum degree $c$, where $c &gt; 1$. We design an exact algorithm for this problem that runs in $O^*(\lambda^n)$ time, where $\lambda$ is the positive root of $x^{\delta + 2} - x^{\delta + 1} + 6$. This algorithm can also be applied to the \textsc{3-Colouring} problem with the same minimum degree constraint, leading to an improved exact algorithm as well.</description>
      <guid isPermaLink="false">oai:arXiv.org:2510.09432v1</guid>
      <category>cs.DS</category>
      <category>cs.CC</category>
      <category>cs.DM</category>
      <pubDate>Mon, 13 Oct 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Mats Vroon, Hans L. Bodlaender</dc:creator>
    </item>
    <item>
      <title>Parameterized Algorithms for Diversity of Networks with Ecological Dependencies</title>
      <link>https://arxiv.org/abs/2510.09512</link>
      <description>arXiv:2510.09512v1 Announce Type: new 
Abstract: For a phylogenetic tree, the phylogenetic diversity of a set A of taxa is the total weight of edges on paths to A. Finding small sets of maximal diversity is crucial for conservation planning, as it indicates where limited resources can be invested most efficiently. In recent years, efficient algorithms have been developed to find sets of taxa that maximize phylogenetic diversity either in a phylogenetic network or in a phylogenetic tree subject to ecological constraints, such as a food web. However, these aspects have mostly been studied independently. Since both factors are biologically important, it seems natural to consider them together. In this paper, we introduce decision problems where, given a phylogenetic network, a food web, and integers k, and D, the task is to find a set of k taxa with phylogenetic diversity of at least D under the maximize all paths measure, while also satisfying viability conditions within the food web. Here, we consider different definitions of viability, which all demand that a "sufficient" number of prey species survive to support surviving predators. We investigate the parameterized complexity of these problems and present several fixed-parameter tractable (FPT) algorithms. Specifically, we provide a complete complexity dichotomy characterizing which combinations of parameters - out of the size constraint k, the acceptable diversity loss D, the scanwidth of the food web, the maximum in-degree in the network, and the network height h - lead to W[1]-hardness and which admit FPT algorithms. Our primary methodological contribution is a novel algorithmic framework for solving phylogenetic diversity problems in networks where dependencies (such as those from a food web) impose an order, using a color coding approach.</description>
      <guid isPermaLink="false">oai:arXiv.org:2510.09512v1</guid>
      <category>cs.DS</category>
      <category>math.CO</category>
      <pubDate>Mon, 13 Oct 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Mark Jones, Jannik Schestag</dc:creator>
    </item>
    <item>
      <title>Minimizing the Weighted Makespan with Restarts on a Single Machine</title>
      <link>https://arxiv.org/abs/2510.09589</link>
      <description>arXiv:2510.09589v1 Announce Type: new 
Abstract: We consider the problem of minimizing the weighted makespan on a single machine with restarts. Restarts are similar to preemptions but weaker: a job can be interrupted, but then it has to be run again from the start instead of resuming at the point of interruption later. The objective is to minimize the weighted makespan, defined as the maximum weighted completion time of jobs.
  We establish a lower bound of 1.4656 on the competitive ratio achievable by deterministic online algorithms. For the case where all jobs have identical processing times, we design and analyze a deterministic online algorithm that improves the competitive ratio to better than 1.3098. Finally, we prove a lower bound of 1.2344 for this case.</description>
      <guid isPermaLink="false">oai:arXiv.org:2510.09589v1</guid>
      <category>cs.DS</category>
      <pubDate>Mon, 13 Oct 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Aflatoun Amouzandeh, Klaus Jansen, Lis Pirotton, Rob van Stee, Corinna Wambsganz</dc:creator>
    </item>
    <item>
      <title>Agnostic Product Mixed State Tomography via Robust Statistics</title>
      <link>https://arxiv.org/abs/2510.08472</link>
      <description>arXiv:2510.08472v1 Announce Type: cross 
Abstract: We consider the problem of agnostic tomography with \emph{mixed state} ansatz, and specifically, the natural ansatz class of product mixed states. In more detail, given $N$ copies of an $n$-qubit state $\rho$ which is $\epsilon$-close to a product mixed state $\pi$, the goal is to output a nearly-optimal product mixed state approximation to $\rho$. While there has been a flurry of recent work on agnostic tomography, prior work could only handle pure state ansatz, such as product states or stabilizer states. Here we give an algorithm for agnostic tomography of product mixed states which finds a product state which is $O(\epsilon \log 1 / \epsilon)$ close to $\rho$ which uses polynomially many copies of $\rho$, and which runs in polynomial time. Moreover, our algorithm only uses single-qubit, single-copy measurements. To our knowledge, this is the first efficient algorithm that achieves any non-trivial agnostic tomography guarantee for any class of mixed state ansatz.
  Our algorithm proceeds in two main conceptual steps, which we believe are of independent interest. First, we demonstrate a novel, black-box efficient reduction from agnostic tomography of product mixed states to the classical task of \emph{robustly learning binary product distributions} -- a textbook problem in robust statistics. We then demonstrate a nearly-optimal efficient algorithm for the classical task of robustly learning a binary product, answering an open problem in the literature. Our approach hinges on developing a new optimal certificate of closeness for binary product distributions that can be leveraged algorithmically via a carefully defined convex relaxation. Finally, we complement our upper bounds with a lower bound demonstrating that adaptivity is information-theoretically necessary for our agnostic tomography task, so long as the algorithm only uses single-qubit two-outcome projective measurements.</description>
      <guid isPermaLink="false">oai:arXiv.org:2510.08472v1</guid>
      <category>quant-ph</category>
      <category>cs.DS</category>
      <pubDate>Mon, 13 Oct 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Alvan Arulandu, Ilias Diakonikolas, Daniel Kane, Jerry Li</dc:creator>
    </item>
    <item>
      <title>Approximately Bisubmodular Regret Minimization in Billboard and Social Media Advertising</title>
      <link>https://arxiv.org/abs/2510.09084</link>
      <description>arXiv:2510.09084v1 Announce Type: cross 
Abstract: In a typical \emph{billboard advertisement} technique, a number of digital billboards are owned by an \emph{influence provider}, and several commercial houses approach the influence provider for a specific number of views of their advertisement content on a payment basis. If the influence provider provides the demanded or more influence, then he will receive the full payment else a partial payment. In the context of an influence provider, if he provides more or less than the advertisers demanded influence, it is a loss for him. This is formalized as 'Regret', and naturally, in the context of the influence provider, the goal will be to allocate the billboard slots among the advertisers such that the total regret is minimized. In this paper, we study this problem as a discrete optimization problem and propose two solution approaches. The first one selects the billboard slots from the available ones in an incremental greedy manner, and we call this method the Budget Effective Greedy approach. In the second one, we introduce randomness in the first one, where we do it for a sample of slots instead of calculating the marginal gains of all the billboard slots. We analyze both algorithms to understand their time and space complexity. We implement them with real-life datasets and conduct a number of experiments. We observe that the randomized budget effective greedy approach takes reasonable computational time while minimizing the regret.</description>
      <guid isPermaLink="false">oai:arXiv.org:2510.09084v1</guid>
      <category>cs.GT</category>
      <category>cs.DB</category>
      <category>cs.DS</category>
      <pubDate>Mon, 13 Oct 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Dildar Ali, Suman Benerjee, Yamuna Prasad</dc:creator>
    </item>
    <item>
      <title>Fully-Dynamic Submodular Cover with Bounded Recourse</title>
      <link>https://arxiv.org/abs/2009.00800</link>
      <description>arXiv:2009.00800v2 Announce Type: replace 
Abstract: In submodular covering problems, we are given a monotone, nonnegative submodular function $f: 2^N \rightarrow\mathbb{R}_+$ and wish to find the min-cost set $S\subseteq N$ such that $f(S)=f(N)$. This captures SetCover when $f$ is a coverage function. We introduce a general framework for solving such problems in a fully-dynamic setting where the function $f$ changes over time, and only a bounded number of updates to the solution (recourse) is allowed. For concreteness, suppose a nonnegative monotone submodular function $g_t$ is added or removed from an active set $G^{(t)}$ at each time $t$. If $f^{(t)}=\sum_{g\in G^{(t)}} g$ is the sum of all active functions, we wish to maintain a competitive solution to SubmodularCover for $f^{(t)}$ as this active set changes, and with low recourse.
  We give an algorithm that maintains an $O(\log(f_{max}/f_{min}))$-competitive solution, where $f_{max}, f_{min}$ are the largest/smallest marginals of $f^{(t)}$. The algorithm guarantees a total recourse of $O(\log(c_{max}/ c_{min})\cdot\sum_{t\leq T}g_t(N))$, where $c_{max},c_{min}$ are the largest/smallest costs of elements in $N$. This competitive ratio is best possible even in the offline setting, and the recourse bound is optimal up to the logarithmic factor. For monotone submodular functions that also have positive mixed third derivatives, we show an optimal recourse bound of $O(\sum_{t\leq T}g_t(N))$. This structured class includes set-coverage functions, so our algorithm matches the known $O(\log n)$-competitiveness and $O(1)$ recourse guarantees for fully-dynamic SetCover. Our work simultaneously simplifies and unifies previous results, as well as generalizes to a significantly larger class of covering problems. Our key technique is a new potential function inspired by Tsallis entropy. We also extensively use the idea of Mutual Coverage, which generalizes the classic notion of mutual information.</description>
      <guid isPermaLink="false">oai:arXiv.org:2009.00800v2</guid>
      <category>cs.DS</category>
      <pubDate>Mon, 13 Oct 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Anupam Gupta, Roie Levin</dc:creator>
    </item>
    <item>
      <title>Online Makespan Minimization: Beat LPT by Dynamic Locking</title>
      <link>https://arxiv.org/abs/2311.11195</link>
      <description>arXiv:2311.11195v2 Announce Type: replace 
Abstract: Online makespan minimization is a fundamental problem in scheduling. In this paper, we investigate its over-time formulation, where each job has a release time and a processing time. A job becomes known only at its release time and must be scheduled on a machine thereafter. The Longest Processing Time First (LPT) algorithm, established by Chen and Vestjens (1997), achieves a competitive ratio of $1.5$. For the special case of two machines, Noga and Seiden introduced the SLEEPY algorithm, which achieves a tight competitive ratio of $1.382$. However, for $m \geq 3$, no known algorithm has convincingly surpassed the long-standing $1.5$ barrier. We propose a natural generalization of SLEEPY and show this simple approach can beat the $1.5$ barrier and achieve $1.482$-competitive when $m=3$. However, when $m$ becomes large, we prove this simple generalization fails to beat $1.5$. Meanwhile, we introduce a novel technique called dynamic locking to overcome this new challenge. As a result, we achieve a competitive ratio of $1.5-\frac{1}{O(m^2)}$, which beats the LPT algorithm ($1.5$-competitive) for every constant $m$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2311.11195v2</guid>
      <category>cs.DS</category>
      <pubDate>Mon, 13 Oct 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Zhaozi Wang, Zhiwei Ying, Yuhao Zhang</dc:creator>
    </item>
    <item>
      <title>New Algorithm for Combinatorial $n$-folds and Applications</title>
      <link>https://arxiv.org/abs/2409.04212</link>
      <description>arXiv:2409.04212v4 Announce Type: replace 
Abstract: Block-structured integer linear programs (ILPs) play an important role in various application fields. We address $n$-fold ILPs where the matrix $\mathcal{A}$ has a specific structure, i.e., where the blocks in the lower part of $\mathcal{A}$ consist only of the row vectors $(1,\dots,1)$.
  In this paper, we propose an approach tailored to exactly these combinatorial $n$-folds. We utilize a divide and conquer approach to separate the original problem such that the right-hand side iteratively decreases in size. We show that this decrease in size can be calculated such that we only need to consider a bounded amount of possible right-hand sides. This, in turn, lets us efficiently combine solutions of the smaller right-hand sides to solve the original problem. We can decide the feasibility of, and also optimally solve, such problems in time $(n r \Delta)^{O(r)} \log(\|b\|_\infty),$ where $n$ is the number of blocks, $r$ the number of rows in the upper blocks and $\Delta=\|A\|_\infty$.
  We complement the algorithm by discussing applications of the $n$-fold ILPs with the specific structure we require. We consider the problems of (i) scheduling on uniform machines, (ii) closest string and (iii) (graph) imbalance.
  Regarding (i), our algorithm results in running times of $p_{\max}^{O(d)}|I|^{O(1)},$ matching a lower bound derived via ETH.
  For (ii) we achieve running times matching the current state-of-the-art in the general case. In contrast to the state-of-the-art, our result can leverage a bounded number of column-types to yield an improved running time.
  For (iii), we improve the parameter dependency on the size of the vertex cover.</description>
      <guid isPermaLink="false">oai:arXiv.org:2409.04212v4</guid>
      <category>cs.DS</category>
      <pubDate>Mon, 13 Oct 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Klaus Jansen, Kai Kahler, Lis Pirotton, Malte Tutas</dc:creator>
    </item>
    <item>
      <title>On the Integrality Gap of Directed Steiner Tree LPs with Relatively Integral Solutions</title>
      <link>https://arxiv.org/abs/2412.10744</link>
      <description>arXiv:2412.10744v3 Announce Type: replace 
Abstract: The Directed Steiner Tree (DST) problem is defined on a directed graph $G=(V,E)$, where we are given a designated root vertex $r$ and a set of $k$ terminals $K \subseteq V \setminus {r}$. The goal is to find a minimum-cost subgraph that provides directed $r \rightarrow t$ paths for all terminals $t \in K$.
  The approximability of DST has long been a central open problem in network design. While there exist polylogarithmic-approximation algorithms with quasi-polynomial running times (Charikar et al. 1998; Grandoni, Laekhanukit, and Li 2019; Ghuge and Nagarajan 2020), the best known polynomial-time approximation until now has remained at $k^\epsilon$, for any constant $\epsilon &gt; 0$. Whether a polynomial-time algorithm achieving a polylogarithmic approximation exists has remained unresolved.
  In this paper, we present a flow-based LP-relaxation for DST that admits a polylogarithmic integrality gap under the relative integral condition -- there exists a fractional solution in which each edge $e$ either carries a zero flow ($f^t_e=0$) or uses its full capacity ($f^t_e=x_e$), where $f^t_e$ denotes the flow variable and $x_e$ denotes the indicator variable treated as capacities. This stands in contrast to known lower bounds, as the standard flow-based relaxation is known to exhibit a polynomial integrality gap even under relatively integral solutions. In fact, this relatively integral property is shared by all the known integrality gap instances of DST [Halperin~et~al., SODA'07; Zosin-Khuller, SODA'02; Li-Laekhanukit, SODA'22].
  We further provide a randomized polynomial-time algorithm that gives an $O(\log^3 k)$-approximation, assuming access to a relatively integral fractional solution.</description>
      <guid isPermaLink="false">oai:arXiv.org:2412.10744v3</guid>
      <category>cs.DS</category>
      <category>cs.DM</category>
      <pubDate>Mon, 13 Oct 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Bundit Laekhanukit</dc:creator>
    </item>
    <item>
      <title>Dynamic r-index: An Updatable Self-Index in LCP-bounded Time</title>
      <link>https://arxiv.org/abs/2504.19482</link>
      <description>arXiv:2504.19482v3 Announce Type: replace 
Abstract: A self-index is a compressed data structure that supports locate queries--reporting all positions where a given pattern occurs in a string while maintaining the string in compressed form. While many self-indexes have been proposed, developing dynamically updatable ones supporting string insertions and deletions remains a challenge. The r-index (Gagie et al., JACM'20) is a representative static self-index based on the run-length Burrows-Wheeler transform (RLBWT), designed for highly repetitive strings. We present the dynamic r-index, a dynamic extension of the r-index that achieves updates in LCP-bounded time. The dynamic r-index supports count queries in $\mathcal{O}(m \log r / \log \log r)$ time and locate queries in $\mathcal{O}(m \log r / \log \log r + \mathsf{occ} \log r)$ time, using $\mathcal{O}(r)$ words of space, where $m$ is the length of a query with $\mathsf{occ}$ occurrences and $r$ is the number of runs in the RLBWT. Crucially, update operations are supported in $\mathcal{O}((m + L_{\mathsf{max}}) \log n)$ time for a substring of length $m$, where $L_{\mathsf{max}}$ is the maximum LCP value; the average running time is $\mathcal{O}((m + L_{\mathsf{avg}}) \log n)$, where $L_{\mathsf{avg}}$ is the average LCP value. This LCP-bounded complexity is particularly advantageous for highly repetitive strings where LCP values are typically small. We experimentally demonstrate the practical efficiency of the dynamic r-index on various highly repetitive datasets.</description>
      <guid isPermaLink="false">oai:arXiv.org:2504.19482v3</guid>
      <category>cs.DS</category>
      <pubDate>Mon, 13 Oct 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Takaaki Nishimoto, Yasuo Tabei</dc:creator>
    </item>
    <item>
      <title>An ETH-Tight FPT Algorithm for Rejection-Proof Set Packing with Applications to Kidney Exchange</title>
      <link>https://arxiv.org/abs/2509.11965</link>
      <description>arXiv:2509.11965v2 Announce Type: replace 
Abstract: We study the parameterized complexity of a recently introduced multi-agent variant of the Kidney Exchange problem. Given a directed graph $G$ and integers $d$ and $k$, the standard problem asks whether $G$ contains a packing of vertex-disjoint cycles, each of length $\leq d$, covering at least $k$ vertices in total. In the multi-agent setting we consider, the vertex set is partitioned over several agents who reject a cycle packing as solution if it can be modified into an alternative packing that covers more of their own vertices. A cycle packing is called rejection-proof if no agent rejects it and the problem asks whether such a packing exists that covers at least $k$ vertices.
  We exploit the sunflower lemma on a set packing formulation of the problem to give a kernel for this $\Sigma_2^P$-complete problem that is polynomial in $k$ for all constant values of $d$. We also provide a $2^{\mathcal{O}(k \log k)} + n^{\mathcal{O}(1)}$ algorithm based on it and show that this FPT algorithm is asymptotically optimal under the ETH. Further, we generalize the problem by including an additional positive integer $c$ in the input that naturally captures how much agents can modify a given cycle packing to reject it. For every constant $c$, the resulting problem simplifies from being $\Sigma_2^P$-complete to NP-complete. The super-exponential lower bound already holds for $c=2$, though. We present an ad-hoc single-exponential algorithm for $c = 1$. These results reveal an interesting discrepancy between the classical and parameterized complexity of the problem and give a good view of what makes it hard.</description>
      <guid isPermaLink="false">oai:arXiv.org:2509.11965v2</guid>
      <category>cs.DS</category>
      <pubDate>Mon, 13 Oct 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Bart M. P. Jansen, Jeroen S. K. Lamme, Ruben F. A. Verhaegh</dc:creator>
    </item>
    <item>
      <title>Optimal 4-Approximation for the Correlated Pandora's Problem</title>
      <link>https://arxiv.org/abs/2509.17029</link>
      <description>arXiv:2509.17029v2 Announce Type: replace 
Abstract: The Correlated Pandora's Problem posed by Chawla et al. (2020) generalizes the classical Pandora's Problem by allowing the numbers inside the Pandora's boxes to be correlated. It also generalizes the Min Sum Set Cover problem, and is related to the Uniform Decision Tree problem. This paper gives an optimal 4-approximation for the Correlated Pandora's Problem, matching the lower bound of 4 from Min Sum Set Cover.</description>
      <guid isPermaLink="false">oai:arXiv.org:2509.17029v2</guid>
      <category>cs.DS</category>
      <pubDate>Mon, 13 Oct 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Nikhil Bansal, Zhiyi Huang, Zixuan Zhu</dc:creator>
    </item>
    <item>
      <title>Fair Division in a Variable Setting</title>
      <link>https://arxiv.org/abs/2410.14421</link>
      <description>arXiv:2410.14421v3 Announce Type: replace-cross 
Abstract: We study the classic problem of fairly dividing a set of indivisible items among a set of agents and consider the popular fairness notion of envy-freeness up to one item (EF1). While in reality, the set of agents and items may vary, previous works have studied static settings, where no change can occur in the system. We initiate and develop a formal model to understand fair division under a variable input setting: here, there is an EF1 allocation that is disrupted due to the loss/deletion of some item(s), or the arrival of new agent(s). The objective is to regain EF1 by performing a sequence of valid transfers of items between agents - no transfer creates any new EF1-envy in the system. We call this the EF1-Restoration problem.
  In this work, we develop efficient algorithms for the EF1-Restoration problem when the agents have identical monotone valuations and the items are either all goods or all chores. Both of these algorithms achieve an optimal number of transfers (at most $km/n$, where $m$, $n$, and $k$ denote the number of items, agents, and EF1-unhappy agents respectively) for identical additive valuations.
  Next, we consider a valuation class with graphical structure, introduced by Christodoulou et al. (EC 2023), where each item is valued by at most two agents, and can be seen as an edge between these two agents in a graph. Here, we consider EF1 orientations on multigraphs - allocations where each item is allocated to an agent who values it. When the valuations are also additive and binary, we present an optimal algorithm for the EF1-Restoration problem. We also consider pairwise-homogeneous graphical valuations (all items between a pair of agents are valued the same), and develop an optimal algorithm when the graph is a multipath.
  Finally, for monotone binary valuations, we show that the problem of deciding whether EF1-Restoration is possible is PSPACE-complete.</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.14421v3</guid>
      <category>cs.GT</category>
      <category>cs.DS</category>
      <pubDate>Mon, 13 Oct 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Harish Chandramouleeswaran, Prajakta Nimbhorkar, Nidhi Rathi</dc:creator>
    </item>
    <item>
      <title>Hamiltonicity Parameterized by Mim-Width is (Indeed) Para-NP-Hard</title>
      <link>https://arxiv.org/abs/2507.00612</link>
      <description>arXiv:2507.00612v2 Announce Type: replace-cross 
Abstract: We prove that Hamiltonian Path and Hamiltonian Cycle are NP-hard on graphs of linear mim-width 26, even when a linear order of the input graph with mim-width 26 is provided together with input. This fills a gap left by a broken proof of the para-NP-hardness of Hamiltonicity problems parameterized by mim-width.</description>
      <guid isPermaLink="false">oai:arXiv.org:2507.00612v2</guid>
      <category>cs.CC</category>
      <category>cs.DS</category>
      <pubDate>Mon, 13 Oct 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Benjamin Bergougnoux, Lars Jaffke</dc:creator>
    </item>
  </channel>
</rss>
