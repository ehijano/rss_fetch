<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.FL updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.FL</link>
    <description>cs.FL updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.FL" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Tue, 19 Aug 2025 04:09:03 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Tue, 19 Aug 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>Structural Abstraction and Refinement for Probabilistic Programs</title>
      <link>https://arxiv.org/abs/2508.12344</link>
      <description>arXiv:2508.12344v1 Announce Type: new 
Abstract: In this paper, we present structural abstraction refinement, a novel framework for verifying the threshold problem of probabilistic programs. Our approach represents the structure of a Probabilistic Control-Flow Automaton (PCFA) as a Markov Decision Process (MDP) by abstracting away statement semantics. The maximum reachability of the MDP naturally provides a proper upper bound of the violation probability, termed the structural upper bound. This introduces a fresh ``structural'' characterization of the relationship between PCFA and MDP, contrasting with the traditional ``semantical'' view, where the MDP reflects semantics. The method uniquely features a clean separation of concerns between probability and computational semantics that the abstraction focuses solely on probabilistic computation and the refinement handles only the semantics aspect, where the latter allows non-random program verification techniques to be employed without modification.
  Building upon this feature, we propose a general counterexample-guided abstraction refinement (CEGAR) framework, capable of leveraging established non-probabilistic techniques for probabilistic verification. We explore its instantiations using trace abstraction. Our method was evaluated on a diverse set of examples against state-of-the-art tools, and the experimental results highlight its versatility and ability to handle more flexible structures swiftly.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.12344v1</guid>
      <category>cs.FL</category>
      <pubDate>Tue, 19 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <dc:creator>Guanyan Li, Juanen Li, Zhilei Han, Peixin Wang, Hongfei Fu, Fei He</dc:creator>
    </item>
    <item>
      <title>Box-Reachability in Vector Addition Systems</title>
      <link>https://arxiv.org/abs/2508.12853</link>
      <description>arXiv:2508.12853v1 Announce Type: new 
Abstract: We consider a variant of reachability in Vector Addition Systems (VAS) dubbed \emph{box reachability}, whereby a vector $v\in \mathbb{N}^d$ is box-reachable from $0$ in a VAS $V$ if $V$ admits a path from $0$ to $v$ that not only stays in the positive orthant (as in the standard VAS semantics), but also stays below $v$, i.e., within the ``box'' whose opposite corners are $0$ and $v$.
  Our main result is that for two-dimensional VAS, the set of box-reachable vertices almost coincides with the standard reachability set: the two sets coincide for all vectors whose coordinates are both above some threshold $W$. We also study properties of box-reachability, exploring the differences and similarities with standard reachability.
  Technically, our main result is proved using powerful machinery from convex geometry.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.12853v1</guid>
      <category>cs.FL</category>
      <pubDate>Tue, 19 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Shaull Almagor, Itay Hasson, Micha{\l} Pilipczuk, Michael Zaslavski</dc:creator>
    </item>
    <item>
      <title>Type-Driven Prompt Programming: From Typed Interfaces to a Calculus of Constraints</title>
      <link>https://arxiv.org/abs/2508.12475</link>
      <description>arXiv:2508.12475v1 Announce Type: cross 
Abstract: Prompt programming treats large language model prompts as software components with typed interfaces. Based on a literature survey of 15 recent works from 2023 to 2025, we observe a consistent trend: type systems are central to emerging prompt programming frameworks. However, there are gaps in constraint expressiveness and in supporting algorithms. To address these issues, we introduce the notion of Lambda Prompt, a dependently typed calculus with probabilistic refinements for syntactic and semantic constraints. While this is not yet a full calculus, the formulation motivates a type-theoretic foundation for prompt programming. Our catalog of 13 constraints highlights underexplored areas in constraint expressiveness (constraints 9 through 13). To address the algorithmic gap, we propose a constraint-preserving optimization rule. Finally, we outline research directions on developing a compiler for prompt programs.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.12475v1</guid>
      <category>cs.PL</category>
      <category>cs.FL</category>
      <pubDate>Tue, 19 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <dc:creator>Abhijit Paul</dc:creator>
    </item>
    <item>
      <title>Quasi-Isometric Reductions Between Infinite Strings</title>
      <link>https://arxiv.org/abs/2407.14105</link>
      <description>arXiv:2407.14105v3 Announce Type: replace 
Abstract: This paper studies the recursion-theoretic aspects of large-scale geometries of infinite strings, a subject initiated by Khoussainov and Takisaka (2017). We investigate several notions of quasi-isometric reductions between recursive infinite strings and prove various results on the equivalence classes of such reductions. The main result is the construction of two infinite recursive strings $\alpha$ and $\beta$ such that $\alpha$ is strictly quasi-isometrically reducible to $\beta$, but the reduction cannot be made recursive. This answers an open problem posed by Khoussainov and Takisaka.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.14105v3</guid>
      <category>cs.FL</category>
      <category>cs.LO</category>
      <pubDate>Tue, 19 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Karen Frilya Celine, Ziyuan Gao, Sanjay Jain, Ryan Lou, Frank Stephan, Guohua Wu</dc:creator>
    </item>
    <item>
      <title>Runs, Squares, Palindromes, and Unbordered Factors of a Family of Binary Pattern Sequences with the All-One Pattern</title>
      <link>https://arxiv.org/abs/2505.20547</link>
      <description>arXiv:2505.20547v4 Announce Type: replace 
Abstract: This paper presents results on maximal runs, order of squares, palindromes, and unbordered factors of members of the family of binary pattern sequences with the all-one pattern. Restricting ourselves to binary pattern sequences with the all-one pattern with at least three ones, five categories of maximal run lengths and 3 categories of orders of squares are presented, palindromes with locally maximal length as well as palindromes with second-fifth largest locally palindrome-lengths are described, and unbordered factors of lengths powers of two are presented. Interestingly, the characteristic functions of specified prefixes of sequences of the 2-kernel of these sequences can be formulated using the Vile and Jacobsthal sequences. Both Mathematica and Walnut are employed for exploratory pattern analysis. Proofs are based on a correspondence between binary strings under concatenation and integers under addition and multiplication. It is noted that proofs using this correspondence are efficacious for theorems corresponding to low levels in the arithmetic hierarchy but the method fails for higher levels</description>
      <guid isPermaLink="false">oai:arXiv.org:2505.20547v4</guid>
      <category>cs.FL</category>
      <pubDate>Tue, 19 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Russell Jay Hendel</dc:creator>
    </item>
  </channel>
</rss>
