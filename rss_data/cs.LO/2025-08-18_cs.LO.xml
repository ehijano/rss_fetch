<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.LO updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.LO</link>
    <description>cs.LO updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.LO" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Tue, 19 Aug 2025 02:09:02 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Mon, 18 Aug 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>Characterizing NC1 with Typed Monoids</title>
      <link>https://arxiv.org/abs/2508.11019</link>
      <description>arXiv:2508.11019v1 Announce Type: new 
Abstract: Krebs et al. (2007) gave a characterization of the complexity class TC0 as the class of languages recognized by a certain class of typed monoids. The notion of typed monoid was introduced to extend methods of algebraic automata theory to infinite monoids and hence characterize classes beyond the regular languages. We advance this line of work beyond TC0 by giving a characterization of NC1. This is obtained by first showing that NC1 can be defined as the languages expressible in an extension of first-order logic using only unary quantifiers over regular languages. The expressibility result is a consequence of a general result showing that finite monoid multiplication quantifiers of higher dimension can be replaced with unary quantifiers in the context of interpretations over strings, which also answers a question of Lautemann et al. (2001). We establish this collapse result for a much more general class of interpretations using results on interpretations due to Boja\'nczyk et al. (2019), which may be of independent interest.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.11019v1</guid>
      <category>cs.LO</category>
      <category>cs.FL</category>
      <pubDate>Mon, 18 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Anuj Dawar, Aidan T. Evans</dc:creator>
    </item>
    <item>
      <title>Automating the Derivation of Unification Algorithms: A Case Study in Deductive Program Synthesis</title>
      <link>https://arxiv.org/abs/2508.11136</link>
      <description>arXiv:2508.11136v1 Announce Type: new 
Abstract: The unification algorithm has long been a target for program synthesis research, but a fully automatic derivation remains a research goal. In deductive program synthesis, computer programming is phrased as a task in theorem proving; a declarative specification is expressed in logical form and presented to an automatic theorem prover, and a program meeting the specification is extracted from the proof. The correctness of the program is supported by the proof, which also provides an explanation of how the program works. The proof is conducted in an appropriate axiomatic subject-domain theory, which defines the concepts in the specification and the constructs in the target programming language and provides the background knowledge necessary to connect them.
  For the unification proof, we generalize and automate the manual proof presented in Manna and Waldinger [1981]. The new program unifies two given symbolic expressions (s-expressions) relative to a given "environment" substitution. The proof establishes the existence of an output substitution that is a most-general idempotent unifier of the given expressions and is an "extension" of the environment substitution. If no such substitution exists and the expressions are not unifiable, the program is to produce a failure indicator.
  Initially the environment substitution is the empty substitution, which makes no replacements at all; during execution of recursive calls, the environment substitution records the replacements that have been found so far. Our own unification algorithm employs an environment, and such algorithms appear in the literature [e.g., Luger and Stubblefield, 1997]. We suspect, in addition to being more efficient, the three-argument algorithm with an environment is easier to synthesize automatically than the two-argument version from the Manna-Waldinger paper.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.11136v1</guid>
      <category>cs.LO</category>
      <pubDate>Mon, 18 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Richard Waldinger</dc:creator>
    </item>
    <item>
      <title>Encoding and Reasoning About Arrays in Set Theory</title>
      <link>https://arxiv.org/abs/2508.11447</link>
      <description>arXiv:2508.11447v1 Announce Type: new 
Abstract: We encode arrays as functions which, in turn, are encoded as sets of ordered pairs. The set cardinality of each of these functions coincides with the length of the array it is representing. Then we define a fragment of set theory that is used to give the specifications of a non-trivial class of programs with arrays. In this way, array reasoning becomes set reasoning. Furthermore, a decision procedure for this fragment is also provided and implemented as part of the {log} (read 'setlog') tool. {log} is a constraint logic programming language and satisfiability solver where sets and binary relations are first-class citizens. The tool already implements a few decision procedures for different fragments of set theory. In this way, arrays are seamlessly integrated into {log} thus allowing users to reason about sets, functions and arrays all in the same language and with the same solver. The decision procedure presented in this paper is an extension of decision procedures defined in earlier works not supporting arrays.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.11447v1</guid>
      <category>cs.LO</category>
      <pubDate>Mon, 18 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Maximiliano Cristi\'a, Gianfranco Rossi</dc:creator>
    </item>
    <item>
      <title>Interpolation in Classical Propositional Logic</title>
      <link>https://arxiv.org/abs/2508.11449</link>
      <description>arXiv:2508.11449v1 Announce Type: new 
Abstract: We introduce Craig interpolation and related notions such as uniform interpolation, Beth definability, and theory decomposition in classical propositional logic. We present four approaches to computing interpolants: via quantifier elimination, from formulas in disjunctive normal form, and by extraction from resolution or tableau refutations. We close with a discussion of the size of interpolants and links to circuit complexity.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.11449v1</guid>
      <category>cs.LO</category>
      <pubDate>Mon, 18 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Patrick Koopmann, Christoph Wernhard, Frank Wolter</dc:creator>
    </item>
    <item>
      <title>Weighted First Order Model Counting for Two-variable Logic with Axioms on Two Relations</title>
      <link>https://arxiv.org/abs/2508.11515</link>
      <description>arXiv:2508.11515v1 Announce Type: new 
Abstract: The Weighted First-Order Model Counting Problem (WFOMC) asks to compute the weighted sum of models of a given first-order logic sentence over a given domain. The boundary between fragments for which WFOMC can be computed in polynomial time relative to the domain size lies between the two-variable fragment ($\text{FO}^2$) and the three-variable fragment ($\text{FO}^3$). It is known that WFOMC for \FOthree{} is $\mathsf{\#P_1}$-hard while polynomial-time algorithms exist for computing WFOMC for $\text{FO}^2$ and $\text{C}^2$, possibly extended by certain axioms such as the linear order axiom, the acyclicity axiom, and the connectedness axiom. All existing research has concentrated on extending the fragment with axioms on a single distinguished relation, leaving a gap in understanding the complexity boundary of axioms on multiple relations. In this study, we explore the extension of the two-variable fragment by axioms on two relations, presenting both negative and positive results. We show that WFOMC for $\text{FO}^2$ with two linear order relations and $\text{FO}^2$ with two acyclic relations are $\mathsf{\#P_1}$-hard. Conversely, we provide an algorithm in time polynomial in the domain size for WFOMC of $\text{C}^2$ with a linear order relation, its successor relation and another successor relation.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.11515v1</guid>
      <category>cs.LO</category>
      <category>cs.AI</category>
      <pubDate>Mon, 18 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Qipeng Kuang, V\'aclav K\r{u}la, Ond\v{r}ej Ku\v{z}elka, Yuanhong Wang, Yuyi Wang</dc:creator>
    </item>
    <item>
      <title>Robust Topology and the Hausdorff-Smyth Monad on Metric Spaces over Continuous Quantales</title>
      <link>https://arxiv.org/abs/2508.11623</link>
      <description>arXiv:2508.11623v2 Announce Type: new 
Abstract: We define a (preorder-enriched) category $\mathsf{Met}$ of quantale-valued metric spaces and uniformly continuous maps, with the essential requirement that the quantales are continuous. For each object $(X,d,Q)$ in this category, where $X$ is the carrier set, $Q$ is a continuous quantale, and $d: X \times X \to Q$ is the metric, we consider a topology $\tau_d$ on $X$, which generalizes the open ball topology, and a topology $\tau_{d,R}$ on the powerset $\mathsf{P}(X)$, called the robust topology, which captures robustness with respect to small perturbations of parameters. We define a (preorder-enriched) monad $\mathsf{P}_S$ on $\mathsf{Met}$, called the Hausdorff-Smyth monad, which captures the robust topology, in the sense that the open ball topology of the object $\mathsf{P}_S(X,d,Q)$ coincides with the robust topology $\tau_{d,R}$ for the object $(X,d,Q)$. We prove that every topology arises from a quantale-valued metric. As such, our framework provides a foundation for quantitative reasoning about imprecision and robustness in a wide range of computational and physical systems.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.11623v2</guid>
      <category>cs.LO</category>
      <pubDate>Mon, 18 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <dc:creator>Francesco Dagnino, Amin Farjudian, Eugenio Moggi</dc:creator>
    </item>
    <item>
      <title>The Constraint Satisfaction Problem Over Multisorted Cores</title>
      <link>https://arxiv.org/abs/2508.11540</link>
      <description>arXiv:2508.11540v1 Announce Type: cross 
Abstract: Constraint Satisfaction Problems (CSPs, for short) make up a class of problems with applications in many areas of computer science. The first classification of these problems was given by Schaeffer who showed that every CSP over the domain {0,1} is either in P or is NP-complete. More recently this was shown to hold for all CSPs over finite relational structures independently by Bulatov and Zhuk. Furthermore, they characterized the complexity based solely on the polymorphism algebra of the associated relational structure, building upon the deep connections between universal algebra and complexity theory. In this article we extend this and consider what happens if the instance forms a special type of relational core called a multisorted core. Our main result is that in this case the problem is reducible to computing the determinant of an integer valued matrix which places it in the complexity class DET, which is likely a strict subset of P.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.11540v1</guid>
      <category>cs.CC</category>
      <category>cs.LO</category>
      <pubDate>Mon, 18 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Dejan Delic, John Marcoux</dc:creator>
    </item>
    <item>
      <title>Separation and Definability in Fragments of Two-Variable First-Order Logic with Counting</title>
      <link>https://arxiv.org/abs/2504.20491</link>
      <description>arXiv:2504.20491v3 Announce Type: replace 
Abstract: For fragments L of first-order logic (FO) with counting quantifiers, we consider the definability problem, which asks whether a given L-formula can be equivalently expressed by a formula in some fragment of L without counting, and the more general separation problem asking whether two mutually exclusive L-formulas can be separated in some counting-free fragment of L. We show that separation is undecidable for the two-variable fragment of FO extended with counting quantifiers and for the graded modal logic with inverse, nominals and universal modality. On the other hand, if inverse or nominals are dropped, separation becomes coNExpTime- or 2ExpTime-complete, depending on whether the universal modality is present. In contrast, definability can often be reduced in polynomial time to validity in L. We also consider uniform separation and show that it often behaves similarly to definability.</description>
      <guid isPermaLink="false">oai:arXiv.org:2504.20491v3</guid>
      <category>cs.LO</category>
      <pubDate>Mon, 18 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Louwe Kuijer, Tony Tan, Frank Wolter, Michael Zakharyaschev</dc:creator>
    </item>
    <item>
      <title>OSTRICH2: Solver for Complex String Constraints</title>
      <link>https://arxiv.org/abs/2506.14363</link>
      <description>arXiv:2506.14363v2 Announce Type: replace 
Abstract: We present OSTRICH2, the latest evolution of the SMT solver OSTRICH for string constraints. OSTRICH2 supports a wide range of complex functions on strings and provides completeness guarantees for a substantial fragment of string constraints, including the straight-line fragment and the chain-free fragment. OSTRICH2 provides full support for the SMT-LIB theory of Unicode strings, extending the standard with several unique features not found in other solvers: among others, parsing of ECMAScript regular expressions (including look-around assertions and capture groups) and handling of user-defined string transducers. We empirically demonstrate that OSTRICH2 is competitive to other string solvers on SMT-COMP benchmarks.</description>
      <guid isPermaLink="false">oai:arXiv.org:2506.14363v2</guid>
      <category>cs.LO</category>
      <pubDate>Mon, 18 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Matthew Hague, Denghang Hu, Artur Je\.z, Anthony W. Lin, Oliver Markgraf, Philipp R\"ummer, Zhilin Wu</dc:creator>
    </item>
  </channel>
</rss>
