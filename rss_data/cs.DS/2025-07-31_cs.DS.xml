<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.DS updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.DS</link>
    <description>cs.DS updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.DS" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Fri, 01 Aug 2025 01:26:39 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Thu, 31 Jul 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Settling Weighted Token Swapping up to Algorithmic Barriers</title>
      <link>https://arxiv.org/abs/2507.22450</link>
      <description>arXiv:2507.22450v2 Announce Type: new 
Abstract: We study the weighted token swapping problem, in which we are given a graph on $n$ vertices, $n$ weighted tokens, an initial assignment of one token to each vertex, and a final assignment of one token to each vertex. The goal is to find a minimum-cost sequence of swaps of adjacent tokens to reach the final assignment from the initial assignment, where the cost is the sum over all swaps of the sum of the weights of the two swapped tokens. Unweighted token swapping has been extensively studied: it is NP-hard to approximate to a factor better than $14/13$, and there is a polynomial-time 4-approximation, along with a tight "barrier" result showing that the class of locally optimal algorithms cannot achieve a ratio better than 4. For trees, the problem remains NP-hard to solve exactly, and there is a polynomial-time 2-approximation, along with a tight barrier result showing that the class of $\ell$-straying algorithms cannot achieve a ratio better than 2. Weighted token swapping with $\{0,1\}$ weights is much harder to approximation: it is NP-hard to approximate even to a factor of $(1-\varepsilon) \cdot \ln n$ for any constant $\varepsilon&gt;0$. Restricting to positive weights, no approximation algorithms are known, and the only known lower bounds are those inherited directly from the unweighted version. We provide the first approximation algorithms for weighted token swapping on both trees and general graphs, along with tight barrier results. Letting $w$ and $W$ be the minimum and maximum token weights, our approximation ratio is $2+2W/w$ for general graphs and $1+W/w$ for trees.</description>
      <guid isPermaLink="false">oai:arXiv.org:2507.22450v2</guid>
      <category>cs.DS</category>
      <pubDate>Thu, 31 Jul 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Nicole Wein, Guanyu Tony Zhang</dc:creator>
    </item>
    <item>
      <title>Deterministic Longest Common Subsequence Approximation in Near-Linear Time</title>
      <link>https://arxiv.org/abs/2507.22486</link>
      <description>arXiv:2507.22486v1 Announce Type: new 
Abstract: We provide a deterministic algorithm that outputs an $O(n^{3/4} \log n)$-approximation for the Longest Common Subsequence (LCS) of two input sequences of length $n$ in near-linear time. This is the first deterministic approximation algorithm for LCS that achieves a sub-linear approximation ratio in near-linear time.</description>
      <guid isPermaLink="false">oai:arXiv.org:2507.22486v1</guid>
      <category>cs.DS</category>
      <pubDate>Thu, 31 Jul 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Itai Boneh, Shay Golan, Matan Kraus</dc:creator>
    </item>
    <item>
      <title>BlockFIFO &amp; MultiFIFO: Scalable Relaxed Queues</title>
      <link>https://arxiv.org/abs/2507.22764</link>
      <description>arXiv:2507.22764v1 Announce Type: new 
Abstract: FIFO queues are a fundamental data structure used in a wide range of applications. Concurrent FIFO queues allow multiple execution threads to access the queue simultaneously. Maintaining strict FIFO semantics in concurrent queues leads to low throughput due to high contention at the head and tail of the queue. By relaxing the FIFO semantics to allow some reordering of elements, it becomes possible to achieve much higher scalability. This work presents two orthogonal designs for relaxed concurrent FIFO queues, one derived from the MultiQueue and the other based on ring buffers. We evaluate both designs extensively on various micro-benchmarks and a breadth-first search application on large graphs. Both designs outperform state-of-the-art relaxed and strict FIFO queues, achieving higher throughput and better scalability.</description>
      <guid isPermaLink="false">oai:arXiv.org:2507.22764v1</guid>
      <category>cs.DS</category>
      <pubDate>Thu, 31 Jul 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Stefan Koch, Peter Sanders, Marvin Williams</dc:creator>
    </item>
    <item>
      <title>Cell-Probe Lower Bounds via Semi-Random CSP Refutation: Simplified and the Odd-Locality Case</title>
      <link>https://arxiv.org/abs/2507.22265</link>
      <description>arXiv:2507.22265v1 Announce Type: cross 
Abstract: A recent work (Korten, Pitassi, and Impagliazzo, FOCS 2025) established an insightful connection between static data structure lower bounds, range avoidance of $\text{NC}^0$ circuits, and the refutation of pseudorandom CSP instances, leading to improvements to some longstanding lower bounds in the cell-probe/bit-probe models. Here, we improve these lower bounds in certain cases via a more streamlined reduction to XOR refutation, coupled with handling the odd-arity case. Our result can be viewed as a complete derandomization of the state-of-the-art semi-random $k$-XOR refutation analysis (Guruswami, Kothari and Manohar, STOC 2022, Hsieh, Kothari and Mohanty, SODA 2023), which complements the derandomization of the even-arity case obtained by Korten et al.
  As our main technical statement, we show that for any multi-output constant-depth circuit that substantially stretches its input, its output is very likely far from strings sampled from distributions with sufficient independence, and further this can be efficiently certified. Via suitable shifts in perspectives, this gives applications to cell-probe lower bounds and range avoidance algorithms for $\mathsf{NC}^0$ circuits.</description>
      <guid isPermaLink="false">oai:arXiv.org:2507.22265v1</guid>
      <category>cs.CC</category>
      <category>cs.CR</category>
      <category>cs.DS</category>
      <pubDate>Thu, 31 Jul 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Venkatesan Guruswami, Xin Lyu, Weiqiang Yuan</dc:creator>
    </item>
    <item>
      <title>A new width parameter of graphs based on edge cuts: $\alpha$-edge-crossing width</title>
      <link>https://arxiv.org/abs/2302.04624</link>
      <description>arXiv:2302.04624v3 Announce Type: replace 
Abstract: We introduce graph width parameters, called $\alpha$-edge-crossing width and edge-crossing width. These are defined in terms of the number of edges crossing a bag of a tree-cut decomposition. They are motivated by edge-cut width, recently introduced by Brand et al. (WG 2022). We show that edge-crossing width is equivalent to the known parameter tree-partition-width. On the other hand, $\alpha$-edge-crossing width is a new parameter; tree-cut width and $\alpha$-edge-crossing width are incomparable, and they both lie between tree-partition-width and edge-cut width.
  We provide an algorithm that, for a given $n$-vertex graph $G$ and integers $k$ and $\alpha$, in time $2^{O((\alpha+k)\log (\alpha+k))}n^2$ either outputs a tree-cut decomposition certifying that the $\alpha$-edge-crossing width of $G$ is at most $2\alpha^2+5k$ or confirms that the $\alpha$-edge-crossing width of $G$ is more than $k$. As applications, for every fixed $\alpha$, we obtain FPT algorithms for the List Coloring and Precoloring Extension problems parameterized by $\alpha$-edge-crossing width. They were known to be W[1]-hard parameterized by tree-partition-width, and FPT parameterized by edge-cut width, and we close the complexity gap between these two parameters.</description>
      <guid isPermaLink="false">oai:arXiv.org:2302.04624v3</guid>
      <category>cs.DS</category>
      <category>cs.DM</category>
      <category>math.CO</category>
      <pubDate>Thu, 31 Jul 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Yeonsu Chang, O-joung Kwon, Myounghwan Lee</dc:creator>
    </item>
    <item>
      <title>Tighter Approximation for the Uniform Cost-Distance Steiner Tree Problem</title>
      <link>https://arxiv.org/abs/2305.03381</link>
      <description>arXiv:2305.03381v2 Announce Type: replace 
Abstract: Uniform cost-distance Steiner trees minimize the sum of the total length and weighted path lengths from a dedicated root to the other terminals. They are applied when the tree is intended for signal transmission, e.g. in chip design or telecommunication networks. They are a special case of general cost-distance Steiner trees, where different distance functions are used for total length and path lengths.
  We improve the best published approximation factor for the uniform cost-distance Steiner tree problem from 2.39 to 2.05. If we can approximate the minimum-length Steiner tree problem arbitrarily well, our algorithm achieves an approximation factor arbitrarily close to $ 1 + \frac{1}{\sqrt{2}} $. This bound is tight in the following sense. We also prove the gap $ 1 + \frac{1}{\sqrt{2}} $ between optimum solutions and the lower bound which we and all previous approximation algorithms for this problem use.
  Similarly to previous approaches, we start with an approximate minimum-length Steiner tree and split it into subtrees that are later re-connected. To improve the approximation factor, we split it into components more carefully, taking the cost structure into account, and we significantly enhance the analysis.</description>
      <guid isPermaLink="false">oai:arXiv.org:2305.03381v2</guid>
      <category>cs.DS</category>
      <pubDate>Thu, 31 Jul 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Josefine Foos, Stephan Held, Yannik Kyle Dustin Spitzley</dc:creator>
    </item>
    <item>
      <title>Breaking the Sorting Barrier for Directed Single-Source Shortest Paths</title>
      <link>https://arxiv.org/abs/2504.17033</link>
      <description>arXiv:2504.17033v2 Announce Type: replace 
Abstract: We give a deterministic $O(m\log^{2/3}n)$-time algorithm for single-source shortest paths (SSSP) on directed graphs with real non-negative edge weights in the comparison-addition model. This is the first result to break the $O(m+n\log n)$ time bound of Dijkstra's algorithm on sparse graphs, showing that Dijkstra's algorithm is not optimal for SSSP.</description>
      <guid isPermaLink="false">oai:arXiv.org:2504.17033v2</guid>
      <category>cs.DS</category>
      <pubDate>Thu, 31 Jul 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Ran Duan, Jiayi Mao, Xiao Mao, Xinkai Shu, Longhui Yin</dc:creator>
    </item>
    <item>
      <title>Reweighted Spectral Partitioning Works: Bounds for Special Graph Classes</title>
      <link>https://arxiv.org/abs/2506.01228</link>
      <description>arXiv:2506.01228v3 Announce Type: replace 
Abstract: Spectral partitioning is a method that can be used to compute small sparse cuts or small edge-separators in a wide variety of graph classes, by computing the second-smallest eigenvalue (and eigenvector) of the Laplacian matrix. Upper bounds on this eigenvalue for certain graph classes imply that the method obtains small edge-separators for these classes, usually with a sub-optimal dependence on the maximum degree. In this work, we show that a related method, called reweighted spectral partitioning, guarantees near-optimal sparse vertex-cuts and vertex-separators in a wide variety of graph classes. In many cases, this involves little-to-no necessary dependence on maximum degree.
  We also obtain a new proof of the planar separator theorem, a strengthened eigenvalue bound for bounded-genus graphs, and a refined form of the recent Cheeger-style inequality for vertex expansion via a specialized dimension-reduction step.</description>
      <guid isPermaLink="false">oai:arXiv.org:2506.01228v3</guid>
      <category>cs.DS</category>
      <category>cs.CG</category>
      <category>cs.DM</category>
      <pubDate>Thu, 31 Jul 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Jack Spalding-Jamieson</dc:creator>
    </item>
    <item>
      <title>Probing EFX via PMMS: (Non-)Existence Results in Discrete Fair Division</title>
      <link>https://arxiv.org/abs/2507.14957</link>
      <description>arXiv:2507.14957v2 Announce Type: replace-cross 
Abstract: We study the fair division of indivisible items and provide new insights into the EFX problem, which is widely regarded as the central open question in fair division, and the PMMS problem, a strictly stronger variant of EFX. Our first result constructs a three-agent instance with two monotone valuations and one additive valuation in which no PMMS allocation exists. Since EFX allocations are known to exist under these assumptions, this establishes a formal separation between EFX and PMMS.
  We prove existence of fair allocations for three important special cases. We show that EFX allocations exist for personalized bivalued valuations, where for each agent $i$ there exist values $a_i &gt; b_i$ such that agent $i$ assigns value $v_i(\{g\}) \in \{a_i, b_i\}$ to each good $g$. We establish an analogous existence result for PMMS allocations when $a_i$ is divisible by $b_i$. We also prove that PMMS allocations exist for binary-valued MMS-feasible valuations, where each bundle $S$ has value $v_i(S) \in \{0, 1\}$. Notably, this result holds even without assuming monotonicity of valuations and thus applies to the fair division of chores and mixed manna. Finally, we study a class of valuations called pair-demand valuations, which extend the well-studied unit-demand valuations to the case where each agent derives value from at most two items, and we show that PMMS allocations exist in this setting. Our proofs are constructive, and we provide polynomial-time algorithms for all three existence results.</description>
      <guid isPermaLink="false">oai:arXiv.org:2507.14957v2</guid>
      <category>cs.GT</category>
      <category>cs.AI</category>
      <category>cs.DS</category>
      <pubDate>Thu, 31 Jul 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Jaros{\l}aw Byrka, Franciszek Malinka, Tomasz Ponitka</dc:creator>
    </item>
  </channel>
</rss>
