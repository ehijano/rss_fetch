<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.CC updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.CC</link>
    <description>cs.CC updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.CC" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Mon, 19 May 2025 04:00:07 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Mon, 19 May 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>Algebraic Pseudorandomness in $VNC^0$</title>
      <link>https://arxiv.org/abs/2505.10675</link>
      <description>arXiv:2505.10675v1 Announce Type: new 
Abstract: We study the arithmetic complexity of hitting set generators, which are pseudorandom objects used for derandomization of the polynomial identity testing problem. We give new explicit constructions of hitting set generators whose outputs are computable in $VNC^0$, i.e., can be computed by arithmetic formulas of constant size. Unconditionally, we construct a $VNC^0$-computable generator that hits arithmetic circuits of constant depth and polynomial size. We also give conditional constructions, under strong but plausible hardness assumptions, of $VNC^0$-computable generators that hit arithmetic formulas and arithmetic branching programs of polynomial size, respectively. As a corollary of our constructions, we derive lower bounds for subsystems of the Geometric Ideal Proof System of Grochow and Pitassi.
  Constructions of such generators are implicit in prior work of Kayal on lower bounds for the degree of annihilating polynomials. Our main contribution is a construction whose correctness relies on circuit complexity lower bounds rather than degree lower bounds.</description>
      <guid isPermaLink="false">oai:arXiv.org:2505.10675v1</guid>
      <category>cs.CC</category>
      <pubDate>Mon, 19 May 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Robert Andrews</dc:creator>
    </item>
    <item>
      <title>Complexity of Firefighting on Graphs</title>
      <link>https://arxiv.org/abs/2505.11082</link>
      <description>arXiv:2505.11082v1 Announce Type: new 
Abstract: We consider a pursuit-evasion game that describes the process of extinguishing a fire burning on the nodes of an undirected graph. We denote the minimum number of firefighters required by $\text{ffn}(G)$ and provide a characterization for the graphs with $\text{ffn}(G)=1$ and $\text{ffn}(G)=2$ as well as almost sharp bounds for complete binary trees. We show that deciding whether $\text{ffn}(G) \leq m$ for given $G$ and $m$ is NP-hard. Furthermore, we show that shortest strategies can have superpolynomial length, leaving open whether the problem is in NP. Based on some plausible conjectures, we also prove that this decision problem is neither NP-hard for graphs with bounded treewidth nor for constant $m$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2505.11082v1</guid>
      <category>cs.CC</category>
      <category>cs.DM</category>
      <pubDate>Mon, 19 May 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Julius Althoetmar, Jamico Schade, Torben Sch\"urenberg</dc:creator>
    </item>
    <item>
      <title>Conservative Maltsev Constraint Satisfaction Problems</title>
      <link>https://arxiv.org/abs/2505.11395</link>
      <description>arXiv:2505.11395v1 Announce Type: cross 
Abstract: We show that for every finite structure B with a conservative Maltsev polymorphism, the constraint satisfaction problem for B can be solved by a symmetric linear Z2-Datalog program, and in particular is in the complexity class parity-L. The proof has two steps: we first present the result for a certain subclass whose polymorphism algebras are hereditarily subdirectly irreducible. We then show that every other structure in our class can be primitively positively constructed from one of the structures in the subclass. The second step requires different techniques and will be presented in a companion article.</description>
      <guid isPermaLink="false">oai:arXiv.org:2505.11395v1</guid>
      <category>math.RA</category>
      <category>cs.CC</category>
      <pubDate>Mon, 19 May 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Manuel Bodirsky, Andrew Moorhead</dc:creator>
    </item>
    <item>
      <title>Forgetting in short and heterogeneous sequences of belief revisions</title>
      <link>https://arxiv.org/abs/2504.13986</link>
      <description>arXiv:2504.13986v2 Announce Type: replace 
Abstract: Forgetting a specific belief revision episode may not erase information because the other revisions may provide or entail the same information. Whether it does was proved coNP-hard for sequences of two arbitrary lexicographic revisions or arbitrarily long lexicographic Horn revisions. A polynomial algorithm is presented for the case of two lexicographic Horn revision. Heterogeneous sequences, including revisions other than lexicographic, were proved to belong in Delta2. Their previously proved coNP-hardness is enhanced to Dp-hardness.</description>
      <guid isPermaLink="false">oai:arXiv.org:2504.13986v2</guid>
      <category>cs.CC</category>
      <category>cs.AI</category>
      <pubDate>Mon, 19 May 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Paolo Liberatore</dc:creator>
    </item>
    <item>
      <title>Quantum Algorithm for Finding the Optimal Variable Ordering for Binary Decision Diagrams</title>
      <link>https://arxiv.org/abs/1909.12658</link>
      <description>arXiv:1909.12658v3 Announce Type: replace-cross 
Abstract: An ordered binary decision diagram (OBDD) is a directed acyclic graph that represents a Boolean function. OBDDs are also known as special cases of oblivious read-once branching programs in the field of complexity theory. Since OBDDs have many nice properties as data structures, they have been extensively studied for decades in both theoretical and practical fields, such as VLSI design, formal verification, machine learning, and combinatorial problems. Arguably, the most crucial problem in using OBDDs is that they may vary exponentially in size depending on their variable ordering (i.e., the order in which the variable are to read) when they represent the same function. Indeed, it is NP hard to find an optimal variable ordering that minimizes an OBDD for a given function. Hence, numerous studies have sought heuristics to find an optimal variable ordering. From practical as well as theoretical points of view, it is also important to seek algorithms that output optimal solutions with lower (exponential) time complexity than trivial brute-force algorithms do. Friedman and Supowit provided a clever deterministic algorithm with time/space complexity $O^\ast(3^n)$, where $n$ is the number of variables of the function, which is much better than the trivial brute-force bound $O^\ast(n!2^n)$. This paper shows that a further speedup is possible with quantum computers by demonstrating the existence of a quantum algorithm that produces a minimum OBDD together with the corresponding variable ordering in $O^\ast(2.77286^n)$ time and space with an exponentially small error. Moreover, this algorithm can be adapted to constructing other minimum decision diagrams such as zero-suppressed BDDs, which provide compact representations of sparse sets and are often used in the field of discrete optimization and enumeration.</description>
      <guid isPermaLink="false">oai:arXiv.org:1909.12658v3</guid>
      <category>quant-ph</category>
      <category>cs.CC</category>
      <category>cs.DS</category>
      <pubDate>Mon, 19 May 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <arxiv:DOI>10.1016/j.tcs.2025.115230</arxiv:DOI>
      <arxiv:journal_reference>Theoretical Computer Science, Vol. 1041, Article 115230, 2025; (Preliminary version) Proc. 17th Scandinavian Symposium and Workshops on Algorithm Theory (SWAT 2020), LIPIcs 162, pp. 36:1--36:19</arxiv:journal_reference>
      <dc:creator>Seiichiro Tani</dc:creator>
    </item>
    <item>
      <title>Can You Link Up With Treewidth?</title>
      <link>https://arxiv.org/abs/2410.02606</link>
      <description>arXiv:2410.02606v2 Announce Type: replace-cross 
Abstract: In a fundamental paper in parameterized complexity theory, Marx [ToC '10] constructed $k$-vertex graphs $H$ of maximum degree $3$ such that $n^{o(k /\log k)}$ time algorithms for detecting colorful $H$-subgraphs would refute the Exponential-Time Hypothesis (ETH). This result is widely used to obtain almost-tight conditional lower bounds for parameterized problems under ETH.
  We give a new and fully self-contained proof of this result that further simplifies a recent work by Karthik et al. [SOSA 2024]. In our proof, we introduce a novel graph parameter of independent interest, the linkage capacity $\gamma(H)$, and show that detecting colorful $H$-subgraphs in time $n^{o(\gamma(H))}$ refutes ETH. Then, we use a simple construction of communication networks credited to Bene\v{s} to obtain $k$-vertex graphs of maximum degree $3$ and linkage capacity $\Omega(k / \log k)$, avoiding arguments involving expander graphs, which were required in previous papers. We also show that every graph $H$ of treewidth $t$ has linkage capacity $\Omega(t / \log t)$, thus recovering a stronger result shown by Marx [ToC '10] with a simplified proof.
  Additionally, we obtain new tight lower bounds on the complexity of colorful subgraph detection for certain types of patterns by analyzing their linkage capacity: We prove that almost all $k$-vertex graphs of polynomial average degree $\Omega(k^{\beta})$ for $\beta &gt; 0$ have linkage capacity $\Theta(k)$, which implies tight lower bounds for finding such patterns $H$. As an application of these results, we also obtain tight lower bounds for counting small induced subgraphs having a fixed property $\Phi$, improving bounds from, e.g., [Roth et al., FOCS 2020].</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.02606v2</guid>
      <category>cs.DS</category>
      <category>cs.CC</category>
      <pubDate>Mon, 19 May 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Radu Curticapean, Simon D\"oring, Daniel Neuen, Jiaheng Wang</dc:creator>
    </item>
    <item>
      <title>An $\mathcal{O}(n)$ Space Construction of Superpermutations</title>
      <link>https://arxiv.org/abs/2505.09628</link>
      <description>arXiv:2505.09628v2 Announce Type: replace-cross 
Abstract: A superpermutation is a sequence that contains every permutation of $n$ distinct symbols as a contiguous substring. For instance, a valid example for three symbols is a sequence that contains all six permutations. This paper introduces a new algorithm that constructs such sequences more efficiently than existing recursive and graph-theoretic methods. Unlike traditional techniques that suffer from scalability and factorial memory demands, the proposed approach builds superpermutations directly and compactly. This improves memory usage, enabling the construction of larger sequences previously considered impractical.</description>
      <guid isPermaLink="false">oai:arXiv.org:2505.09628v2</guid>
      <category>cs.DM</category>
      <category>cs.CC</category>
      <category>cs.DS</category>
      <category>math.CO</category>
      <pubDate>Mon, 19 May 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Dhruv Ajmera</dc:creator>
    </item>
  </channel>
</rss>
