<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.CG updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.CG</link>
    <description>cs.CG updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.CG" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Thu, 03 Oct 2024 02:10:23 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Wed, 02 Oct 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>FPT Algorithms for Crossing Number Problems: A Unified Approach</title>
      <link>https://arxiv.org/abs/2410.00206</link>
      <description>arXiv:2410.00206v1 Announce Type: new 
Abstract: The basic crossing number problem is to determine the minimum number of crossings in a topological drawing of an input graph in the plane. In this paper, we develop fixed-parameter tractable (FPT) algorithms for various generalized crossing number problems in the plane or on surfaces.
  Our first result is on the color-constrained crossing problem, in which edges of the input graph G are colored, and one looks for a drawing of G in the plane or on a given surface in which the total number of crossings involving edges of colors i and j does not exceed a given upper bound Mij. We give an algorithm for this problem that is FPT in the total number of crossings allowed and the genus of the surface. It readily implies an FPT algorithm for the joint crossing number problem.
  We also give new FPT algorithms for several other graph drawing problems, such as the skewness, the edge crossing number, the splitting number, the gap-planar crossing number, and their generalizations to surfaces. Our algorithms are reductions to the embeddability of a graph on a two-dimensional simplicial complex, which admits an FPT algorithm by a result of Colin de Verdi\`ere and Magnard [ESA 2021].</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.00206v1</guid>
      <category>cs.CG</category>
      <category>math.CO</category>
      <pubDate>Wed, 02 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-sa/4.0/</dc:rights>
      <dc:creator>\'Eric Colin de Verdi\`ere, Petr Hlin\v{e}n\'y</dc:creator>
    </item>
    <item>
      <title>New Lower Bound and Algorithms for Online Geometric Hitting Set Problem</title>
      <link>https://arxiv.org/abs/2409.11166</link>
      <description>arXiv:2409.11166v2 Announce Type: replace 
Abstract: The hitting set problem is one of the fundamental problems in combinatorial optimization and is well-studied in offline setup. We consider the online hitting set problem, where only the set of points is known in advance, and objects are introduced one by one. Our objective is to maintain a minimum-sized hitting set by making irrevocable decisions. Here, we present the study of two variants of the online hitting set problem depending on the point set. In the first variant, we consider the point set to be the entire $\mathbb{Z}^d$, while in the second variant, we consider the point set to be a finite subset of $\mathbb{R}^2$.
  If you use points in $\mathbb{Z}^d$ to hit homothetic hypercubes in $\mathbb{R}^d$ with side lengths in $[1,M]$, we show that the competitive ratio of any algorithm is $\Omega(d\log M)$, whether it is deterministic or random. This improves the recently known deterministic lower bound of $\Omega(\log M)$ by a factor of $d$. Then, we present an almost tight randomized algorithm with a competitive ratio $O(d^2\log M)$ that significantly improves the best-known competitive ratio of $25^d\log M$. Next, we propose a simple deterministic ${\lfloor\frac{2}{\alpha}+2\rfloor^d}(\lfloor\log_{2}M\rfloor+1)$ competitive algorithm to hit similarly sized {$\alpha$-fat objects} in $\mathbb{R}^d$ having diameters in the range $[1, M]$ using points in $\mathbb{Z}^d$. This improves the current best-known upper bound by a factor of at least $5^d$.
  Finally, we consider the hitting set problem when the point set consists of $n$ points in $\mathbb{R}^2$, and the objects are homothetic regular $k$-gons having diameter in the range $[1, M]$. We present an $O(\log n\log M)$ competitive randomized algorithm for that. Whereas no result was known even for squares. In particular, our results answer some of the open questions raised by Khan et al. (SoCG'23) and Alefkhani et al. (WAOA'23).</description>
      <guid isPermaLink="false">oai:arXiv.org:2409.11166v2</guid>
      <category>cs.CG</category>
      <pubDate>Wed, 02 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Minati De, Ratnadip Mandal, Satyam Singh</dc:creator>
    </item>
    <item>
      <title>Analyzing Multifiltering Functions Using Multiparameter Discrete Morse Theory</title>
      <link>https://arxiv.org/abs/2406.09537</link>
      <description>arXiv:2406.09537v2 Announce Type: replace-cross 
Abstract: A multiparameter filtration, or a multifiltration, may in many cases be seen as the collection of sublevel sets of a vector function, which we call a multifiltering function. The main objective of this paper is to obtain a better understanding of such functions through multiparameter discrete Morse (MDM) theory, which is an extension of Morse-Forman theory to vector-valued functions. Notably, we prove algorithmically that any multifiltering function defined on a simplicial complex can always be approximated by a compatible MDM function. Moreover, we define the Pareto set of a discrete multifiltering function and show that the concept links directly to that of critical simplices of a MDM function. Finally, we experiment with these notions using triangular meshes.</description>
      <guid isPermaLink="false">oai:arXiv.org:2406.09537v2</guid>
      <category>math.GT</category>
      <category>cs.CG</category>
      <pubDate>Wed, 02 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Guillaume Brouillette (Universit\'e de Sherbrooke, Canada)</dc:creator>
    </item>
    <item>
      <title>Two Results on LPT: A Near-Linear Time Algorithm and Parcel Delivery using Drones</title>
      <link>https://arxiv.org/abs/2407.16323</link>
      <description>arXiv:2407.16323v2 Announce Type: replace-cross 
Abstract: The focus of this paper is to increase our understanding of the Longest Processing Time First (LPT) heuristic. LPT is a classical heuristic for the fundamental problem of uniform machine scheduling. For different machine speeds, LPT was first considered by Gonzalez et al (SIAM J. Computing, 1977). Since then, extensive work has been done to improve the approximation factor of the LPT heuristic. However, all known implementations of the LPT heuristic take $O(mn)$ time, where $m$ is the number of machines and $n$ is the number of jobs. In this work, we come up with the first near-linear time implementation for LPT. Specifically, the running time is $O((n+m)(\log^2{m}+\log{n}))$. Somewhat surprisingly, the result is obtained by mapping the problem to dynamic maintenance of lower envelope of lines, which has been well studied in the computational geometry community.
  Our second contribution is to analyze the performance of LPT for the Drones Warehouse Problem (DWP), which is a natural generalization of the uniform machine scheduling problem motivated by drone-based parcel delivery from a warehouse. In this problem, a warehouse has multiple drones and wants to deliver parcels to several customers. Each drone picks a parcel from the warehouse, delivers it, and returns to the warehouse (where it can also get charged). The speeds and battery lives of the drones could be different, and due to the limited battery life, each drone has a bounded range in which it can deliver parcels. The goal is to assign parcels to the drones so that the time taken to deliver all the parcels is minimized. We prove that the natural approach of solving this problem via the LPT heuristic has an approximation factor of $\phi$, where $\phi \approx 1.62$ is the golden ratio.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.16323v2</guid>
      <category>cs.DS</category>
      <category>cs.CG</category>
      <category>cs.RO</category>
      <pubDate>Wed, 02 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>L. Sunil Chandran, Rishikesh Gajjala, Shravan Mehra, Saladi Rahul</dc:creator>
    </item>
  </channel>
</rss>
