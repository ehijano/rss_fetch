<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.CG updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.CG</link>
    <description>cs.CG updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.CG" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Fri, 18 Oct 2024 04:02:04 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Fri, 18 Oct 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>A Simple Partially Embedded Planarity Test Based on Vertex-Addition</title>
      <link>https://arxiv.org/abs/2410.13536</link>
      <description>arXiv:2410.13536v1 Announce Type: new 
Abstract: In the Partially Embedded Planarity problem, we are given a graph $G$ together with a topological drawing of a subgraph $H$ of $G$. The task is to decide whether the drawing can be extended to a drawing of the whole graph such that no two edges cross. Angelini et al. gave a linear-time algorithm for solving this problem in 2010 (SODA '10). While their paper constitutes a significant result, the algorithm described therein is highly complex: it uses several layers of decompositions according to connectivity of both $G$ and $H$, its description spans more than 30 pages, and can hardly be considered implementable. We give an independent linear-time algorithm that works along the well-known vertex-addition planarity test by Booth and Lueker. We modify the PC-tree as underlying data structure used for representing all planar drawing possibilities in a natural way to also respect the restrictions given by the prescribed drawing of the subgraph $H$. The testing algorithm and its proof of correctness only require small adaptations from the comparatively much simpler generic planarity test, of which several implementations exist. If the test succeeds, an embedding can be constructed using the same approaches that are used for the generic planarity test.</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.13536v1</guid>
      <category>cs.CG</category>
      <pubDate>Fri, 18 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-sa/4.0/</dc:rights>
      <dc:creator>Simon D. Fink, Ignaz Rutter, Sandhya T. P</dc:creator>
    </item>
    <item>
      <title>A Subsequence Approach to Topological Data Analysis for Irregularly-Spaced Time Series</title>
      <link>https://arxiv.org/abs/2410.13723</link>
      <description>arXiv:2410.13723v1 Announce Type: cross 
Abstract: A time-delay embedding (TDE), grounded in the framework of Takens's Theorem, provides a mechanism to represent and analyze the inherent dynamics of time-series data. Recently, topological data analysis (TDA) methods have been applied to study this time series representation mainly through the lens of persistent homology. Current literature on the fusion of TDE and TDA are adept at analyzing uniformly-spaced time series observations. This work introduces a novel {\em subsequence} embedding method for irregularly-spaced time-series data. We show that this method preserves the original state space topology while reducing spurious homological features. Theoretical stability results and convergence properties of the proposed method in the presence of noise and varying levels of irregularity in the spacing of the time series are established. Numerical studies and an application to real data illustrates the performance of the proposed method.</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.13723v1</guid>
      <category>stat.ME</category>
      <category>cs.CG</category>
      <category>math.AT</category>
      <pubDate>Fri, 18 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Sixtus Dakurah, Jessi Cisewski-Kehe</dc:creator>
    </item>
    <item>
      <title>Pentagonal bipyramids lead to the smallest flexible embedded polyhedron</title>
      <link>https://arxiv.org/abs/2410.13811</link>
      <description>arXiv:2410.13811v1 Announce Type: cross 
Abstract: Steffen's polyhedron was believed to have the least number of vertices among polyhedra that can flex without self-intersections. Maksimov clarified that the pentagonal bipyramid with one face subdivided into three is the only polyhedron with fewer vertices for which the existence of a self-intersection-free flex was open. Since subdividing a face into three does not change the mobility, we focus on flexible pentagonal bipyramids. When a bipyramid flexes, the distance between the two opposite vertices of the two pyramids changes; associating the position of the bipyramid to this distance yields an algebraic map that determines a nontrivial extension of rational function fields. We classify flexible pentagonal bipyramids with respect to the Galois group of this field extension and provide examples for each class, building on a construction proposed by Nelson. Surprisingly, one of our constructions yields a flexible pentagonal bipyramid that can be extended to an embedded flexible polyhedron with 8 vertices. The latter hence solves the open question.</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.13811v1</guid>
      <category>math.MG</category>
      <category>cs.CG</category>
      <category>math.AC</category>
      <category>math.AG</category>
      <pubDate>Fri, 18 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Matteo Gallet, Georg Grasegger, Jan Legersk\'y, Josef Schicho</dc:creator>
    </item>
  </channel>
</rss>
