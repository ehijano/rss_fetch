<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.LO updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.LO</link>
    <description>cs.LO updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.LO" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Thu, 18 Sep 2025 01:37:12 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Wed, 17 Sep 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Determination of the fifth Busy Beaver value</title>
      <link>https://arxiv.org/abs/2509.12337</link>
      <description>arXiv:2509.12337v1 Announce Type: new 
Abstract: We prove that $S(5) = 47,176,870$ using the Coq proof assistant. The Busy Beaver value $S(n)$ is the maximum number of steps that an $n$-state 2-symbol Turing machine can perform from the all-zero tape before halting, and $S$ was historically introduced by Tibor Rad\'o in 1962 as one of the simplest examples of an uncomputable function. The proof enumerates $181,385,789$ Turing machines with 5 states and, for each machine, decides whether it halts or not. Our result marks the first determination of a new Busy Beaver value in over 40 years and the first Busy Beaver value ever to be formally verified, attesting to the effectiveness of massively collaborative online research (bbchallenge$.$org).</description>
      <guid isPermaLink="false">oai:arXiv.org:2509.12337v1</guid>
      <category>cs.LO</category>
      <category>cs.FL</category>
      <category>math.LO</category>
      <pubDate>Wed, 17 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator> The bbchallenge Collaboration, Justin Blanchard (Skelet), Daniel Briggs (Skelet), Konrad Deka (Skelet), Nathan Fenner (Skelet), Yannick Forster (Skelet), Georgi Georgiev (Skelet), Matthew L. House, Rachel Hunter,  Iijil, Maja K\k{a}dzio{\l}ka, Pavel Kropitz, Shawn Ligocki,  mxdys, Mateusz Na\'sciszewski,  savask, Tristan St\'erin, Chris Xu, Jason Yuen, Th\'eo Zimmermann</dc:creator>
    </item>
    <item>
      <title>Probabilistic Model Checking: Applications and Trends</title>
      <link>https://arxiv.org/abs/2509.12968</link>
      <description>arXiv:2509.12968v1 Announce Type: new 
Abstract: Probabilistic model checking is an approach to the formal modelling and analysis of stochastic systems. Over the past twenty five years, the number of different formalisms and techniques developed in this field has grown considerably, as has the range of problems to which it has been applied. In this paper, we identify the main application domains in which probabilistic model checking has proved valuable and discuss how these have evolved over time. We summarise the key strands of the underlying theory and technologies that have contributed to these advances, and highlight examples which illustrate the benefits that probabilistic model checking can bring. The aim is to inform potential users of these techniques and to guide future developments in the field.</description>
      <guid isPermaLink="false">oai:arXiv.org:2509.12968v1</guid>
      <category>cs.LO</category>
      <pubDate>Wed, 17 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Marta Kwiatkowska, Gethin Norman, David Parker</dc:creator>
    </item>
    <item>
      <title>On a Dependently Typed Encoding of Matching Logic</title>
      <link>https://arxiv.org/abs/2509.13018</link>
      <description>arXiv:2509.13018v1 Announce Type: new 
Abstract: Matching logic is a general formal framework for reasoning about a wide range of theories, with particular emphasis on programming language semantics. Notably, the intermediate language of the K semantics framework is an extension of matching $\mu$-logic, a sorted, polyadic variant of the logic. Metatheoretic reasoning requires the logic to be expressed within a foundational theory; opting for a dependently typed one enables well-sortedness in the object theory to correspond directly to well-typedness in the host theory. In this paper, we present the first dependently typed definition of matching $\mu$-logic, ensuring well-sortedness via sorted contexts encoded in type indices. As a result, ill-sorted syntax elements are unrepresentable, and the semantics of well-sorted elements are guaranteed to lie within the domain of their associated sort.</description>
      <guid isPermaLink="false">oai:arXiv.org:2509.13018v1</guid>
      <category>cs.LO</category>
      <pubDate>Wed, 17 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:DOI>10.4204/EPTCS.427.1</arxiv:DOI>
      <arxiv:journal_reference>EPTCS 427, 2025, pp. 3-23</arxiv:journal_reference>
      <dc:creator>\'Ad\'am Kurucz (E\"otv\"os Lor\'and University, Hungary), P\'eter Bereczky (E\"otv\"os Lor\'and University, Hungary), D\'aniel Horp\'acsi (E\"otv\"os Lor\'and University, Hungary)</dc:creator>
    </item>
    <item>
      <title>{\L}ukasiewicz Logic with Actions for Neural Networks training</title>
      <link>https://arxiv.org/abs/2509.13020</link>
      <description>arXiv:2509.13020v1 Announce Type: new 
Abstract: Based on the already known connection between multilayer perceptrons and Lukasiewicz logic with rational coefficients, we take a step forward in analyzing its training process using a three-sorted hybrid modal logic: a multilayer perceptron is a logical formula; the actions of the training process are modal operators; the training process is a sequence of logical deductions. Using the proof assistant and the programming language Lean 4, the algorithmic implementation of the training process is certified by logical proofs.</description>
      <guid isPermaLink="false">oai:arXiv.org:2509.13020v1</guid>
      <category>cs.LO</category>
      <pubDate>Wed, 17 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:DOI>10.4204/EPTCS.427.4</arxiv:DOI>
      <arxiv:journal_reference>EPTCS 427, 2025, pp. 44-58</arxiv:journal_reference>
      <dc:creator>Ioana Leu\c{s}tean (University of Bucharest), Bogdan Macovei (University of Bucharest)</dc:creator>
    </item>
    <item>
      <title>The Hidden Strength of Costrong Functors</title>
      <link>https://arxiv.org/abs/2509.13026</link>
      <description>arXiv:2509.13026v1 Announce Type: new 
Abstract: Strong functors and monads are ubiquitous in Computer Science. More recently, comonads have demonstrated their use in structuring context-dependent notions of computation. However, the dualisation of ``being strong'' property passed somehow unobserved so far. We argue that ``being costrong'' gives a different understanding of how functors can interact with monoidal structures. This work in progress aims to explore costrong functors and their natural properties, with an eye towards the semantics of computations. </description>
      <guid isPermaLink="false">oai:arXiv.org:2509.13026v1</guid>
      <category>cs.LO</category>
      <category>cs.PL</category>
      <category>math.CT</category>
      <pubDate>Wed, 17 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:DOI>10.4204/EPTCS.427.10</arxiv:DOI>
      <arxiv:journal_reference>EPTCS 427, 2025, pp. 141-154</arxiv:journal_reference>
      <dc:creator>Adriana Balan (Department of Mathematical Methods,Models,,Fundamental Sciences Applied in Engineering Research Center, National University of Science,Technology POLITEHNICA Bucharest), Silviu-George Pantelimon (Department of Computer Science, National University of Science,Technology POLITEHNICA Bucharest)</dc:creator>
    </item>
    <item>
      <title>Intuitionistic modal logics: epistemic reasoning with distributed knowledge</title>
      <link>https://arxiv.org/abs/2509.13038</link>
      <description>arXiv:2509.13038v1 Announce Type: new 
Abstract: In this article, we add a diamond to the parametrized box-based propositional language of intuitionistic doxastic logic and intuitionistic epistemic logic introduced by Artemov and Protopopescu. The main results of this article are the proofs of completeness with respect to their appropriate relational semantics of the resulting intuitionistic doxastic logic and intuitionistic epistemic logic with distributed knowledge.</description>
      <guid isPermaLink="false">oai:arXiv.org:2509.13038v1</guid>
      <category>cs.LO</category>
      <pubDate>Wed, 17 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Philippe Balbiani</dc:creator>
    </item>
    <item>
      <title>Reducts of fuzzy contexts: Formal concept analysis vs. rough set theory</title>
      <link>https://arxiv.org/abs/2509.13059</link>
      <description>arXiv:2509.13059v1 Announce Type: new 
Abstract: We postulate the intuitive idea of reducts of fuzzy contexts based on formal concept analysis and rough set theory. For a complete residuated lattice $L$, it is shown that reducts of $L$-contexts in formal concept analysis are interdefinable with reducts of $L$-contexts in rough set theory via negation if, and only if, $L$ satisfies the law of double negation.</description>
      <guid isPermaLink="false">oai:arXiv.org:2509.13059v1</guid>
      <category>cs.LO</category>
      <pubDate>Wed, 17 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <dc:creator>Yuxu Chen, Jing Liu, Lili Shen, Xiaoye Tang</dc:creator>
    </item>
    <item>
      <title>Proceedings of the Sixteenth International Symposium on Games, Automata, Logics, and Formal Verification</title>
      <link>https://arxiv.org/abs/2509.13258</link>
      <description>arXiv:2509.13258v1 Announce Type: new 
Abstract: This volume contains the proceedings of GandALF 2025, the Sixteenth International Symposium on Games, Automata, Logics, and Formal Verification. GandALF 2025 took place on 16-17th September 2025, in Valletta, Malta. The aim of GandALF 2025 is to bring together researchers from academia and industry who are actively working in the fields of Games, Automata, Logics, and Formal Verification. The idea is to cover an ample spectrum of themes, ranging from theory to applications, and stimulate cross-fertilisation.</description>
      <guid isPermaLink="false">oai:arXiv.org:2509.13258v1</guid>
      <category>cs.LO</category>
      <pubDate>Wed, 17 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:DOI>10.4204/EPTCS.428</arxiv:DOI>
      <arxiv:journal_reference>EPTCS 428, 2025</arxiv:journal_reference>
      <dc:creator>Giorgio Bacci (Aalborg University, Denmark), Adrian Francalanza (University of Malta)</dc:creator>
    </item>
    <item>
      <title>Large Language Models Imitate Logical Reasoning, but at what Cost?</title>
      <link>https://arxiv.org/abs/2509.12645</link>
      <description>arXiv:2509.12645v1 Announce Type: cross 
Abstract: We present a longitudinal study which evaluates the reasoning capability of frontier Large Language Models over an eighteen month period. We measured the accuracy of three leading models from December 2023, September 2024 and June 2025 on true or false questions from the PrOntoQA dataset and their faithfulness to reasoning strategies provided through in-context learning. The improvement in performance from 2023 to 2024 can be attributed to hidden Chain of Thought prompting. The introduction of thinking models allowed for significant improvement in model performance between 2024 and 2025.
  We then present a neuro-symbolic architecture which uses LLMs of less than 15 billion parameters to translate the problems into a standardised form. We then parse the standardised forms of the problems into a program to be solved by Z3, an SMT solver, to determine the satisfiability of the query. We report the number of prompt and completion tokens as well as the computational cost in FLOPs for open source models. The neuro-symbolic approach significantly reduces the computational cost while maintaining near perfect performance. The common approximation that the number of inference FLOPs is double the product of the active parameters and total tokens was accurate within 10\% for all experiments.</description>
      <guid isPermaLink="false">oai:arXiv.org:2509.12645v1</guid>
      <category>cs.AI</category>
      <category>cs.LO</category>
      <pubDate>Wed, 17 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Lachlan McGinness, Peter Baumgartner</dc:creator>
    </item>
    <item>
      <title>Pleasant Imperative Program Proofs with GallinaC</title>
      <link>https://arxiv.org/abs/2509.13019</link>
      <description>arXiv:2509.13019v1 Announce Type: cross 
Abstract: Even with the increase of popularity of functional programming, imperative programming remains a key programming paradigm, especially for programs operating at lower levels of abstraction. When such software offers key components of a Trusted Computing Base (TCB), e.g. an operating system kernel, it becomes desirable to provide mathematical correctness proofs.
  However, current real-world imperative programming languages possess "expressive", i.e. overly permissive, semantics. Thus, producing correctness proofs of such programs becomes tedious and error-prone, requiring to take care of numerous "administrative" details. Ideally, a proof-oriented imperative language should feature well-behaved semantics while allowing imperative idioms.
  To obtain a high-degree of confidence in the correctness of such a language, its tools should be developed inside a proof-assistant such that program proofs are machine checked.
  We present GallinaC, a shallow embedding of a Turing-complete imperative language directly inside the functional programming language of the Rocq proof assistant, Gallina. In particular, it features a truly generic and unbounded while loop. Having a functional core means proofs about GallinaC programs may use the same tactics as proofs about pure functional ones.
  Work on GallinaC is still under progress, but we present first promising results. A prototype implementation has shown the viability of GallinaC with the correctness proof of a list reversal procedure for linked-lists of unknown size. We currently focus on the forward simulation between the GallinaC intermediate representation (IR) and Cminor, the entry language of the CompCert back-end.</description>
      <guid isPermaLink="false">oai:arXiv.org:2509.13019v1</guid>
      <category>cs.PL</category>
      <category>cs.LO</category>
      <pubDate>Wed, 17 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:DOI>10.4204/EPTCS.427.2</arxiv:DOI>
      <arxiv:journal_reference>EPTCS 427, 2025, pp. 24-32</arxiv:journal_reference>
      <dc:creator>Fr\'ed\'eric Fort, David Nowak, Vlad Rusu</dc:creator>
    </item>
    <item>
      <title>Unifying Graded Linear Logic and Differential Operators</title>
      <link>https://arxiv.org/abs/2402.09138</link>
      <description>arXiv:2402.09138v3 Announce Type: replace 
Abstract: Linear Logic refines Intuitionnistic Logic by taking into account the resources used during the proof and program computation. In the past decades, it has been extended to various frameworks. The most famous are indexed linear logics which can describe the resource management or the complexity analysis of a program. From an other perspective, Differential Linear Logic is an extension which allows the linearization of proofs. In this article, we merge these two directions by first defining a differential version of Graded linear logic: this is made by indexing exponential connectives with a monoid of differential operators. We prove that it is equivalent to a graded version of previously defined extension of finitary differential linear logic. We give a denotational model of our logic, based on distribution theory and linear partial differential operators with constant coefficients.</description>
      <guid isPermaLink="false">oai:arXiv.org:2402.09138v3</guid>
      <category>cs.LO</category>
      <pubDate>Wed, 17 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Flavien Breuvart, Marie Kerjean, Simon Mirwasser</dc:creator>
    </item>
    <item>
      <title>The interdefinability of expansions of Belnap-Dunn logic</title>
      <link>https://arxiv.org/abs/2403.04641</link>
      <description>arXiv:2403.04641v4 Announce Type: replace 
Abstract: Belnap-Dunn logic, also knows as the logic of First-Degree Entailment, is a logic that can serve as the underlying logic of theories that are inconsistent or incomplete. For various reasons, different expansions of Belnap-Dunn logic with non-classical connectives have been studied. This paper investigates the question whether those expansions are interdefinable with an expansion whose connectives include only classical connectives. Surprisingly, this relevant question is not addressed anywhere in the published studies. The notion of interdefinability of logics used is based on a general notion of definability of a connective in a logic that seems to have been forgotten. Attention is also paid to the extent to which the expansion whose connectives include only classical connectives is related to the version of classical logic with the same connectives.</description>
      <guid isPermaLink="false">oai:arXiv.org:2403.04641v4</guid>
      <category>cs.LO</category>
      <category>math.LO</category>
      <pubDate>Wed, 17 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <dc:creator>C. A. Middelburg</dc:creator>
    </item>
    <item>
      <title>Overview and Roadmap of Team Automata</title>
      <link>https://arxiv.org/abs/2501.13589</link>
      <description>arXiv:2501.13589v2 Announce Type: replace 
Abstract: Team Automata is a formalism for interacting component-based systems proposed in 1997, whereby multiple sending and receiving actions from concurrent automata can synchronise. During the past 25+ years, team automata have been studied and applied in many different contexts, involving 25+ researchers and resulting in 25+ publications. In this paper, we first revisit the specific notion of synchronisation and composition of team automata, relating it to other relevant coordination models, such as Reo, BIP, Contract Automata, Choreography Automata, and Multi-Party Session Types. We then identify several aspects that have recently been investigated for team automata and related models. These include communication properties (which are the properties of interest?), realisability (how to decompose a global model into local components?), tool support (what has been automatised or implemented?), and variability (can a family of concrete product (automata) models be captured concisely?). Our presentation of these aspects provides a snapshot of the most recent trends in research on team automata, and delineates a roadmap for future research, both for team automata and for related formalisms.</description>
      <guid isPermaLink="false">oai:arXiv.org:2501.13589v2</guid>
      <category>cs.LO</category>
      <pubDate>Wed, 17 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Maurice H. ter Beek, Rolf Hennicker, Jos\'e Proen\c{c}a</dc:creator>
    </item>
    <item>
      <title>The Complexity of Fragments of Second-Order HyperLTL</title>
      <link>https://arxiv.org/abs/2501.19046</link>
      <description>arXiv:2501.19046v2 Announce Type: replace 
Abstract: We settle the complexity of satisfiability, finite-state satisfiability, and model-checking for several fragments of second-order HyperLTL, which extends HyperLTL with quantification over sets of traces: they are all in the analytical hierarchy and beyond</description>
      <guid isPermaLink="false">oai:arXiv.org:2501.19046v2</guid>
      <category>cs.LO</category>
      <pubDate>Wed, 17 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Ga\"etan Regaud, Martin Zimmermann</dc:creator>
    </item>
    <item>
      <title>On the consistency of stronger lower bounds for NEXP</title>
      <link>https://arxiv.org/abs/2504.03320</link>
      <description>arXiv:2504.03320v2 Announce Type: replace 
Abstract: It was recently shown by Atserias, Buss and Mueller that the standard complexity-theoretic conjecture NEXP not in P / poly is consistent with the relatively strong bounded arithmetic theory V^0_2, which can prove a substantial part of complexity theory. We observe that their approach can be extended to show that the stronger conjectures NEXP not in EXP / poly and NEXP not in coNEXP are consistent with a stronger theory, which includes every true universal number-sort sentence.</description>
      <guid isPermaLink="false">oai:arXiv.org:2504.03320v2</guid>
      <category>cs.LO</category>
      <category>cs.CC</category>
      <category>math.LO</category>
      <pubDate>Wed, 17 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Neil Thapen</dc:creator>
    </item>
    <item>
      <title>Monoidal bicategories, differential linear logic, and analytic functors</title>
      <link>https://arxiv.org/abs/2405.05774</link>
      <description>arXiv:2405.05774v3 Announce Type: replace-cross 
Abstract: We develop further the theory of monoidal bicategories by introducing and studying bicategorical counterparts of the notions of a linear exponential comonad, as considered in the study of linear logic, and of a codereliction transformation, introduced to study differential linear logic via differential categories. As an application, we extend the differential calculus of Joyal's analytic functors to analytic functors between presheaf categories, just as ordinary calculus extends from a single variable to many variables.</description>
      <guid isPermaLink="false">oai:arXiv.org:2405.05774v3</guid>
      <category>math.CT</category>
      <category>cs.LO</category>
      <category>math.LO</category>
      <pubDate>Wed, 17 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>M. Fiore, N. Gambino, M. Hyland</dc:creator>
    </item>
    <item>
      <title>Quantifying The Limits of AI Reasoning: Systematic Neural Network Representations of Algorithms</title>
      <link>https://arxiv.org/abs/2508.18526</link>
      <description>arXiv:2508.18526v2 Announce Type: replace-cross 
Abstract: A main open question in contemporary AI research is quantifying the forms of reasoning neural networks can perform when perfectly trained. This paper answers this by interpreting reasoning tasks as circuit emulation, where the gates define the type of reasoning; e.g. Boolean gates for predicate logic, tropical circuits for dynamic programming, arithmetic and analytic gates for symbolic mathematical representation, and hybrids thereof for deeper reasoning; e.g. higher-order logic.
  We present a systematic meta-algorithm that converts essentially any circuit into a feedforward neural network (NN) with ReLU activations by iteratively replacing each gate with a canonical ReLU MLP emulator. We show that, on any digital computer, our construction emulates the circuit exactly--no approximation, no rounding, modular overflow included--demonstrating that no reasoning task lies beyond the reach of neural networks. The number of neurons in the resulting network (parametric complexity) scales with the circuit's complexity, and the network's computational graph (structure) mirrors that of the emulated circuit. This formalizes the folklore that NNs networks trade algorithmic run-time (circuit runtime) for space complexity (number of neurons).
  We derive a range of applications of our main result, from emulating shortest-path algorithms on graphs with cubic--size NNs, to simulating stopped Turing machines with roughly quadratically--large NNs, and even the emulation of randomized Boolean circuits. Lastly, we demonstrate that our result is strictly more powerful than a classical universal approximation theorem: any universal function approximator can be encoded as a circuit and directly emulated by a NN.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.18526v2</guid>
      <category>cs.LG</category>
      <category>cs.CC</category>
      <category>cs.LO</category>
      <category>cs.NA</category>
      <category>cs.NE</category>
      <category>math.NA</category>
      <pubDate>Wed, 17 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Anastasis Kratsios, Dennis Zvigelsky, Bradd Hart</dc:creator>
    </item>
  </channel>
</rss>
