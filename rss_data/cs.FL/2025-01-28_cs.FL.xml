<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.FL updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.FL</link>
    <description>cs.FL updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.FL" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Wed, 29 Jan 2025 02:34:26 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Tue, 28 Jan 2025 00:00:00 -0500</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>The Alternation Hierarchy of First-Order Logic on Words is Decidable</title>
      <link>https://arxiv.org/abs/2501.14899</link>
      <description>arXiv:2501.14899v1 Announce Type: new 
Abstract: We show that for any $i &gt; 0$, it is decidable, given a regular language, whether it is expressible in the $\Sigma_i[&lt;]$ fragment of first-order logic FO[&lt;]. This settles a question open since 1971.
  Our main technical result relies on the notion of polynomial closure of a class of languages $\mathcal{V}$, that is, finite unions of languages of the form $L_0a_1L_1\cdots a_nL_n$ where each $a_i$ is a letter and each $L_i$ a language of $\mathcal{V}$. We show that if a class $\mathcal{V}$ of regular languages with some closure properties (namely, a positive variety) has a decidable separation problem, then so does its polynomial closure Pol($\mathcal{V}$). The resulting algorithm for Pol($\mathcal{V}$) has time complexity that is exponential in the time complexity for $\mathcal{V}$ and we propose a natural conjecture that would lead to a polynomial time blowup instead.
  Corollaries include the decidability of half levels of the dot-depth hierarchy and the group-based concatenation hierarchy.</description>
      <guid isPermaLink="false">oai:arXiv.org:2501.14899v1</guid>
      <category>cs.FL</category>
      <category>cs.LO</category>
      <category>math.LO</category>
      <pubDate>Tue, 28 Jan 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Corentin Barloy, Micha\"el Cadilhac, Charles Paperman, Howard Straubing</dc:creator>
    </item>
    <item>
      <title>A polynomial-time algorithm for the automatic Baire property</title>
      <link>https://arxiv.org/abs/2501.15192</link>
      <description>arXiv:2501.15192v1 Announce Type: new 
Abstract: A subset of a topological space possesses the Baire property if it can be
  covered by an open set up to a meagre set. For the Cantor space of infinite
  words Finkel introduced the automatic Baire category where both sets, the
  open and the meagre, can be chosen to be definable by finite automata. Here
  we show that, given a Muller automaton defining the original set, resulting
  open and meagre sets can be constructed in polynomial time.
  Since the constructed sets are of simple topological structure, it is
  possible to construct not only Muller automata defining them but also the
  simpler B\"uchi automata. To this end we give, for a restricted class of
  Muller automata, a conversion to equivalent B\"uchi automata of at most
  quadratic size.</description>
      <guid isPermaLink="false">oai:arXiv.org:2501.15192v1</guid>
      <category>cs.FL</category>
      <pubDate>Tue, 28 Jan 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Ludwig Staiger</dc:creator>
    </item>
    <item>
      <title>Automating the Analysis of Quantitative Automata with QuAK</title>
      <link>https://arxiv.org/abs/2501.16088</link>
      <description>arXiv:2501.16088v1 Announce Type: new 
Abstract: Quantitative automata model beyond-boolean aspects of systems: every execution is mapped to a real number by incorporating weighted transitions and value functions that generalize acceptance conditions of boolean $\omega$-automata. Despite the theoretical advances in systems analysis through quantitative automata, the first comprehensive software tool for quantitative automata (Quantitative Automata Kit, or QuAK) was developed only recently. QuAK implements algorithms for solving standard decision problems, e.g., emptiness and universality, as well as constructions for safety and liveness of quantitative automata. We present the architecture of QuAK, which reflects that all of these problems reduce to either checking inclusion between two quantitative automata or computing the highest value achievable by an automaton -- its so-called top value. We improve QuAK by extending these two algorithms with an option to return, alongside their results, an ultimately periodic word witnessing the algorithm's output, as well as implementing a new safety-liveness decomposition algorithm that can handle nondeterministic automata, making QuAK more informative and capable.</description>
      <guid isPermaLink="false">oai:arXiv.org:2501.16088v1</guid>
      <category>cs.FL</category>
      <category>cs.LO</category>
      <pubDate>Tue, 28 Jan 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Marek Chalupa, Thomas A. Henzinger, Nicolas Mazzocchi, N. Ege Sara\c{c}</dc:creator>
    </item>
    <item>
      <title>What is Formal Verification without Specifications? A Survey on mining LTL Specifications</title>
      <link>https://arxiv.org/abs/2501.16274</link>
      <description>arXiv:2501.16274v1 Announce Type: new 
Abstract: Virtually all verification techniques using formal methods rely on the availability of a formal specification, which describes the design requirements precisely. However, formulating specifications remains a manual task that is notoriously challenging and error-prone. To address this bottleneck in formal verification, recent research has thus focussed on automatically generating specifications for formal verification from examples of (desired and undesired) system behavior. In this survey, we list and compare recent advances in mining specifications in Linear Temporal Logic (LTL), the de facto standard specification language for reactive systems. Several approaches have been designed for learning LTL formulas, which address different aspects and settings of specification design. Moreover, the approaches rely on a diverse range of techniques such as constraint solving, neural network training, enumerative search, etc. We survey the current state-of-the-art techniques and compare them for the convenience of the formal methods practitioners.</description>
      <guid isPermaLink="false">oai:arXiv.org:2501.16274v1</guid>
      <category>cs.FL</category>
      <category>cs.AI</category>
      <category>cs.LO</category>
      <pubDate>Tue, 28 Jan 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Daniel Neider, Rajarshi Roy</dc:creator>
    </item>
    <item>
      <title>Sequential Decision Making in Stochastic Games with Incomplete Preferences over Temporal Objectives</title>
      <link>https://arxiv.org/abs/2501.16291</link>
      <description>arXiv:2501.16291v1 Announce Type: cross 
Abstract: Ensuring that AI systems make strategic decisions aligned with the specified preferences in adversarial sequential interactions is a critical challenge for developing trustworthy AI systems, especially when the environment is stochastic and players' incomplete preferences leave some outcomes unranked. We study the problem of synthesizing preference-satisfying strategies in two-player stochastic games on graphs where players have opposite (possibly incomplete) preferences over a set of temporal goals. We represent these goals using linear temporal logic over finite traces (LTLf), which enables modeling the nuances of human preferences where temporal goals need not be mutually exclusive and comparison between some goals may be unspecified. We introduce a solution concept of non-dominated almost-sure winning, which guarantees to achieve a most preferred outcome aligned with specified preferences while maintaining robustness against the adversarial behaviors of the opponent. Our results show that strategy profiles based on this concept are Nash equilibria in the game where players are risk-averse, thus providing a practical framework for evaluating and ensuring stable, preference-aligned outcomes in the game. Using a drone delivery example, we demonstrate that our contributions offer valuable insights not only for synthesizing rational behavior under incomplete preferences but also for designing games that motivate the desired behavior from the players in adversarial conditions.</description>
      <guid isPermaLink="false">oai:arXiv.org:2501.16291v1</guid>
      <category>cs.GT</category>
      <category>cs.FL</category>
      <pubDate>Tue, 28 Jan 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Abhishek Ninad Kulkarni, Jie Fu, Ufuk Topcu</dc:creator>
    </item>
    <item>
      <title>Feasability of Learning Weighted Automata on a Semiring</title>
      <link>https://arxiv.org/abs/2309.07806</link>
      <description>arXiv:2309.07806v4 Announce Type: replace 
Abstract: Since the seminal work by Angluin and the introduction of the L*-algorithm, active learning of automata by membership and equivalence queries has been extensively studied to learn various extensions of automata. For weighted automata, algorithms for restricted cases have been developed in the literature, but so far there was no global approach or understanding how these algorithms could apply (or not) in the general case. In this paper we chart the boundaries of the Angluin approach. We use a class of hypothesis automata which are constructed, in Angluin's style, by using membership and equivalence queries and solving certain finite systems of linear equations over the semiring, and we show the theoretical limitations of this approach. We classify functions with respect to how guessable they are, corresponding to the existence of hypothesis automata computing a given function, and how such an hypothesis automaton can be found. Of course, from an algorithmic standpoint, knowing that a solution (hypothesis automaton) exists need not translate into an effective algorithm to find one. We relate our work to the existing literature with a discussion of some known properties ensuring algorithmic solutions, illustrating the ideas over several familiar semirings (including the natural numbers).</description>
      <guid isPermaLink="false">oai:arXiv.org:2309.07806v4</guid>
      <category>cs.FL</category>
      <category>cs.LO</category>
      <pubDate>Tue, 28 Jan 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Laure Daviaud, Marianne Johnson</dc:creator>
    </item>
    <item>
      <title>Alternating Nominal Automata with Name Allocation</title>
      <link>https://arxiv.org/abs/2408.03658</link>
      <description>arXiv:2408.03658v2 Announce Type: replace 
Abstract: Formal languages over infinite alphabets serve as abstractions of structures and processes carrying data. Automata models over infinite alphabets, such as classical register automata or, equivalently, nominal orbit-finite automata, tend to have computationally hard or even undecidable reasoning problems unless stringent restrictions are imposed on either the power of control or the number of registers. This has been shown to be ameliorated in automata models with name allocation such as regular nondeterministic nominal automata, which allow for deciding language inclusion in elementary complexity even with unboundedly many registers while retaining a reasonable level of expressiveness. In the present work, we demonstrate that elementary complexity survives under extending the power of control to alternation: We introduce regular alternating nominal automata (RANAs), and show that their non-emptiness and inclusion problems have elementary complexity even when the number of registers is unbounded. Moreover, we show that RANAs allow for nearly complete de-alternation, specifically de-alternation up to a single deadlocked universal state. As a corollary to our results, we improve the complexity of model checking for a flavour of Bar-$\mu$TL, a fixed-point logic with name allocation over finite data words, by one exponential level.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.03658v2</guid>
      <category>cs.FL</category>
      <pubDate>Tue, 28 Jan 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Florian Frank, Daniel Hausmann, Stefan Milius, Lutz Schr\"oder, Henning Urbat</dc:creator>
    </item>
  </channel>
</rss>
