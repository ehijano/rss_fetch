<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.CG updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.CG</link>
    <description>cs.CG updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.CG" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Thu, 04 Apr 2024 04:01:38 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Thu, 04 Apr 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Rendering string diagrams recursively</title>
      <link>https://arxiv.org/abs/2404.02679</link>
      <description>arXiv:2404.02679v1 Announce Type: cross 
Abstract: String diagrams are a graphical language used to represent processes that can be composed sequentially or in parallel, which correspond graphically to horizontal or vertical juxtaposition. In this paper we demonstrate how to compute the layout of a string diagram by folding over its algebraic representation in terms of sequential and parallel composition operators. The algebraic representation can be seen as a term of a free monoidal category or a proof tree for a small fragment of linear logic. This contrasts to existing non-compositional approaches that use graph layout techniques. The key innovation is storing the diagrams in binary space-partition trees, maintaining a right-trapezoidal shape for the diagram's outline as an invariant.
  We provide an implementation in Haskell, using an existing denotational graphics library called Diagrams. Our renderer also supports adding semantics to diagrams to serve as a compiler, with matrix algebra used as an example.</description>
      <guid isPermaLink="false">oai:arXiv.org:2404.02679v1</guid>
      <category>math.CT</category>
      <category>cs.CG</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Celia Rubio-Madrigal, Jules Hedges</dc:creator>
    </item>
    <item>
      <title>Minimal Arrangements of Spherical Geodesics</title>
      <link>https://arxiv.org/abs/2311.03255</link>
      <description>arXiv:2311.03255v4 Announce Type: replace-cross 
Abstract: We study arrangements of geodesic arcs on a sphere, where all arcs are internally disjoint and each arc has its endpoints located within the interior of other arcs. We establish fundamental results concerning the minimum number of arcs in such arrangements, depending on local geometric constraints such as "one-sidedness" and "k-orientation".
  En route to these results, we generalize and settle an open problem from CCCG 2022, proving that any such arrangement has at least two "clockwise swirls" and at least two "counterclockwise swirls".</description>
      <guid isPermaLink="false">oai:arXiv.org:2311.03255v4</guid>
      <category>math.CO</category>
      <category>cs.CG</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Giovanni Viglietta</dc:creator>
    </item>
  </channel>
</rss>
