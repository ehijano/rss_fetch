<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.DS updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.DS</link>
    <description>cs.DS updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.DS" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Thu, 24 Oct 2024 04:00:01 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Thu, 24 Oct 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>A Polylogarithmic Approximation for Directed Steiner Forest in Planar Digraphs</title>
      <link>https://arxiv.org/abs/2410.17403</link>
      <description>arXiv:2410.17403v1 Announce Type: new 
Abstract: We consider Directed Steiner Forest (DSF), a fundamental problem in network design. The input to DSF is a directed edge-weighted graph $G = (V, E)$ and a collection of vertex pairs $\{(s_i, t_i)\}_{i \in [k]}$. The goal is to find a minimum cost subgraph $H$ of $G$ such that $H$ contains an $s_i$-$t_i$ path for each $i \in [k]$. DSF is NP-Hard and is known to be hard to approximate to a factor of $\Omega(2^{\log^{1 - \epsilon}(n)})$ for any fixed $\epsilon &gt; 0$ [DK'99]. DSF admits approximation ratios of $O(k^{1/2 + \epsilon})$ [CEGS'11] and $O(n^{2/3 + \epsilon})$ [BBMRY'13].
  In this work we show that in planar digraphs, an important and useful class of graphs in both theory and practice, DSF is much more tractable. We obtain an $O(\log^6 k)$-approximation algorithm via the junction tree technique. Our main technical contribution is to prove the existence of a low density junction tree in planar digraphs. To find an approximate junction tree we rely on recent results on rooted directed network design problems [FM'23, CJKZZ'24], in particular, on an LP-based algorithm for the Directed Steiner Tree problem [CJKZZ'24]. Our work and several other recent ones on algorithms for planar digraphs [FM'23, KS'21, CJKZZ'24] are built upon structural insights on planar graph reachability and shortest path separators [Thorup'04].</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.17403v1</guid>
      <category>cs.DS</category>
      <pubDate>Thu, 24 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Chandra Chekuri, Rhea Jain</dc:creator>
    </item>
    <item>
      <title>Sketching, Moment Estimation, and the L\'evy-Khintchine Representation Theorem</title>
      <link>https://arxiv.org/abs/2410.17426</link>
      <description>arXiv:2410.17426v1 Announce Type: new 
Abstract: In the $d$-dimensional turnstile streaming model, a frequency vector $\mathbf{x}=(\mathbf{x}(1),\ldots,\mathbf{x}(n))\in (\mathbb{R}^d)^n$ is updated entry-wisely over a stream. We consider the problem of \emph{$f$-moment estimation} for which one wants to estimate $$f(\mathbf{x})=\sum_{v\in[n]}f(\mathbf{x}(v))$$ with a small-space sketch.
  In this work we present a simple and generic scheme to construct sketches with the novel idea of hashing indices to \emph{L\'evy processes}, from which one can estimate the $f$-moment $f(\mathbf{x})$ where $f$ is the \emph{characteristic exponent} of the L\'evy process. The fundamental \emph{L\'evy-Khintchine{} representation theorem} completely characterizes the space of all possible characteristic exponents, which in turn characterizes the set of $f$-moments that can be estimated by this generic scheme.
  The new scheme has strong explanatory power. It unifies the construction of many existing sketches ($F_0$, $L_0$, $L_2$, $L_\alpha$, $L_{p,q}$, etc.) and it implies the tractability of many nearly periodic functions that were previously unclassified. Furthermore, the scheme can be conveniently generalized to multidimensional cases ($d\geq 2$) by considering multidimensional L\'evy processes and can be further generalized to estimate \emph{heterogeneous moments} by projecting different indices with different L\'evy processes. We conjecture that the set of tractable functions can be characterized using the L\'evy-Khintchine representation theorem via what we called the \emph{Fourier-Hahn-L\'evy} method.</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.17426v1</guid>
      <category>cs.DS</category>
      <category>math.PR</category>
      <pubDate>Thu, 24 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Seth Pettie, Dingyu Wang</dc:creator>
    </item>
    <item>
      <title>Validating a PTAS for Triangle-Free 2-Matching via a Simple Decomposition Theorem</title>
      <link>https://arxiv.org/abs/2410.17508</link>
      <description>arXiv:2410.17508v1 Announce Type: new 
Abstract: A triangle-free (simple) 2-matching is an edge set that has at most $2$ edges incident to each vertex and contains no cycle of length $3$. For the problem of finding a maximum cardinality triangle-free 2-matching in a given graph, a complicated exact algorithm was proposed by Hartvigsen. Recently, a simple PTAS using local search was presented by Bosch-Calvo, Grandoni, and Ameli, but its validity proof is not easy. In this paper, we show a natural and simple decomposition theorem for triangle-free 2-matchings, which leads to a simpler validity proof of the PTAS for the problem.</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.17508v1</guid>
      <category>cs.DS</category>
      <pubDate>Thu, 24 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Yusuke Kobayashi, Takashi Noguchi</dc:creator>
    </item>
    <item>
      <title>Collision-free Exploration by Mobile Agents Using Pebbles</title>
      <link>https://arxiv.org/abs/2410.17542</link>
      <description>arXiv:2410.17542v1 Announce Type: new 
Abstract: In this paper, we study collision-free graph exploration in an anonymous pot labeled network. Two identical mobile agents, starting from different nodes in $G$ have to explore the nodes of $G$ in such a way that for every node $v$ in $G$, at least one mobile agent visits $v$ and no two agents are in the same node in any round and stop. The agents know the size of the graph but do not know its topology. If an agent arrives in the one-hop neighborhood of the other agent, both agents can detect the presence of the other agent but have no idea at which neighboring node the other agent resides. The agents may wake up in different rounds An agent, after waking up, has no knowledge about the wake-up time of the other agent.
  We study the problem of collision-free exploration where some pebbles are placed by an Oracle at the nodes of the graph to assist the agents in achieving collision-free exploration. The Oracle knows the graph, the starting positions of the agents, and their wake-up schedule, and it places some pebbles that may be of different colors, at most one at each node. The number of different colors of the pebbles placed by the Oracle is called the {\it color index} of the corresponding pebble placement algorithm. The central question we study is as follows: "What is the minimum number $z$ such that there exists a collision-free exploration of a given graph with pebble placement of color index $z$?" For general graphs, we show that it is impossible to design an algorithm that achieves collision-free exploration with color index 1. We propose an exploration algorithm with color index 3. We also proposed a polynomial exploration algorithm for bipartite graphs with color index 2.</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.17542v1</guid>
      <category>cs.DS</category>
      <pubDate>Thu, 24 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/publicdomain/zero/1.0/</dc:rights>
      <dc:creator>Sajal K. Das, Amit Kumar Dhar, Barun Gorain, Madhuri Mahawar</dc:creator>
    </item>
    <item>
      <title>Fixed-Parameter Tractability of Hedge Cut</title>
      <link>https://arxiv.org/abs/2410.17641</link>
      <description>arXiv:2410.17641v1 Announce Type: new 
Abstract: In the Hedge Cut problem, the edges of a graph are partitioned into groups called hedges, and the question is what is the minimum number of hedges to delete to disconnect the graph. Ghaffari, Karger, and Panigrahi [SODA 2017] showed that Hedge Cut can be solved in quasipolynomial-time, raising the hope for a polynomial time algorithm. Jaffke, Lima, Masar\'ik, Pilipczuk, and Souza [SODA 2023] complemented this result by showing that assuming the Exponential Time Hypothesis (ETH), no polynomial-time algorithm exists. In this paper, we show that Hedge Cut is fixed-parameter tractable parameterized by the solution size $\ell$ by providing an algorithm with running time $\binom{O(\log n) + \ell}{\ell} \cdot m^{O(1)}$, which can be upper bounded by $c^{\ell} \cdot (n+m)^{O(1)}$ for any constant $c&gt;1$. This running time captures at the same time the fact that the problem is quasipolynomial-time solvable, and that it is fixed-parameter tractable parameterized by $\ell$. We further generalize this algorithm to an algorithm with running time $\binom{O(k \log n) + \ell}{\ell} \cdot n^{O(k)} \cdot m^{O(1)}$ for Hedge $k$-Cut.</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.17641v1</guid>
      <category>cs.DS</category>
      <pubDate>Thu, 24 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Fedor V. Fomin, Petr A. Golovach, Tuukka Korhonen, Daniel Lokshtanov, Saket Saurabh</dc:creator>
    </item>
    <item>
      <title>Tight Bounds for Online Balanced Partitioning in the Generalized Learning Model</title>
      <link>https://arxiv.org/abs/2410.17777</link>
      <description>arXiv:2410.17777v1 Announce Type: new 
Abstract: Resource allocation in distributed and networked systems such as the Cloud is becoming increasingly flexible, allowing these systems to dynamically adjust toward the workloads they serve, in a demand-aware manner.
  Online balanced partitioning is a fundamental optimization problem underlying such self-adjusting systems. We are given a set of $\ell$ servers. On each server we can schedule up to $k$ processes simultaneously. The demand is described as a sequence of requests $\sigma_t=\{p_i, p_{j}\}$, which means that the two processes $p_i,p_{j}$ communicate. A process can be migrated from one server to another which costs 1 unit per process move. If the communicating processes are on different servers, it further incurs a communication cost of 1 unit for this request. The objective is to minimize the competitive ratio: the cost of serving such a request sequence compared to the cost incurred by an optimal offline algorithm.
  Henzinger et al. (at SIGMETRICS 2019) introduced a learning variant of this problem where the cost of an online algorithm is compared to the cost of a static offline algorithm that does not perform any communication, but which simply learns the communication graph and keeps the discovered connected components together. This problem variant was recently also studied at SODA 2021.
  In this paper, we consider a more general learning model (i.e., stronger adversary), where the offline algorithm is not restricted to keep connected components together. Our main contribution are tight bounds for this problem. In particular, we present two deterministic online algorithms: (1) an online algorithm with competitive ratio $O(\max(\sqrt{k\ell \log k}, \ell \log k))$ and augmentation $1+\epsilon$; (2) an online algorithm with competitive ratio $O(\sqrt{k})$ and augmentation $2+\epsilon$. We further present lower bounds showing optimality of these bounds.</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.17777v1</guid>
      <category>cs.DS</category>
      <pubDate>Thu, 24 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Harald R\"acke, Stefan Schmid, Ruslan Zabrodin</dc:creator>
    </item>
    <item>
      <title>Theoretically Grounded Pruning of Large Ground Sets for Constrained, Discrete Optimization</title>
      <link>https://arxiv.org/abs/2410.17945</link>
      <description>arXiv:2410.17945v1 Announce Type: new 
Abstract: Modern instances of combinatorial optimization problems often exhibit billion-scale ground sets, which have many uninformative or redundant elements. In this work, we develop light-weight pruning algorithms to quickly discard elements that are unlikely to be part of an optimal solution. Under mild assumptions on the instance, we prove theoretical guarantees on the fraction of the optimal value retained and the size of the resulting pruned ground set. Through extensive experiments on real-world datasets for various applications, we demonstrate that our algorithm, QuickPrune, efficiently prunes over 90% of the ground set and outperforms state-of-the-art classical and machine learning heuristics for pruning.</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.17945v1</guid>
      <category>cs.DS</category>
      <category>cs.LG</category>
      <pubDate>Thu, 24 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Ankur Nath, Alan Kuhnle</dc:creator>
    </item>
    <item>
      <title>Algorithms and complexity for monitoring edge-geodetic sets in graphs</title>
      <link>https://arxiv.org/abs/2409.19067</link>
      <description>arXiv:2409.19067v1 Announce Type: cross 
Abstract: A monitoring edge-geodetic set of a graph is a subset $M$ of its vertices such that for every edge $e$ in the graph, deleting $e$ increases the distance between at least one pair of vertices in $M$. We study the following computational problem \textsc{MEG-set}: given a graph $G$ and an integer $k$, decide whether $G$ has a monitoring edge geodetic set of size at most $k$. We prove that the problem is NP-hard even for 2-apex 3-degenerate graphs, improving a result by Haslegrave (Discrete Applied Mathematics 2023). Additionally, we prove that the problem cannot be solved in subexponential-time, assuming the Exponential-Time Hypothesis, even for 3-degenerate graphs. Further, we prove that the optimization version of the problem is APX-hard, even for 4-degenerate graphs. Complementing these hardness results, we prove that the problem admits a polynomial-time algorithm for interval graphs, a fixed-parameter tractable algorithm for general graphs with clique-width plus diameter as the parameter, and a fixed-parameter tractable algorithm for chordal graphs with treewidth as the parameter. We also provide an approximation algorithm with factor $\ln m\cdot OPT$ and $\sqrt{n\ln m}$ for the optimization version of the problem, where $m$ is the number of edges, $n$ the number of vertices, and $OPT$ is the size of a minimum monitoring edge-geodetic set of the input graph.</description>
      <guid isPermaLink="false">oai:arXiv.org:2409.19067v1</guid>
      <category>cs.CC</category>
      <category>cs.DM</category>
      <category>cs.DS</category>
      <category>math.CO</category>
      <pubDate>Thu, 24 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-sa/4.0/</dc:rights>
      <dc:creator>Florent Foucaud, Clara Marcille, R. B. Sandeep, Sagnik Sen, S Taruni</dc:creator>
    </item>
    <item>
      <title>Computing Optimal Regularizers for Online Linear Optimization</title>
      <link>https://arxiv.org/abs/2410.17336</link>
      <description>arXiv:2410.17336v1 Announce Type: cross 
Abstract: Follow-the-Regularized-Leader (FTRL) algorithms are a popular class of learning algorithms for online linear optimization (OLO) that guarantee sub-linear regret, but the choice of regularizer can significantly impact dimension-dependent factors in the regret bound. We present an algorithm that takes as input convex and symmetric action sets and loss sets for a specific OLO instance, and outputs a regularizer such that running FTRL with this regularizer guarantees regret within a universal constant factor of the best possible regret bound. In particular, for any choice of (convex, symmetric) action set and loss set we prove that there exists an instantiation of FTRL which achieves regret within a constant factor of the best possible learning algorithm, strengthening the universality result of Srebro et al., 2011.
  Our algorithm requires preprocessing time and space exponential in the dimension $d$ of the OLO instance, but can be run efficiently online assuming a membership and linear optimization oracle for the action and loss sets, respectively (and is fully polynomial time for the case of constant dimension $d$). We complement this with a lower bound showing that even deciding whether a given regularizer is $\alpha$-strongly-convex with respect to a given norm is NP-hard.</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.17336v1</guid>
      <category>cs.LG</category>
      <category>cs.DS</category>
      <category>cs.GT</category>
      <category>math.ST</category>
      <category>stat.ML</category>
      <category>stat.TH</category>
      <pubDate>Thu, 24 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Khashayar Gatmiry, Jon Schneider, Stefanie Jegelka</dc:creator>
    </item>
    <item>
      <title>On the formalization of the notion of a concurrent algorithm</title>
      <link>https://arxiv.org/abs/2410.17821</link>
      <description>arXiv:2410.17821v1 Announce Type: cross 
Abstract: Previous papers give accounts of quests for satisfactory formalizations of the classical informal notion of an algorithm and the contemporary informal notion of an interactive algoritm. In this paper, an attempt is made to generalize the results of the former quest to the contemporary informal notion of a concurrent algorithm. The notion of a concurrent proto-algorithm is introduced. The thought is that concurrent algorithms are equivalence classes of concurrent proto-algorithms under an appropriate equivalence relation. Three equivalence relations are defined. Two of them are deemed to be bounds for an appropriate equivalence relation and the third is likely an appropriate one. The connection between concurrency and non-determinism in the presented setting is also addressed.</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.17821v1</guid>
      <category>cs.CC</category>
      <category>cs.DS</category>
      <category>cs.LO</category>
      <pubDate>Thu, 24 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <dc:creator>C. A. Middelburg</dc:creator>
    </item>
    <item>
      <title>Lower Bounds for Convexity Testing</title>
      <link>https://arxiv.org/abs/2410.17958</link>
      <description>arXiv:2410.17958v1 Announce Type: cross 
Abstract: We consider the problem of testing whether an unknown and arbitrary set $S \subseteq \mathbb{R}^n$ (given as a black-box membership oracle) is convex, versus $\varepsilon$-far from every convex set, under the standard Gaussian distribution. The current state-of-the-art testing algorithms for this problem make $2^{\tilde{O}(\sqrt{n})\cdot \mathrm{poly}(1/\varepsilon)}$ non-adaptive queries, both for the standard testing problem and for tolerant testing.
  We give the first lower bounds for convexity testing in the black-box query model:
  - We show that any one-sided tester (which may be adaptive) must use at least $n^{\Omega(1)}$ queries in order to test to some constant accuracy $\varepsilon&gt;0$.
  - We show that any non-adaptive tolerant tester (which may make two-sided errors) must use at least $2^{\Omega(n^{1/4})}$ queries to distinguish sets that are $\varepsilon_1$-close to convex versus $\varepsilon_2$-far from convex, for some absolute constants $0&lt;\varepsilon_1&lt;\varepsilon_2$.
  Finally, we also show that for any constant $c&gt;0$, any non-adaptive tester (which may make two-sided errors) must use at least $n^{1/4 - c}$ queries in order to test to some constant accuracy $\varepsilon&gt;0$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.17958v1</guid>
      <category>cs.CC</category>
      <category>cs.DS</category>
      <pubDate>Thu, 24 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Xi Chen, Anindya De, Shivam Nadimpalli, Rocco A. Servedio, Erik Waingarten</dc:creator>
    </item>
    <item>
      <title>Maximizing a Submodular Function with Bounded Curvature under an Unknown Knapsack Constraint</title>
      <link>https://arxiv.org/abs/2209.09668</link>
      <description>arXiv:2209.09668v2 Announce Type: replace 
Abstract: This paper studies the problem of maximizing a monotone submodular function under an unknown knapsack constraint. A solution to this problem is a policy that decides which item to pack next based on the past packing history. The robustness factor of a policy is the worst case ratio of the solution obtained by following the policy and an optimal solution that knows the knapsack capacity. We develop an algorithm with a robustness factor that is decreasing in the curvature $B$ of the submodular function. For the extreme cases $c=0$ corresponding to a modular objective, it matches a previously known and best possible robustness factor of $1/2$. For the other extreme case of $c=1$ it yields a robustness factor of $\approx 0.35$ improving over the best previously known robustness factor of $\approx 0.06$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2209.09668v2</guid>
      <category>cs.DS</category>
      <category>cs.DM</category>
      <pubDate>Thu, 24 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Max Klimm, Martin Knaack</dc:creator>
    </item>
    <item>
      <title>Maximum Bipartite vs. Triangle-Free Subgraph</title>
      <link>https://arxiv.org/abs/2406.20069</link>
      <description>arXiv:2406.20069v2 Announce Type: replace 
Abstract: Given a (multi)graph $G$ which contains a bipartite subgraph with $\rho$ edges, what is the largest triangle-free subgraph of $G$ that can be found efficiently? We present an SDP-based algorithm that finds one with at least $0.8823 \rho$ edges, thus improving on the subgraph with $0.878 \rho$ edges obtained by the classic Max-Cut algorithm of Goemans and Williamson. On the other hand, by a reduction from Hastad's 3-bit PCP we show that it is NP-hard to find a triangle-free subgraph with $(25 / 26 + \epsilon) \rho \approx (0.961 + \epsilon) \rho$ edges.
  As an application, we classify the Maximum Promise Constraint Satisfaction Problem MaxPCSP($G$,$H$) for all bipartite $G$: Given an input (multi)graph $X$ which admits a $G$-colouring satisfying $\rho$ edges, find an $H$-colouring of $X$ that satisfies $\rho$ edges. This problem is solvable in polynomial time, apart from trivial cases, if $H$ contains a triangle, and is NP-hard otherwise.</description>
      <guid isPermaLink="false">oai:arXiv.org:2406.20069v2</guid>
      <category>cs.DS</category>
      <category>cs.CC</category>
      <category>cs.DM</category>
      <pubDate>Thu, 24 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Tamio-Vesa Nakajima, Stanislav \v{Z}ivn\'y</dc:creator>
    </item>
    <item>
      <title>Improved Kernelization and Fixed-parameter Algorithms for Bicluster Editing</title>
      <link>https://arxiv.org/abs/2410.13123</link>
      <description>arXiv:2410.13123v2 Announce Type: replace 
Abstract: Given a bipartite graph $G$, the \textsc{Bicluster Editing} problem asks for the minimum number of edges to insert or delete in $G$ so that every connected component is a bicluster, i.e. a complete bipartite graph. This has several applications, including in bioinformatics and social network analysis. In this work, we study the parameterized complexity under the natural parameter $k$, which is the number of allowed modified edges. We first show that one can obtain a kernel with $4.5k$ vertices, an improvement over the previously known quadratic kernel. We then propose an algorithm that runs in time $O^*(2.581^k)$. Our algorithm has the advantage of being conceptually simple and should be easy to implement.</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.13123v2</guid>
      <category>cs.DS</category>
      <pubDate>Thu, 24 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Manuel Lafond</dc:creator>
    </item>
    <item>
      <title>Timetable Nodes for Public Transport Network</title>
      <link>https://arxiv.org/abs/2410.15715</link>
      <description>arXiv:2410.15715v2 Announce Type: replace 
Abstract: Faster pathfinding in time-dependent transport networks is an important and challenging problem in navigation systems. There are two main types of transport networks: road networks for car driving and public transport route network. The solutions that work well in road networks, such as Time-dependent Contraction Hierarchies and other graph-based approaches, do not usually apply in transport networks. In transport networks, non-graph solutions such as CSA and RAPTOR show the best results compared to graph-based techniques. In our work, we propose a method that advances graph-based approaches by using different optimization techniques from computational geometry to speed up the search process in transport networks. We apply a new pre-computation step, which we call timetable nodes (TTN). Our inspiration comes from an iterative search problem in computational geometry. We implement two versions of the TTN: one uses a Combined Search Tree (TTN-CST), and the second uses Fractional Cascading (TTN-FC). Both of these approaches decrease the asymptotic complexity of reaching new nodes from $O(k\times \log|C|)$ to $O(k + \log(k) + \log(|C|))$, where $k$ is the number of outgoing edges from a node and $|C|$ is the size of the timetable information (total outgoing edges). Our solution suits any other time-dependent networks and can be integrated into other pathfinding algorithms. Our experiments indicate that this pre-computation significantly enhances the performance on high-density graphs. This study showcases how leveraging computational geometry can enhance pathfinding in transport networks, enabling faster pathfinding in scenarios involving large numbers of outgoing edges.</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.15715v2</guid>
      <category>cs.DS</category>
      <category>cs.AI</category>
      <category>cs.CG</category>
      <pubDate>Thu, 24 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Andrii Rohovyi, Peter J. Stuckey, Toby Walsh</dc:creator>
    </item>
    <item>
      <title>Online Differentially Private Synthetic Data Generation</title>
      <link>https://arxiv.org/abs/2402.08012</link>
      <description>arXiv:2402.08012v3 Announce Type: replace-cross 
Abstract: We present a polynomial-time algorithm for online differentially private synthetic data generation. For a data stream within the hypercube $[0,1]^d$ and an infinite time horizon, we develop an online algorithm that generates a differentially private synthetic dataset at each time $t$. This algorithm achieves a near-optimal accuracy bound of $O(\log(t)t^{-1/d})$ for $d\geq 2$ and $O(\log^{4.5}(t)t^{-1})$ for $d=1$ in the 1-Wasserstein distance. This result extends the previous work on the continual release model for counting queries to Lipschitz queries. Compared to the offline case, where the entire dataset is available at once, our approach requires only an extra polylog factor in the accuracy bound.</description>
      <guid isPermaLink="false">oai:arXiv.org:2402.08012v3</guid>
      <category>math.ST</category>
      <category>cs.DS</category>
      <category>cs.LG</category>
      <category>math.PR</category>
      <category>stat.TH</category>
      <pubDate>Thu, 24 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Yiyun He, Roman Vershynin, Yizhe Zhu</dc:creator>
    </item>
    <item>
      <title>A logarithmic approximation of linearly ordered colourings</title>
      <link>https://arxiv.org/abs/2404.19556</link>
      <description>arXiv:2404.19556v5 Announce Type: replace-cross 
Abstract: A linearly ordered (LO) $k$-colouring of a hypergraph assigns to each vertex a colour from the set $\{0,1,\ldots,k-1\}$ in such a way that each hyperedge has a unique maximum element. Barto, Batistelli, and Berg conjectured that it is NP-hard to find an LO $k$-colouring of an LO 2-colourable 3-uniform hypergraph for any constant $k\geq 2$ [STACS'21] but even the case $k=3$ is still open. Nakajima and \v{Z}ivn\'{y} gave polynomial-time algorithms for finding, given an LO 2-colourable 3-uniform hypergraph, an LO colouring with $O^*(\sqrt{n})$ colours [ICALP'22] and an LO colouring with $O^*(\sqrt[3]{n})$ colours [ACM ToCT'23]. Very recently, Louis, Newman, and Ray gave an SDP-based algorithm with $O^*(\sqrt[5]{n})$ colours. We present two simple polynomial-time algorithms that find an LO colouring with $O(\log_2(n))$ colours, which is an exponential improvement.</description>
      <guid isPermaLink="false">oai:arXiv.org:2404.19556v5</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <category>cs.DS</category>
      <pubDate>Thu, 24 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Johan H{\aa}stad, Bj\"orn Martinsson, Tamio-Vesa Nakajima, Stanislav \v{Z}ivn\'y</dc:creator>
    </item>
  </channel>
</rss>
