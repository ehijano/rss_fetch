<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.CC updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.CC</link>
    <description>cs.CC updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.CC" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Wed, 29 Jan 2025 05:00:10 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Wed, 29 Jan 2025 00:00:00 -0500</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Symmetric Perceptrons, Number Partitioning and Lattices</title>
      <link>https://arxiv.org/abs/2501.16517</link>
      <description>arXiv:2501.16517v1 Announce Type: cross 
Abstract: The symmetric binary perceptron ($\mathrm{SBP}_{\kappa}$) problem with parameter $\kappa : \mathbb{R}_{\geq1} \to [0,1]$ is an average-case search problem defined as follows: given a random Gaussian matrix $\mathbf{A} \sim \mathcal{N}(0,1)^{n \times m}$ as input where $m \geq n$, output a vector $\mathbf{x} \in \{-1,1\}^m$ such that $$|| \mathbf{A} \mathbf{x} ||_{\infty} \leq \kappa(m/n) \cdot \sqrt{m}~.$$ The number partitioning problem ($\mathrm{NPP}_{\kappa}$) corresponds to the special case of setting $n=1$. There is considerable evidence that both problems exhibit large computational-statistical gaps.
  In this work, we show (nearly) tight average-case hardness for these problems, assuming the worst-case hardness of standard approximate shortest vector problems on lattices.
  For $\mathrm{SBP}$, for large $n$, the best that efficient algorithms have been able to achieve is $\kappa(x) = \Theta(1/\sqrt{x})$ (Bansal and Spencer, Random Structures and Algorithms 2020), which is a far cry from the statistical bound. The problem has been extensively studied in the TCS and statistics communities, and Gamarnik, Kizildag, Perkins and Xu (FOCS 2022) conjecture that Bansal-Spencer is tight: namely, $\kappa(x) = \widetilde{\Theta}(1/\sqrt{x})$ is the optimal value achieved by computationally efficient algorithms. We prove their conjecture assuming the worst-case hardness of approximating the shortest vector problem on lattices.
  For $\mathrm{NPP}$, Karmarkar and Karp's classical differencing algorithm achieves $\kappa(m) = 2^{-O(\log^2 m)}~.$ We prove that Karmarkar-Karp is nearly tight: namely, no polynomial-time algorithm can achieve $\kappa(m) = 2^{-\Omega(\log^3 m)}$, once again assuming the worst-case subexponential hardness of approximating the shortest vector problem on lattices to within a subexponential factor.</description>
      <guid isPermaLink="false">oai:arXiv.org:2501.16517v1</guid>
      <category>math.ST</category>
      <category>cs.CC</category>
      <category>math-ph</category>
      <category>math.MP</category>
      <category>math.PR</category>
      <category>stat.TH</category>
      <pubDate>Wed, 29 Jan 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Neekon Vafa, Vinod Vaikuntanathan</dc:creator>
    </item>
    <item>
      <title>Geometric and computational hardness of bilevel programming</title>
      <link>https://arxiv.org/abs/2407.12372</link>
      <description>arXiv:2407.12372v2 Announce Type: replace 
Abstract: We first show a simple but striking result in bilevel optimization: unconstrained $C^\infty$ smooth bilevel programming is as hard as general extended-real-valued lower semicontinuous minimization. We then proceed to a worst-case analysis of box-constrained bilevel polynomial optimization.  We show in particular that any extended-real-valued semi-algebraic function, possibly non-continuous, can be expressed as the value function of a polynomial bilevel program. Secondly, from a computational complexity perspective, the decision version of polynomial bilevel programming is one level above NP in the polynomial hierarchy ($\Sigma^p_2$-hard). Both types of difficulties are uncommon in non-linear programs for which objective functions are typically continuous and belong to the class NP. These results highlight the irremediable hardness attached to general bilevel optimization and the necessity of imposing some form of regularity on the lower level.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.12372v2</guid>
      <category>cs.CC</category>
      <category>math.OC</category>
      <pubDate>Wed, 29 Jan 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>J\'er\^ome Bolte (TSE-R), Quoc-Tung Le (TSE-R), Edouard Pauwels (TSE-R, IRIT-ADRIA), Samuel Vaiter (CNRS, LJAD)</dc:creator>
    </item>
    <item>
      <title>Optimizing for aggressive-style strategies in Flesh and Blood is NP-hard</title>
      <link>https://arxiv.org/abs/2501.11683</link>
      <description>arXiv:2501.11683v2 Announce Type: replace 
Abstract: Flesh and Blood (FAB) is a trading card game that two players need to make a strategy to reduce the life points of their opponent to zero. The mechanics of the game present complex decision-making scenarios of resource management. Due the similarity of other card games, the strategy of the game have scenarios that can turn an NP-problem. This paper presents a model of an aggressive, single-turn strategy as a combinatorial optimization problem, termed the FAB problem. Using mathematical modeling, we demonstrate its equivalence to a 0-1 Knapsack problem, establishing the FAB problem as NP-hard. Additionally, an Integer Linear Programming (ILP) formulation is proposed to tackle real-world instances of the problem. By establishing the computational hardness of optimizing even relatively simple strategies, our work highlights the combinatorial complexity of the game.</description>
      <guid isPermaLink="false">oai:arXiv.org:2501.11683v2</guid>
      <category>cs.CC</category>
      <pubDate>Wed, 29 Jan 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-sa/4.0/</dc:rights>
      <dc:creator>Leonardo Gasparini Rom\~ao, Samuel Pla\c{c}a de Paula, Eduardo Takeo Ueda</dc:creator>
    </item>
    <item>
      <title>The Complexity of Transitively Orienting Temporal Graphs</title>
      <link>https://arxiv.org/abs/2102.06783</link>
      <description>arXiv:2102.06783v3 Announce Type: replace-cross 
Abstract: In a temporal network with discrete time-labels on its edges, entities and information can only ``flow'' along sequences of edges whose time-labels are non-decreasing (resp. increasing), i.e. along temporal (resp. strict temporal) paths. Nevertheless, in the model for temporal networks of [Kempe, Kleinberg, Kumar, JCSS, 2002], the individual time-labeled edges remain undirected: an edge $e=\{u,v\}$ with time-label $t$ specifies that ``$u$ communicates with $v$ at time $t$''.
  In this paper we make a first attempt to understand how the direction of information flow on one edge can impact the direction of information flow on other edges. More specifically, naturally extending the classical notion of a transitive orientation in static graphs, we introduce the fundamental notion of a temporal transitive orientation and we systematically investigate its algorithmic behavior. An orientation of a temporal graph is called temporally transitive if, whenever $u$ has a directed edge towards $v$ with time-label $t_1$ and $v$ has a directed edge towards $w$ with time-label $t_2\geq t_1$, then $u$ also has a directed edge towards $w$ with some time-label $t_3\geq t_2$. If we just demand that this implication holds whenever $t_2 &gt; t_1$, we call the orientation strictly temporally transitive, as it is based on the strict directed temporal path from $u$ to $w$.
  Our main result is a conceptually simple, yet technically quite involved, polynomial-time algorithm for recognizing whether a given temporal graph $\mathcal{G}$ is transitively orientable. In wide contrast we prove that, surprisingly, it is NP-hard to recognize whether $\mathcal{G}$ is strictly transitively orientable. Additionally we introduce and investigate further related problems to temporal transitivity, notably among them the temporal transitive completion problem, for which we prove both algorithmic and hardness results.</description>
      <guid isPermaLink="false">oai:arXiv.org:2102.06783v3</guid>
      <category>cs.DS</category>
      <category>cs.CC</category>
      <category>cs.DM</category>
      <pubDate>Wed, 29 Jan 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>George B. Mertzios, Hendrik Molter, Malte Renken, Paul G. Spirakis, Philipp Zschoche</dc:creator>
    </item>
    <item>
      <title>Optimal Scheduling of Graph States via Path Decompositions</title>
      <link>https://arxiv.org/abs/2403.04126</link>
      <description>arXiv:2403.04126v2 Announce Type: replace-cross 
Abstract: We study the optimal scheduling of graph states in measurement-based quantum computation, establishing an equivalence between measurement schedules and path decompositions of graphs. We define the spatial cost of a measurement schedule based on the number of simultaneously active qubits and prove that an optimal measurement schedule corresponds to a path decomposition of minimal width. Our analysis shows that approximating the spatial cost of a graph is $\textsf{NP}$-hard, while for graphs with bounded spatial cost, we establish an efficient algorithm for computing an optimal measurement schedule.</description>
      <guid isPermaLink="false">oai:arXiv.org:2403.04126v2</guid>
      <category>quant-ph</category>
      <category>cs.CC</category>
      <category>cs.DS</category>
      <pubDate>Wed, 29 Jan 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <arxiv:DOI>10.1103/PhysRevA.111.012627</arxiv:DOI>
      <arxiv:journal_reference>Phys. Rev. A 111 012627 (2025)</arxiv:journal_reference>
      <dc:creator>Samuel J. Elman, Jason Gavriel, Ryan L. Mann</dc:creator>
    </item>
  </channel>
</rss>
