<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.CG updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.CG</link>
    <description>cs.CG updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.CG" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Fri, 03 Oct 2025 04:00:13 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Fri, 03 Oct 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Minimum Selective Subset on Unit Disk Graphs and Circle Graphs</title>
      <link>https://arxiv.org/abs/2510.01931</link>
      <description>arXiv:2510.01931v1 Announce Type: new 
Abstract: In a connected simple graph G = (V(G),E(G)), each vertex is assigned one of c colors, where V(G) can be written as a union of a total of c subsets V_{1},...,V_{c} and V_{i} denotes the set of vertices of color i. A subset S of V(G) is called a selective subset if, for every i, every vertex v in V_{i} has at least one nearest neighbor in $S \cup (V(G) \setminus V_{i})$ that also lies in V_{i}. The Minimum Selective Subset (MSS) problem asks for a selective subset of minimum size.
  We show that the MSS problem is log-APX-hard on general graphs, even when c=2. As a consequence, the problem does not admit a polynomial-time approximation scheme (PTAS) unless P = NP. On the positive side, we present a PTAS for unit disk graphs, which works without requiring a geometric representation and applies for arbitrary c. We further prove that MSS remains NP-complete in unit disk graphs for arbitrary c. In addition, we show that the MSS problem is log-APX-hard on circle graphs, even when c=2.</description>
      <guid isPermaLink="false">oai:arXiv.org:2510.01931v1</guid>
      <category>cs.CG</category>
      <category>cs.CC</category>
      <pubDate>Fri, 03 Oct 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Bubai Manna</dc:creator>
    </item>
    <item>
      <title>Bifurcation: How to Explore a Tree</title>
      <link>https://arxiv.org/abs/2510.01939</link>
      <description>arXiv:2510.01939v1 Announce Type: new 
Abstract: Avraham et al. [AFK+15] presented an alternative approach to parametric search, called \emph{bifurcation}, that performs faster under certain circumstances. Intuitively, when the underlying decider execution can be rolled back cheaply and the decider has a near-linear running time. For some problems, this leads to fast algorithms that beat the seemingly natural lower bound arising from distance selection.
  Bifurcation boils down to a tree exploration problem. You are given a binary (unfortunately implicit) tree of height $n$ and $k$ internal nodes with two children (all other internal nodes have a single child), and assume each node has an associated parameter value. These values are sorted in the inorder traversal of the tree. Assume there is (say) a node (not necessarily a leaf) that is the target node that the exploration needs to discover.
  The player starts from the root. At each step, the player can move to adjacent nodes to the current location (i.e., one of the children or the parent). Alternatively, the player can call an oracle on the current node, which returns either that it is the target (thus, mission accomplished!) or whether the target value is strictly smaller or larger than the current one.
  A naive algorithm explores the whole tree, in $O(n k)$ time, then performs $O(\log k n)$ calls to the oracle to find the desired leaf. Avraham \etal showed that this can be improved to $O(n \sqrt{k} )$ time, and $O( \sqrt{k} \log n)$ oracle calls.
  Here, we improve this to $O(n \sqrt{k} )$ time, with only $ O( \sqrt{k} + \log n)$ oracle calls. We also show matching lower bounds, under certain assumptions. We believe our interpretation of bifurcation as a tree exploration problem, and the associated algorithm, are of independent interest.</description>
      <guid isPermaLink="false">oai:arXiv.org:2510.01939v1</guid>
      <category>cs.CG</category>
      <category>cs.DS</category>
      <pubDate>Fri, 03 Oct 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Sariel Har-Peled</dc:creator>
    </item>
    <item>
      <title>Higher-order, generically complete, continuous, and polynomial-time isometry invariants of periodic sets</title>
      <link>https://arxiv.org/abs/2509.15088</link>
      <description>arXiv:2509.15088v2 Announce Type: replace 
Abstract: Periodic point sets model all solid crystalline materials (crystals) whose atoms can be considered zero-sized points with or without atomic types. This paper addresses the fundamental problem of checking whether claimed crystals are novel, not noisy perturbations of known materials obtained by unrealistic atomic replacements. Such near-duplicates have skewed ground-truth because past comparisons relied on unstable cells and symmetries. The proposed Lipschitz continuity under noise is a new essential requirement for machine learning on any data objects that have ambiguous representations and live in continuous spaces. For periodic point sets under isometry (any distance-preserving transformation), we designed invariants that distinguish all known counter-examples to the completeness of past descriptors and detect thousands of (near-)duplicates in large high-profile databases of crystals within two days on a modest desktop computer.</description>
      <guid isPermaLink="false">oai:arXiv.org:2509.15088v2</guid>
      <category>cs.CG</category>
      <category>cond-mat.mtrl-sci</category>
      <pubDate>Fri, 03 Oct 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <dc:creator>Daniel E Widdowson, Vitaliy A Kurlin</dc:creator>
    </item>
  </channel>
</rss>
