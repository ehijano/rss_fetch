<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.DM updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.DM</link>
    <description>cs.DM updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.DM" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Wed, 22 May 2024 04:00:07 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Wed, 22 May 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Local search for valued constraint satisfaction parameterized by treedepth</title>
      <link>https://arxiv.org/abs/2405.12410</link>
      <description>arXiv:2405.12410v1 Announce Type: new 
Abstract: Sometimes local search algorithms cannot efficiently find even local peaks. To understand why, I look at the structure of ascents in fitness landscapes from valued constraint satisfaction problems (VCSPs). Given a VCSP with a constraint graph of treedepth $d$, I prove that from any initial assignment there always exists an ascent of length $2^{d + 1} \cdot n$ to a local peak. This means that short ascents always exist in fitness landscapes from constraint graphs of logarithmic treedepth, and thus also for all VCSPs of bounded treewidth. But this does not mean that local search algorithms will always find and follow such short ascents in sparse VCSPs. I show that with loglog treedepth, superpolynomial ascents exist; and for polylog treedepth, there are initial assignments from which all ascents are superpolynomial. Together, these results suggest that the study of sparse VCSPs can help us better understand the barriers to efficient local search.</description>
      <guid isPermaLink="false">oai:arXiv.org:2405.12410v1</guid>
      <category>cs.DM</category>
      <category>cs.DS</category>
      <category>cs.NE</category>
      <category>q-bio.PE</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Artem Kaznatcheev</dc:creator>
    </item>
    <item>
      <title>Exponential Steepest Ascent from Valued Constraint Graphs of Pathwidth Four</title>
      <link>https://arxiv.org/abs/2405.12906</link>
      <description>arXiv:2405.12906v1 Announce Type: new 
Abstract: We examine the complexity of maximising fitness via local search on valued constraint satisfaction problems (VCSPs). We consider two kinds of local ascents: (1) steepest ascents, where each step changes the domain that produces a maximal increase in fitness; and (2) $\prec$-ordered ascents, where -- of the domains with available fitness increasing changes -- each step changes the $\prec$-minimal domain. We provide a general padding argument to simulate any ordered ascent by a steepest ascent. We construct a VCSP that is a path of binary constraints between alternating 2-state and 3-state domains with exponentially long ordered ascents. We apply our padding argument to this VCSP to obtain a Boolean VCSP that has a constraint (hyper)graph of arity 5 and pathwidth 4 with exponential steepest ascents. This is an improvement on the previous best known construction for long steepest ascents, which had arity 8 and pathwidth 7.</description>
      <guid isPermaLink="false">oai:arXiv.org:2405.12906v1</guid>
      <category>cs.DM</category>
      <category>cs.DS</category>
      <category>q-bio.PE</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Artem Kaznatcheev, Melle van Marle</dc:creator>
    </item>
    <item>
      <title>Improved upper bounds for the Heilbronn's Problem for $k$-gons</title>
      <link>https://arxiv.org/abs/2405.12945</link>
      <description>arXiv:2405.12945v1 Announce Type: new 
Abstract: The Heilbronn triangle problem asks for the placement of $n$ points in a unit square that maximizes the smallest area of a triangle formed by any three of those points. In $1972$, Schmidt considered a natural generalization of this problem. He asked for the placement of $n$ points in a unit square that maximizes the smallest area of the convex hull formed by any four of those points. He showed a lower bound of $\Omega(n^{-3/2})$, which was improved to $\Omega(n^{-3/2}\log{n})$ by Leffman.
  A trivial upper bound of $3/n$ could be obtained, and Schmidt asked if this could be improved asymptotically. However, despite several efforts, no asymptotic improvement over the trivial upper bound was known for the last $50$ years, and the problem started to get the tag of being notoriously hard. Szemer{\'e}di posed the question of whether one can, at least, improve the constant in this trivial upper bound. In this work, we answer this question by proving an upper bound of $2/n+o(1/n)$. We also extend our results to any convex hulls formed by $k\geq 4$ points.</description>
      <guid isPermaLink="false">oai:arXiv.org:2405.12945v1</guid>
      <category>cs.DM</category>
      <category>cs.CG</category>
      <category>math.CO</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Rishikesh Gajjala, Jayanth Ravi</dc:creator>
    </item>
    <item>
      <title>Exact Random Graph Matching with Multiple Graphs</title>
      <link>https://arxiv.org/abs/2405.12293</link>
      <description>arXiv:2405.12293v1 Announce Type: cross 
Abstract: This work studies fundamental limits for recovering the underlying correspondence among multiple correlated random graphs. We identify a necessary condition for any algorithm to correctly match all nodes across all graphs, and propose two algorithms for which the same condition is also sufficient. The first algorithm employs global information to simultaneously match all the graphs, whereas the second algorithm first partially matches the graphs pairwise and then combines the partial matchings by transitivity. Both algorithms work down to the information theoretic threshold. Our analysis reveals a scenario where exact matching between two graphs alone is impossible, but leveraging more than two graphs allows exact matching among all the graphs. Along the way, we derive independent results about the k-core of Erdos-Renyi graphs.</description>
      <guid isPermaLink="false">oai:arXiv.org:2405.12293v1</guid>
      <category>cs.DS</category>
      <category>cs.DM</category>
      <category>math.ST</category>
      <category>stat.TH</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Taha Ameen, Bruce Hajek</dc:creator>
    </item>
    <item>
      <title>Algorithms for Generating Small Random Samples</title>
      <link>https://arxiv.org/abs/2405.12371</link>
      <description>arXiv:2405.12371v1 Announce Type: cross 
Abstract: This report presents algorithms for generating small random samples without replacement. It considers two cases. It presents an algorithm for sampling a pair of distinct integers, and an algorithm for sampling a triple of distinct integers. The worst case runtime of both algorithms is constant, while the worst case runtime of common algorithms for the general case of sampling $k$ elements from a set of $n$ are linear in $n$. Java implementations of both algorithms are included in the open source library $\rho\mu$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2405.12371v1</guid>
      <category>cs.DS</category>
      <category>cs.DM</category>
      <category>math.PR</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Vincent A. Cicirello</dc:creator>
    </item>
    <item>
      <title>Strict Self-Assembly of Discrete Self-Similar Fractal Shapes</title>
      <link>https://arxiv.org/abs/2405.08548</link>
      <description>arXiv:2405.08548v2 Announce Type: replace 
Abstract: This paper gives a (polynomial time) algorithm to decide whether a given Discrete Self-Similar Fractal Shape can be assembled in the aTAM model.In the positive case, the construction relies on a Self-Assembling System in the aTAM which strictly assembles a particular self-similar fractal shape, namely a variant $K^\infty$ of the Sierpinski Carpet. We prove that the aTAM we propose is correct through a novel device, \emph{self-describing circuits} which are generally useful for rigorous yet readable proofs of the behaviour of aTAMs.We then discuss which self-similar fractals can or cannot be strictly self-assembled in the aTAM. It turns out that the ability of iterates of the generator to pass information is crucial: either this \emph{bandwidth} is eventually sufficient in both cardinal directions and $K^\infty$ appears within the fractal pattern after some finite number of iterations, or that bandwidth remains ever insufficient in one direction and any aTAM trying to self-assemble the shape will end up either bounded with an ultimately periodic pattern covering arbitrarily large squares. This is established thanks to a new characterization of the productions of systems whose productions have a uniformly bounded treewidth.</description>
      <guid isPermaLink="false">oai:arXiv.org:2405.08548v2</guid>
      <category>cs.DM</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Florent Becker (LIFO)</dc:creator>
    </item>
    <item>
      <title>Polynomial-delay generation of functional digraphs up to isomorphism</title>
      <link>https://arxiv.org/abs/2302.13832</link>
      <description>arXiv:2302.13832v3 Announce Type: replace-cross 
Abstract: We describe a procedure for the generation of functional digraphs up to isomorphism; these are digraphs with uniform outdegree 1, also called mapping patterns, finite endofunctions, or finite discrete-time dynamical systems. This procedure is based on a reverse search algorithm for the generation of connected functional digraphs, which is then applied as a subroutine for the generation of arbitrary ones. Both algorithms output solutions with $O(n^2)$ delay and require linear space with respect to the number $n$ of vertices.</description>
      <guid isPermaLink="false">oai:arXiv.org:2302.13832v3</guid>
      <category>cs.DS</category>
      <category>cs.DM</category>
      <category>math.CO</category>
      <category>math.DS</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Oscar Defrain, Antonio E. Porreca, Ekaterina Timofeeva</dc:creator>
    </item>
  </channel>
</rss>
