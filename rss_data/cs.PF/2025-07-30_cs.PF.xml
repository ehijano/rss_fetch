<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.PF updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.PF</link>
    <description>cs.PF updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.PF" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Thu, 31 Jul 2025 04:01:31 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Thu, 31 Jul 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Dissecting RISC-V Performance: Practical PMU Profiling and Hardware-Agnostic Roofline Analysis on Emerging Platforms</title>
      <link>https://arxiv.org/abs/2507.22451</link>
      <description>arXiv:2507.22451v1 Announce Type: new 
Abstract: As RISC-V architectures proliferate across embedded and high-performance domains, developers face persistent challenges in performance optimization due to fragmented tooling, immature hardware features, and platform-specific defects. This paper delivers a pragmatic methodology for extracting actionable performance insights on RISC-V systems, even under constrained or unreliable hardware conditions. We present a workaround to circumvent hardware bugs in one of the popular RISC-V implementations, enabling robust event sampling. For memory-compute bottleneck analysis, we introduce compiler-driven Roofline tooling that operates without hardware PMU dependencies, leveraging LLVM-based instrumentation to derive operational intensity and throughput metrics directly from application IR. Our open source toolchain automates these workarounds, unifying PMU data correction and compiler-guided Roofline construction into a single workflow.</description>
      <guid isPermaLink="false">oai:arXiv.org:2507.22451v1</guid>
      <category>cs.PF</category>
      <pubDate>Thu, 31 Jul 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Alexander Batashev</dc:creator>
    </item>
    <item>
      <title>Ecoscape: Fault Tolerance Benchmark for Adaptive Remediation Strategies in Real-Time Edge ML</title>
      <link>https://arxiv.org/abs/2507.22702</link>
      <description>arXiv:2507.22702v1 Announce Type: new 
Abstract: Edge computing offers significant advantages for realtime data processing tasks, such as object recognition, by reducing network latency and bandwidth usage. However, edge environments are susceptible to various types of fault. A remediator is an automated software component designed to adjust the configuration parameters of a software service dynamically. Its primary function is to maintain the services operational state within predefined Service Level Objectives by applying corrective actions in response to deviations from these objectives. Remediators can be implemented based on the Kubernetes container orchestration tool by implementing remediation strategies such as rescheduling or adjusting application parameters. However, currently, there is no method to compare these remediation strategies fairly. This paper introduces Ecoscape, a comprehensive benchmark designed to evaluate the performance of remediation strategies in fault-prone environments. Using Chaos Engineering techniques, Ecoscape simulates realistic fault scenarios and provides a quantifiable score to assess the efficacy of different remediation approaches. In addition, it is configurable to support domain-specific Service Level Objectives. We demonstrate the capabilities of Ecoscape in edge machine learning inference, offering a clear framework to optimize fault tolerance in these systems without needing a physical edge testbed.</description>
      <guid isPermaLink="false">oai:arXiv.org:2507.22702v1</guid>
      <category>cs.PF</category>
      <pubDate>Thu, 31 Jul 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Hendrik Reiter, Ahmad Rzgar Hamid, Florian Schl\"osser, Mikkel Baun Kj{\ae}rgaard, Wilhelm Hasselbring</dc:creator>
    </item>
    <item>
      <title>Fast solvers for Tokamak fluid models with PETSC</title>
      <link>https://arxiv.org/abs/2506.16676</link>
      <description>arXiv:2506.16676v4 Announce Type: replace-cross 
Abstract: This work begins the development of fast, scalable solvers for scientific and engineering-relevant magnetohydrodynamics (MHD) models of tokamaks using multigrid methods. These models are characterized by a distinguished direction following the magnetic field around the torus, which dominates the plasma dynamics. All tokamak models exploit this structure, for example, NIMROD uses 2D, unstructured, high-order finite elements in the poloidal plane with Fourier modes in the toroidal coordinate, and the 3D, extended MHD code M3D-C1 uses 2D, unstructured C1 elements in the poloidal plane with cubic Hermite functions in the toroidal direction and a regular grid that is partially aligned with the magnetic field. This structure suggests addressing the toroidal coordinate first, which NIMROD does at the formulation level, but M3D-C1 uses a full 3D discretization. The resulting algebraic system is solved at each time step in an implicit time integrator. This work addressed the toroidal coordinate in the M3D-C1 velocity solve by adding semi-coarsening multigrid to the existing PETSC - Portable, Extensible Toolkit for Scientific Computation - block Jacobi solver, with the addition of little new code. Competitive performance of this new solver configuration is demonstrated on a self-consistent runaway electron model of a SPARC4 disruption, and the next steps in the development of this solver are outlined.</description>
      <guid isPermaLink="false">oai:arXiv.org:2506.16676v4</guid>
      <category>physics.plasm-ph</category>
      <category>cs.PF</category>
      <pubDate>Thu, 31 Jul 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/publicdomain/zero/1.0/</dc:rights>
      <dc:creator>Mark F. Adams, Jin Chen, Benjamin Sturdevant</dc:creator>
    </item>
  </channel>
</rss>
