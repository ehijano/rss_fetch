<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.CC updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.CC</link>
    <description>cs.CC updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.CC" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Fri, 25 Jul 2025 04:00:07 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Fri, 25 Jul 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>Fagin's Theorem for Semiring Turing Machines</title>
      <link>https://arxiv.org/abs/2507.18375</link>
      <description>arXiv:2507.18375v1 Announce Type: new 
Abstract: In recent years, quantitative complexity over semirings has been intensively investigated. An important problem in this context is to connect computational complexity with logical expressiveness. In this paper we improve on the model of \emph{Semiring Turing Machines} (distinct from so called weighted Turing machines) introduced by Eiter \&amp; Kiesel (Semiring Reasoning Frameworks in AI and Their Computational Complexity, \emph{J. Artif. Intell. Res.}, 2023). Our central result is a Fagin-style theorem for a new quantitative complexity class using a suitable weighted logical formalism. We show that the quantitative complexity class that we call \NPnewinf{$\mathcal{R}$}, where $\mathcal{R}$ is a commutative semiring, can be captured using a version of weighted existential second-order logic that allows for predicates interpreted as semiring-annotated relations. This result provides a precise logical characterization of the power series that form the class \NPnewinf{$\mathcal{R}$}. We also give the exact relation between Eiter \&amp; Kiesel's version of NP, called \NPoldinf{$\mathcal{R}$}, and the class \NPnewinf{$\mathcal{R}$}. Incidentally, we are able to recapture all the complexity results by Eiter \&amp; Kiesel (2023) in our new model, connecting a quantitative version of NP to various counting complexity classes.</description>
      <guid isPermaLink="false">oai:arXiv.org:2507.18375v1</guid>
      <category>cs.CC</category>
      <category>cs.LO</category>
      <pubDate>Fri, 25 Jul 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Guillermo Badia, Manfred Droste, Thomas Eiter, Rafael Kiesel, Carles Noguera, Erik Paul</dc:creator>
    </item>
    <item>
      <title>Better Bounds for Semi-Streaming Single-Source Shortest Paths</title>
      <link>https://arxiv.org/abs/2507.17841</link>
      <description>arXiv:2507.17841v1 Announce Type: cross 
Abstract: In the semi-streaming model, an algorithm must process any $n$-vertex graph by making one or few passes over a stream of its edges, use $O(n \cdot \text{polylog }n)$ words of space, and at the end of the last pass, output a solution to the problem at hand. Approximating (single-source) shortest paths on undirected graphs is a longstanding open question in this model. In this work, we make progress on this question from both upper and lower bound fronts:
  We present a simple randomized algorithm that for any $\epsilon &gt; 0$, with high probability computes $(1+\epsilon)$-approximate shortest paths from a given source vertex in \[
  O\left(\frac{1}{\epsilon} \cdot n \log^3 n \right)~\text{space} \quad \text{and} \quad O\left(\frac{1}{\epsilon} \cdot \left(\frac{\log n}{\log\log n} \right) ^2\right) ~\text{passes}.
  \] The algorithm can also be derandomized and made to work on dynamic streams at a cost of some extra $\text{poly}(\log n, 1/\epsilon)$ factors only in the space. Previously, the best known algorithms for this problem required $1/\epsilon \cdot \log^{c}(n)$ passes, for an unspecified large constant $c$.
  We prove that any semi-streaming algorithm that with large constant probability outputs any constant approximation to shortest paths from a given source vertex (even to a single fixed target vertex and only the distance, not necessarily the path) requires \[ \Omega\left(\frac{\log n}{\log\log n}\right) ~\text{passes}. \] We emphasize that our lower bound holds for any constant-factor approximation of shortest paths. Previously, only constant-pass lower bounds were known and only for small approximation ratios below two.
  Our results collectively reduce the gap in the pass complexity of approximating single-source shortest paths in the semi-streaming model from $\text{polylog } n$ vs $\omega(1)$ to only a quadratic gap.</description>
      <guid isPermaLink="false">oai:arXiv.org:2507.17841v1</guid>
      <category>cs.DS</category>
      <category>cs.CC</category>
      <pubDate>Fri, 25 Jul 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Sepehr Assadi, Gary Hoppenworth, Janani Sundaresan</dc:creator>
    </item>
    <item>
      <title>Strong Sparsification for 1-in-3-SAT via Polynomial Freiman-Ruzsa</title>
      <link>https://arxiv.org/abs/2507.17878</link>
      <description>arXiv:2507.17878v1 Announce Type: cross 
Abstract: We introduce a new notion of sparsification, called \emph{strong sparsification}, in which constraints are not removed but variables can be merged. As our main result, we present a strong sparsification algorithm for 1-in-3-SAT. The correctness of the algorithm relies on establishing a sub-quadratic bound on the size of certain sets of vectors in $\mathbb{F}_2^d$. This result, obtained using the recent \emph{Polynomial Freiman-Ruzsa Theorem} (Gowers, Green, Manners and Tao, Ann. Math. 2025), could be of independent interest. As an application, we improve the state-of-the-art algorithm for approximating linearly-ordered colourings of 3-uniform hypergraphs (H{\aa}stad, Martinsson, Nakajima and{\v{Z}}ivn{\'{y}}, APPROX 2024).</description>
      <guid isPermaLink="false">oai:arXiv.org:2507.17878v1</guid>
      <category>cs.DS</category>
      <category>cs.CC</category>
      <category>cs.DM</category>
      <category>math.CO</category>
      <pubDate>Fri, 25 Jul 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Benjamin Bedert, Tamio-Vesa Nakajima, Karolina Okrasa, Stanislav \v{Z}ivn\'y</dc:creator>
    </item>
    <item>
      <title>The hidden subgroup problem for infinite groups</title>
      <link>https://arxiv.org/abs/2507.18499</link>
      <description>arXiv:2507.18499v1 Announce Type: cross 
Abstract: Following the example of Shor's algorithm for period-finding in the integers, we explore the hidden subgroup problem (HSP) for discrete infinite groups. On the hardness side, we show that HSP is NP-hard for the additive group of rational numbers, and for normal subgroups of non-abelian free groups. We also indirectly reduce a version of the short vector problem to HSP in $\mathbb{Z}^k$ with pseudo-polynomial query cost. On the algorithm side, we generalize the Shor-Kitaev algorithm for HSP in $\mathbb{Z}^k$ (with standard polynomial query cost) to the case where the hidden subgroup has deficient rank or equivalently infinite index. Finally, we outline a stretched exponential time algorithm for the abelian hidden shift problem (AHShP), extending prior work of the author as well as Regev and Peikert. It follows that HSP in any finitely generated, virtually abelian group also has a stretched exponential time algorithm.</description>
      <guid isPermaLink="false">oai:arXiv.org:2507.18499v1</guid>
      <category>quant-ph</category>
      <category>cs.CC</category>
      <category>math.GR</category>
      <pubDate>Fri, 25 Jul 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Greg Kuperberg (UC Davis)</dc:creator>
    </item>
    <item>
      <title>Certificate-Sensitive Subset Sum: Realizing Instance Complexity</title>
      <link>https://arxiv.org/abs/2507.15511</link>
      <description>arXiv:2507.15511v2 Announce Type: replace 
Abstract: We present, to our knowledge, the first deterministic, certificate-sensitive algorithm for a canonical NP-complete problem whose runtime provably adapts to the structure of each input. For a Subset-Sum instance $(S, t)$, let $\Sigma(S)$ denote the set of distinct subset sums and define $U = |\Sigma(S)|$. This set serves as an information-theoretically minimal witness, the instance-complexity (IC) certificate.
  Our solver, IC-SubsetSum, enumerates every element of $\Sigma(S)$ in deterministic time $O(U \cdot n^2)$ and space $O(U \cdot n)$. A randomized variant achieves expected runtime $O(U \cdot n)$. The algorithm's complexity is thus directly governed by the certificate size, and this structure-sensitive performance is paired with a guaranteed worst-case runtime of $O^*(2^{n/2 - \varepsilon})$ for some constant $\varepsilon &gt; 0$, the first such result to strictly outperform classical methods on every instance.
  We revisit fine-grained reductions that rely on the classical $2^{n/2}$ hardness of SubsetSum and show that these arguments hold only for collision-free instances where $U$ is maximal. IC-SubsetSum reframes this barrier structurally and introduces a new paradigm for certificate-sensitive algorithms across NP-complete problems.</description>
      <guid isPermaLink="false">oai:arXiv.org:2507.15511v2</guid>
      <category>cs.CC</category>
      <category>cs.DS</category>
      <pubDate>Fri, 25 Jul 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Jesus Salas</dc:creator>
    </item>
  </channel>
</rss>
