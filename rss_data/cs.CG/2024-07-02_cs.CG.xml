<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.CG updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.CG</link>
    <description>cs.CG updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.CG" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Tue, 02 Jul 2024 04:00:07 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Tue, 02 Jul 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>Further Connectivity Results on Plane Spanning Path Reconfiguration</title>
      <link>https://arxiv.org/abs/2407.00244</link>
      <description>arXiv:2407.00244v1 Announce Type: new 
Abstract: Given a finite set $ S $ of points, we consider the following reconfiguration graph. The vertices are the plane spanning paths of $ S $ and there is an edge between two vertices if the two corresponding paths differ by two edges (one removed, one added). Since 2007, this graph is conjectured to be connected but no proof has been found. In this paper, we prove several results to support the conjecture. Mainly, we show that if all but one point of $ S $ are in convex position, then the graph is connected with diameter at most $ 2 | S | $ and that for $ | S | \geq 3 $ every connected component has at least $ 3 $ vertices.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.00244v1</guid>
      <category>cs.CG</category>
      <category>cs.DM</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Valentino Boucard, Guilherme D. da Fonseca, Bastien Rivier</dc:creator>
    </item>
    <item>
      <title>On Line-Separable Weighted Unit-Disk Coverage and Related Problems</title>
      <link>https://arxiv.org/abs/2407.00329</link>
      <description>arXiv:2407.00329v1 Announce Type: new 
Abstract: Given a set $P$ of $n$ points and a set $S$ of $n$ weighted disks in the plane, the disk coverage problem is to compute a subset of disks of smallest total weight such that the union of the disks in the subset covers all points of $P$. The problem is NP-hard. In this paper, we consider a line-separable unit-disk version of the problem where all disks have the same radius and their centers are separated from the points of $P$ by a line $\ell$. We present an $O(n^{3/2}\log^2 n)$ time algorithm for the problem. This improves the previously best work of $O(n^2\log n)$ time. Our result leads to an algorithm of $O(n^{{7}/{2}}\log^2 n)$ time for the halfplane coverage problem (i.e., using $n$ weighted halfplanes to cover $n$ points), an improvement over the previous $O(n^4\log n)$ time solution. If all halfplanes are lower ones, our algorithm runs in $O(n^{{3}/{2}}\log^2 n)$ time, while the previous best algorithm takes $O(n^2\log n)$ time. Using duality, the hitting set problems under the same settings can be solved with similar time complexities.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.00329v1</guid>
      <category>cs.CG</category>
      <category>cs.DS</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Gang Liu, Haitao Wang</dc:creator>
    </item>
    <item>
      <title>Unweighted Geometric Hitting Set for Line-Constrained Disks and Related Problems</title>
      <link>https://arxiv.org/abs/2407.00331</link>
      <description>arXiv:2407.00331v1 Announce Type: new 
Abstract: Given a set $P$ of $n$ points and a set $S$ of $m$ disks in the plane, the disk hitting set problem asks for a smallest subset of $P$ such that every disk of $S$ contains at least one point in the subset. The problem is NP-hard. In this paper, we consider a line-constrained version in which all disks have their centers on a line. We present an $O(m\log^2n+(n+m)\log(n+m))$ time algorithm for the problem. This improves the previously best result of $O(m^2\log m+(n+m)\log(n+m))$ time for the weighted case of the problem where every point of $P$ has a weight and the objective is to minimize the total weight of the hitting set. Our algorithm actually solves a more general line-separable problem with a single intersection property: The points of $P$ and the disk centers are separated by a line $\ell$ and the boundary of every two disks intersect at most once on the side of $\ell$ containing $P$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.00331v1</guid>
      <category>cs.CG</category>
      <category>cs.DS</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Gang Liu, Haitao Wang</dc:creator>
    </item>
    <item>
      <title>Edge-Unfolding Polycubes with Orthogonally Convex Layers</title>
      <link>https://arxiv.org/abs/2407.01326</link>
      <description>arXiv:2407.01326v1 Announce Type: new 
Abstract: A polycube is an orthogonal polyhedron composed of unit cubes glued together along entire faces, homeomorphic to a sphere. A polycube layer is the section of the polycube that lies between two horizontal cross-sections of the polycube at unit distance from each other. An edge unfolding of a polycube involves cutting its surface along any of the constituent cube edges and flattening it into a single, non-overlapping planar piece. We show that any polycube with orthogonally convex layers can be edge unfolded.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.01326v1</guid>
      <category>cs.CG</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Mirela Damian, Henk Meijer</dc:creator>
    </item>
    <item>
      <title>Dependable Spanners via Unreliable Edges</title>
      <link>https://arxiv.org/abs/2407.01466</link>
      <description>arXiv:2407.01466v1 Announce Type: new 
Abstract: Let $P$ be a set of $n$ points in $\mathbb{R}^d$, and let $\varepsilon,\psi \in (0,1)$ be parameters. Here, we consider the task of constructing a $(1+\varepsilon)$-spanner for $P$, where every edge might fail (independently) with probability $1-\psi$. For example, for $\psi=0.1$, about $90\%$ of the edges of the graph fail. Nevertheless, we show how to construct a spanner that survives such a catastrophe with near linear number of edges.
  The measure of reliability of the graph constructed is how many pairs of vertices lose $(1+\varepsilon)$-connectivity. Surprisingly, despite the spanner constructed being of near linear size, the number of failed pairs is close to the number of failed pairs if the underlying graph was a clique.
  Specifically, we show how to construct such an exact dependable spanner in one dimension of size $O(\tfrac{n}{\psi} \log n)$, which is optimal. Next, we build an $(1+\varepsilon)$-spanners for a set $P \subseteq \mathbb{R}^d$ of $n$ points, of size $O( C n \log n )$, where $C \approx 1/\bigl(\varepsilon^{d} \psi^{4/3}\bigr)$. Surprisingly, these new spanners also have the property that almost all pairs of vertices have a $\leq 4$-hop paths between them realizing this short path.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.01466v1</guid>
      <category>cs.CG</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Sariel Har-Peled, Maria C. Lusardi</dc:creator>
    </item>
    <item>
      <title>The dual of Philo's shortest line segment problem</title>
      <link>https://arxiv.org/abs/2406.05702</link>
      <description>arXiv:2406.05702v4 Announce Type: replace 
Abstract: We study the dual of Philo's shortest line segment problem which asks to find the optimal line segments passing through two given points, with a common endpoint, and with the other endpoints on a given line. The provided solution uses multivariable calculus and geometry methods. Interesting connections with the angle bisector of the triangle are explored. A generalization of the problem using $L_p$ ($p\ge 1$) norm is proposed. Particular case $p=\infty$ is studied. Interesting case $p=2$ is proposed as an open problem and related property of a symedian of a triangle is conjectured.</description>
      <guid isPermaLink="false">oai:arXiv.org:2406.05702v4</guid>
      <category>cs.CG</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Yagub N. Aliyev</dc:creator>
    </item>
    <item>
      <title>A Geometric Algorithm for Tubular Shape Reconstruction from Skeletal Representation</title>
      <link>https://arxiv.org/abs/2402.12797</link>
      <description>arXiv:2402.12797v3 Announce Type: replace-cross 
Abstract: We introduce a novel approach for the reconstruction of tubular shapes from skeletal representations. Our method processes all skeletal points as a whole, eliminating the need for splitting input structure into multiple segments. We represent the tubular shape as a truncated signed distance function (TSDF) in a voxel hashing manner, in which the signed distance between a voxel center and the object is computed through a simple geometric algorithm. Our method does not involve any surface sampling scheme or solving large matrix equations, and therefore is a faster and more elegant solution for tubular shape reconstruction compared to other approaches. Experiments demonstrate the efficiency and effectiveness of the proposed method. Code is avaliable at https://github.com/wlsdzyzl/Dragon.</description>
      <guid isPermaLink="false">oai:arXiv.org:2402.12797v3</guid>
      <category>cs.CV</category>
      <category>cs.CG</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Guoqing Zhang, Yang Li</dc:creator>
    </item>
    <item>
      <title>A Linear Time and Space Local Point Cloud Geometry Encoder via Vectorized Kernel Mixture (VecKM)</title>
      <link>https://arxiv.org/abs/2404.01568</link>
      <description>arXiv:2404.01568v4 Announce Type: replace-cross 
Abstract: We propose VecKM, a local point cloud geometry encoder that is descriptive and efficient to compute. VecKM leverages a unique approach by vectorizing a kernel mixture to represent the local point cloud. Such representation's descriptiveness is supported by two theorems that validate its ability to reconstruct and preserve the similarity of the local shape. Unlike existing encoders downsampling the local point cloud, VecKM constructs the local geometry encoding using all neighboring points, producing a more descriptive encoding. Moreover, VecKM is efficient to compute and scalable to large point cloud inputs: VecKM reduces the memory cost from $(n^2+nKd)$ to $(nd+np)$; and reduces the major runtime cost from computing $nK$ MLPs to $n$ MLPs, where $n$ is the size of the point cloud, $K$ is the neighborhood size, $d$ is the encoding dimension, and $p$ is a marginal factor. The efficiency is due to VecKM's unique factorizable property that eliminates the need of explicitly grouping points into neighbors. In the normal estimation task, VecKM demonstrates not only 100x faster inference speed but also highest accuracy and strongest robustness. In classification and segmentation tasks, integrating VecKM as a preprocessing module achieves consistently better performance than the PointNet, PointNet++, and point transformer baselines, and runs consistently faster by up to 10 times.</description>
      <guid isPermaLink="false">oai:arXiv.org:2404.01568v4</guid>
      <category>cs.CV</category>
      <category>cs.CG</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Dehao Yuan, Cornelia Ferm\"uller, Tahseen Rabbani, Furong Huang, Yiannis Aloimonos</dc:creator>
    </item>
    <item>
      <title>Core Bifiltration</title>
      <link>https://arxiv.org/abs/2405.01214</link>
      <description>arXiv:2405.01214v2 Announce Type: replace-cross 
Abstract: The motivation of this paper is to recognize a geometric shape from a noisy sample in the form of a point cloud. Inspired by the HDBSCAN clustering algorithm, we introduce the core dissimilarity, from which we construct the core bifiltration. We also consider the alpha-core bifiltration by intersecting with Voronoi cells, giving us a filtered simplicial complex of smaller size. A major advantage of the (alpha-)core bifiltration is that, for each filtration value, it admits a good cover of balls. By the persistent nerve theorem, the nerve of this cover is homotopy equivalent to the (alpha-)core bifiltration. We show that the multicover-, core- and alpha-core bifiltrations are all interleaved, and that they enjoy similar stability properties with respect to the Prohorov distance. We have performed experiments with the core and the alpha-core bifiltrations where we have calculated their persistent homology along lines in the two-dimensional persistence parameter space.</description>
      <guid isPermaLink="false">oai:arXiv.org:2405.01214v2</guid>
      <category>math.AT</category>
      <category>cs.CG</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Nello Blaser, Morten Brun, Odin Hoff Gardaa, Lars M. Salbu</dc:creator>
    </item>
  </channel>
</rss>
