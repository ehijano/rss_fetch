<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.LO updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.LO</link>
    <description>cs.LO updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.LO" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Mon, 24 Mar 2025 04:00:11 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Mon, 24 Mar 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Towards Learning Infinite SMT Models (Work in Progress)</title>
      <link>https://arxiv.org/abs/2503.16982</link>
      <description>arXiv:2503.16982v1 Announce Type: new 
Abstract: This short paper proposes to learn models of satisfiability modulo theories (SMT) formulas during solving. Specifically, we focus on infinite models for problems in the logic of linear arithmetic with uninterpreted functions (UFLIA). The constructed models are piecewise linear. Such models are useful for satisfiable problems but also provide an alternative driver for model-based quantifier instantiation (MBQI).</description>
      <guid isPermaLink="false">oai:arXiv.org:2503.16982v1</guid>
      <category>cs.LO</category>
      <pubDate>Mon, 24 Mar 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <arxiv:DOI>10.1109/SYNASC61333.2023.00018</arxiv:DOI>
      <dc:creator>Mikol\'a\v{s} Janota, Bartosz Piotrowski, Karel Chvalovsk\'y</dc:creator>
    </item>
    <item>
      <title>Distributive Laws of Monadic Containers</title>
      <link>https://arxiv.org/abs/2503.17191</link>
      <description>arXiv:2503.17191v1 Announce Type: new 
Abstract: Containers are used to carve out a class of strictly positive data types in terms of shapes and positions. They can be interpreted via a fully-faithful functor into endofunctors on Set. Monadic containers are those containers whose interpretation as a Set functor carries a monad structure. The category of containers is closed under container composition and is a monoidal category, whereas monadic containers do not in general compose.
  In this paper, we develop a characterisation of distributive laws of monadic containers. Distributive laws were introduced as a sufficient condition for the composition of the underlying functors of two monads to also carry a monad structure. Our development parallels Ahman and Uustalu's characterisation of distributive laws of directed containers, i.e. containers whose Set functor interpretation carries a comonad structure. Furthermore, by combining our work with theirs, we construct characterisations of mixed distributive laws (i.e. of directed containers over monadic containers and vice versa), thereby completing the 'zoo' of container characterisations of (co)monads and their distributive laws.
  We have found these characterisations amenable to development of existence and uniqueness proofs of distributive laws, particularly in the mechanised setting of Cubical Agda, in which most of the theory of this paper has been formalised.</description>
      <guid isPermaLink="false">oai:arXiv.org:2503.17191v1</guid>
      <category>cs.LO</category>
      <category>math.CT</category>
      <category>math.LO</category>
      <pubDate>Mon, 24 Mar 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Chris Purdy, Stefania Damato</dc:creator>
    </item>
    <item>
      <title>A Natural Transformation between the Model Constructions of the Completeness and Compactness Theorems, Enhanced by Rigidity and 2-Categorical Strengthening</title>
      <link>https://arxiv.org/abs/2503.16555</link>
      <description>arXiv:2503.16555v1 Announce Type: cross 
Abstract: In this paper we present a mathematically rigorous and constructive framework that unifies two canonical model constructions in classical first order logic. In particular, we define two functors F and G from the category of consistent first order theories to the category of models. The functor F is constructed via the Henkin method, which extends any given theory to a maximal consistent theory by means of a fixed enumeration and the systematic introduction of Henkin constants, and then constructs a term model by taking the quotient of the term algebra with respect to provable equality. The functor G is obtained through a canonical compactness based construction, using either a fixed ultraproduct or a saturation procedure, ensuring that the resulting model is unique up to isomorphism.
  We prove the existence of a natural transformation eta from F to G such that each component is an isomorphism. Moreover, by leveraging the uniqueness of saturated (or prime) models in countable languages, we show that eta is rigid, meaning any other natural transformation between F and G must equal eta. Furthermore, we establish a strong natural equivalence between F and G in the two categorical sense, with eta and its inverse satisfying the required coherence conditions.
  This unification not only deepens our understanding of the interplay between proof theory and model theory, but also opens new avenues for applications in automated theorem proving, formal verification, and the study of alternative logical systems.</description>
      <guid isPermaLink="false">oai:arXiv.org:2503.16555v1</guid>
      <category>math.LO</category>
      <category>cs.LO</category>
      <category>math.CT</category>
      <pubDate>Mon, 24 Mar 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Barreto Joaquim Reizi</dc:creator>
    </item>
    <item>
      <title>Simplifying LTL Model-Checking Given Prior Knowledge</title>
      <link>https://arxiv.org/abs/2503.16891</link>
      <description>arXiv:2503.16891v1 Announce Type: cross 
Abstract: We consider the problem of the verification of an LTL specification  $\varphi$ on a system $S$ given some prior knowledge $K$, an LTL  formula that $S$ is known to satisfy.  The automata-theoretic  approach to LTL model checking is implemented as an emptiness check  of the product $S\otimes A_{\lnot\varphi}$ where $A_{\lnot\varphi}$  is an automaton for the negation of the property.  We propose new  operations that simplify an automaton $A_{\lnot\varphi}$  \emph{given} some knowledge automaton $A_K$, to produce an automaton  $B$ that can be used instead of $A_{\lnot\varphi}$ for more  efficient model checking.  Our evaluation of these operations on a large benchmark derived from  the MCC'22 competition shows that even with simple knowledge, half  of the problems can be definitely answered without running an LTL  model checker, and the remaining problems can be simplified  significantly.</description>
      <guid isPermaLink="false">oai:arXiv.org:2503.16891v1</guid>
      <category>cs.FL</category>
      <category>cs.LO</category>
      <pubDate>Mon, 24 Mar 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Alexandre Duret-Lutz (LRE), Denis Poitrenaud (UPCit\'e), Yann Thierry-Mieg</dc:creator>
    </item>
    <item>
      <title>Transductions of Graph Classes Admitting Product Structure</title>
      <link>https://arxiv.org/abs/2501.18326</link>
      <description>arXiv:2501.18326v2 Announce Type: replace 
Abstract: In a quest to thoroughly understand the first-order transduction hierarchy of hereditary graph classes, some questions in particular stand out; such as, what properties hold for graph classes that are first-order transductions of planar graphs (and of similar classes)? When addressing this (so-far wide open) question, we turn to the concept of a product structure - being a subgraph of the strong product of a path and a graph of bounded tree-width, introduced by Dujmovic et al. [JACM 2020]. Namely, we prove that any graph class which is a first-order transduction of a class admitting such product structure, up to perturbations also meets a structural description generalizing the concept of a product structure in a dense hereditary way - the latter concept being introduced just recently by Hlineny and Jedelsky under the name of H-clique-width [MFCS 2024]. Using this characterization, we show that the class of the 3D grids, as well as a class of certain modifications of 2D grids, are not first-order transducible from classes admitting a product structure, and in particular not from the class of planar graphs.</description>
      <guid isPermaLink="false">oai:arXiv.org:2501.18326v2</guid>
      <category>cs.LO</category>
      <category>math.CO</category>
      <pubDate>Mon, 24 Mar 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-sa/4.0/</dc:rights>
      <dc:creator>Petr Hlin\v{e}n\'y, Jan Jedelsk\'y</dc:creator>
    </item>
    <item>
      <title>STP: Self-play LLM Theorem Provers with Iterative Conjecturing and Proving</title>
      <link>https://arxiv.org/abs/2502.00212</link>
      <description>arXiv:2502.00212v4 Announce Type: replace-cross 
Abstract: A fundamental challenge in formal theorem proving by LLMs is the lack of high-quality training data. Although reinforcement learning or expert iteration partially mitigates this issue by alternating between LLM generating proofs and finetuning them on correctly generated ones, performance quickly plateaus due to the scarcity of correct proofs (sparse rewards). To keep improving the models with limited data, we draw inspiration from mathematicians, who continuously develop new results, partly by proposing novel conjectures or exercises (which are often variants of known results) and attempting to solve them. We design the Self-play Theorem Prover (STP) that simultaneously takes on two roles, conjecturer and prover, each providing training signals to the other. The conjecturer is trained iteratively on previously generated conjectures that are barely provable by the current prover, which incentivizes it to generate increasingly challenging conjectures over time. The prover attempts to prove the conjectures with standard expert iteration. We evaluate STP with both Lean and Isabelle formal versifiers. With 51.3 billion tokens generated during the training in Lean, STP proves 28.5% of the statements in the LeanWorkbook dataset, doubling the previous best result of 13.2% achieved through expert iteration. The final model achieves state-of-the-art performance among whole-proof generation methods on miniF2F-test (65.0%, pass@3200), Proofnet-test (23.9%, pass@3200) and PutnamBench (8/644, pass@3200). We release our code, model, and dataset in this URL: https://github.com/kfdong/STP.</description>
      <guid isPermaLink="false">oai:arXiv.org:2502.00212v4</guid>
      <category>cs.LG</category>
      <category>cs.AI</category>
      <category>cs.LO</category>
      <pubDate>Mon, 24 Mar 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <dc:creator>Kefan Dong, Tengyu Ma</dc:creator>
    </item>
    <item>
      <title>Verifying Equilibria in Finite-Horizon Probabilistic Concurrent Game Systems</title>
      <link>https://arxiv.org/abs/2503.14690</link>
      <description>arXiv:2503.14690v2 Announce Type: replace-cross 
Abstract: Finite-horizon probabilistic multiagent concurrent game systems, also known as finite multiplayer stochastic games, are a well-studied model in computer science due to their ability to represent a wide range of real-world scenarios involving strategic interactions among agents over a finite amount of iterations (given by the finite-horizon). The analysis of these games typically focuses on evaluating (verifying) and computing (synthesizing/realizing) which strategy profiles (functions that represent the behavior of each agent) qualify as equilibria. The two most prominent equilibrium concepts are the Nash equilibrium and the subgame perfect equilibrium, with the latter considered a conceptual refinement of the former. However, computing these equilibria from scratch is often computationally infeasible. Therefore, recent attention has shifted to the verification problem, where a given strategy profile must be evaluated to determine whether it satisfies equilibrium conditions. In this paper, we demonstrate that the verification problem for subgame perfect equilibria lies in PSPACE, while for Nash equilibria, it is EXPTIME-complete. This is a highly counterintuitive result since subgame perfect equilibria are often seen as a strict strengthening of Nash equilibria and are intuitively seen as more complicated.</description>
      <guid isPermaLink="false">oai:arXiv.org:2503.14690v2</guid>
      <category>cs.GT</category>
      <category>cs.LO</category>
      <pubDate>Mon, 24 Mar 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <dc:creator>Senthil Rajasekaran, Moshe Y. Vardi</dc:creator>
    </item>
  </channel>
</rss>
