<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.DM updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.DM</link>
    <description>cs.DM updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.DM" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Wed, 20 Aug 2025 04:00:35 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Wed, 20 Aug 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>Tight Bounds for Sparsifying Random CSPs</title>
      <link>https://arxiv.org/abs/2508.13345</link>
      <description>arXiv:2508.13345v1 Announce Type: cross 
Abstract: The problem of CSP sparsification asks: for a given CSP instance, what is the sparsest possible reweighting such that for every possible assignment to the instance, the number of satisfied constraints is preserved up to a factor of $1 \pm \epsilon$? We initiate the study of the sparsification of random CSPs. In particular, we consider two natural random models: the $r$-partite model and the uniform model. In the $r$-partite model, CSPs are formed by partitioning the variables into $r$ parts, with constraints selected by randomly picking one vertex out of each part. In the uniform model, $r$ distinct vertices are chosen at random from the pool of variables to form each constraint.
  In the $r$-partite model, we exhibit a sharp threshold phenomenon. For every predicate $P$, there is an integer $k$ such that a random instance on $n$ vertices and $m$ edges cannot (essentially) be sparsified if $m \le n^k$ and can be sparsified to size $\approx n^k$ if $m \ge n^k$. Here, $k$ corresponds to the largest copy of the AND which can be found within $P$. Furthermore, these sparsifiers are simple, as they can be constructed by i.i.d. sampling of the edges.
  In the uniform model, the situation is a bit more complex. For every predicate $P$, there is an integer $k$ such that a random instance on $n$ vertices and $m$ edges cannot (essentially) be sparsified if $m \le n^k$ and can sparsified to size $\approx n^k$ if $m \ge n^{k+1}$. However, for some predicates $P$, if $m \in [n^k, n^{k+1}]$, there may or may not be a nontrivial sparsifier. In fact, we show that there are predicates where the sparsifiability of random instances is non-monotone, i.e., as we add more random constraints, the instances become more sparsifiable. We give a precise (efficiently computable) procedure for determining which situation a specific predicate $P$ falls into.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.13345v1</guid>
      <category>cs.DS</category>
      <category>cs.DM</category>
      <category>math.CO</category>
      <pubDate>Wed, 20 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/publicdomain/zero/1.0/</dc:rights>
      <dc:creator>Joshua Brakensiek, Venkatesan Guruswami, Aaron Putterman</dc:creator>
    </item>
    <item>
      <title>Fair Division Among Couples and Small Groups</title>
      <link>https://arxiv.org/abs/2508.13432</link>
      <description>arXiv:2508.13432v1 Announce Type: cross 
Abstract: We study the fair allocation of indivisible goods across groups of agents, where each agent fully enjoys all goods allocated to their group. We focus on groups of two (couples) and other groups of small size. For two couples, an EF1 allocation -- one in which all agents find their group's bundle no worse than the other group's, up to one good -- always exists and can be found efficiently. For three or more couples, EF1 allocations need not exist.
  Turning to proportionality, we show that, whenever groups have size at most $k$, a PROP$k$ allocation exists and can be found efficiently. In fact, our algorithm additionally guarantees (fractional) Pareto optimality, and PROP1 to the first agent in each group, PROP2 to the second, etc., for an arbitrary agent ordering. In special cases, we show that there are PROP1 allocations for any number of couples.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.13432v1</guid>
      <category>cs.GT</category>
      <category>cs.DM</category>
      <pubDate>Wed, 20 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Paul G\"olz, Hannane Yaghoubizade</dc:creator>
    </item>
    <item>
      <title>A Biased Random Key Genetic Algorithm for Solving the Longest Run Subsequence Problem</title>
      <link>https://arxiv.org/abs/2508.14020</link>
      <description>arXiv:2508.14020v1 Announce Type: cross 
Abstract: The longest run subsequence (LRS) problem is an NP-hard combinatorial optimization problem belonging to the class of subsequence problems from bioinformatics. In particular, the problem plays a role in genome reassembly. In this paper, we present a solution to the LRS problem using a Biased Random Key Genetic Algorithm (BRKGA). Our approach places particular focus on the computational efficiency of evaluating individuals, which involves converting vectors of gray values into valid solutions to the problem. For comparison purposes, a Max-Min Ant System is developed and implemented. This is in addition to the application of the integer linear programming solver CPLEX for solving all considered problem instances. The computation results show that the proposed BRKGA is currently a state-of-the-art technique for the LRS problem. Nevertheless, the results also show that there is room for improvement, especially in the context of input strings based on large alphabet sizes.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.14020v1</guid>
      <category>cs.AI</category>
      <category>cs.DM</category>
      <pubDate>Wed, 20 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Christian Blum, Pedro Pinacho-Davidson</dc:creator>
    </item>
    <item>
      <title>Elimination Distance to Dominated Clusters</title>
      <link>https://arxiv.org/abs/2504.21675</link>
      <description>arXiv:2504.21675v2 Announce Type: replace 
Abstract: In the Dominated Cluster Deletion problem, we are given an undirected graph $G$ and integers $k$ and $d$ and the question is to decide whether there exists a set of at most $k$ vertices whose removal results in a graph in which each connected component has a dominating set of size at most $d$. In the Elimination Distance to Dominated Clusters problem, we are again given an undirected graph $G$ and integers $k$ and $d$ and the question is to decide whether we can recursively delete vertices up to depth $k$ such that each remaining connected component has a dominating set of size at most $d$. Bentert et al.~[Bentert et al., MFCS 2024] recently provided an almost complete classification of the parameterized complexity of Dominated Cluster Deletion with respect to the parameters $k$, $d$, $c$, and $\Delta$, where $c$ and $\Delta$ are the degeneracy, and the maximum degree of the input graph, respectively. In particular, they provided a non-uniform algorithm with running time $f(k,d)\cdot n^{O(d)}$. They left as an open problem whether the problem is fixed-parameter tractable with respect to the parameter $k+d+c$. We provide a uniform algorithm running in time $f(k,d)\cdot n^{O(d)}$ for both Dominated Cluster Deletion and Elimination Distance to Dominated Clusters. We furthermore show that both problems are FPT when parameterized by $k+d+\ell$, where $\ell$ is the semi-ladder index of the input graph, a parameter that is upper bounded and may be much smaller than the degeneracy $c$, positively answering the open question of Bentert et al. We further complete the picture by providing an almost full classification for the parameterized complexity and kernelization complexity of Elimination Distance to Dominated Clusters. The one difficult base case that remains open is whether treedepth (the case $d=0$) is NP-hard on graphs of bounded maximum degree.</description>
      <guid isPermaLink="false">oai:arXiv.org:2504.21675v2</guid>
      <category>cs.DM</category>
      <pubDate>Wed, 20 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Nicole Schirrmacher, Sebastian Siebertz, Alexandre Vigny</dc:creator>
    </item>
    <item>
      <title>Extension property for partial automorphisms of the $n$-partite and semigeneric tournaments</title>
      <link>https://arxiv.org/abs/2401.12153</link>
      <description>arXiv:2401.12153v3 Announce Type: replace-cross 
Abstract: We present a proof of the extension property for partial automorphisms (EPPA) for classes of finite $n$-partite tournaments for $n \in \{2,3,\ldots,\omega\}$, and for the class of finite semigeneric tournaments. We also prove that the generic $\omega$-partite tournament and the generic semigeneric tournament have ample generics.</description>
      <guid isPermaLink="false">oai:arXiv.org:2401.12153v3</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <category>math.LO</category>
      <pubDate>Wed, 20 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Jan Hubi\v{c}ka, Colin Jahel, Mat\v{e}j Kone\v{c}n\'y, Marcin Sabok</dc:creator>
    </item>
    <item>
      <title>Minimum blocking sets for families of partitions</title>
      <link>https://arxiv.org/abs/2505.15362</link>
      <description>arXiv:2505.15362v2 Announce Type: replace-cross 
Abstract: A $3$-partition of an $n$-element set $V$ is a triple of pairwise disjoint nonempty subsets $X,Y,Z$ such that $V=X\cup Y\cup Z$. We determine the minimum size $\varphi_3(n)$ of a set $\mathcal{E}$ of triples such that for every 3-partition $X,Y,Z$ of the set $\{1,\dots,n\}$, there is some $\{x,y,z\}\in \mathcal{E}$ with $x\in X$, $y\in Y$, and $z\in Z$. In particular, $$\varphi_3(n)=\left\lceil{\frac{n(n-2)}{3}}\right\rceil.$$ For $d&gt;3$, one may define an analogous number $\varphi_d(n)$. We determine the order of magnitude of $\varphi_d(n)$, and prove the following upper and lower bounds, for $d&gt;3$: $$\frac{2 n^{d-1}}{d!} -o(n^{d-1}) \leq \varphi_d(n) \leq \frac{0.86}{(d-1)!}n^{d-1}+o(n^{d-1}).$$</description>
      <guid isPermaLink="false">oai:arXiv.org:2505.15362v2</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <pubDate>Wed, 20 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Guillermo Gamboa Quintero, Ida Kantor</dc:creator>
    </item>
    <item>
      <title>The PPP-completeness of the Ward-Szabo theorem</title>
      <link>https://arxiv.org/abs/2507.23345</link>
      <description>arXiv:2507.23345v2 Announce Type: replace-cross 
Abstract: Ward and Szab\'o [WS94] have shown that a complete graph with $N^2$ nodes whose edges are colored by $N$ colors and that has at least two colors contains a bichromatic triangle. This fact leads us to a total search problem: Given an edge-coloring on a complete graph with $N^2$ nodes using at least two colors and at most $N$ colors, find a bichromatic triangle. Bourneuf, Folwarczn\'y, Hub\'acek, Rosen, and Schwartzbach [Bou+23] have proven that such a total search problem, called Ward-Szab\'o, is PWPP-hard and belongs to the class TFNP, a class for total search problems in which the correctness of every candidate solution is efficiently verifiable. However, it is open which TFNP subclass contains Ward-Szab\'o. This paper will improve the computational complexity of Ward-Szab\'o. We prove that Ward-Szab\'o is a complete problem for the complexity class PPP, a TFNP subclass of problems in which the existence of solutions is guaranteed by the pigeonhole principle.</description>
      <guid isPermaLink="false">oai:arXiv.org:2507.23345v2</guid>
      <category>cs.CC</category>
      <category>cs.DM</category>
      <pubDate>Wed, 20 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Takashi Ishizuka</dc:creator>
    </item>
    <item>
      <title>On the complexity of constrained reconfiguration and motion planning</title>
      <link>https://arxiv.org/abs/2508.13032</link>
      <description>arXiv:2508.13032v2 Announce Type: replace-cross 
Abstract: Coordinating the motion of multiple agents in constrained environments is a fundamental challenge in robotics, motion planning, and scheduling. A motivating example involves $n$ robotic arms, each represented as a line segment. The objective is to rotate each arm to its vertical orientation, one at a time (clockwise or counterclockwise), without collisions nor rotating any arm more than once. This scenario is an example of the more general $k$-Compatible Ordering problem, where $n$ agents, each capable of $k$ state-changing actions, must transition to specific target states under constraints encoded as a set $\mathcal{G}$ of $k$ pairs of directed graphs.
  We show that $k$-Compatible Ordering is $\mathsf{NP}$-complete, even when $\mathcal{G}$ is planar, degenerate, or acyclic. On the positive side, we provide polynomial-time algorithms for cases such as when $k = 1$ or $\mathcal{G}$ has bounded treewidth. We also introduce generalized variants supporting multiple state-changing actions per agent, broadening the applicability of our framework. These results extend to a wide range of scheduling, reconfiguration, and motion planning applications in constrained environments.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.13032v2</guid>
      <category>cs.CC</category>
      <category>cs.DM</category>
      <category>cs.DS</category>
      <category>cs.RO</category>
      <category>math.CO</category>
      <pubDate>Wed, 20 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Nicolas Bousquet, Remy El Sabeh, Amer E. Mouawad, Naomi Nishimura</dc:creator>
    </item>
  </channel>
</rss>
