<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.CG updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.CG</link>
    <description>cs.CG updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.CG" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Mon, 13 May 2024 04:03:10 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Mon, 13 May 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>Simulation of the abstract Tile Assembly Model Using Crisscross Slats</title>
      <link>https://arxiv.org/abs/2405.06205</link>
      <description>arXiv:2405.06205v1 Announce Type: new 
Abstract: Tile assembly systems in the abstract Tile Assembly Model (aTAM) are computationally universal and capable of building complex shapes, but DNA-based implementations encounter formidable error rates that stifle this theoretical potential. Slat-based self-assembly is a recent development wherein DNA forms long slats that combine together in 2 layers, rather than the aTAM's square tiles in a plane. While tiles tend to bind to 2 neighboring tiles at a time, slats may bind to dozens of other slats. Large slat-based DNA constructions have been implemented in the lab with incredible resilience to many of the errors that plague tile-based constructions, but these come at a cost as slat-based systems are often more difficult to design and simulate. Also, it has not been clear if slats, with their larger sizes and different geometries, have the same theoretical capabilities as tiles. Here we show that slats do, at least at scale. We give constructions showing that any aTAM system may be simulated by a system of slats and that these can be made more efficiently, using shorter slats and a smaller scale factor, when simulating simpler classes of systems. We consider 5 classes of aTAM systems with increasing complexity, from zig-zag systems to the full class of all aTAM systems, and show how they can be converted to equivalent slat systems. Zig-zag systems can be simulated by slats at only a $2c \times 2c$ scale (where $c$ is the freely chosen cooperativity of the slats), the full class of aTAM systems at only a $5c \times 5c$ scale, and intermediate classes using scales between these. Together, these results prove that slats have the full theoretical power of aTAM tiles while providing constructions compact enough to potentially provide designs for DNA-based implementations of slat systems that are both capable of powerful algorithmic self-assembly and possessing the strong error resilience of slats.</description>
      <guid isPermaLink="false">oai:arXiv.org:2405.06205v1</guid>
      <category>cs.CG</category>
      <category>cs.ET</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Phillip Drake, Daniel Hader, Matthew J. Patitz</dc:creator>
    </item>
    <item>
      <title>Perceptual Crack Detection for Rendered 3D Textured Meshes</title>
      <link>https://arxiv.org/abs/2405.06143</link>
      <description>arXiv:2405.06143v1 Announce Type: cross 
Abstract: Recent years have witnessed many advancements in the applications of 3D textured meshes. As the demand continues to rise, evaluating the perceptual quality of this new type of media content becomes crucial for quality assurance and optimization purposes. Different from traditional image quality assessment, crack is an annoying artifact specific to rendered 3D meshes that severely affects their perceptual quality. In this work, we make one of the first attempts to propose a novel Perceptual Crack Detection (PCD) method for detecting and localizing crack artifacts in rendered meshes. Specifically, motivated by the characteristics of the human visual system (HVS), we adopt contrast and Laplacian measurement modules to characterize crack artifacts and differentiate them from other undesired artifacts. Extensive experiments on large-scale public datasets of 3D textured meshes demonstrate effectiveness and efficiency of the proposed PCD method in correct localization and detection of crack artifacts. %Specifically, We propose a full-reference crack artifact localization method that operates on a pair of input snapshots of distorted and reference 3D objects to generate a final crack map. Moreover, to quantify the performance of the proposed detection method and validate its effectiveness, we propose a simple yet effective weighting mechanism to incorporate the resulting crack map into classical quality assessment (QA) models, which creates significant performance improvement in predicting the perceptual image quality when tested on public datasets of static 3D textured meshes. A software release of the proposed method is publicly available at: https://github.com/arshafiee/crack-detection-VVM</description>
      <guid isPermaLink="false">oai:arXiv.org:2405.06143v1</guid>
      <category>cs.CV</category>
      <category>cs.CG</category>
      <category>cs.MM</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Armin Shafiee Sarvestani, Wei Zhou, Zhou Wang</dc:creator>
    </item>
  </channel>
</rss>
