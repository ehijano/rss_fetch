<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.FL updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.FL</link>
    <description>cs.FL updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.FL" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Thu, 12 Dec 2024 02:45:36 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Wed, 11 Dec 2024 00:00:00 -0500</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Implementing a Quantum Finite Automaton in IBMQ using Custom Control Pulses</title>
      <link>https://arxiv.org/abs/2412.06977</link>
      <description>arXiv:2412.06977v1 Announce Type: cross 
Abstract: Quantum finite automata can be used for pattern recognition. Present implementations on actual quantum devices face decoherence issues, which compromise the quality of long strings computation. In this work, we focus on the Measure Once 1-way Quantum Finite Automata (MO1QFA) model for addressing the MOD^p problem, investigating how quantum errors may affect the quality of the computation in this model when implemented in IBM-Q superconducting environment. To improve the performance of the implementation, we use pulse-level programming for calibrating a fast single-qubit gate designed specifically for the automaton implementation. The demonstrations conducted on the Jakarta quantum computer show that using custom pulses significantly reduces errors during extended word computations. While realizing improvements in error variations and predictability -- with a fourfold reduction in circuit latency -- the proposed solution demonstrates a substantial increase in the supported computation length of the automaton. When considering thresholds of 10% and 20% in absolute errors of acceptance probabilities, the solution has the potential to increase the maximum word length by 12 and 7+ times, respectively, compared to the default Qiskit gate.</description>
      <guid isPermaLink="false">oai:arXiv.org:2412.06977v1</guid>
      <category>quant-ph</category>
      <category>cs.FL</category>
      <pubDate>Wed, 11 Dec 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <dc:creator>Eduardo Willwock Lussi, Lucas Cavalcante de Sousa, Jerusa Marchi, Rafael de Santiago, Eduardo Inacio Duzzioni</dc:creator>
    </item>
  </channel>
</rss>
