<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.LO updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.LO</link>
    <description>cs.LO updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.LO" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Fri, 08 Aug 2025 04:04:49 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Fri, 08 Aug 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Probabilistic Alternating Simulations for Policy Synthesis in Uncertain Stochastic Dynamical Systems</title>
      <link>https://arxiv.org/abs/2508.05062</link>
      <description>arXiv:2508.05062v1 Announce Type: cross 
Abstract: A classical approach to formal policy synthesis in stochastic dynamical systems is to construct a finite-state abstraction, often represented as a Markov decision process (MDP). The correctness of these approaches hinges on a behavioural relation between the dynamical system and its abstraction, such as a probabilistic simulation relation. However, probabilistic simulation relations do not suffice when the system dynamics are, next to being stochastic, also subject to nondeterministic (i.e., set-valued) disturbances. In this work, we extend probabilistic simulation relations to systems with both stochastic and nondeterministic disturbances. Our relation, which is inspired by a notion of alternating simulation, generalises existing relations used for verification and policy synthesis used in several works. Intuitively, our relation allows reasoning probabilistically over stochastic uncertainty, while reasoning robustly (i.e., adversarially) over nondeterministic disturbances. We experimentally demonstrate the applicability of our relations for policy synthesis in a 4D-state Dubins vehicle.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.05062v1</guid>
      <category>eess.SY</category>
      <category>cs.LO</category>
      <category>cs.SY</category>
      <category>math.OC</category>
      <pubDate>Fri, 08 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Thom Badings, Alessandro Abate</dc:creator>
    </item>
    <item>
      <title>Minimal Model Reasoning in Description Logics: Don't Try This at Home!</title>
      <link>https://arxiv.org/abs/2508.05350</link>
      <description>arXiv:2508.05350v1 Announce Type: cross 
Abstract: Reasoning with minimal models has always been at the core of many knowledge representation techniques, but we still have only a limited understanding of this problem in Description Logics (DLs). Minimization of some selected predicates, letting the remaining predicates vary or be fixed, as proposed in circumscription, has been explored and exhibits high complexity. The case of `pure' minimal models, where the extension of all predicates must be minimal, has remained largely uncharted. We address this problem in popular DLs and obtain surprisingly negative results: concept satisfiability in minimal models is undecidable already for $\mathcal{EL}$. This undecidability also extends to a very restricted fragment of tuple-generating dependencies. To regain decidability, we impose acyclicity conditions on the TBox that bring the worst-case complexity below double exponential time and allow us to establish a connection with the recently studied pointwise circumscription; we also derive results in data complexity. We conclude with a brief excursion to the DL-Lite family, where a positive result was known for DL-Lite$_{\text{core}}$, but our investigation establishes ExpSpace-hardness already for its extension DL-Lite$_{\text{horn}}$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.05350v1</guid>
      <category>cs.AI</category>
      <category>cs.CC</category>
      <category>cs.LO</category>
      <pubDate>Fri, 08 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Federica Di Stefano, Quentin Mani\`ere, Magdalena Ortiz, Mantas \v{S}imkus</dc:creator>
    </item>
    <item>
      <title>Universal quantification makes automatic structures hard to decide</title>
      <link>https://arxiv.org/abs/2306.10432</link>
      <description>arXiv:2306.10432v3 Announce Type: replace 
Abstract: Automatic structures are first-order structures whose universe and relations can be represented as regular languages. It follows from the standard closure properties of regular languages that the first-order theory of an automatic structure is decidable. While existential quantifiers can be eliminated in linear time by application of a homomorphism, universal quantifiers are commonly eliminated via the identity $\forall{x}. \Phi \equiv \neg (\exists{x}. \neg \Phi)$. If $\Phi$ is represented in the standard way as an NFA, a priori this approach results in a doubly exponential blow-up. However, the recent literature has shown that there are classes of automatic structures for which universal quantifiers can be eliminated by different means without this blow-up by treating them as first-class citizens and not resorting to double complementation. While existing lower bounds for some classes of automatic structures show that a singly exponential blow-up is unavoidable when eliminating a universal quantifier, it is not known whether there may be better approaches that avoid the na\"ive doubly exponential blow-up, perhaps at least in restricted settings.
  In this paper, we answer this question negatively and show that there is a family of NFA representing automatic relations for which the minimal NFA recognising the language after eliminating a single universal quantifier is doubly exponential, and deciding whether this language is empty is EXPSPACE-complete.
  The techniques underlying our EXPSPACE lower bound further enable us to establish new lower bounds for some fragments of B\"uchi arithmetic with a fixed number of quantifier alternations.</description>
      <guid isPermaLink="false">oai:arXiv.org:2306.10432v3</guid>
      <category>cs.LO</category>
      <pubDate>Fri, 08 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Christoph Haase, Rados{\l}aw Pi\'orkowski</dc:creator>
    </item>
    <item>
      <title>Modular Reasoning about Error Bounds for Concurrent Probabilistic Programs (Extended Version)</title>
      <link>https://arxiv.org/abs/2503.04512</link>
      <description>arXiv:2503.04512v3 Announce Type: replace 
Abstract: We present Coneris, the first higher-order concurrent separation logic for reasoning about error probability bounds of higher-order concurrent probabilistic programs with higher-order state. To support modular reasoning about concurrent (non-probabilistic) program modules, state-of-the-art program logics internalize the classic notion of linearizability within the logic through the concept of logical atomicity.
  Coneris extends this idea to probabilistic concurrent program modules. Thus Coneris supports modular reasoning about probabilistic concurrent modules by capturing a novel notion of randomized logical atomicity within the logic. To do so, Coneris utilizes presampling tapes and a novel probabilistic update modality to describe how state is changed probabilistically at linearization points. We demonstrate this approach by means of smaller synthetic examples and larger case studies.
  All of the presented results, including the meta-theory, have been mechanized in the Rocq proof assistant and the Iris separation logic framework
  This is the extended version of the same paper accepted at ICFP 2025, where more details of proofs and case studies are included in the Appendix.</description>
      <guid isPermaLink="false">oai:arXiv.org:2503.04512v3</guid>
      <category>cs.LO</category>
      <category>cs.PL</category>
      <pubDate>Fri, 08 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-sa/4.0/</dc:rights>
      <dc:creator>Kwing Hei Li, Alejandro Aguirre, Simon Oddershede Gregersen, Philipp G. Haselwarter, Joseph Tassarotti, Lars Birkedal</dc:creator>
    </item>
    <item>
      <title>2-Coherent Internal Models of Homotopical Type Theory</title>
      <link>https://arxiv.org/abs/2503.05790</link>
      <description>arXiv:2503.05790v2 Announce Type: replace 
Abstract: The program of internal type theory seeks to develop the categorical model theory of dependent type theory using the language of dependent type theory itself. In the present work we study internal homotopical type theory by relaxing the notion of a category with families (cwf) to that of a wild, or precoherent higher cwf, and determine coherence conditions that suffice to recover properties expected of models of dependent type theory. The result is a definition of a split 2-coherent wild cwf, which admits as instances both the syntax and the "standard model" given by a universe type. This will allow us to give a straightforward internalization of the notion of a 2-coherent reflection of homotopical type theory in itself: namely as a 2-coherent wild cwf morphism from the syntax to the standard model. Our theory also easily specializes to give definitions of "low-dimensional" higher cwfs, and conjecturally includes the container higher model as a further instance.</description>
      <guid isPermaLink="false">oai:arXiv.org:2503.05790v2</guid>
      <category>cs.LO</category>
      <category>math.CT</category>
      <category>math.LO</category>
      <pubDate>Fri, 08 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Joshua Chen</dc:creator>
    </item>
    <item>
      <title>Qunity: A Unified Language for Quantum and Classical Computing (Extended Version)</title>
      <link>https://arxiv.org/abs/2204.12384</link>
      <description>arXiv:2204.12384v5 Announce Type: replace-cross 
Abstract: We introduce Qunity, a new quantum programming language designed to treat quantum computing as a natural generalization of classical computing. Qunity presents a unified syntax where familiar programming constructs can have both quantum and classical effects. For example, one can use sum types to implement the direct sum of linear operators, exception-handling syntax to implement projective measurements, and aliasing to induce entanglement. Further, Qunity takes advantage of the overlooked BQP subroutine theorem, allowing one to construct reversible subroutines from irreversible quantum algorithms through the uncomputation of "garbage" outputs. Unlike existing languages that enable quantum aspects with separate add-ons (like a classical language with quantum gates bolted on), Qunity provides a unified syntax and a novel denotational semantics that guarantees that programs are quantum mechanically valid. We present Qunity's syntax, type system, and denotational semantics, showing how it can cleanly express several quantum algorithms. We also detail how Qunity can be compiled into a low-level qubit circuit language like OpenQASM, proving the realizability of our design.</description>
      <guid isPermaLink="false">oai:arXiv.org:2204.12384v5</guid>
      <category>cs.PL</category>
      <category>cs.LO</category>
      <category>quant-ph</category>
      <pubDate>Fri, 08 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:DOI>10.1145/3571225</arxiv:DOI>
      <dc:creator>Finn Voichick, Liyi Li, Robert Rand, Michael Hicks</dc:creator>
    </item>
  </channel>
</rss>
