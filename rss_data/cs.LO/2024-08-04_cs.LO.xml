<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.LO updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.LO</link>
    <description>cs.LO updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.LO" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Mon, 05 Aug 2024 04:00:30 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Mon, 05 Aug 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Characterizing Data Dependencies Then and Now</title>
      <link>https://arxiv.org/abs/2408.01109</link>
      <description>arXiv:2408.01109v1 Announce Type: new 
Abstract: Data dependencies are integrity constraints that the data of interest must obey. During the 1980s, Janos Makowsky made a number of contributions to the study of data dependencies; in particular, he was the first researcher to characterize data dependencies in terms of their structural properties. The goal of this article is to first present an overview of Makowsky's work on characterizing certain classes of data dependencies and then discuss recent developments concerning characterizations of broader classes of data dependencies.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.01109v1</guid>
      <category>cs.LO</category>
      <category>cs.DB</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Phokion G. Kolaitis, Andreas Pieris</dc:creator>
    </item>
    <item>
      <title>CHTW-systems with resource-depended parameters. CHTW(R)-systems</title>
      <link>https://arxiv.org/abs/2408.01245</link>
      <description>arXiv:2408.01245v1 Announce Type: new 
Abstract: In [1] the concept of CHTW-systems as a multidimensional representation of Petri nets was proposed based on the assumption of multidimensional distribution of tokens (resources) in positions (branes) and, accordingly, multidimensional representation of transitions and arcs. The extension of Petri nets was developed under the assumption of the stationarity of CHTW-system, when its parameters are constant during the system operation. We consider the case when the main parameters of CHTW-system (threshold functions and rate functions) change in accordance with the values of the mark-functions (multidimensional resource) of some container branes of the same CHTW-system. The modification of the basic CHTW-system was designated as a CHTW(R) system, in which (R) means a Resource control of the system parameters.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.01245v1</guid>
      <category>cs.LO</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Alexander Yu. Chunikhin</dc:creator>
    </item>
    <item>
      <title>A SAT-based approach to rigorous verification of Bayesian networks</title>
      <link>https://arxiv.org/abs/2408.00986</link>
      <description>arXiv:2408.00986v1 Announce Type: cross 
Abstract: Recent advancements in machine learning have accelerated its widespread adoption across various real-world applications. However, in safety-critical domains, the deployment of machine learning models is riddled with challenges due to their complexity, lack of interpretability, and absence of formal guarantees regarding their behavior. In this paper, we introduce a verification framework tailored for Bayesian networks, designed to address these drawbacks. Our framework comprises two key components: (1) a two-step compilation and encoding scheme that translates Bayesian networks into Boolean logic literals, and (2) formal verification queries that leverage these literals to verify various properties encoded as constraints. Specifically, we introduce two verification queries: if-then rules (ITR) and feature monotonicity (FMO). We benchmark the efficiency of our verification scheme and demonstrate its practical utility in real-world scenarios.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.00986v1</guid>
      <category>cs.AI</category>
      <category>cs.LO</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Ignacy St\k{e}pka, Nicholas Gisolfi, Artur Dubrawski</dc:creator>
    </item>
    <item>
      <title>A Session Type System for Asynchronous Unreliable Broadcast Communication</title>
      <link>https://arxiv.org/abs/1902.01353</link>
      <description>arXiv:1902.01353v5 Announce Type: replace 
Abstract: Session types are formal specifications of communication protocols, allowing protocol implementations to be verified by typechecking. Up to now, session type disciplines have assumed that the communication medium is reliable, with no loss of messages. However, unreliable broadcast communication is common in a wide class of distributed systems such as ad-hoc and wireless sensor networks. Often such systems have structured communication patterns that should be amenable to analysis by means of session types, but the necessary theory has not previously been developed. We introduce the Unreliable Broadcast Session Calculus, a process calculus with unreliable broadcast communication, and equip it with a session type system that we show is sound. We capture two common operations, broadcast and gather, inhabiting dual session types. Message loss may lead to non-synchronised session endpoints. To further account for unreliability we provide with an autonomous recovery mechanism that does not require acknowledgements from session participants. Our type system ensures soundness, safety, and progress between the synchronised endpoints within a session. We demonstrate the expressiveness of our framework by implementing Paxos, the textbook protocol for reaching consensus in an unreliable, asynchronous network.</description>
      <guid isPermaLink="false">oai:arXiv.org:1902.01353v5</guid>
      <category>cs.LO</category>
      <category>cs.FL</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Dimitrios Kouzapas, Ramunas Forsberg Gutkovas, A. Laura Voinea, Simon J. Gay</dc:creator>
    </item>
    <item>
      <title>Canonical Decision Diagrams Modulo Theories</title>
      <link>https://arxiv.org/abs/2404.16455</link>
      <description>arXiv:2404.16455v3 Announce Type: replace 
Abstract: Decision diagrams (DDs) are powerful tools to represent effectively propositional formulas, which are largely used in many domains, in particular in formal verification and in knowledge compilation. Some forms of DDs (e.g., OBDDs, SDDs) are canonical, that is, (under given conditions on the atom list) they univocally represent equivalence classes of formulas. Given the limited expressiveness of propositional logic, a few attempts to leverage DDs to SMT level have been presented in the literature. Unfortunately, these techniques still suffer from some limitations: most procedures are theory-specific; some produce theory DDs (T-DDs) which do not univocally represent T-valid formulas or T-inconsistent formulas; none of these techniques provably produces theory-canonical T-DDs, which (under given conditions on the T-atom list) univocally represent T-equivalence classes of formulas. Also, these procedures are not easy to implement, and very few implementations are actually available. In this paper, we present a novel very-general technique to leverage DDs to SMT level, which has several advantages: it is very easy to implement on top of an AllSMT solver and a DD package, which are used as blackboxes; it works for every form of DDs and every theory, or combination thereof, supported by the AllSMT solver; it produces theory-canonical T-DDs if the propositional DD is canonical. We have implemented a prototype tool for both T-OBDDs and T-SDDs on top of OBDD and SDD packages and the MathSAT SMT solver. Some preliminary empirical evaluation supports the effectiveness of the approach.</description>
      <guid isPermaLink="false">oai:arXiv.org:2404.16455v3</guid>
      <category>cs.LO</category>
      <category>cs.AI</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Massimo Michelutti, Gabriele Masina, Giuseppe Spallitta, Roberto Sebastiani</dc:creator>
    </item>
    <item>
      <title>Synthesis of Temporal Causality</title>
      <link>https://arxiv.org/abs/2405.10912</link>
      <description>arXiv:2405.10912v2 Announce Type: replace 
Abstract: We present an automata-based algorithm to synthesize omega-regular causes for omega-regular effects on executions of a reactive system, such as counterexamples uncovered by a model checker. Our theory is a generalization of temporal causality, which has recently been proposed as a framework for drawing causal relationships between trace properties on a given trace. So far, algorithms exist only for verifying a single causal relationship and, as an extension, cause synthesis through enumeration, which is complete only for a small fragment of effect properties. This work presents the first complete cause-synthesis algorithm for the class of omega-regular effects. We show that in this case, causes are guaranteed to be omega-regular themselves and can be computed as, e.g., nondeterministic B\"uchi automata. We demonstrate the practical feasibility of this algorithm with a prototype tool and evaluate its performance for cause synthesis and cause checking.</description>
      <guid isPermaLink="false">oai:arXiv.org:2405.10912v2</guid>
      <category>cs.LO</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <arxiv:DOI>10.1007/978-3-031-65633-0_5</arxiv:DOI>
      <arxiv:journal_reference>Computer Aided Verification: 36th International Conference, CAV 2024, Proceedings, Part III, Lecture Notes in Computer Science, vol 14683, Springer</arxiv:journal_reference>
      <dc:creator>Bernd Finkbeiner, Hadar Frenkel, Niklas Metzger, Julian Siber</dc:creator>
    </item>
    <item>
      <title>Rule-Based Error Detection and Correction to Operationalize Movement Trajectory Classification</title>
      <link>https://arxiv.org/abs/2308.14250</link>
      <description>arXiv:2308.14250v3 Announce Type: replace-cross 
Abstract: Classification of movement trajectories has many applications in transportation and is a key component for large-scale movement trajectory generation and anomaly detection which has key safety applications in the aftermath of a disaster or other external shock. However, the current state-of-the-art (SOTA) are based on supervised deep learning - which leads to challenges when the distribution of trajectories changes due to such a shock. We provide a neuro-symbolic rule-based framework to conduct error correction and detection of these models to integrate into our movement trajectory platform. We provide a suite of experiments on several recent SOTA models where we show highly accurate error detection, the ability to improve accuracy with a changing test distribution, and accuracy improvement for the base use case in addition to a suite of theoretical properties that informed algorithm development. Specifically, we show an F1 scores for predicting errors of up to 0.984, significant performance increase for out-of distribution accuracy (8.51% improvement over SOTA for zero-shot accuracy), and accuracy improvement over the SOTA model.</description>
      <guid isPermaLink="false">oai:arXiv.org:2308.14250v3</guid>
      <category>cs.LG</category>
      <category>cs.AI</category>
      <category>cs.LO</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Bowen Xi, Kevin Scaria, Divyagna Bavikadi, Paulo Shakarian</dc:creator>
    </item>
  </channel>
</rss>
