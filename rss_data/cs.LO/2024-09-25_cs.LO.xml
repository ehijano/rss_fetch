<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.LO updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.LO</link>
    <description>cs.LO updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.LO" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Wed, 25 Sep 2024 09:31:40 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Wed, 25 Sep 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>An adequacy theorem between mixed powerdomains and probabilistic concurrency</title>
      <link>https://arxiv.org/abs/2409.15920</link>
      <description>arXiv:2409.15920v1 Announce Type: new 
Abstract: We present an adequacy theorem for a concurrent extension of probabilistic GCL. The underlying denotational semantics is based on the so-called mixed powerdomains which combine non-determinism with stochasticity. The theorem itself is formulated via M. Smyth's idea of treating observable properties as open sets of a topological space.
  One application of our theorem is that it entails semi-decidability w.r.t. whether a concurrent program satisfies an observable property (written in a certain form). This is intimately connected to M. Escard\'o's conjecture about semi-decidability w.r.t. may and must probabilistic testing.</description>
      <guid isPermaLink="false">oai:arXiv.org:2409.15920v1</guid>
      <category>cs.LO</category>
      <pubDate>Wed, 25 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Renato Neves</dc:creator>
    </item>
    <item>
      <title>Classification of Covering Spaces and Canonical Change of Basepoint</title>
      <link>https://arxiv.org/abs/2409.15351</link>
      <description>arXiv:2409.15351v1 Announce Type: cross 
Abstract: Using the language of homotopy type theory (HoTT), we 1) prove a synthetic version of the classification theorem for covering spaces, and 2) explore the existence of canonical change-of-basepoint isomorphisms between homotopy groups. There is some freedom in choosing how to translate concepts from classical algebraic topology into HoTT. The final translations we ended up with are easier to work with than the ones we started with. We discuss some earlier attempts to shed light on this translation process. The proofs are mechanized using the Coq proof assistant and closely follow classical treatments like those by Hatcher.</description>
      <guid isPermaLink="false">oai:arXiv.org:2409.15351v1</guid>
      <category>math.AT</category>
      <category>cs.LO</category>
      <category>math.LO</category>
      <pubDate>Wed, 25 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:DOI>10.4230/LIPIcs.TYPES.2023.1</arxiv:DOI>
      <arxiv:journal_reference>LIPIcs, Volume 303, TYPES 2023</arxiv:journal_reference>
      <dc:creator>Jelle Wemmenhove, Cosmin Manea, Jim Portegies</dc:creator>
    </item>
    <item>
      <title>Logical Characterizations of Recurrent Graph Neural Networks with Reals and Floats</title>
      <link>https://arxiv.org/abs/2405.14606</link>
      <description>arXiv:2405.14606v3 Announce Type: replace 
Abstract: In pioneering work from 2019, Barcel\'o and coauthors identified logics that precisely match the expressive power of constant iteration-depth graph neural networks (GNNs) relative to properties definable in first-order logic. In this article, we give exact logical characterizations of recurrent GNNs in two scenarios: (1) in the setting with floating-point numbers and (2) with reals. For floats, the formalism matching recurrent GNNs is a rule-based modal logic with counting, while for reals we use a suitable infinitary modal logic, also with counting. These results give exact matches between logics and GNNs in the recurrent setting without relativising to a background logic in either case, but using some natural assumptions about floating-point arithmetic. Applying our characterizations, we also prove that, relative to graph properties definable in monadic second-order logic (MSO), our infinitary and rule-based logics are equally expressive. This implies that recurrent GNNs with reals and floats have the same expressive power over MSO-definable properties and shows that, for such properties, also recurrent GNNs with reals are characterized by a (finitary!) rule-based modal logic. In the general case, in contrast, the expressive power with floats is weaker than with reals. In addition to logic-oriented results, we also characterize recurrent GNNs, with both reals and floats, via distributed automata, drawing links to distributed computing models.</description>
      <guid isPermaLink="false">oai:arXiv.org:2405.14606v3</guid>
      <category>cs.LO</category>
      <category>cs.AI</category>
      <pubDate>Wed, 25 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Veeti Ahvonen, Damian Heiman, Antti Kuusisto, Carsten Lutz</dc:creator>
    </item>
    <item>
      <title>Syntax and semantics of multi-adjoint normal logic programming</title>
      <link>https://arxiv.org/abs/2409.14901</link>
      <description>arXiv:2409.14901v2 Announce Type: replace 
Abstract: Multi-adjoint logic programming is a general framework with interesting features, which involves other positive logic programming frameworks such as monotonic and residuated logic programming, generalized annotated logic programs, fuzzy logic programming and possibilistic logic programming. One of the most interesting extensions of this framework is the possibility of considering a negation operator in the logic programs, which will improve its flexibility and the range of real applications.
  This paper introduces multi-adjoint normal logic programming, which is an extension of multi-adjoint logic programming including a negation operator in the underlying lattice. Beside the introduction of the syntax and semantics of this paradigm, we will provide sufficient conditions for the existence of stable models defined on a convex compact set of a euclidean space. Finally, we will consider a particular algebraic structure in which sufficient conditions can be given in order to ensure the unicity of stable models of multi-adjoint normal logic programs.</description>
      <guid isPermaLink="false">oai:arXiv.org:2409.14901v2</guid>
      <category>cs.LO</category>
      <category>math.LO</category>
      <pubDate>Wed, 25 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <arxiv:DOI>10.1016/j.fss.2017.12.009</arxiv:DOI>
      <arxiv:journal_reference>Fuzzy Sets and Systems 345 (2018) 41-62</arxiv:journal_reference>
      <dc:creator>M. Eugenia Cornejo, David Lobo, Jes\'us Medina</dc:creator>
    </item>
    <item>
      <title>Forcing with Language Fragments, Extending Namba Forcing, and Models of Theories with Constraints in Interpretation</title>
      <link>https://arxiv.org/abs/2402.01213</link>
      <description>arXiv:2402.01213v5 Announce Type: replace-cross 
Abstract: We develop a forcing framework based on the idea of amalgamating language fragments into a theory with a canonical term model. We then demonstrate the usefulness of this framework by applying it to variants of the extended Namba problem, as well as to the analysis of models of certain theories with constraints in interpretation (TCIs). The foundations for a theory of TCIs and their models are laid in parallel to the development of our framework, and are of independent interest.</description>
      <guid isPermaLink="false">oai:arXiv.org:2402.01213v5</guid>
      <category>math.LO</category>
      <category>cs.LO</category>
      <pubDate>Wed, 25 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Desmond Lau</dc:creator>
    </item>
  </channel>
</rss>
