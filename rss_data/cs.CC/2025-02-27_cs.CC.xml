<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.CC updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.CC</link>
    <description>cs.CC updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.CC" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Fri, 28 Feb 2025 02:52:43 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Thu, 27 Feb 2025 00:00:00 -0500</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>From Chinese Postman to Salesman and Beyond II: Inapproximability and Parameterized Complexity</title>
      <link>https://arxiv.org/abs/2502.18541</link>
      <description>arXiv:2502.18541v1 Announce Type: cross 
Abstract: A well-studied continuous model of graphs considers each edge as a continuous unit-length interval of points. In the problem $\delta$-Tour defined within this model, the objective to find a shortest tour that comes within a distance of $\delta$ of every point on every edge. This parameterized problem was introduced in the predecessor to this article and shown to be essentially equivalent to the Chinese Postman problem for $\delta = 0$, to the graphic Travel Salesman Problem (TSP) for $\delta = 1/2$, and close to first Vertex Cover and then Dominating Set for even larger $\delta$. Moreover, approximation algorithms for multiple parameter ranges were provided. In this article, we provide complementing inapproximability bounds and examine the fixed-parameter tractability of the problem. On the one hand, we show the following:
  (1) For every fixed $0 &lt; \delta &lt; 3/2$, the problem $\delta$-Tour is APX-hard, while for every fixed $\delta \geq 3/2$, the problem has no polynomial-time $o(\log{n})$-approximation unless P = NP.
  Our techniques also yield the new result that TSP remains APX-hard on cubic (and even cubic bipartite) graphs.
  (2) For every fixed $0 &lt; \delta &lt; 3/2$, the problem $\delta$-Tour is fixed-parameter tractable (FPT) when parameterized by the length of a shortest tour, while it is W[2]-hard for every fixed $\delta \geq 3/2$ and para-NP-hard for $\delta$ being part of the input.
  On the other hand, if $\delta$ is considered to be part of the input, then an interesting nontrivial phenomenon occurs when $\delta$ is a constant fraction of the number of vertices:
  (3) If $\delta$ is part of the input, then the problem can be solved in time $f(k)n^{O(k)}$, where $k = \lceil n/\delta \rceil$; however, assuming the Exponential-Time Hypothesis (ETH), there is no algorithm that solves the problem and runs in time $f(k)n^{o(k/\log k)}$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2502.18541v1</guid>
      <category>cs.DS</category>
      <category>cs.CC</category>
      <pubDate>Thu, 27 Feb 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Fabian Frei, Ahmed Ghazy, Tim A. Hartmann, Florian H\"orsch, D\'aniel Marx</dc:creator>
    </item>
    <item>
      <title>Finding Minimum Matching Cuts in $H$-free Graphs and Graphs of Bounded Radius and Diameter</title>
      <link>https://arxiv.org/abs/2502.18942</link>
      <description>arXiv:2502.18942v1 Announce Type: cross 
Abstract: A matching cut is a matching that is also an edge cut. In the problem Minimum Matching Cut, we ask for a matching cut with the minimum number of edges in the matching. We give polynomial-time algorithms for $P_7$-free, $S_{1,1,2}$-free and $(P_6 + P_4)$-free graphs, which also solve several open cases for the well-studied problem Matching Cut. In addition, we show NP-hardness for $3P_3$-free graphs, implying that Minimum Matching Cut and Matching Cut differ in complexity on certain graph classes. We also give complexity dichotomies for both general and bipartite graphs of bounded radius and diameter.</description>
      <guid isPermaLink="false">oai:arXiv.org:2502.18942v1</guid>
      <category>math.CO</category>
      <category>cs.CC</category>
      <category>cs.DM</category>
      <pubDate>Thu, 27 Feb 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Felicia Lucke, Joseph Marchand, Jannik Olbrich</dc:creator>
    </item>
    <item>
      <title>Locally Sampleable Uniform Symmetric Distributions</title>
      <link>https://arxiv.org/abs/2411.08183</link>
      <description>arXiv:2411.08183v2 Announce Type: replace 
Abstract: We characterize the power of constant-depth Boolean circuits in generating uniform symmetric distributions. Let $f\colon\{0,1\}^m\to\{0,1\}^n$ be a Boolean function where each output bit of $f$ depends only on $O(1)$ input bits. Assume the output distribution of $f$ on uniform input bits is close to a uniform distribution $D$ with a symmetric support. We show that $D$ is essentially one of the following six possibilities: (1) point distribution on $0^n$, (2) point distribution on $1^n$, (3) uniform over $\{0^n,1^n\}$, (4) uniform over strings with even Hamming weights, (5) uniform over strings with odd Hamming weights, and (6) uniform over all strings. This confirms a conjecture of Filmus, Leigh, Riazanov, and Sokolov (RANDOM 2023).</description>
      <guid isPermaLink="false">oai:arXiv.org:2411.08183v2</guid>
      <category>cs.CC</category>
      <pubDate>Thu, 27 Feb 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Daniel M. Kane, Anthony Ostuni, Kewen Wu</dc:creator>
    </item>
    <item>
      <title>Infinitely growing configurations in Emil Post's tag system problem</title>
      <link>https://arxiv.org/abs/2105.07529</link>
      <description>arXiv:2105.07529v2 Announce Type: replace-cross 
Abstract: Emil Post's tag system problem posed the question of whether or not a tag system $\{N=3, P(0) = 00, P(1) = 1101\}$ has a configuration, simulation of which will never halt or end up in a loop. Over the subsequent decades, there were several attempts to find an answer to this question, including a recent study, during which the first $2^{84}$ initial configurations were checked. This paper presents a family of configurations of this type in the form of strings $A^{n} B C^{m}$ that evolve to $A^{n+1} B C^{m+1}$ after a finite number of steps. The proof of this behavior for all non-negative $n$ and $m$ is described later in this paper as a finite verification procedure, which is computationally bounded by 20 000 iterations of tag.</description>
      <guid isPermaLink="false">oai:arXiv.org:2105.07529v2</guid>
      <category>cs.DM</category>
      <category>cs.CC</category>
      <pubDate>Thu, 27 Feb 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-sa/4.0/</dc:rights>
      <arxiv:DOI>10.25088/ComplexSystems.31.3.279</arxiv:DOI>
      <arxiv:journal_reference>Complex Systems, 31(3), 2022 pp. 279-286</arxiv:journal_reference>
      <dc:creator>Nikita V. Kurilenko</dc:creator>
    </item>
    <item>
      <title>Flat origami is Turing Complete</title>
      <link>https://arxiv.org/abs/2309.07932</link>
      <description>arXiv:2309.07932v4 Announce Type: replace-cross 
Abstract: "Flat origami" refers to the folding of flat, zero-curvature paper such that the finished object lies in a plane. Mathematically, flat origami consists of a continuous, piecewise isometric map $f:P\subseteq\mathbb{R}^2\to\mathbb{R}^2$ along with a layer ordering $\lambda_f:P\times P\to \{-1,1\}$ that tracks which points of $P$ are above/below others when folded. The set of crease lines that a flat origami makes (i.e., the set on which the mapping $f$ is non-differentiable) is called its "crease pattern." Flat origami mappings and their layer orderings can possess surprisingly intricate structure. For instance, determining whether or not a given straight-line planar graph drawn on $P$ is the crease pattern for some flat origami has been shown to be an NP-complete problem, and this result from 1996 led to numerous explorations in computational aspects of flat origami. In this paper we prove that flat origami, when viewed as a computational device, is Turing complete, or more specifically P-complete. We do this by showing that flat origami crease patterns with "optional creases" (creases that might be folded or remain unfolded depending on constraints imposed by other creases or inputs) can be constructed to simulate Rule 110, a one-dimensional cellular automaton that was proven to be Turing complete by Matthew Cook in 2004.</description>
      <guid isPermaLink="false">oai:arXiv.org:2309.07932v4</guid>
      <category>math.CO</category>
      <category>cs.CC</category>
      <pubDate>Thu, 27 Feb 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Thomas C. Hull, Inna Zakharevich</dc:creator>
    </item>
  </channel>
</rss>
