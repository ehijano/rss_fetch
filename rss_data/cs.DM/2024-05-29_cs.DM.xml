<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.DM updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.DM</link>
    <description>cs.DM updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.DM" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Thu, 30 May 2024 01:48:04 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Wed, 29 May 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>Automatic Abelian Complexities of Parikh-Collinear Fixed Points</title>
      <link>https://arxiv.org/abs/2405.18032</link>
      <description>arXiv:2405.18032v1 Announce Type: new 
Abstract: Parikh-collinear morphisms have the property that all the Parikh vectors of the images of letters are collinear, i.e., the associated adjacency matrix has rank 1. In the conference DLT-WORDS 2023 we showed that fixed points of Parikh-collinear morphisms are automatic. We also showed that the abelian complexity function of a binary fixed point of such a morphism is automatic under some assumptions. In this note, we fully generalize the latter result. Namely, we show that the abelian complexity function of a fixed point of an arbitrary, possibly erasing, Parikh-collinear morphism is automatic. Furthermore, a deterministic finite automaton with output generating this abelian complexity function is provided by an effective procedure. To that end, we discuss the constant of recognizability of a morphism and the related cutting set.</description>
      <guid isPermaLink="false">oai:arXiv.org:2405.18032v1</guid>
      <category>cs.DM</category>
      <category>cs.FL</category>
      <category>math.CO</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/publicdomain/zero/1.0/</dc:rights>
      <dc:creator>Michel Rigo, Manon Stipulanti, Markus A. Whiteland</dc:creator>
    </item>
    <item>
      <title>Lyndon pairs and the lexicographically greatest perfect necklace</title>
      <link>https://arxiv.org/abs/2405.17812</link>
      <description>arXiv:2405.17812v1 Announce Type: cross 
Abstract: Fix a finite alphabet. A necklace is a circular word. For positive integers $n$ and~$k$, a necklace is $(n,k)$-perfect if all words of length $n$ occur $k$ times but at positions with different congruence modulo $k$, for any convention of the starting position. We define the notion of a Lyndon pair and we use it to construct the lexicographically greatest $(n,k)$-perfect necklace, for any $n$ and $k$ such that $n$ divides~$k$ or $k$ divides~$n$. Our construction generalizes Fredricksen and Maiorana's construction of the lexicographically greatest de Bruijn sequence of order $n$, based on the concatenation of the Lyndon words whose length divide $n$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2405.17812v1</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Ver\'onica Becher, Tom\'as Tropea</dc:creator>
    </item>
    <item>
      <title>An optimal chromatic bound for ($P_2+P_3$, gem)-free graphs</title>
      <link>https://arxiv.org/abs/2405.17819</link>
      <description>arXiv:2405.17819v1 Announce Type: cross 
Abstract: Given a graph $G$, the parameters $\chi(G)$ and $\omega(G)$ respectively denote the chromatic number and the clique number of $G$. A function $f : \mathbb{N} \rightarrow \mathbb{N}$ such that $f(1) = 1$ and $f(x) \geq x$, for all $x \in \mathbb{N}$ is called a $\chi$-binding function for the given class of graphs $\cal{G}$ if every $G \in \cal{G}$ satisfies $\chi(G) \leq f(\omega(G))$, and the \emph{smallest $\chi$-binding function} $f^*$ for $\cal{G}$ is defined as $f^*(x) := \max\{\chi(G)\mid G\in {\cal G} \mbox{ and } \omega(G)=x\}$. In general, the problem of obtaining the smallest $\chi$-binding function for the given class of graphs seems to be extremely hard, and only a few classes of graphs are studied in this direction. In this paper, we study the class of ($P_2+ P_3$, gem)-free graphs, and prove that the function $\phi:\mathbb{N}\rightarrow \mathbb{N}$ defined by $\phi(1)=1$, $\phi(2)=4$, $\phi(3)=6$ and $\phi(x)=\left\lceil\frac{1}{4}(5x-1)\right\rceil$, for $x\geq 4$ is the smallest $\chi$-binding function for the class of ($P_2+ P_3$, gem)-free graphs.</description>
      <guid isPermaLink="false">oai:arXiv.org:2405.17819v1</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Arnab Char, T. Karthick</dc:creator>
    </item>
    <item>
      <title>Sparsification of Phylogenetic Covariance Matrices of $k$-Regular Trees</title>
      <link>https://arxiv.org/abs/2405.17847</link>
      <description>arXiv:2405.17847v1 Announce Type: cross 
Abstract: Consider a tree $T=(V,E)$ with root $\circ$ and edge length function $\ell:E\to\mathbb{R}_+$. The phylogenetic covariance matrix of $T$ is the matrix $C$ with rows and columns indexed by $L$, the leaf set of $T$, with entries $C(i,j):=\sum_{e\in[i\wedge j,o]}\ell(e)$, for each $i,j\in L$. Recent work [15] has shown that the phylogenetic covariance matrix of a large, random binary tree $T$ is significantly sparsified with overwhelmingly high probability under a change-of-basis with respect to the so-called Haar-like wavelets of $T$. This finding notably enables manipulating the spectrum of covariance matrices of large binary trees without the necessity to store them in computer memory but instead performing two post-order traversals of the tree. Building on the methods of [15], this manuscript further advances their sparsification result to encompass the broader class of $k$-regular trees, for any given $k\ge2$. This extension is achieved by refining existing asymptotic formulas for the mean and variance of the internal path length of random $k$-regular trees, utilizing hypergeometric function properties and identities.</description>
      <guid isPermaLink="false">oai:arXiv.org:2405.17847v1</guid>
      <category>q-bio.PE</category>
      <category>cs.DM</category>
      <category>math.CO</category>
      <category>math.PR</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Sean S. Svihla, Manuel E. Lladser</dc:creator>
    </item>
    <item>
      <title>Upper Bounds on the Average Height of Random Binary Trees</title>
      <link>https://arxiv.org/abs/2405.17952</link>
      <description>arXiv:2405.17952v1 Announce Type: cross 
Abstract: We study the average height of random trees generated by leaf-centric binary tree sources as introduced by Zhang, Yang and Kieffer. A leaf-centric binary tree source induces for every $n \geq 2$ a probability distribution on the set of binary trees with $n$ leaves. Our results generalize a result by Devroye, according to which the average height of a random binary search tree of size $n$ is in $\mathcal{O}(\log n)$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2405.17952v1</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Louisa Seelbach Benkner</dc:creator>
    </item>
    <item>
      <title>Refined Bitcoin Security-Latency Under Network Delay</title>
      <link>https://arxiv.org/abs/2212.01372</link>
      <description>arXiv:2212.01372v3 Announce Type: replace-cross 
Abstract: We study security-latency bounds for Nakamoto consensus, i.e., how secure a block is after it becomes $k$-deep in the chain. We improve the state-of-the-art bounds by analyzing the race between adversarial and honest chains in three different phases. We find the probability distribution of the growth of the adversarial chains under models similar to those in [Guo, Ren; AFT 2022] when a target block becomes $k$-deep in the chain. We analyze certain properties of this race to model each phase with random walks that provide tighter bounds than the existing results. Combining all three phases provides novel upper and lower bounds for blockchains with small $\lambda\Delta$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2212.01372v3</guid>
      <category>cs.CR</category>
      <category>cs.DC</category>
      <category>cs.DM</category>
      <category>cs.IT</category>
      <category>math.IT</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Mustafa Doger, Sennur Ulukus</dc:creator>
    </item>
    <item>
      <title>On the minimum number of inversions to make a digraph $k$-(arc-)strong</title>
      <link>https://arxiv.org/abs/2303.11719</link>
      <description>arXiv:2303.11719v3 Announce Type: replace-cross 
Abstract: The {\it inversion} of a set $X$ of vertices in a digraph $D$ consists of reversing the direction of all arcs of $D\langle X\rangle$. We study $sinv'_k(D)$ (resp. $sinv_k(D)$) which is the minimum number of inversions needed to transform $D$ into a $k$-arc-strong (resp. $k$-strong) digraph and $sinv'_k(n) = \max\{sinv'_k(D) \mid D~\mbox{is a $2k$-edge-connected digraph of order $n$}\}$. We show :
  $(i): \frac{1}{2} \log (n - k+1) \leq sinv'_k(n) \leq \log n + 4k -3$ ;
  $(ii):$ for any fixed positive integers $k$ and $t$, deciding whether a given oriented graph $D$ with $sinv'_k(D)&lt;+\infty$ satisfies $sinv'_k(D) \leq t$ is NP-complete;
  $(iii):$ for any fixed positive integers $k$ and $t$, deciding whether a given oriented graph $D$ with $sinv_k(D)&lt;+\infty$ satisfies $sinv_k(D) \leq t$ is NP-complete;
  $(iv):$ if $T$ is a tournament of order at least $2k+1$, then $sinv'_k(T) \leq sinv_k(T) \leq 2k$, and $sinv'_k(T) \leq \frac{4}{3}k+o(k)$;
  $(v):\frac{1}{2}\log(2k+1) \leq sinv'_k(T) \leq sinv_k(T)$ for some tournament $T$ of order $2k+1$;
  $(vi):$ if $T$ is a tournament of order at least $19k-2$ (resp. $11k-2$), then $sinv'_k(T) \leq sinv_k(T) \leq 1$ (resp. $sinv_k(T) \leq 3$);
  $(vii):$ for every $\epsilon&gt;0$, there exists $C$ such that $sinv'_k(T) \leq sinv_k(T) \leq C$ for every tournament $T$ on at least $2k+1 + \epsilon k$ vertices.</description>
      <guid isPermaLink="false">oai:arXiv.org:2303.11719v3</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Julien Duron, Fr\'ed\'eric Havet, Florian H\"orsch, Cl\'ement Rambaud</dc:creator>
    </item>
    <item>
      <title>Vector Multispaces and Multispace Codes</title>
      <link>https://arxiv.org/abs/2312.14312</link>
      <description>arXiv:2312.14312v2 Announce Type: replace-cross 
Abstract: Basic algebraic and combinatorial properties of finite vector spaces in which individual vectors are allowed to have multiplicities larger than $ 1 $ are derived. An application in coding theory is illustrated by showing that multispace codes that are introduced here may be used in random linear network coding scenarios, and that they generalize standard subspace codes (defined in the set of all subspaces of $ \mathbb{F}_q^n $) and extend them to an infinitely larger set of parameters. In particular, in contrast to subspace codes, multispace codes of arbitrarily large cardinality and minimum distance exist for any fixed $ n $ and $ q $.</description>
      <guid isPermaLink="false">oai:arXiv.org:2312.14312v2</guid>
      <category>cs.IT</category>
      <category>cs.DM</category>
      <category>math.CO</category>
      <category>math.IT</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Mladen Kova\v{c}evi\'c</dc:creator>
    </item>
    <item>
      <title>Weisfeiler-Leman at the margin: When more expressivity matters</title>
      <link>https://arxiv.org/abs/2402.07568</link>
      <description>arXiv:2402.07568v2 Announce Type: replace-cross 
Abstract: The Weisfeiler-Leman algorithm ($1$-WL) is a well-studied heuristic for the graph isomorphism problem. Recently, the algorithm has played a prominent role in understanding the expressive power of message-passing graph neural networks (MPNNs) and being effective as a graph kernel. Despite its success, $1$-WL faces challenges in distinguishing non-isomorphic graphs, leading to the development of more expressive MPNN and kernel architectures. However, the relationship between enhanced expressivity and improved generalization performance remains unclear. Here, we show that an architecture's expressivity offers limited insights into its generalization performance when viewed through graph isomorphism. Moreover, we focus on augmenting $1$-WL and MPNNs with subgraph information and employ classical margin theory to investigate the conditions under which an architecture's increased expressivity aligns with improved generalization performance. In addition, we show that gradient flow pushes the MPNN's weights toward the maximum margin solution. Further, we introduce variations of expressive $1$-WL-based kernel and MPNN architectures with provable generalization properties. Our empirical study confirms the validity of our theoretical findings.</description>
      <guid isPermaLink="false">oai:arXiv.org:2402.07568v2</guid>
      <category>cs.LG</category>
      <category>cs.DM</category>
      <category>cs.NE</category>
      <category>stat.ML</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Billy J. Franks, Christopher Morris, Ameya Velingker, Floris Geerts</dc:creator>
    </item>
    <item>
      <title>On the integrality gap of the Complete Metric Steiner Tree Problem via a novel formulation</title>
      <link>https://arxiv.org/abs/2405.13773</link>
      <description>arXiv:2405.13773v2 Announce Type: replace-cross 
Abstract: In this work, we compute the lower bound of the integrality gap of the Metric Steiner Tree Problem (MSTP) on a graph for some small values of number of nodes and terminals. After debating about some limitations of the most used formulation for the Steiner Tree Problem, namely the Bidirected Cut Formulation, we introduce a novel formulation, that we named Complete Metric formulation, tailored for the metric case. We prove some interesting properties of this formulation and characterize some types of vertices. Finally, we define a linear program (LP) by adapting a method already used in the context of the Travelling Salesman Problem. This LP takes as input a vertex of the polytope of the CM relaxation and provides an MSTP instance such that (a) the optimal solution is precisely that vertex and (b) among all of the instances having that vertex as its optimal solution, the selected instance is the one having the highest integrality gap. We propose two heuristics for generating vertices to provide inputs for our procedure. In conclusion, we raise several conjectures and open questions.</description>
      <guid isPermaLink="false">oai:arXiv.org:2405.13773v2</guid>
      <category>math.OC</category>
      <category>cs.DM</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Ambrogio Maria Bernardelli, Eleonora Vercesi, Stefano Gualandi, Monaldo Mastrolilli, Luca Maria Gambardella</dc:creator>
    </item>
  </channel>
</rss>
