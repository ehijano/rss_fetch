<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.CC updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.CC</link>
    <description>cs.CC updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.CC" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Wed, 14 May 2025 04:00:01 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Wed, 14 May 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Short and useful quantum proofs for sublogarithmic-space verifiers</title>
      <link>https://arxiv.org/abs/2505.08462</link>
      <description>arXiv:2505.08462v1 Announce Type: new 
Abstract: Quantum Merlin-Arthur proof systems are believed to be stronger than both their classical counterparts and ``stand-alone'' quantum computers when Arthur is assumed to operate in $\Omega(\log n)$ space. No hint of such an advantage over classical computation had emerged from research on smaller space bounds, which had so far concentrated on constant-space verifiers. We initiate the study of quantum Merlin-Arthur systems with space bounds in $\omega(1) \cap o(\log n)$, and exhibit a problem family $\mathcal{F}$, whose yes-instances have proofs that are verifiable by polynomial-time quantum Turing machines operating in this regime. We show that no problem in $\mathcal{F}$ has proofs that can be verified classically or is solvable by a stand-alone quantum machine in polynomial time if standard complexity assumptions hold. Unlike previous examples of small-space verifiers, our protocols require only subpolynomial-length quantum proofs.</description>
      <guid isPermaLink="false">oai:arXiv.org:2505.08462v1</guid>
      <category>cs.CC</category>
      <pubDate>Wed, 14 May 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>A. C. Cem Say</dc:creator>
    </item>
    <item>
      <title>Lower Bounds from Succinct Hitting Sets</title>
      <link>https://arxiv.org/abs/2309.07612</link>
      <description>arXiv:2309.07612v2 Announce Type: replace 
Abstract: We investigate the consequences of the existence of ``efficiently describable'' hitting sets for polynomial sized algebraic circuit ($\mathsf{VP}$), in particular, \emph{$\mathsf{VP}$-succinct hitting sets}. Existence of such hitting sets is known to be equivalent to a ``natural-proofs-barrier'' towards algebraic circuit lower bounds, from the works that introduced this concept (Forbes \etal (2018), Grochow \etal (2017)). We show that the existence of $\mathsf{VP}$-succinct hitting sets for $\mathsf{VP}$ would either imply that $\mathsf{VP} \neq \mathsf{VNP}$, or yield a fairly strong lower bound against $\mathsf{TC}^0$ circuits, assuming the Generalized Riemann Hypothesis (GRH).
  This result is a consequence of showing that designing efficiently describable ($\mathsf{VP}$-explicit) hitting set generators for a class $\mathcal{C}$, is essentially the same as proving a separation between $\mathcal{C}$ and $\mathsf{VPSPACE}$: the algebraic analogue of \textsf{PSPACE}. More formally, we prove an upper bound on \emph{equations} for polynomial sized algebraic circuits ($\mathsf{VP}$), in terms of $\mathsf{VPSPACE}$.
  Using the same upper bound, we also show that even \emph{sub-polynomially explicit hitting sets} for $\mathsf{VP}$ -- much weaker than $\mathsf{VP}$-succinct hitting sets that are almost polylog-explicit -- would imply that either $\mathsf{VP} \neq \mathsf{VNP}$ or that $\mathsf{P} \neq \mathsf{PSPACE}$. This motivates us to define the concept of \emph{cryptographic hitting sets}, which we believe is interesting on its own.</description>
      <guid isPermaLink="false">oai:arXiv.org:2309.07612v2</guid>
      <category>cs.CC</category>
      <pubDate>Wed, 14 May 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-sa/4.0/</dc:rights>
      <dc:creator>Prerona Chatterjee, Anamay Tengse</dc:creator>
    </item>
    <item>
      <title>Interactive Oracle Proofs of Proximity to Codes on Graphs</title>
      <link>https://arxiv.org/abs/2501.14337</link>
      <description>arXiv:2501.14337v2 Announce Type: replace 
Abstract: We design an Interactive Oracle Proof of Proximity (IOPP) for codes on graphs inspired by the FRI protocol. The soundness is significantly improved compared to the FRI, the complexity parameters are comparable, and there are no restrictions on the field used, enabling to consider new codes to design code-based SNARKs.</description>
      <guid isPermaLink="false">oai:arXiv.org:2501.14337v2</guid>
      <category>cs.CC</category>
      <category>cs.CR</category>
      <pubDate>Wed, 14 May 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Hugo Delavenne (GRACE), Tanguy Medevielle (IRMAR, GRACE), \'Elina Roussel (GRACE)</dc:creator>
    </item>
    <item>
      <title>On the Space Complexity of Online Convolution</title>
      <link>https://arxiv.org/abs/2505.00181</link>
      <description>arXiv:2505.00181v2 Announce Type: replace 
Abstract: We study a discrete convolution streaming problem. An input arrives as a stream of numbers $z = (z_0,z_1,z_2,\ldots)$, and at time $t$ our goal is to output $(Tz)_t$ where $T$ is a lower-triangular Toeplitz matrix. We focus on space complexity; the algorithm can store a buffer of $\beta(t)$ numbers in order to achieve this goal.
  We characterize space complexity when algorithms perform continuous operations. The matrix $T$ corresponds to a generating function $G(x)$. If $G(x)$ is rational of degree $d$, then it is known that the space complexity is at most $O(d)$. We prove a corresponding lower bound; the space complexity is at least $\Omega(d)$. In addition, for irrational $G(x)$, we prove that the space complexity is infinite. We also provide finite-time guarantees. For example, for the generating function $\frac{1}{\sqrt{1-x}}$ that was studied in various previous works in the context of differentially private continual counting, we prove a sharp lower bound on the space complexity; at time $t$, it is at least $\Omega(t)$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2505.00181v2</guid>
      <category>cs.CC</category>
      <category>cs.DS</category>
      <pubDate>Wed, 14 May 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Joel Daniel Andersson, Amir Yehudayoff</dc:creator>
    </item>
    <item>
      <title>The next gap in the subrank of 3-tensors</title>
      <link>https://arxiv.org/abs/2307.06115</link>
      <description>arXiv:2307.06115v2 Announce Type: replace-cross 
Abstract: Recent works of Costa-Dalai, Christandl-Gesmundo-Zuiddam, Blatter-Draisma-Rupniewski, and Bri\"et-Christandl-Leigh-Shpilka-Zuiddam have investigated notions of discreteness and gaps in the possible values that asymptotic tensor ranks can take. In particular, it was shown that the asymptotic subrank and asymptotic slice rank of any nonzero 3-tensor is equal to 1, equal to 1.88, or at least 2 (over any field), and that the set of possible values of these parameters is discrete (in several regimes). We determine exactly the next gap, showing that the asymptotic subrank and asymptotic slice rank of any nonzero 3-tensor is equal to 1, equal to 1.88, equal to 2, or at least 2.68.</description>
      <guid isPermaLink="false">oai:arXiv.org:2307.06115v2</guid>
      <category>math.AG</category>
      <category>cs.CC</category>
      <category>math.CO</category>
      <category>quant-ph</category>
      <pubDate>Wed, 14 May 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:DOI>10.1016/j.laa.2025.04.027</arxiv:DOI>
      <dc:creator>Fulvio Gesmundo, Jeroen Zuiddam</dc:creator>
    </item>
    <item>
      <title>Deciding One to One property of Boolean maps: Condition and algorithm in terms of implicants</title>
      <link>https://arxiv.org/abs/2307.07788</link>
      <description>arXiv:2307.07788v4 Announce Type: replace-cross 
Abstract: This paper addresses the computational problem of deciding invertibility (or one to one-ness) of a Boolean map $F$ in $n$-Boolean variables. This problem is a special case of deciding invertibilty of a map $F:\mathbb{F}_{q}^n\rightarrow\mathbb{F}_{q}^n$ over the finite field $\mathbb{F}_q$ for $q=2$. Algebraic condition for invertibility of $F$ is well known to be equivalent to invertibility of the Koopman operator of $F$ as shown in \cite{RamSule}. In this paper a condition for invertibility is derived in the special case of Boolean maps $F:B_0^n\rightarrow B_0^n$ where $B_0$ is the two element Boolean algebra in terms of \emph{implicants} of Boolean equations defined by the map. This condition is then extended to the case of general maps in $n$ variables and $m\geq n$ equations. Hence this condition answers the special case of invertibility of maps $F$ defined over the binary field $\mathbb{F}_2$ alternatively, in terms of implicants instead of the Koopman operator. The problem of deciding invertibility of a map $F$ (or that of finding its Garden of Eden (GOE)) over finite fields is distinct from the satisfiability problem (SAT) or the problem of deciding consistency of polynomial equations over finite fields. Hence the well known algorithms for deciding SAT or of solvability using Grobner basis for checking membership in an ideal generated by polynomials is not known to answer the question of invertibility of a map. Similarly it appears that algorithms for satisfiability or polynomial solvability are not useful for computation of GOE of $F$ even for maps over the binary field $\mathbb{F}_2$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2307.07788v4</guid>
      <category>cs.SC</category>
      <category>cs.CC</category>
      <pubDate>Wed, 14 May 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Virendra Sule</dc:creator>
    </item>
    <item>
      <title>The Complexity of Resilience Problems via Valued Constraint Satisfaction</title>
      <link>https://arxiv.org/abs/2309.15654</link>
      <description>arXiv:2309.15654v5 Announce Type: replace-cross 
Abstract: Valued constraint satisfaction problems (VCSPs) constitute a large class of computational optimisation problems. It was shown recently that, over finite domains, every VCSP is in P or NP-complete, depending on the admitted cost functions. In this article, we study cost functions over countably infinite domains whose automorphisms form an oligomorphic permutation group. Our results include a hardness condition based on a generalisation of pp-constructability as known from classical CSPs and a polynomial-time tractability condition based on the concept of fractional polymorphisms. We then observe that the resilience problem for unions of conjunctive queries (UCQs) studied in database theory, under bag semantics, may be viewed as a special case of the VCSPs that we consider. We obtain a complexity dichotomy for the case of incidence-acyclic UCQs and exemplarily use our methods to determine the complexity of a conjunctive query that has been stated as an open problem in the literature. We conjecture that our hardness and tractability conditions match for resilience problems for UCQs. Further, we obtain a complete dichotomy for resilience problems for two-way regular path queries, under bag semantics.</description>
      <guid isPermaLink="false">oai:arXiv.org:2309.15654v5</guid>
      <category>math.LO</category>
      <category>cs.CC</category>
      <category>cs.DB</category>
      <pubDate>Wed, 14 May 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-sa/4.0/</dc:rights>
      <dc:creator>Manuel Bodirsky, \v{Z}aneta Semani\v{s}inov\'a, Carsten Lutz</dc:creator>
    </item>
  </channel>
</rss>
