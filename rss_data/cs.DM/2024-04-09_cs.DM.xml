<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.DM updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.DM</link>
    <description>cs.DM updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.DM" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Wed, 10 Apr 2024 04:00:00 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Wed, 10 Apr 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Space-time deterministic graph rewriting</title>
      <link>https://arxiv.org/abs/2404.05838</link>
      <description>arXiv:2404.05838v1 Announce Type: new 
Abstract: We study non-terminating graph rewriting models, whose local rules are applied non-deterministically -- and yet enjoy a strong form of determinism, namely space-time determinism. Of course in the case of terminating computation it is well-known that the mess introduced by asynchronous rule applications may not matter to the end result, as confluence conspires to produce a unique normal form. In the context of non-terminating computation however, confluence is a very weak property, and (almost) synchronous rule applications is always preferred e.g. when it comes to simulating dynamical systems. Here we provide sufficient conditions so that asynchronous local rule applications conspire to produce well-determined events in the space-time unfolding of the graph, regardless of their application orders. Our first example is an asynchronous simulation of a dynamical system. Our second example features time dilation, in the spirit of general relativity.</description>
      <guid isPermaLink="false">oai:arXiv.org:2404.05838v1</guid>
      <category>cs.DM</category>
      <category>cs.DC</category>
      <category>gr-qc</category>
      <category>math.DS</category>
      <category>nlin.CG</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Pablo Arrighi, Marin Costes, Gilles Dowek, Luidnel Maignan</dc:creator>
    </item>
    <item>
      <title>The Central Spanning Tree Problem</title>
      <link>https://arxiv.org/abs/2404.06447</link>
      <description>arXiv:2404.06447v1 Announce Type: new 
Abstract: Spanning trees are an important primitive in many data analysis tasks, when a data set needs to be summarized in terms of its "skeleton", or when a tree-shaped graph over all observations is required for downstream processing. Popular definitions of spanning trees include the minimum spanning tree and the optimum distance spanning tree, a.k.a. the minimum routing cost tree. When searching for the shortest spanning tree but admitting additional branching points, even shorter spanning trees can be realized: Steiner trees. Unfortunately, both minimum spanning and Steiner trees are not robust with respect to noise in the observations; that is, small perturbations of the original data set often lead to drastic changes in the associated spanning trees. In response, we make two contributions when the data lies in a Euclidean space: on the theoretical side, we introduce a new optimization problem, the "(branched) central spanning tree", which subsumes all previously mentioned definitions as special cases. On the practical side, we show empirically that the (branched) central spanning tree is more robust to noise in the data, and as such is better suited to summarize a data set in terms of its skeleton. We also propose a heuristic to address the NP-hard optimization problem, and illustrate its use on single cell RNA expression data from biology and 3D point clouds of plants.</description>
      <guid isPermaLink="false">oai:arXiv.org:2404.06447v1</guid>
      <category>cs.DM</category>
      <category>cs.CV</category>
      <category>cs.DS</category>
      <category>math.CO</category>
      <category>math.OC</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Enrique Fita Sanmart\'in, Christoph Schn\"orr, Fred A. Hamprecht</dc:creator>
    </item>
    <item>
      <title>Extremal minimal bipartite matching covered graphs</title>
      <link>https://arxiv.org/abs/2404.06445</link>
      <description>arXiv:2404.06445v1 Announce Type: cross 
Abstract: A connected graph, on four or more vertices, is matching covered if every edge is present in some perfect matching. An ear decomposition theorem (similar to the one for $2$-connected graphs) exists for bipartite matching covered graphs due to Hetyei. From the results and proofs of Lov\'asz and Plummer, that rely on Hetyei's theorem, one may deduce that any minimal bipartite matching covered graph has at least $2(m-n+2)$ vertices of degree two (where minimal means that deleting any edge results in a graph that is not matching covered); such a graph is said to be extremal if it attains the stated lower bound.
  In this paper, we provide a complete characterization of the class of extremal minimal bipartite matching covered graphs. In particular, we prove that every such graph $G$ is obtained from two copies of a tree devoid of degree two vertices, say $T$ and $T'$, by adding edges -- each of which joins a leaf of $T$ with the corresponding leaf of $T'$.
  Apart from the aforementioned bound, there are four other bounds that appear in, or may be deduced from, the work of Lov\'asz and Plummer. Each of these bounds leads to a notion of extremality. In this paper, we obtain a complete characterization of all of these extremal classes and also establish relationships between them. Two of our characterizations are in the same spirit as the one stated above. For the remaining two extremal classes, we reduce each of them to one of the already characterized extremal classes using standard matching theoretic operations.</description>
      <guid isPermaLink="false">oai:arXiv.org:2404.06445v1</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Amit Kumar Mallik, Ajit A. Diwan, Nishad Kothari</dc:creator>
    </item>
    <item>
      <title>Hamiltonian path and Hamiltonian cycle are solvable in polynomial time in graphs of bounded independence number</title>
      <link>https://arxiv.org/abs/2309.09228</link>
      <description>arXiv:2309.09228v2 Announce Type: replace 
Abstract: A Hamiltonian path (a Hamiltonian cycle) in a graph is a path (a cycle, respectively) that traverses all of its vertices. The problems of deciding their existence in an input graph are well-known to be NP-complete, in fact, they belong to the first problems shown to be computationally hard when the theory of NP-completeness was being developed. A lot of research has been devoted to the complexity of Hamiltonian path and Hamiltonian cycle problems for special graph classes, yet only a handful of positive results are known. The complexities of both of these problems have been open even for $4K_1$-free graphs, i.e., graphs of independence number at most $3$. We answer this question in the general setting of graphs of bounded independence number.
  We also consider a newly introduced problem called \emph{Hamiltonian-$\ell$-Linkage} which is related to the notions of a path cover and of a linkage in a graph. This problem asks if given $\ell$ pairs of vertices in an input graph can be connected by disjoint paths that altogether traverse all vertices of the graph. For $\ell=1$, Hamiltonian-1-Linkage asks for existence of a Hamiltonian path connecting a given pair of vertices. Our main result reads that for every pair of integers $k$ and $\ell$, the Hamiltonian-$\ell$-Linkage problem is polynomial time solvable for graphs of independence number not exceeding $k$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2309.09228v2</guid>
      <category>cs.DM</category>
      <category>math.CO</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Nikola Jedli\v{c}kov\'a, Jan Kratochv\'il</dc:creator>
    </item>
    <item>
      <title>Generalized Nash Equilibrium Problems with Mixed-Integer Variables</title>
      <link>https://arxiv.org/abs/2107.13298</link>
      <description>arXiv:2107.13298v3 Announce Type: replace-cross 
Abstract: We consider generalized Nash equilibrium problems (GNEPs) with non-convex strategy spaces and non-convex cost functions. This general class of games includes the important case of games with mixed-integer variables for which only a few results are known in the literature. We present a new approach to characterize equilibria via a convexification technique using the Nikaido-Isoda function. To any given instance of the GNEP, we construct a set of convexified instances and show that a feasible strategy profile is an equilibrium for the original instance if and only if it is an equilibrium for any convexified instance and the convexified cost functions coincide with the initial ones. We develop this convexification approach along three dimensions: We first show that for quasi-linear models, where a convexified instance exists in which for fixed strategies of the opponent players, the cost function of every player is linear and the respective strategy space is polyhedral, the convexification reduces the GNEP to a standard (non-linear) optimization problem. Secondly, we derive two complete characterizations of those GNEPs for which the convexification leads to a jointly constrained or a jointly convex GNEP, respectively. These characterizations require new concepts related to the interplay of the convex hull operator applied to restricted subsets of feasible strategies and may be interesting on their own. Note that this characterization is also computationally relevant as jointly convex GNEPs have been extensively studied in the literature. Finally, we demonstrate the applicability of our results by presenting a numerical study regarding the computation of equilibria for three classes of GNEPs related to integral network flows and discrete market equilibria.</description>
      <guid isPermaLink="false">oai:arXiv.org:2107.13298v3</guid>
      <category>cs.GT</category>
      <category>cs.DM</category>
      <category>cs.DS</category>
      <category>math.OC</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:DOI>10.1007/s10107-024-02063-6</arxiv:DOI>
      <arxiv:journal_reference>Mathematical Programming (2024)</arxiv:journal_reference>
      <dc:creator>Tobias Harks, Julian Schwarz</dc:creator>
    </item>
    <item>
      <title>From approximate to exact integer programming</title>
      <link>https://arxiv.org/abs/2211.03859</link>
      <description>arXiv:2211.03859v4 Announce Type: replace-cross 
Abstract: Approximate integer programming is the following: For a convex body $K \subseteq \mathbb{R}^n$, either determine whether $K \cap \mathbb{Z}^n$ is empty, or find an integer point in the convex body scaled by $2$ from its center of gravity $c$. Approximate integer programming can be solved in time $2^{O(n)}$ while the fastest known methods for exact integer programming run in time $2^{O(n)} \cdot n^n$. So far, there are no efficient methods for integer programming known that are based on approximate integer programming. Our main contribution are two such methods, each yielding novel complexity results.
  First, we show that an integer point $x^* \in (K \cap \mathbb{Z}^n)$ can be found in time $2^{O(n)}$, provided that the remainders of each component $x_i^* \mod{\ell}$ for some arbitrarily fixed $\ell \geq 5(n+1)$ of $x^*$ are given. The algorithm is based on a cutting-plane technique, iteratively halving the volume of the feasible set. The cutting planes are determined via approximate integer programming. Enumeration of the possible remainders gives a $2^{O(n)}n^n$ algorithm for general integer programming. This matches the current best bound of an algorithm by Dadush (2012) that is considerably more involved. Our algorithm also relies on a new asymmetric approximate Carath\'eodory theorem that might be of interest on its own.
  Our second method concerns integer programming problems in equation-standard form $Ax = b, 0 \leq x \leq u, \, x \in \mathbb{Z}^n$ . Such a problem can be reduced to the solution of $\prod_i O(\log u_i +1)$ approximate integer programming problems. This implies, for example that knapsack or subset-sum problems with polynomial variable range $0 \leq x_i \leq p(n)$ can be solved in time $(\log n)^{O(n)}$. For these problems, the best running time so far was $n^n \cdot 2^{O(n)}$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2211.03859v4</guid>
      <category>math.OC</category>
      <category>cs.CC</category>
      <category>cs.DM</category>
      <category>cs.DS</category>
      <category>math.CO</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Daniel Dadush, Friedrich Eisenbrand, Thomas Rothvoss</dc:creator>
    </item>
    <item>
      <title>Functors on relational structures which admit both left and right adjoints</title>
      <link>https://arxiv.org/abs/2302.13657</link>
      <description>arXiv:2302.13657v3 Announce Type: replace-cross 
Abstract: This paper describes several cases of adjunction in the homomorphism preorder of relational structures. We say that two functors $\Lambda$ and $\Gamma$ between thin categories of relational structures are adjoint if for all structures $\mathbf A$ and $\mathbf B$, we have that $\Lambda(\mathbf A)$ maps homomorphically to $\mathbf B$ if and only if $\mathbf A$ maps homomorphically to $\Gamma(\mathbf B)$. If this is the case, $\Lambda$ is called the left adjoint to $\Gamma$ and $\Gamma$ the right adjoint to $\Lambda$. In 2015, Foniok and Tardif described some functors on the category of digraphs that allow both left and right adjoints. The main contribution of Foniok and Tardif is a construction of right adjoints to some of the functors identified as right adjoints by Pultr in 1970. We generalise results of Foniok and Tardif to arbitrary relational structures, and coincidently, we also provide more right adjoints on digraphs, and since these constructions are connected to finite duality, we also provide a new construction of duals to trees. Our results are inspired by an application in promise constraint satisfaction -- it has been shown that such functors can be used as efficient reductions between these problems.</description>
      <guid isPermaLink="false">oai:arXiv.org:2302.13657v3</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <category>math.CT</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>V\'ictor Dalmau, Andrei Krokhin, Jakub Opr\v{s}al</dc:creator>
    </item>
    <item>
      <title>Complexity and algorithms for matching cut problems in graphs without long induced paths and cycles</title>
      <link>https://arxiv.org/abs/2307.05402</link>
      <description>arXiv:2307.05402v2 Announce Type: replace-cross 
Abstract: In a graph, a (perfect) matching cut is an edge cut that is a (perfect) matching. Matching Cut (MC), respectively, Perfect Matching Cut (PMC), is the problem of deciding whether a given graph has a matching cut, respectively, a perfect matching cut. The Disconnected Perfect Matching problem (DPM) is to decide if a graph has a perfect matching that contains a matching cut. Solving an open problem posed in [Lucke, Paulusma, Ries (ISAAC 2022, Algorithmica 2023) &amp; Feghali, Lucke, Paulusma, Ries (arXiv:2212.12317)], we show that PMC is NP-complete in graphs without induced $14$-vertex path $P_{14}$. Our reduction also works simultaneously for MC and DPM, improving the previous hardness results of MC on $P_{15}$-free graphs and of DPM on $P_{19}$-free graphs to $P_{14}$-free graphs for both problems. Actually, we prove a slightly stronger result: within $P_{14}$-free $8$-chordal graphs (graphs without chordless cycles of length at least $9$), it is hard to distinguish between those without matching cuts (respectively, perfect matching cuts, disconnected perfect matchings) and those in which every matching cut is a perfect matching cut. Moreover, assuming the Exponential Time Hypothesis, none of these problems can be solved in $2^{o(n)}$ time for $n$-vertex $P_{14}$-free $8$-chordal graphs. On the positive side, we show that, as for MC [Moshi (JGT 1989)], DPM and PMC are polynomially solvable when restricted to $4$-chordal graphs. Together with the negative results, this partly answers an open question on the complexity of PMC in $k$-chordal graphs asked in [Le, Telle (TCS 2022) &amp; Lucke, Paulusma, Ries (MFCS 2023)].</description>
      <guid isPermaLink="false">oai:arXiv.org:2307.05402v2</guid>
      <category>cs.CC</category>
      <category>cs.DM</category>
      <category>math.CO</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Hoang-Oanh Le, Van Bang Le</dc:creator>
    </item>
    <item>
      <title>Recognition of chordal graphs and cographs which are Cover-Incomparability graphs</title>
      <link>https://arxiv.org/abs/2307.13964</link>
      <description>arXiv:2307.13964v2 Announce Type: replace-cross 
Abstract: Cover-Incomparability graphs (C-I graphs) are an interesting class of graphs from posets. A C-I graph is a graph from a poset $P=(V,\le)$ with vertex set $V$, and the edge-set is the union of edge sets of the cover graph and the incomparability graph of the poset. The recognition of the C-I graphs is known to be NP-complete (Maxov\'{a} et al., Order 26(3), 229--236(2009)). In this paper, we prove that chordal graphs having at most two independent simplicial vertices are exactly the chordal graphs which are also C-I graphs. A similar result is obtained for cographs as well. Using the structural results of these graphs, we derive linear time recognition algorithms for chordal graphs and cographs which are C-I graphs.</description>
      <guid isPermaLink="false">oai:arXiv.org:2307.13964v2</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-sa/4.0/</dc:rights>
      <dc:creator>Arun Anil, Manoj Changat</dc:creator>
    </item>
    <item>
      <title>Thick Forests</title>
      <link>https://arxiv.org/abs/2309.01482</link>
      <description>arXiv:2309.01482v3 Announce Type: replace-cross 
Abstract: We consider classes of graphs, which we call thick graphs, that have the vertices of a corresponding thin graph replaced by cliques and the edges replaced by cobipartite graphs. In particular, we consider the case of thick forests, which are a class of perfect graphs. Whereas recognising membership of most classes of thick graphs is NP-complete, we show that thick forests can be recognised in polynomial time. We consider two well-studied combinatorial problems on thick graphs, independent sets and proper colourings. Since finding the independence or chromatic number of a perfect graph is well known to be in polynomial time, we examine the complexity of counting all independent sets and colourings in a thick forest. Finally, we consider two extensions of our results to larger classes: thick triangle-free graphs and thick bounded-treewidth graphs.</description>
      <guid isPermaLink="false">oai:arXiv.org:2309.01482v3</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Martin Dyer, Haiko M\"uller</dc:creator>
    </item>
    <item>
      <title>Secure Total Domination Number in Maximal Outerplanar Graphs</title>
      <link>https://arxiv.org/abs/2403.03404</link>
      <description>arXiv:2403.03404v2 Announce Type: replace-cross 
Abstract: A subset $S$ of vertices in a graph $G$ is a secure total dominating set of $G$ if $S$ is a total dominating set of $G$ and, for each vertex $u \not\in S$, there is a vertex $v \in S$ such that $uv$ is an edge and $(S \setminus \{v\}) \cup \{u\}$ is also a total dominating set of $G$. We show that if $G$ is a maximal outerplanar graph of order $n$, then $G$ has a total secure dominating set of size at most $\lfloor 2n/3 \rfloor$. Moreover, if an outerplanar graph $G$ of order $n$, then each secure total dominating set has at least $\lceil (n+2)/3 \rceil$ vertices. We show that these bounds are best possible.</description>
      <guid isPermaLink="false">oai:arXiv.org:2403.03404v2</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Yasufumi Aita, Toru Araki</dc:creator>
    </item>
    <item>
      <title>Circular-arc graphs and the Helly property</title>
      <link>https://arxiv.org/abs/2404.00416</link>
      <description>arXiv:2404.00416v2 Announce Type: replace-cross 
Abstract: In this paper we investigate some problems related to the Helly properties of circular-arc graphs, which are defined as intersection graphs of arcs of a fixed circle. As such, circular-arc graphs are among the simplest classes of intersection graphs whose models might not satisfy the Helly property. In particular, some cliques of a circular-arc graph might be Helly in some but not all arc intersection models of the graph.
  Our first result is an alternative proof of a theorem by Lin and Szwarcfiter which asserts that for every circular-arc graph $G$ either every normalized model of $G$ satisfies the Helly property or no normalized model of $G$ satisfies this property.
  Further, we study the Helly properties of a single clique of a circular-arc graph $G$. We divide the cliques of $G$ into three types: a clique $C$ of $G$ is always-Helly/always-non-Helly/ambiguous if $C$ is Helly in every/no/(some but not all) normalized model of $G$. We provide a combinatorial description for the cliques of each type, and based on it, we devise a polynomial time algorithm which determines the type of a given clique.
  Finally, we study the Helly Cliques problem, in which we are given an $n$-vertex circular-arc graph $G$ and some of its cliques $C_1, \ldots, C_k$ and we ask if there is an arc intersection model of $G$ in which all the cliques $C_1, \ldots, C_k$ satisfy the Helly property. We show that:
  (1) the Helly Cliques problem admits a $2^{O(k\log{k})}n^{O(1)}$-time algorithm (that is, it is FPT when parametrized by the number of cliques given in the input),
  (2) assuming Exponential Time Hypothesis (ETH), the Helly Cliques problem cannot be solved in time $2^{o(k)}n^{O(1)}$,
  (3) the Helly Cliques problem admits a polynomial kernel of size $O(k^6)$.
  All our results use a data structure, called a PQM-tree, which maintains all normalized models of a circular-arc graph $G$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2404.00416v2</guid>
      <category>cs.DS</category>
      <category>cs.DM</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Jan Derbisz, Tomasz Krawczyk</dc:creator>
    </item>
  </channel>
</rss>
