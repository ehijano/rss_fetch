<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.LO updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.LO</link>
    <description>cs.LO updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.LO" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Tue, 11 Jun 2024 04:02:08 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Tue, 11 Jun 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>A propositional cirquent calculus for computability logic</title>
      <link>https://arxiv.org/abs/2406.05879</link>
      <description>arXiv:2406.05879v1 Announce Type: new 
Abstract: Cirquent calculus is a proof system with inherent ability to account for sharing subcomponents in
  logical expressions. Within its framework, this article constructs an axiomatization CL18 of the basic
  propositional fragment of computability logic the game-semantically conceived logic of computational
  resources and tasks. The nonlogical atoms of this fragment represent arbitrary so called static games, and
  the connectives of its logical vocabulary are negation and the parallel and choice versions of conjunction
  and disjunction. The main technical result of the article is a proof of the soundness and completeness of
  CL18 with respect to the semantics of computability logic.</description>
      <guid isPermaLink="false">oai:arXiv.org:2406.05879v1</guid>
      <category>cs.LO</category>
      <category>math.LO</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Giorgi Japaridze</dc:creator>
    </item>
    <item>
      <title>The New TPTP Format for Interpretations</title>
      <link>https://arxiv.org/abs/2406.06108</link>
      <description>arXiv:2406.06108v1 Announce Type: new 
Abstract: This paper describes the new TPTP format for representing interpretations. It provides a background survey that helped us ensure that the representation format is adequate for different types of interpretations: Tarskian, Herbrand, and Kripke interpretations. The needs of applications that use models are considered. The syntax and semantics of the new format is expounded in detail, with multiple examples. Verification of models is discussed. Some tools that support processing the new format are noted. The properties of interpretations represented in the new format are discussed.</description>
      <guid isPermaLink="false">oai:arXiv.org:2406.06108v1</guid>
      <category>cs.LO</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Geoff Sutcliffe, Alexander Steen, Pascal Fontaine</dc:creator>
    </item>
    <item>
      <title>Practical Boolean Decomposition for Delay-driven LUT Mapping</title>
      <link>https://arxiv.org/abs/2406.06241</link>
      <description>arXiv:2406.06241v1 Announce Type: new 
Abstract: Ashenhurst-Curtis decomposition (ACD) is a decomposition technique used, in particular, to map combinational logic into lookup tables (LUTs) structures when synthesizing hardware designs. However, available implementations of ACD suffer from excessive complexity, search-space restrictions, and slow run time, which limit their applicability and scalability. This paper presents a novel fast and versatile technique of ACD suitable for delay optimization. We use this new formulation to compute two-level decompositions into a variable number of LUTs and enhance delay-driven LUT mapping by performing ACD on the fly. Compared to state-of-the-art technology mapping, experiments on heavily optimized benchmarks demonstrate an average delay improvement of 12.39%, and area reduction of 2.20% with affordable run time. Additionally, our method improves 4 of the best delay results in the EPFL synthesis competition without employing design-space exploration techniques.</description>
      <guid isPermaLink="false">oai:arXiv.org:2406.06241v1</guid>
      <category>cs.LO</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Alessandro Tempia Calvino, Alan Mishchenko, Giovanni De Micheli, Robert Brayton</dc:creator>
    </item>
    <item>
      <title>Oracle modalities</title>
      <link>https://arxiv.org/abs/2406.05818</link>
      <description>arXiv:2406.05818v1 Announce Type: cross 
Abstract: We give a new formulation of Turing reducibility in terms of higher modalities, inspired by an embedding of the Turing degrees in the lattice of subtoposes of the effective topos discovered by Hyland. In this definition, higher modalities play a similar role to I/O monads or dialogue trees in allowing a function to receive input from an external oracle. However, in homotopy type theory they have better logical properties than monads: they are compatible with higher types, and each modality corresponds to a reflective subuniverse that under suitable conditions is itself a model of homotopy type theory.
  We give synthetic proofs of some basic results about Turing reducibility in cubical type theory making use of two axioms of Markov induction and computable choice. Both axioms are variants of axioms already studied in the effective topos. We show they hold in certain reflective subuniverses of cubical assemblies, demonstrate their use in some simple proofs in synthetic computability theory using modalities, and show they are downwards absolute for oracle modalities. These results have been formalised using cubical mode of the Agda proof assistant.
  We explore some first connections between Turing reducibility and homotopy theory. This includes a synthetic proof that two Turing degrees are equal as soon as they induce isomorphic permutation groups on the natural numbers, making essential use of both Markov induction and the formulation of groups in HoTT as pointed, connected, 1-truncated types. We also give some simple non-topological examples of modalities in cubical assemblies based on these ideas, to illustrate what we expect higher dimensional analogues of the Turing degrees to look like.</description>
      <guid isPermaLink="false">oai:arXiv.org:2406.05818v1</guid>
      <category>math.LO</category>
      <category>cs.LO</category>
      <category>math.CT</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Andrew W Swan</dc:creator>
    </item>
    <item>
      <title>Completions of Kleene's second model</title>
      <link>https://arxiv.org/abs/2312.14656</link>
      <description>arXiv:2312.14656v3 Announce Type: replace 
Abstract: We investigate completions of partial combinatory algebras (pcas), in particular of Kleene's second model $\mathcal{K}_2$ and generalizations thereof. We consider weak and strong notions of embeddability and completion that have been studied before. By a result of Klop it is known that not every pca has a strong completion. The study of completions of $\mathcal{K}_2$ has as corollaries that weak and strong embeddings are different, and that every countable pca has a weak completion. We then consider generalizations of $\mathcal{K}_2$ for larger cardinals, and use these to show that it is consistent that every pca has a weak completion.</description>
      <guid isPermaLink="false">oai:arXiv.org:2312.14656v3</guid>
      <category>cs.LO</category>
      <category>math.LO</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Sebastiaan A. Terwijn</dc:creator>
    </item>
    <item>
      <title>Algebraic Reasoning over Relational Structures</title>
      <link>https://arxiv.org/abs/2401.08445</link>
      <description>arXiv:2401.08445v2 Announce Type: replace 
Abstract: Many important computational structures involve an intricate interplay between algebraic features (given by operations on the underlying set) and relational features (taking account of notions such as order or distance). This paper investigates algebras over relational structures axiomatized by an infinitary Horn theory, which subsume, for example, partial algebras, various incarnations of ordered algebras, quantitative algebras introduced by Mardare, Panangaden, and Plotkin, and their recent extension to generalized metric spaces and lifted algebraic signatures by Mio, Sarkis, and Vignudelli. To this end, we develop the notion of clustered equation, which is inspired by Mardare et al.'s basic conditional equations in the theory of quantitative algebras, at the level of generality of arbitrary relational structures, and we prove that it is equivalent to an abstract categorical form of equation earlier introduced by Milius and Urbat. Our main results are a family of Birkhoff-type variety theorems (classifying the expressive power of clustered equations) and an exactness theorem (classifying abstract equations by a congruence property).</description>
      <guid isPermaLink="false">oai:arXiv.org:2401.08445v2</guid>
      <category>cs.LO</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Jan Jurka, Stefan Milius, Henning Urbat</dc:creator>
    </item>
    <item>
      <title>GATlab: Modeling and Programming with Generalized Algebraic Theories</title>
      <link>https://arxiv.org/abs/2404.04837</link>
      <description>arXiv:2404.04837v2 Announce Type: replace 
Abstract: Categories and categorical structures are increasingly recognized as useful abstractions for modeling in science and engineering. To uniformly implement category-theoretic mathematical models in software, we introduce GATlab, a domain-specific language for algebraic specification embedded in a technical programming language. GATlab is based on generalized algebraic theories (GATs), a logical system extending algebraic theories with dependent types so as to encompass category theory. Using GATlab, the programmer can specify generalized algebraic theories and their models, including both free models, based on symbolic expressions, and computational models, defined by arbitrary code in the host language. Moreover, the programmer can define maps between theories and use them to declaratively migrate models of one theory to models of another. In short, GATlab aims to provide a unified environment for both computer algebra and software interface design with generalized algebraic theories. In this paper, we describe the design, implementation, and applications of GATlab.</description>
      <guid isPermaLink="false">oai:arXiv.org:2404.04837v2</guid>
      <category>cs.LO</category>
      <category>cs.PL</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Owen Lynch, Kris Brown, James Fairbanks, Evan Patterson</dc:creator>
    </item>
    <item>
      <title>Constructive Interpolation and Concept-Based Beth Definability for Description Logics via Sequents</title>
      <link>https://arxiv.org/abs/2404.15840</link>
      <description>arXiv:2404.15840v2 Announce Type: replace 
Abstract: We introduce a constructive method applicable to a large number of description logics (DLs) for establishing the concept-based Beth definability property (CBP) based on sequent systems. Using the highly expressive DL RIQ as a case study, we introduce novel sequent calculi for RIQ-ontologies and show how certain interpolants can be computed from sequent calculus proofs, which permit the extraction of explicit definitions of implicitly definable concepts. To the best of our knowledge, this is the first sequent-based approach to computing interpolants and definitions within the context of DLs, as well as the first proof that RIQ enjoys the CBP. Moreover, due to the modularity of our sequent systems, our results hold for any restriction of RIQ, and are applicable to other DLs by suitable modifications.</description>
      <guid isPermaLink="false">oai:arXiv.org:2404.15840v2</guid>
      <category>cs.LO</category>
      <category>cs.AI</category>
      <category>cs.DB</category>
      <category>math.LO</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Tim S. Lyon, Jonas Karge</dc:creator>
    </item>
    <item>
      <title>Towards Practicable Algorithms for Rewriting Graph Queries beyond DL-Lite</title>
      <link>https://arxiv.org/abs/2405.18181</link>
      <description>arXiv:2405.18181v2 Announce Type: replace-cross 
Abstract: Despite the many advantages that ontology-based data access (OBDA) has brought to a range of application domains, state-of-the-art OBDA systems still do not support popular graph database management systems such as Neo4j. Algorithms for query rewriting focus on languages like conjunctive queries and their unions, which are fragments of first-order logic and were developed for relational data. Such query languages are poorly suited for querying graph data. Moreover, they also limit the expressiveness of the ontology languages that admit rewritings, restricting them to those where the data complexity of reasoning is not higher than it is in first-order logic. In this paper, we propose a technique for rewriting a family of navigational queries for a suitably restricted fragment of ELHI that extends DL-Lite and that is NL-complete in data complexity. We implemented a proof-of-concept prototype that rewrites into Cypher queries, and tested it on a real-world cognitive neuroscience use case with promising results.</description>
      <guid isPermaLink="false">oai:arXiv.org:2405.18181v2</guid>
      <category>cs.DB</category>
      <category>cs.LO</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Bianca L\"ohnert, Nikolaus Augsten, Cem Okulmus, Magdalena Ortiz</dc:creator>
    </item>
    <item>
      <title>On Quantifiers for Quantitative Reasoning</title>
      <link>https://arxiv.org/abs/2406.04936</link>
      <description>arXiv:2406.04936v2 Announce Type: replace-cross 
Abstract: We explore a kind of first-order predicate logic with intended semantics in the reals. Compared to other approaches in the literature, we work predominantly in the multiplicative reals [0,\infty], showing they support three generations of connectives, that we call non-linear, linear additive, and linear multiplicative. Means and harmonic means emerge as natural candidates for bounded existential and universal quantifiers, and in fact we see they behave as expected in relation to the other logical connectives. We explain this fact through the well-known fact that min/max and arithmetic mean/harmonic mean sit at opposite ends of a spectrum, that of p-means. We give syntax and semantics for this quantitative predicate logic, and as example applications, we show how softmax is the quantitative semantics of argmax, and R\'enyi entropy/Hill numbers are additive/multiplicative semantics of the same formula. Indeed, the additive reals also fit into the story by exploiting the Napierian duality -log \dashv 1/exp, which highlights a formal distinction between 'additive' and 'multiplicative' quantities. Finally, we describe two attempts at a categorical semantics via enriched hyperdoctrines. We discuss why hyperdoctrines are in fact probably inadequate for this kind of logic.</description>
      <guid isPermaLink="false">oai:arXiv.org:2406.04936v2</guid>
      <category>math.LO</category>
      <category>cs.LO</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-sa/4.0/</dc:rights>
      <dc:creator>Matteo Capucci</dc:creator>
    </item>
  </channel>
</rss>
