<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.FL updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.FL</link>
    <description>cs.FL updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.FL" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Wed, 10 Apr 2024 04:00:10 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Wed, 10 Apr 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>On the minimal memory set of cellular automata</title>
      <link>https://arxiv.org/abs/2404.06394</link>
      <description>arXiv:2404.06394v1 Announce Type: cross 
Abstract: For a group $G$ and a finite set $A$, a cellular automaton (CA) is a transformation $\tau : A^G \to A^G$ defined via a finite memory set $S \subseteq G$ and a local map $\mu : A^S \to A$. Although memory sets are not unique, every CA admits a unique minimal memory set, which consists on all the essential elements of $S$ that affect the behavior of the local map. In this paper, we study the links between the minimal memory set and the generating patterns $\mathcal{P}$ of $\mu$; these are the patterns in $A^S$ that are not fixed when the cellular automaton is applied. In particular, we show that when $\vert \mathcal{P} \vert$ is not a multiple of $\vert A \vert$, then the minimal memory set is $S$ or $S \setminus \{e\}$. Moreover, when $\vert \mathcal{P} \vert = \vert A \vert$, and the action of $\mu$ on these patterns is well-behaved, then the minimal memory set is $S$ or $S \setminus \{s\}$, for some $s \in S \setminus \{e\}$. These are some of the first general theoretical results on the minimal memory set of a cellular automaton.</description>
      <guid isPermaLink="false">oai:arXiv.org:2404.06394v1</guid>
      <category>nlin.CG</category>
      <category>cs.FL</category>
      <category>math.DS</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Alonso Castillo-Ramirez, Eduardo Veliz-Quintero</dc:creator>
    </item>
    <item>
      <title>The decidability of the genus of regular languages and directed emulators</title>
      <link>https://arxiv.org/abs/2109.05735</link>
      <description>arXiv:2109.05735v4 Announce Type: replace 
Abstract: The article continues our study of the genus of a regular language $L$, defined as the minimal genus among all genera of all finite deterministic automata recognizing $L$. Here we define and study two closely related tools on a directed graph: directed emulators and automatic relations. A directed emulator morphism essentially encapsulates at the graph-theoretic level an epimorphism onto the minimal deterministic automaton. An automatic relation is the graph-theoretic version of the Myhill-Nerode relation. We show that an automatic relation determines a directed emulator morphism and respectively, a directed emulator morphism determines an automatic relation up to isomorphism. Consider the set $S$ of all directed emulators of the underlying directed graph of the minimal deterministic automaton for $L$. We prove that the genus of $L$ is $\underset{G \in S}{\min}\ g(G)$. We also consider the more restrictive notion of directed cover and prove that the genus of $L$ is reached in the class of directed covers of the underlying directed graph of the minimal deterministic automaton for $L$. This stands in sharp contrast to undirected emulators and undirected covers which we also consider. Finally we prove that if the problem of determining the minimal genus of a directed emulator of a directed graph has a solution then the problem of determining the minimal genus of an undirected emulator of an undirected graph has a solution.</description>
      <guid isPermaLink="false">oai:arXiv.org:2109.05735v4</guid>
      <category>cs.FL</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Guillaume Bonfante, Florian Deloup</dc:creator>
    </item>
    <item>
      <title>A polynomial algorithm deciding the complete reachability and quadratic reaching thresholds</title>
      <link>https://arxiv.org/abs/2208.05956</link>
      <description>arXiv:2208.05956v3 Announce Type: replace 
Abstract: A complete deterministic finite (semi)automaton (DFA) with a set of states $Q$ is \emph{completely reachable} if every non-empty subset of $Q$ can be obtained as the image of the action of some word applied to $Q$. The concept of completely reachable automata appeared several times, in particular, in connection with synchronizing automata; the class contains the \Cerny automata and covers several independently investigated subclasses. The notion was introduced by Bondar and Volkov (2016), who also raised the question about the complexity of deciding if an automaton is completely reachable. We develop a polynomial-time algorithm for this problem, which is based on a new complement-intersecting technique for finding an extending word for a subset of states. The algorithm works in ${\O(\min(|\Sigma|,n)\cdot |\Sigma|\cdot n^2)}$ time, where $n=|Q|$ is the number of states and $|\Sigma|$ is the size of the input alphabet. In the second part, we prove a weak Don's conjecture for this class of automata: a subset $S$ is reachable with a word of length smaller than $2n(n-|S|)$. This implies a quadratic upper bound in $n$ on the length of the shortest synchronizing words (reset threshold) for the class of completely reachable automata and generalizes earlier upper bounds derived for its subclasses.</description>
      <guid isPermaLink="false">oai:arXiv.org:2208.05956v3</guid>
      <category>cs.FL</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Robert Ferens, Marek Szyku{\l}a</dc:creator>
    </item>
    <item>
      <title>Taking Complete Finite Prefixes To High Level, Symbolically</title>
      <link>https://arxiv.org/abs/2311.11443</link>
      <description>arXiv:2311.11443v3 Announce Type: replace-cross 
Abstract: Unfoldings are a well known partial-order semantics of P/T Petri nets that can be applied to various model checking or verification problems. For high-level Petri nets, the so-called symbolic unfolding generalizes this notion. A complete finite prefix of a P/T Petri net's unfolding contains all information to verify, e.g., reachability of markings. We unite these two concepts and define complete finite prefixes of the symbolic unfolding of high-level Petri nets. For a class of safe high-level Petri nets, we generalize the well-known algorithm by Esparza et al. for constructing small such prefixes. We evaluate this extended algorithm through a prototype implementation on four novel benchmark families. Additionally, we identify a more general class of nets with infinitely many reachable markings, for which an approach with an adapted cut-off criterion extends the complete prefix methodology, in the sense that the original algorithm cannot be applied to the P/T net represented by a high-level net.</description>
      <guid isPermaLink="false">oai:arXiv.org:2311.11443v3</guid>
      <category>cs.LO</category>
      <category>cs.FL</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Nick W\"urdemann, Thomas Chatain, Stefan Haar, Lukas Panneke</dc:creator>
    </item>
  </channel>
</rss>
