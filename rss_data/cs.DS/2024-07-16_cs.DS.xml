<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.DS updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.DS</link>
    <description>cs.DS updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.DS" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Wed, 17 Jul 2024 01:51:28 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Tue, 16 Jul 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Fine-Grained Optimality of Partially Dynamic Shortest Paths and More</title>
      <link>https://arxiv.org/abs/2407.09651</link>
      <description>arXiv:2407.09651v1 Announce Type: new 
Abstract: Single Source Shortest Paths ($\textrm{SSSP}$) is among the most well-studied problems in computer science. In the incremental (resp. decremental) setting, the goal is to maintain distances from a fixed source in a graph undergoing edge insertions (resp. deletions). A long line of research culminated in a near-optimal deterministic $(1 + \varepsilon)$-approximate data structure with $m^{1 + o(1)}$ total update time over all $m$ updates by Bernstein, Probst Gutenberg and Saranurak [FOCS 2021]. However, there has been remarkably little progress on the exact $\textrm{SSSP}$ problem beyond Even and Shiloach's algorithm [J. ACM 1981] for unweighted graphs. For weighted graphs, there are no exact algorithms beyond recomputing $\textrm{SSSP}$ from scratch in $\widetilde{O}(m^2)$ total update time, even for the simpler Single-Source Single-Target Shortest Path problem ($\textrm{stSP}$). Despite this lack of progress, known (conditional) lower bounds only rule out algorithms with amortized update time better than $m^{1/2 - o(1)}$ in dense graphs.
  In this paper, we give a tight (conditional) lower bound: any partially dynamic exact $\textrm{stSP}$ algorithm requires $m^{2 - o(1)}$ total update time for any sparsity $m$. We thus resolve the complexity of partially dynamic shortest paths, and separate the hardness of exact and approximate shortest paths, giving evidence as to why no non-trivial exact algorithms have been obtained while fast approximation algorithms are known.
  Moreover, we give tight bounds on the complexity of combinatorial algorithms for several path problems that have been studied in the static setting since early sixties: Node-weighted shortest paths (studied alongside edge-weighted shortest paths), bottleneck paths (early work dates back to 1960), and earliest arrivals (early work dates back to 1958).</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.09651v1</guid>
      <category>cs.DS</category>
      <category>cs.CC</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Barna Saha, Virginia Vassilevska Williams, Yinzhan Xu, Christopher Ye</dc:creator>
    </item>
    <item>
      <title>An efficient algorithm to compute the minimum free energy of interacting nucleic acid strands</title>
      <link>https://arxiv.org/abs/2407.09676</link>
      <description>arXiv:2407.09676v1 Announce Type: new 
Abstract: The information-encoding molecules RNA and DNA form a combinatorially large set of secondary structures through nucleic acid base pairing. Thermodynamic prediction algorithms predict favoured, or minimum free energy (MFE), secondary structures, and can assign an equilibrium probability to any structure via the partition function: a Boltzman-weighted sum over the set of secondary structures. MFE is NP-hard in the presence pseudoknots, base pairings that violate a restricted planarity condition. However, unpseudoknotted structures are amenable to dynamic programming: for a single DNA/RNA strand there are polynomial time algorithms for MFE and partition function. For multiple strands, the problem is more complicated due to entropic penalties. Dirks et al [SICOMP Review; 2007] showed that for O(1) strands, with N bases, there is a polynomial time in N partition function algorithm, however their technique did not generalise to MFE which they left open. We give the first polynomial time (O(N^4)) algorithm for unpseudoknotted multiple (O(1)) strand MFE, answering the open problem from Dirks et al. The challenge lies in considering rotational symmetry of secondary structures, a feature not immediately amenable to dynamic programming algorithms. Our proof has two main technical contributions: First, a polynomial upper bound on the number of symmetric secondary structures to be considered when computing rotational symmetry penalties. Second, that bound is leveraged by a backtracking algorithm to find the MFE in an exponential space of contenders. Our MFE algorithm has the same asymptotic run time as Dirks et al's partition function algorithm, suggesting efficient handling of rotational symmetry, although higher space complexity. It also seems reasonably tight in the number of strands since Codon, Hajiaghayi &amp; Thachuk [DNA27, 2021] have shown that unpseudoknotted MFE is NP-hard for O(N) strands.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.09676v1</guid>
      <category>cs.DS</category>
      <category>cs.CC</category>
      <category>cs.DM</category>
      <category>physics.bio-ph</category>
      <category>q-bio.BM</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Ahmed Shalaby, Damien Woods</dc:creator>
    </item>
    <item>
      <title>Orientability of undirected phylogenetic networks to a desired class: Practical algorithms and application to tree-child orientation</title>
      <link>https://arxiv.org/abs/2407.09776</link>
      <description>arXiv:2407.09776v1 Announce Type: new 
Abstract: The C-Orientation problem asks whether it is possible to orient an undirected graph to a directed phylogenetic network of a desired class C, and to find such an orientation if one exists. The problem can arise when visualising evolutionary data, for example, because popular phylogenetic network reconstruction methods such as Neighbor-Net are distance-based and thus inevitably produce undirected graphs. The complexity of C-Orientation remains open for many classes C, including binary tree-child networks, and practical methods are still lacking. In this paper, we propose an exponential but practically efficient FPT algorithm for C-Orientation, which is parameterised by the reticulation number and the maximum size of minimal basic cycles used in the computation. We also present a very fast heuristic for Tree-Child Orientation. To evaluate the empirical performance of the proposed methods, we compared their accuracy and execution time for Tree-Child Orientation with those of an exponential time C-orientation algorithm from the literature. Our experiments show that the proposed exact algorithm is significantly faster than the state-of-the-art exponential time algorithm. The proposed heuristic runs even faster but the accuracy decreases as the reticulation number increases.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.09776v1</guid>
      <category>cs.DS</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Tsuyoshi Urata, Manato Yokoyama, Momoko Hayamizu</dc:creator>
    </item>
    <item>
      <title>A Dynamic Algorithm for Weighted Submodular Cover Problem</title>
      <link>https://arxiv.org/abs/2407.10003</link>
      <description>arXiv:2407.10003v1 Announce Type: new 
Abstract: We initiate the study of the submodular cover problem in dynamic setting where the elements of the ground set are inserted and deleted.
  In the classical submodular cover problem, we are given a monotone submodular function $f : 2^{V} \to \mathbb{R}^{\ge 0}$ and the goal is to obtain a set $S \subseteq V$ that minimizes the cost subject to the constraint $f(S) = f(V)$. This is a classical problem in computer science and generalizes the Set Cover problem, 2-Set Cover, and dominating set problem among others.
  We consider this problem in a dynamic setting where there are updates to our set $V$, in the form of insertions and deletions of elements from a ground set $\mathcal{V}$, and the goal is to maintain an approximately optimal solution with low query complexity per update. For this problem, we propose a randomized algorithm that, in expectation, obtains a $(1-O(\epsilon), O(\epsilon^{-1}))$-bicriteria approximation using polylogarithmic query complexity per update.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.10003v1</guid>
      <category>cs.DS</category>
      <category>cs.LG</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Kiarash Banihashem, Samira Goudarzi, MohammadTaghi Hajiaghayi, Peyman Jabbarzade, Morteza Monemizadeh</dc:creator>
    </item>
    <item>
      <title>Partial Implementation of Max Flow and Min Cost Flow in Almost-Linear Time</title>
      <link>https://arxiv.org/abs/2407.10034</link>
      <description>arXiv:2407.10034v1 Announce Type: new 
Abstract: In 2022, Chen et al. proposed an algorithm in \cite{main} that solves the min cost flow problem in $m^{1 + o(1)} \log U \log C$ time, where $m$ is the number of edges in the graph, $U$ is an upper bound on capacities and $C$ is an upper bound on costs. However, as far as the authors of \cite{main} know, no one has implemented their algorithm to date. In this paper, we discuss implementations of several key portions of the algorithm given in \cite{main}, including the justifications for specific implementation choices. For the portions of the algorithm that we do not implement, we provide stubs. We then go through the entire algorithm and calculate the $m^{o(1)}$ term more precisely. Finally, we conclude with potential directions for future work in this area.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.10034v1</guid>
      <category>cs.DS</category>
      <category>cs.DM</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Nithin Kavi</dc:creator>
    </item>
    <item>
      <title>Unsplittable Flow on a Short Path</title>
      <link>https://arxiv.org/abs/2407.10138</link>
      <description>arXiv:2407.10138v1 Announce Type: new 
Abstract: In the Unsplittable Flow on a Path problem UFP, we are given a path graph with edge capacities and a collection of tasks. Each task is characterized by a demand, a profit, and a subpath. Our goal is to select a maximum profit subset of tasks such that the total demand of the selected tasks that use each edge $e$ is at most the capacity of $e$. Bag-UFP is the generalization of UFP where tasks are partitioned into bags, and we are allowed to select at most one task per bag. UFP admits a PTAS [Grandoni,M{\"o}mke,Wiese'22] but not an EPTAS [Wiese'17]. Bag-UFP is APX-hard [Spieksma'99] and the current best approximation is $O(\log n/\log\log n)$ [Grandoni,Ingala,Uniyal'15], where $n$ is the number of tasks.
  In this paper, we study the mentioned two problems when parameterized by the number $m$ of edges in the graph, with the goal of designing faster parameterized approximation algorithms. We present a parameterized EPTAS for Bag-UFP, and a substantially faster parameterized EPTAS for UFP (which is an FPTAS for $m=O(1)$). We also show that a parameterized FPTAS for UFP (hence for BagUFP) does not exist, therefore our results are qualitatively tight.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.10138v1</guid>
      <category>cs.DS</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Ilan Doron-Arad, Fabrizio Grandoni, Ariel Kulik</dc:creator>
    </item>
    <item>
      <title>Fine Grained Lower Bounds for Multidimensional Knapsack</title>
      <link>https://arxiv.org/abs/2407.10146</link>
      <description>arXiv:2407.10146v1 Announce Type: new 
Abstract: We study the $d$-dimensional knapsack problem. We are given a set of items, each with a $d$-dimensional cost vector and a profit, along with a $d$-dimensional budget vector. The goal is to select a set of items that do not exceed the budget in all dimensions and maximize the total profit. A PTAS with running time $n^{\Theta(d/\varepsilon)}$ has long been known for this problem, where $\varepsilon$ is the error parameter and $n$ is the encoding size. Despite decades of active research, the best running time of a PTAS has remained $O(n^{\lceil d/\varepsilon \rceil - d})$. Unfortunately, existing lower bounds only cover the special case with two dimensions $d = 2$, and do not answer whether there is a $n^{o(d/\varepsilon)}$-time PTAS for larger values of $d$. The status of exact algorithms is similar: there is a simple $O(n \cdot W^d)$-time (exact) dynamic programming algorithm, where $W$ is the maximum budget, but there is no lower bound which explains the strong exponential dependence on $d$.
  In this work, we show that the running times of the best-known PTAS and exact algorithm cannot be improved up to a polylogarithmic factor assuming Gap-ETH. Our techniques are based on a robust reduction from 2-CSP, which embeds 2-CSP constraints into a desired number of dimensions, exhibiting tight trade-off between $d$ and $\varepsilon$ for most regimes of the parameters. Informally, we obtain the following main results for $d$-dimensional knapsack.
  No $n^{o(d/\varepsilon \cdot 1/(\log(d/\varepsilon))^2)}$-time $(1-\varepsilon)$-approximation for every $\varepsilon = O(1/\log d)$.
  No $(n+W)^{o(d/\log d)}$-time exact algorithm (assuming ETH).
  No $n^{o(\sqrt{d})}$-time $(1-\varepsilon)$-approximation for constant $\varepsilon$.
  $(d \cdot \log W)^{O(d^2)} + n^{O(1)}$-time $\Omega(1/\sqrt{d})$-approximation and a matching $n^{O(1)}$-time lower~bound.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.10146v1</guid>
      <category>cs.DS</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Ilan Doron-Arad, Ariel Kulik, Pasin Manurangsi</dc:creator>
    </item>
    <item>
      <title>Competitive Query Minimization for Stable Matching with One-Sided Uncertainty</title>
      <link>https://arxiv.org/abs/2407.10170</link>
      <description>arXiv:2407.10170v1 Announce Type: new 
Abstract: We study the two-sided stable matching problem with one-sided uncertainty for two sets of agents A and B, with equal cardinality. Initially, the preference lists of the agents in A are given but the preferences of the agents in B are unknown. An algorithm can make queries to reveal information about the preferences of the agents in B. We examine three query models: comparison queries, interviews, and set queries. Using competitive analysis, our aim is to design algorithms that minimize the number of queries required to solve the problem of finding a stable matching or verifying that a given matching is stable (or stable and optimal for the agents of one side). We present various upper and lower bounds on the best possible competitive ratio as well as results regarding the complexity of the offline problem of determining the optimal query set given full information.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.10170v1</guid>
      <category>cs.DS</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Evripidis Bampis, Konstantinos Dogeas, Thomas Erlebach, Nicole Megow, Jens Schl\"oter, Amitabh Trehan</dc:creator>
    </item>
    <item>
      <title>Low Sensitivity Hopsets</title>
      <link>https://arxiv.org/abs/2407.10249</link>
      <description>arXiv:2407.10249v1 Announce Type: new 
Abstract: Given a weighted graph $G$, a $(\beta,\varepsilon)$-hopset $H$ is an edge set such that for any $s,t \in V(G)$, where $s$ can reach $t$ in $G$, there is a path from $s$ to $t$ in $G \cup H$ which uses at most $\beta$ hops whose length is in the range $[dist_G(s,t), (1+\varepsilon)dist_G(s,t)]$. We break away from the traditional question that asks for a hopset that achieves small $|H|$ and instead study its sensitivity, a new quality measure which, informally, is the maximum number of times a vertex (or edge) is bypassed by an edge in $H$. The highlights of our results are:
  (i) $(\widetilde{O}(\sqrt{n}),0)$-hopsets on undirected graphs with $O(\log n)$ sensitivity, complemented with a lower bound showing that $\widetilde{O}(\sqrt{n})$ is tight up to polylogarithmic factors for any construction with polylogarithmic sensitivity.
  (ii) $(n^{o(1)},\varepsilon)$-hopsets on undirected graphs with $n^{o(1)}$ sensitivity for any $\varepsilon &gt; 0$ that is at least inverse polylogarithmic, complemented with a lower bound on the tradeoff between $\beta, \varepsilon$, and the sensitivity.
  (iii) $\widetilde{O}(\sqrt{n})$-shortcut sets on directed graphs with $O(\log n)$ sensitivity, complemented with a lower bound showing that $\beta = \widetilde{\Omega}(n^{1/3})$ for any construction with polylogarithmic sensitivity.
  We believe hopset sensitivity is a natural measure in and of itself, and could potentially find use in a diverse range of contexts. More concretely, the notion of hopset sensitivity is also directly motivated by the Differentially Private All Sets Range Queries problem. Our result for $O(\log n)$ sensitivity $(\widetilde{O}(\sqrt{n}),0)$-hopsets on undirected graphs immediately improves the current best-known upper bound on utility from $\widetilde{O}(n^{1/3})$ to $\widetilde{O}(n^{1/4})$ in the pure-DP setting, which is tight up to polylogarithmic factors.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.10249v1</guid>
      <category>cs.DS</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Vikrant Ashvinkumar, Aaron Bernstein, Chengyuan Deng, Jie Gao, Nicole Wein</dc:creator>
    </item>
    <item>
      <title>Online Matroid Embeddings</title>
      <link>https://arxiv.org/abs/2407.10316</link>
      <description>arXiv:2407.10316v1 Announce Type: new 
Abstract: We introduce the notion of an online matroid embedding, which is an algorithm for mapping an unknown matroid that is revealed in an online fashion to a larger-but-known matroid. The existence of such embedding enables a reduction from the version of the matroid secretary problem where the matroid is unknown to the version where the matroid is known in advance. We show that online matroid embeddings exist for binary (and hence graphic) and laminar matroids. We also show a negative result showing that no online matroid embedding exists for the class of all matroids. Finally, we define the notion of an approximate matroid embedding, generalizing the notion of {\alpha}-partition property, and provide an upper bound on the approximability of binary matroids by a partition matroid, matching the lower bound of Dughmi et al.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.10316v1</guid>
      <category>cs.DS</category>
      <category>cs.GT</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Andr\'es Cristi, Paul D\"utting, Robert Kleinberg, Renato Paes Leme</dc:creator>
    </item>
    <item>
      <title>The Average-Value Allocation Problem</title>
      <link>https://arxiv.org/abs/2407.10401</link>
      <description>arXiv:2407.10401v1 Announce Type: new 
Abstract: We initiate the study of centralized algorithms for welfare-maximizing allocation of goods to buyers subject to average-value constraints. We show that this problem is NP-hard to approximate beyond a factor of $\frac{e}{e-1}$, and provide a $\frac{4e}{e-1}$-approximate offline algorithm. For the online setting, we show that no non-trivial approximations are achievable under adversarial arrivals. Under i.i.d. arrivals, we present a polytime online algorithm that provides a constant approximation of the optimal (computationally-unbounded) online algorithm. In contrast, we show that no constant approximation of the ex-post optimum is achievable by an online algorithm.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.10401v1</guid>
      <category>cs.DS</category>
      <category>cs.GT</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Kshipra Bhawalkar, Zhe Feng, Anupam Gupta, Aranyak Mehta, David Wajc, Di Wang</dc:creator>
    </item>
    <item>
      <title>9/7-Approximation for Two-Edge-Connectivity</title>
      <link>https://arxiv.org/abs/2407.10526</link>
      <description>arXiv:2407.10526v1 Announce Type: new 
Abstract: We provide an algorithm for the minimum 2-edge-connected spanning subgraph problem with approximation ratio $\frac{9}{7}$. This improves upon a recent algorithm with ratio slightly smaller than $\frac{4}{3}$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.10526v1</guid>
      <category>cs.DS</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <dc:creator>Ali \c{C}ivril</dc:creator>
    </item>
    <item>
      <title>Spanning Trees Minimizing Branching Costs</title>
      <link>https://arxiv.org/abs/2407.10571</link>
      <description>arXiv:2407.10571v1 Announce Type: new 
Abstract: The Minimum Branch Vertices Spanning Tree problem aims to find a spanning tree $T$ in a given graph $G$ with the fewest branch vertices, defined as vertices with a degree three or more in $T$. This problem, known to be NP-hard, has attracted significant attention due to its importance in network design and optimization. Extensive research has been conducted on the algorithmic and combinatorial aspects of this problem, with recent studies delving into its fixed-parameter tractability.
  In this paper, we focus primarily on the parameter modular-width. We demonstrate that finding a spanning tree with the minimum number of branch vertices is Fixed-Parameter Tractable (FPT) when considered with respect to modular-width. Additionally, in cases where each vertex in the input graph has an associated cost for serving as a branch vertex, we prove that the problem of finding a spanning tree with the minimum branch cost (i.e., minimizing the sum of the costs of branch vertices) is FPT with respect to neighborhood diversity.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.10571v1</guid>
      <category>cs.DS</category>
      <category>cs.CC</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <dc:creator>Luisa Gargano, Adele A. Rescigno</dc:creator>
    </item>
    <item>
      <title>From Data Completion to Problems on Hypercubes: A Parameterized Analysis of the Independent Set Problem</title>
      <link>https://arxiv.org/abs/2407.10699</link>
      <description>arXiv:2407.10699v1 Announce Type: new 
Abstract: Several works have recently investigated the parameterized complexity of data completion problems, motivated by their applications in machine learning, and clustering in particular. Interestingly, these problems can be equivalently formulated as classical graph problems on induced subgraphs of powers of partially-defined hypercubes.
  In this paper, we follow up on this recent direction by investigating the Independent Set problem on this graph class, which has been studied in the data science setting under the name Diversity. We obtain a comprehensive picture of the problem's parameterized complexity and establish its fixed-parameter tractability w.r.t. the solution size plus the power of the hypercube.
  Given that several such FO-definable problems have been shown to be fixed-parameter tractable on the considered graph class, one may ask whether fixed-parameter tractability could be extended to capture all FO-definable problems. We answer this question in the negative by showing that FO model checking on induced subgraphs of hypercubes is as difficult as FO model checking on general graphs.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.10699v1</guid>
      <category>cs.DS</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Eduard Eiben, Robert Ganian, Iyad Kanj, Sebastian Ordyniak, Stefan Szeider</dc:creator>
    </item>
    <item>
      <title>Almost-Linear Time Algorithms for Decremental Graphs: Min-Cost Flow and More via Duality</title>
      <link>https://arxiv.org/abs/2407.10830</link>
      <description>arXiv:2407.10830v1 Announce Type: new 
Abstract: We give the first almost-linear total time algorithm for deciding if a flow of cost at most $F$ still exists in a directed graph, with edge costs and capacities, undergoing decremental updates, i.e., edge deletions, capacity decreases, and cost increases. This implies almost-linear time algorithms for approximating the minimum-cost flow value and $s$-$t$ distance on such decremental graphs. Our framework additionally allows us to maintain decremental strongly connected components in almost-linear time deterministically. These algorithms also improve over the current best known runtimes for statically computing minimum-cost flow, in both the randomized and deterministic settings.
  We obtain our algorithms by taking the dual perspective, which yields cut-based algorithms. More precisely, our algorithm computes the flow via a sequence of $m^{1+o(1)}$ dynamic min-ratio cut problems, the dual analog of the dynamic min-ratio cycle problem that underlies recent fast algorithms for minimum-cost flow. Our main technical contribution is a new data structure that returns an approximately optimal min-ratio cut in amortized $m^{o(1)}$ time by maintaining a tree-cut sparsifier. This is achieved by devising a new algorithm to maintain the dynamic expander hierarchy of [Goranci-R\"{a}cke-Saranurak-Tan, SODA 2021] that also works in capacitated graphs. All our algorithms are deterministc, though they can be sped up further using randomized techniques while still working against an adaptive adversary.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.10830v1</guid>
      <category>cs.DS</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Jan van den Brand, Li Chen, Rasmus Kyng, Yang P. Liu, Simon Meierhans, Maximilian Probst Gutenberg, Sushant Sachdeva</dc:creator>
    </item>
    <item>
      <title>Cut-Preserving Vertex Sparsifiers for Planar and Quasi-bipartite Graphs</title>
      <link>https://arxiv.org/abs/2407.10852</link>
      <description>arXiv:2407.10852v1 Announce Type: new 
Abstract: We study vertex sparsification for preserving cuts. Given a graph $G$ with a subset $|T|=k$ of its vertices called terminals, a \emph{quality-$q$ cut sparsifier} is a graph $G'$ that contains $T$, such that, for any partition $(T_1,T_2)$ of $T$ into non-empty subsets, the value of the min-cut in $G'$ separating $T_1$ from $T_2$ is within factor $q$ from the value of the min-cut in $G$ separating $T_1$ from $T_2$. The construction of cut sparsifiers with good (small) quality and size has been a central problem in graph compression for years.
  Planar graphs and quasi-bipartite graphs are two important special families studied in this research direction. The main results in this paper are new cut sparsifier constructions for them in the high-quality regime (where $q=1$ or $1+\varepsilon$ for small $\varepsilon&gt;0$).
  We first show that every planar graph admits a planar quality-$(1+\varepsilon)$ cut sparsifier of size $\tilde O(k/\text{poly}(\varepsilon))$, which is in sharp contrast with the lower bound of $2^{\Omega(k)}$ for the quality-$1$ case.
  We then show that every quasi-bipartite graph admits a quality-$1$ cut sparsifier of size $2^{\tilde O(k^2)}$. This is the second to improve over the doubly-exponential bound for general graphs (previously only planar graphs have been shown to have single-exponential size quality-$1$ cut sparsifiers).
  Lastly, we show that contraction, a common approach for constructing cut sparsifiers adopted in most previous works, does not always give optimal bounds for cut sparsifiers. We demonstrate this by showing that the optimal size bound for quality-$(1+\varepsilon)$ contraction-based cut sparsifiers for quasi-bipartite graphs lies in the range $[k^{\tilde\Omega(1/\varepsilon)},k^{O(1/\varepsilon^2)}]$, while in previous work an upper bound of $\tilde O(k/\varepsilon^2)$ was achieved via a non-contraction approach.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.10852v1</guid>
      <category>cs.DS</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Yu Chen, Zihan Tan</dc:creator>
    </item>
    <item>
      <title>Improved Lower Bounds on the Expected Length of Longest Common Subsequences</title>
      <link>https://arxiv.org/abs/2407.10925</link>
      <description>arXiv:2407.10925v1 Announce Type: new 
Abstract: It has been proven that, when normalized by $n$, the expected length of a longest common subsequence of $d$ random strings of length $n$ over an alphabet of size $\sigma$ converges to some constant that depends only on $d$ and $\sigma$. These values are known as the Chv\'{a}tal-Sankoff constants, and determining their exact values is a well-known open problem. Upper and lower bounds are known for some combinations of $\sigma$ and $d$, with the best lower and upper bounds for the most studied case, $\sigma=2, d=2$, at $0.788071$ and $0.826280$, respectively. Building off previous algorithms for lower-bounding the constants, we implement runtime optimizations, parallelization, and an efficient memory reading and writing scheme to obtain an improved lower bound of $0.792665992$ for $\sigma=2, d=2$. We additionally improve upon almost all previously reported lower bounds for the Chv\'{a}tal-Sankoff constants when either the size of alphabet, the number of strings, or both are larger than 2.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.10925v1</guid>
      <category>cs.DS</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>George T. Heineman, Chase Miller, Daniel Reichman, Andrew Salls, G\'abor S\'ark\"ozy, Duncan Soiffer</dc:creator>
    </item>
    <item>
      <title>Obstructions to Erd\H{o}s-P\'osa Dualities for Minors</title>
      <link>https://arxiv.org/abs/2407.09671</link>
      <description>arXiv:2407.09671v2 Announce Type: cross 
Abstract: Let ${\cal G}$ and ${\cal H}$ be minor-closed graph classes. The pair $({\cal H},{\cal G})$ is an Erd\H{o}s-P\'osa pair (EP-pair) if there is a function $f$ where, for every $k$ and every $G\in{\cal G},$ either $G$ has $k$ pairwise vertex-disjoint subgraphs not belonging to ${\cal H},$ or there is a set $S\subseteq V(G)$ where $|S|\leq f(k)$ and $G-S\in{\cal H}.$ The classic result of Erd\H{o}s and P\'osa says that if $\mathcal{F}$ is the class of forests, then $({\cal F},{\cal G})$ is an EP-pair for every ${\cal G}$. The class ${\cal G}$ is an EP-counterexample for ${\cal H}$ if ${\cal G}$ is minimal with the property that $({\cal H},{\cal G})$ is not an EP-pair. We prove that for every ${\cal H}$ the set $\mathfrak{C}_{\cal H}$ of all EP-counterexamples for ${\cal H}$ is finite. In particular, we provide a complete characterization of $\mathfrak{C}_{\cal H}$ for every ${\cal H}$ and give a constructive upper bound on its size. Each class ${\cal G}\in \mathfrak{C}_{\cal H}$ can be described as all minors of a sequence of grid-like graphs $\langle \mathscr{W}_{k} \rangle_{k\in \mathbb{N}}.$ Moreover, each $\mathscr{W}_{k}$ admits a half-integral packing: $k$ copies of some $H\not\in{\cal H}$ where no vertex is used more than twice. This gives a complete delineation of the half-integrality threshold of the Erd\H{o}s-P\'osa property for minors and yields a constructive proof of Thomas' conjecture on the half-integral Erd\H{o}s-P\'osa property for minors (recently confirmed, non-constructively, by Liu). Let $h$ be the maximum size of a graph in ${\cal H}.$ For every class ${\cal H},$ we construct an algorithm that, given a graph $G$ and a $k,$ either outputs a half-integral packing of $k$ copies of some $H \not\in {\cal H}$ or outputs a set of at most ${2^{k^{\cal O}_h(1)}}$ vertices whose deletion creates a graph in ${\cal H}$ in time $2^{2^{k^{{\cal O}_h(1)}}}\cdot |G|^4\log |G|.$</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.09671v2</guid>
      <category>math.CO</category>
      <category>cs.DS</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Christophe Paul, Evangelos Protopapas, Dimitrios M. Thilikos, Sebastian Wiederrecht</dc:creator>
    </item>
    <item>
      <title>NPA Hierarchy for Quantum Isomorphism and Homomorphism Indistinguishability</title>
      <link>https://arxiv.org/abs/2407.10635</link>
      <description>arXiv:2407.10635v1 Announce Type: cross 
Abstract: Man\v{c}inska and Roberson~[FOCS'20] showed that two graphs are quantum isomorphic if and only if they are homomorphism indistinguishable over the class of planar graphs. Atserias et al.~[JCTB'19] proved that quantum isomorphism is undecidable in general. The NPA hierarchy gives a sequence of semidefinite programming relaxations of quantum isomorphism. Recently, Roberson and Seppelt~[ICALP'23] obtained a homomorphism indistinguishability characterization of the feasibility of each level of the Lasserre hierarchy of semidefinite programming relaxations of graph isomorphism. We prove a quantum analogue of this result by showing that each level of the NPA hierarchy of SDP relaxations for quantum isomorphism of graphs is equivalent to homomorphism indistinguishability over an appropriate class of planar graphs. By combining the convergence of the NPA hierarchy with the fact that the union of these graph classes is the set of all planar graphs, we are able to give a new proof of the result of Man\v{c}inska and Roberson~[FOCS'20] that avoids the use of the theory of quantum groups. This homomorphism indistinguishability characterization also allows us to give a randomized polynomial-time algorithm deciding exact feasibility of each fixed level of the NPA hierarchy of SDP relaxations for quantum isomorphism.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.10635v1</guid>
      <category>quant-ph</category>
      <category>cs.DM</category>
      <category>cs.DS</category>
      <category>math.CO</category>
      <category>math.OC</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Prem Nigam Kar, David E. Roberson, Tim Seppelt, Peter Zeman</dc:creator>
    </item>
    <item>
      <title>On Instance-Optimal Algorithms for a Generalization of Nuts and Bolts and Generalized Sorting</title>
      <link>https://arxiv.org/abs/2211.04601</link>
      <description>arXiv:2211.04601v4 Announce Type: replace 
Abstract: We generalize the classical nuts and bolts problem to a setting where the input is a collection of $n$ nuts and $m$ bolts, and there is no promise of any matching pairs. It is not allowed to compare a nut directly with a nut or a bolt directly with a bolt, and the goal is to perform the fewest nut-bolt comparisons to discover the partial order between the nuts and bolts. We term this problem \emph{bipartite sorting}.
  We show that instances of bipartite sorting of the same size exhibit a wide range of complexity, and propose to perform a fine-grained analysis for this problem. We rule out straightforward notions of instance-optimality as being too stringent, and adopt a \emph{neighborhood-based} definition. Our definition may be of independent interest as a unifying lens for instance-optimal algorithms for other static problems existing in literature. This includes problems like sorting (Estivill-Castro and Woods, ACM Comput. Surv. 1992), convex hull (Afshani, Barbay and Chan, JACM 2017), adaptive joins (Demaine, L\'{o}pez-Ortiz and Munro, SODA 2000), and the recent concept of universal optimality for graphs (Haeupler, Hlad\'ik, Rozho\v{n}, Tarjan and T\v{e}tek, 2023).
  As our main result on bipartite sorting, we give a randomized algorithm that is within a factor of $O(\log ^3 (n+m))$ of being instance-optimal w.h.p., with respect to the neighborhood-based definition.
  As our second contribution, we generalize bipartite sorting to DAG sorting, when the underlying DAG is not necessarily bipartite. As an unexpected consequence of a simple algorithm for DAG sorting, we rule out a potential lower bound on the widely-studied problem of \emph{sorting with priced information}, posed by (Charikar, Fagin, Guruswami, Kleinberg, Raghavan and Sahai, STOC 2000).</description>
      <guid isPermaLink="false">oai:arXiv.org:2211.04601v4</guid>
      <category>cs.DS</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Mayank Goswami, Riko Jacob</dc:creator>
    </item>
    <item>
      <title>Better Diameter Algorithms for Bounded VC-dimension Graphs and Geometric Intersection Graphs</title>
      <link>https://arxiv.org/abs/2307.08162</link>
      <description>arXiv:2307.08162v2 Announce Type: replace 
Abstract: We develop a framework for algorithms finding the diameter in graphs of bounded distance Vapnik-Chervonenkis dimension, in (parameterized) subquadratic time complexity. The class of bounded distance VC-dimension graphs is wide, including, e.g. all minor-free graphs.
  We build on the work of Ducoffe et al. [SODA'20, SIGCOMP'22], improving their technique. With our approach the algorithms become simpler and faster, working in $\mathcal{O}(k \cdot n^{1-1/d} \cdot m \cdot \mathrm{polylog}(n))$ time complexity for the graph on $n$ vertices and $m$ edges, where $k$ is the diameter and $d$ is the distance VC-dimension of the graph. Furthermore, it allows us to use the improved technique in more general setting. In particular, we use this framework for geometric intersection graphs, i.e. graphs where vertices are identical geometric objects on a plane and the adjacency is defined by intersection. Applying our approach for these graphs, we partially answer a question posed by Bringmann et al. [SoCG'22], finding an $\mathcal{O}(n^{7/4} \cdot \mathrm{polylog}(n))$ parameterized diameter algorithm for unit square intersection graph of size $n$, as well as a more general algorithm for convex polygon intersection graphs.</description>
      <guid isPermaLink="false">oai:arXiv.org:2307.08162v2</guid>
      <category>cs.DS</category>
      <category>cs.CG</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Lech Duraj, Filip Konieczny, Krzysztof Pot\k{e}pa</dc:creator>
    </item>
    <item>
      <title>Recoverable robust shortest path problem under interval budgeted uncertainty representations</title>
      <link>https://arxiv.org/abs/2401.05715</link>
      <description>arXiv:2401.05715v2 Announce Type: replace 
Abstract: In this paper, the recoverable robust shortest path problem under interval uncertainty representations is discussed. This problem is known to be strongly NP-hard and also hard to approximate in general digraphs. In this paper, the class of acyclic digraphs is considered. It is shown that for the traditional interval uncertainty, the problem can be solved in polynomial time for all natural, known from the literature, neighborhoods. Efficient algorithms for various classes of acyclic digraphs are constructed. Some negative results for general digraphs are strengthened. Finally, some exact and approximate methods of solving the problem under budgeted interval uncertainty are proposed.</description>
      <guid isPermaLink="false">oai:arXiv.org:2401.05715v2</guid>
      <category>cs.DS</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Marcel Jackiewicz, Adam Kasperski, Pawel Zielinski</dc:creator>
    </item>
    <item>
      <title>Validation and Implementation of ILBFS</title>
      <link>https://arxiv.org/abs/2407.01637</link>
      <description>arXiv:2407.01637v2 Announce Type: replace 
Abstract: Recursive Best-First Search (RBFS) is a heuristic search algorithm known for its efficient memory usage compared to traditional best-first search methods like A*. Despite its theoretical advantages, RBFS is complex and difficult to teach and to implement, limiting its widespread adoption. To address these challenges, Iterative Linear Best-First Search (ILBFS) was introduced as a simpler, more intuitive alternative while maintaining the linear space complexity of RBFS. In this paper, we present the first implementation of ILBFS, validate its memory usage and node expansion order claims, and explore critical aspects of its implementation, such as tie-breaking and node deletion mechanisms. Our findings demonstrate that ILBFS can serve as an effective stepping stone for researchers and practitioners looking to use memory efficient best-first search methods, facilitating the adoption of RBFS-like algorithms.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.01637v2</guid>
      <category>cs.DS</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Fred Matanel Grabovski, Lior Yasur</dc:creator>
    </item>
    <item>
      <title>A Simple, Nearly-Optimal Algorithm for Differentially Private All-Pairs Shortest Distances</title>
      <link>https://arxiv.org/abs/2407.06913</link>
      <description>arXiv:2407.06913v2 Announce Type: replace 
Abstract: The all-pairs shortest distances (APSD) with differential privacy (DP) problem takes as input an undirected, weighted graph $G = (V,E, \mathbf{w})$ and outputs a private estimate of the shortest distances in $G$ between all pairs of vertices. In this paper, we present a simple $\widetilde{O}(n^{1/3}/\varepsilon)$-accurate algorithm to solve APSD with $\varepsilon$-DP, which reduces to $\widetilde{O}(n^{1/4}/\varepsilon)$ in the $(\varepsilon, \delta)$-DP setting, where $n = |V|$. Our algorithm greatly improves upon the error of prior algorithms, namely $\widetilde{O}(n^{2/3}/\varepsilon)$ and $\widetilde{O}(\sqrt{n}/\varepsilon)$ in the two respective settings, and is the first to be optimal up to a polylogarithmic factor, based on a lower bound of $\widetilde{\Omega}(n^{1/4})$.
  In the case where a multiplicative approximation is allowed, we give two different constructions of algorithms with reduced additive error. Our first construction allows a multiplicative approximation of $O(k\log{\log{n}})$ and has additive error $\widetilde{O}(k\cdot n^{1/k}/\varepsilon)$ in the $\varepsilon$-DP case and $\widetilde{O}(\sqrt{k}\cdot n^{1/(2k)}/\varepsilon)$ in the $(\varepsilon, \delta)$-DP case. Our second construction allows multiplicative approximation $2k-1$ and has the same asymptotic additive error as the first construction. Both constructions significantly improve upon the currently best-known additive error of, $\widetilde{O}(k\cdot n^{1/2 + 1/(4k+2)}/\varepsilon)$ and $\widetilde{O}(k\cdot n^{1/3 + 2/(9k+3)}/\varepsilon)$, respectively. Our algorithms are straightforward and work by decomposing a graph into a set of spanning trees, and applying a key observation that we can privately release APSD in trees with $O(\text{polylog}(n))$ error.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.06913v2</guid>
      <category>cs.DS</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Jesse Campbell, Chunjiang Zhu</dc:creator>
    </item>
  </channel>
</rss>
