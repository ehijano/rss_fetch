<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.DM updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.DM</link>
    <description>cs.DM updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.DM" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Wed, 02 Oct 2024 04:00:10 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Wed, 02 Oct 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Pointwise order of generalized Hofstadter functions $G, H$ and beyond</title>
      <link>https://arxiv.org/abs/2410.00529</link>
      <description>arXiv:2410.00529v1 Announce Type: new 
Abstract: Hofstadter's $G$ function is recursively defined via $G(0)=0$ and then $G(n)=n-G(G(n-1))$. Following Hofstadter, a family $(F_k)$ of similar functions is obtained by varying the number $k$ of nested recursive calls in this equation. We establish here that this family is ordered pointwise: for all $k$ and $n$, $F_k(n) \le F_{k+1}(n)$. For achieving this, a detour is made via infinite morphic words generalizing the Fibonacci word. Various properties of these words are proved, concerning the lengths of substituted prefixes of these words and the counts of some specific letters in these prefixes. We also relate the limits of $\frac{1}{n}F_k(n)$ to the frequencies of letters in the considered words.</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.00529v1</guid>
      <category>cs.DM</category>
      <category>cs.FL</category>
      <category>math.CO</category>
      <category>math.NT</category>
      <pubDate>Wed, 02 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Pierre Letouzey (IRIF), Shuo Li (LIAFA), Wolfgang Steiner (LIAFA)</dc:creator>
    </item>
    <item>
      <title>A Note on Approximation of Spanning Tree Congestion</title>
      <link>https://arxiv.org/abs/2410.00568</link>
      <description>arXiv:2410.00568v1 Announce Type: cross 
Abstract: The {\em Spanning Tree Congestion} problem is an easy-to-state NP-hard problem: given a graph $G$, construct a spanning tree $T$ of $G$ minimizing its maximum edge congestion where the congestion of an edge $e\in T$ is the number of edges $uv$ in $G$ such that the unique path between $u$ and $v$ in $T$ passes through $e$; the optimum value for a given graph $G$ is denoted $STC(G)$.
  It is known that {\em every} spanning tree is an $n/2$-approximation. A long-standing problem is to design a better approximation algorithm. Our contribution towards this goal is an $O(\Delta\cdot\log^{3/2}n)$-approximation algorithm for the minimum congestion spanning tree problem where $\Delta$ is the maximum degree in $G$. For graphs with maximum degree bounded by polylog of the number of vertices, this is an exponential improvement over the previous best approximation. For graphs with maximum degree bounded by $o(n/\log^{3/2}n)$, we get $o(n)$-approximation; this is the largest class of graphs that we know of, for which sublinear approximation is known for this problem.
  Our main tool for the algorithm is a new lower bound on the spanning tree congestion which is of independent interest. We prove that for every graph $G$, $STC(G)\geq \Omega(hb(G)/\Delta)$ where $hb(G)$ denotes the maximum bisection width over all subgraphs of $G$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.00568v1</guid>
      <category>cs.DS</category>
      <category>cs.DM</category>
      <pubDate>Wed, 02 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Petr Kolman</dc:creator>
    </item>
    <item>
      <title>Circuit and Graver Walks and Linear and Integer Programming</title>
      <link>https://arxiv.org/abs/2410.00656</link>
      <description>arXiv:2410.00656v1 Announce Type: cross 
Abstract: We show that a circuit walk from a given feasible point of a given linear program to an optimal point can be computed in polynomial time using only linear algebra operations and the solution of the single given linear program.
  We also show that a Graver walk from a given feasible point of a given integer program to an optimal point is polynomial time computable using an integer programming oracle, but without such an oracle, it is hard to compute such a walk even if an optimal solution to the given program is given as well.
  Combining our oracle algorithm with recent results on sparse integer programming, we also show that Graver walks from any point are polynomial time computable over matrices of bounded tree-depth and subdeterminants.</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.00656v1</guid>
      <category>math.OC</category>
      <category>cs.DM</category>
      <category>cs.DS</category>
      <category>math.CO</category>
      <pubDate>Wed, 02 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <arxiv:DOI>10.1016/j.disopt.2024.100862</arxiv:DOI>
      <arxiv:journal_reference>Discrete Optimization, 54:100862 (7 pages), 2024</arxiv:journal_reference>
      <dc:creator>Shmuel Onn</dc:creator>
    </item>
    <item>
      <title>Canonical labelling of sparse random graphs</title>
      <link>https://arxiv.org/abs/2409.18109</link>
      <description>arXiv:2409.18109v2 Announce Type: replace 
Abstract: We show that if $p=O(1/n)$, then the Erd\H{o}s-R\'{e}nyi random graph $G(n,p)$ with high probability admits a canonical labeling computable in time $O(n\log n)$. Combined with the previous results on the canonization of random graphs, this implies that $G(n,p)$ with high probability admits a polynomial-time canonical labeling whatever the edge probability function $p$. Our algorithm combines the standard color refinement routine with simple post-processing based on the classical linear-time tree canonization. Noteworthy, our analysis of how well color refinement performs in this setting allows us to complete the description of the automorphism group of the 2-core of $G(n,p)$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2409.18109v2</guid>
      <category>cs.DM</category>
      <category>math.CO</category>
      <pubDate>Wed, 02 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Oleg Verbitsky, Maksim Zhukovskii</dc:creator>
    </item>
    <item>
      <title>Note on Min-k-Planar Drawings of Graphs</title>
      <link>https://arxiv.org/abs/2401.11610</link>
      <description>arXiv:2401.11610v5 Announce Type: replace-cross 
Abstract: The k-planar graphs, which are (usually with small values of k such as 1, 2, 3) subject to recent intense research, admit a drawing in which edges are allowed to cross, but each one edge is allowed to carry at most k crossings. In recently introduced [Binucci et al., GD 2023] min-k-planar drawings of graphs, edges may possibly carry more than k crossings, but in any two crossing edges, at least one of the two must have at most k crossings. In both concepts, one may consider general drawings or a popular restricted concept of drawings called simple. In a simple drawing, every two edges are allowed to cross at most once, and any two edges which share a vertex are forbidden to cross. While, regarding the former concept, it is for k&lt;=3 known (but perhaps not widely known) that every general k-planar graph admits a simple k-planar drawing and this ceases to be true for any k&gt;=4, the difference between general and simple drawings in the latter concept is more striking. We prove that there exist graphs with a min-2-planar drawing, or with a min-3-planar drawing avoiding crossings of adjacent edges, which have no simple min-k-planar drawings for arbitrarily large fixed k.</description>
      <guid isPermaLink="false">oai:arXiv.org:2401.11610v5</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <pubDate>Wed, 02 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-sa/4.0/</dc:rights>
      <dc:creator>Petr Hlin\v{e}n\'y, Lili K\"odm\"on</dc:creator>
    </item>
    <item>
      <title>Graph-theoretical estimates of the diameters of the Rubik's Cube groups</title>
      <link>https://arxiv.org/abs/2407.12961</link>
      <description>arXiv:2407.12961v4 Announce Type: replace-cross 
Abstract: A strict lower bound for the diameter of a symmetric graph is proposed, which is calculable with the order $n$ and other local parameters of the graph such as the degree $k\,(\geq 3)$, even girth $g\,(\geq 4)$, and number of $g$-cycles traversing a vertex, which are easily determined by inspecting a small portion of the graph (unless the girth is large). It is applied to the symmetric Cayley graphs of some Rubik's Cube groups of various sizes and metrics, yielding slightly tighter lower bounds of the diameters than those for random $k$-regular graphs proposed by Bollob\'{a}s and de la Vega. They range from 60% to 77% of the correct diameters of large-$n$ graphs.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.12961v4</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <category>math.GR</category>
      <category>math.PR</category>
      <pubDate>Wed, 02 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>So Hirata</dc:creator>
    </item>
    <item>
      <title>Efficient Online Sensitivity Analysis For The Injective Bottleneck Path Problem</title>
      <link>https://arxiv.org/abs/2408.09443</link>
      <description>arXiv:2408.09443v3 Announce Type: replace-cross 
Abstract: The tolerance of an element of a combinatorial optimization problem with respect to a given optimal solution is the maximum change, i.e., decrease or increase, of its cost, such that this solution remains optimal. The bottleneck path problem, for given an edge-capacitated graph, a source, and a target, is to find the $\max$-$\min$ value of edge capacities on paths between the source and the target. For any given sample of this problem with $n$ vertices and $m$ edges, there is known the Ramaswamy-Orlin-Chakravarty's algorithm to compute an optimal path and all tolerances with respect to it in $O(m+n\log n)$ time. In this paper, for any in advance given $(n,m)$-network with distinct edge capacities and $k$ source-target pairs, we propose an $O\Big(m \alpha(m,n)+\min\big((n+k)\log n,km\big)\Big)$-time preprocessing, where $\alpha(\cdot,\cdot)$ is the inverse Ackermann function, to find in $O(k)$ time all $2k$ tolerances of an arbitrary edge with respect to some $\max\min$ paths between the paired sources and targets. To find both tolerances of all edges with respect to those optimal paths, it asymptotically improves, for some $n,m,k$, the Ramaswamy-Orlin-Chakravarty's complexity $O\big(k(m+n\log n)\big)$ up to $O(m\alpha(n,m)+km)$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.09443v3</guid>
      <category>cs.DS</category>
      <category>cs.DM</category>
      <pubDate>Wed, 02 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Kirill V. Kaymakov, Dmitry S. Malyshev</dc:creator>
    </item>
  </channel>
</rss>
