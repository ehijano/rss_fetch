<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.FL updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.FL</link>
    <description>cs.FL updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.FL" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Fri, 13 Sep 2024 04:00:13 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Fri, 13 Sep 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>$\mathbb{N}$-polyregular functions arise from well-quasi-orderings</title>
      <link>https://arxiv.org/abs/2409.07882</link>
      <description>arXiv:2409.07882v1 Announce Type: new 
Abstract: A fundamental construction in formal language theory is the Myhill-Nerode congruence on words, whose finitedness characterizes regular language. This construction was generalized to functions from $\Sigma^*$ to $\mathbb{Z}$ by Colcombet, Dou\'eneau-Tabot, and Lopez to characterize the class of so-called $\mathbb{Z}$-polyregular functions. In this paper, we relax the notion of equivalence relation to quasi-ordering in order to study the class of $\mathbb{N}$-polyregular functions, that plays the role of $\mathbb{Z}$-polyregular functions among functions from $\Sigma^*$ to $\mathbb{N}$. The analogue of having a finite index is then being a well-quasi-ordering. This provides a canonical object to describe $\mathbb{N}$-polyregular functions, together with a powerful new characterization of this class.</description>
      <guid isPermaLink="false">oai:arXiv.org:2409.07882v1</guid>
      <category>cs.FL</category>
      <pubDate>Fri, 13 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-sa/4.0/</dc:rights>
      <dc:creator>Aliaume Lopez</dc:creator>
    </item>
    <item>
      <title>Alternating hierarchy of sushifts defined by nondeterministic plane-walking automata</title>
      <link>https://arxiv.org/abs/2409.08024</link>
      <description>arXiv:2409.08024v1 Announce Type: new 
Abstract: Plane-walking automata were introduced by Salo &amp; T\"orma to recognise languages of two-dimensional infinite words (subshifts), the counterpart of $4$-way finite automata for two-dimensional finite words. We extend the model to allow for nondeterminism and alternation of quantifiers. We prove that the recognised subshifts form a strict subclass of sofic subshifts, and that the classes corresponding to existential and universal nondeterminism are incomparable and both larger that the deterministic class. We define a hierarchy of subshifts recognised by plane-walking automata with alternating quantifiers, which we conjecture to be strict.</description>
      <guid isPermaLink="false">oai:arXiv.org:2409.08024v1</guid>
      <category>cs.FL</category>
      <pubDate>Fri, 13 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Benjamin Hellouin de Menibus, Pac\^ome Perrotin</dc:creator>
    </item>
    <item>
      <title>Attack Tree Generation via Process Mining</title>
      <link>https://arxiv.org/abs/2402.12040</link>
      <description>arXiv:2402.12040v2 Announce Type: replace-cross 
Abstract: Attack Trees are a graphical model of security used to study threat scenarios. While visually appealing and supported by solid theories and effective tools, one of their main drawbacks remains the amount of effort required by security experts to design them from scratch. This work aims to remedy this by providing a method for the automatic generation of Attack Trees from attack logs. The main original feature of our approach w.r.t existing ones is the use of Process Mining algorithms to synthesize Attack Trees, which allow users to customize the way a set of logs are summarized as an Attack Tree, for example by discarding statistically irrelevant events. Our approach is supported by a prototype that, apart from the derivation and translation of the model, provides the user with an Attack Tree in the RisQFLan format, a tool used for quantitative risk modeling and analysis with Attack Trees. We illustrate our approach with the case study of attacks on a communication protocol, produced by a state-of-the-art protocol analyzer.</description>
      <guid isPermaLink="false">oai:arXiv.org:2402.12040v2</guid>
      <category>cs.CR</category>
      <category>cs.FL</category>
      <pubDate>Fri, 13 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Alyzia-Maria Konsta, Gemma Di Federico, Alberto Lluch Lafuente, Andrea Burattin</dc:creator>
    </item>
  </channel>
</rss>
