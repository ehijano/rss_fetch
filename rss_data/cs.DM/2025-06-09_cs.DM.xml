<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.DM updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.DM</link>
    <description>cs.DM updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.DM" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Tue, 10 Jun 2025 04:05:53 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Tue, 10 Jun 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>CNFs and DNFs with Exactly $k$ Solutions</title>
      <link>https://arxiv.org/abs/2506.07268</link>
      <description>arXiv:2506.07268v1 Announce Type: new 
Abstract: Model counting is a fundamental problem that consists of determining the number of satisfying assignments for a given Boolean formula. The weighted variant, which computes the weighted sum of satisfying assignments, has extensive applications in probabilistic reasoning, network reliability, statistical physics, and formal verification. A common approach for solving weighted model counting is to reduce it to unweighted model counting, which raises an important question: {\em What is the minimum number of terms (or clauses) required to construct a DNF (or CNF) formula with exactly $k$ satisfying assignments?}
  In this paper, we establish both upper and lower bounds on this question. We prove that for any natural number $k$, one can construct a monotone DNF formula with exactly $k$ satisfying assignments using at most $O(\sqrt{\log k}\log\log k)$ terms. This construction represents the first $o(\log k)$ upper bound for this problem. We complement this result by showing that there exist infinitely many values of $k$ for which any DNF or CNF representation requires at least $\Omega(\log\log k)$ terms or clauses. These results have significant implications for the efficiency of model counting algorithms based on formula transformations.</description>
      <guid isPermaLink="false">oai:arXiv.org:2506.07268v1</guid>
      <category>cs.DM</category>
      <category>cs.DS</category>
      <category>cs.LO</category>
      <category>math.CO</category>
      <category>math.LO</category>
      <pubDate>Tue, 10 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>L. Sunil Chandran, Rishikesh Gajjala, Kuldeep S. Meel</dc:creator>
    </item>
    <item>
      <title>HyColor: An Efficient Heuristic Algorithm for Graph Coloring</title>
      <link>https://arxiv.org/abs/2506.07373</link>
      <description>arXiv:2506.07373v1 Announce Type: new 
Abstract: The graph coloring problem (GCP) is a classic combinatorial optimization problem that aims to find the minimum number of colors assigned to vertices of a graph such that no two adjacent vertices receive the same color. GCP has been extensively studied by researchers from various fields, including mathematics, computer science, and biological science. Due to the NP-hard nature, many heuristic algorithms have been proposed to solve GCP. However, existing GCP algorithms focus on either small hard graphs or large-scale sparse graphs (with up to 10^7 vertices). This paper presents an efficient hybrid heuristic algorithm for GCP, named HyColor, which excels in handling large-scale sparse graphs while achieving impressive results on small dense graphs. The efficiency of HyColor comes from the following three aspects: a local decision strategy to improve the lower bound on the chromatic number; a graph-reduction strategy to reduce the working graph; and a k-core and mixed degree-based greedy heuristic for efficiently coloring graphs. HyColor is evaluated against three state-of-the-art GCP algorithms across four benchmarks, comprising three large-scale sparse graph benchmarks and one small dense graph benchmark, totaling 209 instances. The results demonstrate that HyColor consistently outperforms existing heuristic algorithms in both solution accuracy and computational efficiency for the majority of instances. Notably, HyColor achieved the best solutions in 194 instances (over 93%), with 34 of these solutions significantly surpassing those of other algorithms. Furthermore, HyColor successfully determined the chromatic number and achieved optimal coloring in 128 instances.</description>
      <guid isPermaLink="false">oai:arXiv.org:2506.07373v1</guid>
      <category>cs.DM</category>
      <category>cs.AI</category>
      <pubDate>Tue, 10 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Enqiang Zhu, Yu Zhang, Haopeng Sun, Ziqi Wei, Witold Pedrycz, Chanjuan Liu, Jin Xu</dc:creator>
    </item>
    <item>
      <title>#P is Sandwiched by One and Two #2DNF Calls: Is Subtraction Stronger Than We Thought?</title>
      <link>https://arxiv.org/abs/2506.06716</link>
      <description>arXiv:2506.06716v1 Announce Type: cross 
Abstract: The canonical class in the realm of counting complexity is #P. It is well known that the problem of counting the models of a propositional formula in disjunctive normal form (#DNF) is complete for #P under Turing reductions. On the other hand, #DNF $\in$ spanL and spanL $\not\subseteq$ #P unless NL = NP. Hence, the class of functions logspace-reducible to #DNF is a strict subset of #P under plausible complexity-theoretic assumptions. By contrast, we show that two calls to a (restricted) #2DNF oracle suffice to capture gapP, namely, that the logspace many-one closure of the subtraction between the results of two #2DNF calls is gapP. Because #P $\not\subseteq$ gapP, #P is strictly contained between one and two #2DNF oracle calls.
  Surprisingly, the propositional formulas needed in both calls are linear-time computable, and the reduction preserves interesting structural as well as symmetry properties, leading to algorithmic applications. We show that a single subtraction suffices to compensate for the absence of negation while still capturing gapP, i.e., our results carry over to the monotone fragments of #2SAT and #2DNF. Since our reduction is linear-time, it preserves sparsity and, as a consequence we obtain a sparsification lemma for both #2SAT and #2DNF. This has only been known for kSAT with k $\geq$ 3 and respective counting versions. We further show that both #2DNF calls can be combined into a single call if we allow a little postprocessing (computable by AC0- or TC0-circuits). Consequently, we derive refined versions of Toda's Theorem: PH $\subseteq$ [#MON2SAT]$^{log}_{TC0}$ = [#MON2DNF]$^{log}_{TC0}$ and PH $\subseteq$ [#IMPL2SAT]$^{log}_{AC0}$. Our route to these results is via structure-aware reductions that preserve parameters like treewidth up to an additive overhead. The absence of multiplicative overhead indeed yields parameterized SETH-tight lower bounds.</description>
      <guid isPermaLink="false">oai:arXiv.org:2506.06716v1</guid>
      <category>cs.CC</category>
      <category>cs.DM</category>
      <category>cs.DS</category>
      <category>cs.LO</category>
      <category>math.CO</category>
      <pubDate>Tue, 10 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <dc:creator>Max Bannach, Erik D. Demaine, Timothy Gomez, Markus Hecher</dc:creator>
    </item>
    <item>
      <title>Rectangular Duals on the Cylinder and the Torus</title>
      <link>https://arxiv.org/abs/2506.07170</link>
      <description>arXiv:2506.07170v1 Announce Type: cross 
Abstract: A rectangular dual of a plane graph $G$ is a contact representation of $G$ by interior-disjoint rectangles such that (i) no four rectangles share a point, and (ii) the union of all rectangles is a rectangle. In this paper, we study rectangular duals of graphs that are embedded in surfaces other than the plane. In particular, we fully characterize when a graph embedded on a cylinder admits a cylindrical rectangular dual. For graphs embedded on the flat torus, we can test whether the graph has a toroidal rectangular dual if we are additionally given a \textit{regular edge labeling}, i.e. a combinatorial description of rectangle adjacencies. Furthermore we can test whether there exists a toroidal rectangular dual that respects the embedding and that resides on a flat torus for which the sides are axis-aligned. Testing and constructing the rectangular dual, if applicable, can be done efficiently.</description>
      <guid isPermaLink="false">oai:arXiv.org:2506.07170v1</guid>
      <category>cs.CG</category>
      <category>cs.DM</category>
      <pubDate>Tue, 10 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Therese Biedl, Philipp Kindermann, Jonathan Klawitter</dc:creator>
    </item>
    <item>
      <title>Half-Iterates of $x(1+x)$, $\sin(x)$ and $\exp(x/e)$</title>
      <link>https://arxiv.org/abs/2506.07625</link>
      <description>arXiv:2506.07625v1 Announce Type: cross 
Abstract: The title reflects the original intent of this paper -- to continue exploring compositional square roots -- focusing on Walker's (1991) study of the Abel equation $f(\exp(x/e))=f(x)+1$ for real $x \neq e$. An unexpected discovery changed everything. We already knew that \'Ecalle (1974) developed theory inspiring relevant calculations across years. Precise details, however, seemed to escape attention until recently. Helpful online posts of Jagy (2012) are important not to overlook. The new algorithm is exceedingly simple and outperforms a rival method, due to Mavecha &amp; Laohakosol (2013), which we mistakenly advocated until now. Our loyalty has correspondingly shifted.</description>
      <guid isPermaLink="false">oai:arXiv.org:2506.07625v1</guid>
      <category>math.NT</category>
      <category>cs.DM</category>
      <pubDate>Tue, 10 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Steven Finch</dc:creator>
    </item>
    <item>
      <title>Leveraging Network Methods for Hub-like Microservice Detection</title>
      <link>https://arxiv.org/abs/2506.07683</link>
      <description>arXiv:2506.07683v1 Announce Type: cross 
Abstract: Context: Microservice Architecture is a popular architectural paradigm that facilitates flexibility by decomposing applications into small, independently deployable services. Catalogs of architectural anti-patterns have been proposed to highlight the negative aspects of flawed microservice design. In particular, the Hub-like anti-pattern lacks an unambiguous definition and detection method. Aim: In this work, we aim to find a robust detection approach for the Hub-like microservice anti-pattern that outputs a reasonable number of Hub-like candidates with high precision. Method: We leveraged a dataset of 25 microservice networks and several network hub detection techniques to identify the Hub-like anti-pattern, namely scale-free property, centrality metrics and clustering coefficient, minimum description length principle, and the approach behind the Arcan tool. Results and Conclusion: Our findings revealed that the studied architectural networks are not scale-free, that most considered hub detection approaches do not agree on the detected hubs, and that the method by Kirkley leveraging the Erdos-Renyi encoding is the most accurate one in terms of the number of detected hubs and the detection precision. Investigating further the applicability of these methods to detecting Hub-like components in microservice-based and other systems opens up new research directions. Moreover, our results provide an evaluation of the approach utilized by the widely used Arcan tool and highlight the potential to update the tool to use the normalized degree centrality of a component in the network, or for the approach based on ER encoding to be adopted instead.</description>
      <guid isPermaLink="false">oai:arXiv.org:2506.07683v1</guid>
      <category>cs.SE</category>
      <category>cs.DM</category>
      <pubDate>Tue, 10 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Alexander Bakhtin, Matteo Esposito, Valentina Lenarduzzi, Davide Taibi</dc:creator>
    </item>
    <item>
      <title>Centrality Change Proneness: an Early Indicator of Microservice Architectural Degradation</title>
      <link>https://arxiv.org/abs/2506.07690</link>
      <description>arXiv:2506.07690v1 Announce Type: cross 
Abstract: Over the past decade, the wide adoption of Microservice Architecture has required the identification of various patterns and anti-patterns to prevent Microservice Architectural Degradation. Frequently, the systems are modelled as a network of connected services. Recently, the study of temporal networks has emerged as a way to describe and analyze evolving networks. Previous research has explored how software metrics such as size, complexity, and quality are related to microservice centrality in the architectural network. This study investigates whether temporal centrality metrics can provide insight into the early detection of architectural degradation by correlating or affecting software metrics. We reconstructed the architecture of 7 releases of an OSS microservice project with 42 services. For every service in every release, we computed the software and centrality metrics. From one of the latter, we derived a new metric, Centrality Change Proneness. We then explored the correlation between the metrics. We identified 7 size and 5 complexity metrics that have a consistent correlation with centrality, while Centrality Change Proneness did not affect the software metrics, thus providing yet another perspective and an early indicator of microservice architectural degradation.</description>
      <guid isPermaLink="false">oai:arXiv.org:2506.07690v1</guid>
      <category>cs.SE</category>
      <category>cs.DM</category>
      <category>cs.NA</category>
      <category>math.NA</category>
      <pubDate>Tue, 10 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Alexander Bakhtin, Matteo Esposito, Valentina Lenarduzzi, Davide Taibi</dc:creator>
    </item>
    <item>
      <title>Stability and Extension of Steady and Ranging Persistence</title>
      <link>https://arxiv.org/abs/2506.07911</link>
      <description>arXiv:2506.07911v1 Announce Type: cross 
Abstract: Persistent homology is a topological data analysis tool that has been widely generalized, extending its scope outside the field of topology. Among its extensions, steady and ranging persistence was developed to study a wide variety of graph properties. Precisely, given a feature of interest on graphs, it is possible to build two types of persistence (steady and ranging persistence) that follow the evolution of the feature along graph filtrations. This study extends steady and ranging persistence to other objects using category theory and investigates the stability of such persistence. In particular, a characterization of the features that induce balanced steady and ranging persistence is provided. The main results of this study are illustrated using a practical implementation for hypergraphs.</description>
      <guid isPermaLink="false">oai:arXiv.org:2506.07911v1</guid>
      <category>math.AT</category>
      <category>cs.DM</category>
      <category>math.CT</category>
      <pubDate>Tue, 10 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Yann-Situ Gazull</dc:creator>
    </item>
    <item>
      <title>The complexity of computing the period and the exponent of a digraph</title>
      <link>https://arxiv.org/abs/2408.05762</link>
      <description>arXiv:2408.05762v2 Announce Type: replace 
Abstract: The period of a strongly connected digraph is the greatest common divisor of the lengths of all its cycles. The period of a digraph is the least common multiple of the periods of its strongly connected components. These notions play an important role in the theory of Markov chains and the analysis of powers of nonnegative matrices. While the time complexity of computing the period is well-understood, little is known about its space complexity. We show that the problem of computing the period of a digraph is NL-complete, even if all its cycles are contained in the same strongly connected component. However, if the digraph is strongly connected, we show that this problem becomes L-complete. For primitive digraphs (that is, strongly connected digraphs of period one), there always exists a number $m$ such that there is a path of length exactly $m$ between every two vertices. We show that computing the smallest such $m$, called the exponent of a digraph, is NL-complete. The exponent of a primitive digraph is a particular case of the index of convergence of a nonnegative matrix, which we also show to be computable in NL, and thus NL-complete.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.05762v2</guid>
      <category>cs.DM</category>
      <category>math.CO</category>
      <pubDate>Tue, 10 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:DOI>10.1016/j.ipl.2025.106590</arxiv:DOI>
      <dc:creator>Stefan Kiefer, Andrew Ryzhikov</dc:creator>
    </item>
    <item>
      <title>Bit catastrophes for the Burrows-Wheeler Transform</title>
      <link>https://arxiv.org/abs/2404.10426</link>
      <description>arXiv:2404.10426v2 Announce Type: replace-cross 
Abstract: A bit catastrophe, loosely defined, is when a change in just one character of a string causes a significant change in the size of the compressed string. We study this phenomenon for the Burrows-Wheeler Transform (BWT), a string transform at the heart of several of the most popular compressors and aligners today. The parameter determining the size of the compressed data is the number of equal-letter runs of the BWT, commonly denoted $r$.
  We exhibit infinite families of strings in which insertion, deletion, resp. substitution of one character increases $r$ from constant to $\Theta(\log n)$, where $n$ is the length of the string. These strings can be interpreted both as examples for an increase by a multiplicative or an additive $\Theta(\log n)$-factor. As regards multiplicative factor, they attain the upper bound given by Akagi, Funakoshi, and Inenaga [Inf &amp; Comput. 2023] of $O(\log n \log r)$, since here $r=O(1)$.
  We then give examples of strings in which insertion, deletion, resp. substitution of a character increases $r$ by a $\Theta(\sqrt{n})$ additive factor. These strings significantly improve the best known lower bound for an additive factor of $\Omega(\log n)$ [Giuliani et al., SOFSEM 2021].</description>
      <guid isPermaLink="false">oai:arXiv.org:2404.10426v2</guid>
      <category>cs.DS</category>
      <category>cs.DM</category>
      <pubDate>Tue, 10 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <arxiv:DOI>10.1007/s00224-024-10212-9</arxiv:DOI>
      <arxiv:journal_reference>Theory of Computing Systems 69, 19 (2025)</arxiv:journal_reference>
      <dc:creator>Sara Giuliani, Shunsuke Inenaga, Zsuzsanna Lipt\'ak, Giuseppe Romana, Marinella Sciortino, Cristian Urbina</dc:creator>
    </item>
    <item>
      <title>Small maximal clusters are very unlikely in critical random graphs</title>
      <link>https://arxiv.org/abs/2406.12451</link>
      <description>arXiv:2406.12451v2 Announce Type: replace-cross 
Abstract: We describe a probabilistic methodology, based on random walk estimates, to obtain exponential upper bounds for the probability of observing unusually small maximal components in two classical (near-)critical random graph models. More specifically, we analyse the near-critical Erd\H{o}s-R\'enyi model $\mathbb{G}(n,p)$ and the random graph $\mathbb{G}(n,d,p)$ obtained by performing near-critical $p$-bond percolation on a simple random $d$-regular graph and show that, for each one of these models, the probability that the size of a largest component is smaller than $n^{2/3}/A$ is at most of order $\exp(-A^{3/2})$. The exponent $3/2$ is known to be optimal for the near-critical $\mathbb{G}(n,p)$ random graph, whereas for the near-critical $\mathbb{G}(n,d,p)$ model the best known upper bound for the above probability was of order $A^{-3/5}$. As a secondary result we show, by means of an optimized version of the martingale method of Nachmias and Peres, that the above probability of observing an unusually small maximal component is at most of order $\exp(-A^{3/5})$ in other two critical models, namely a random intersection graph and the quantum random graph; this stretched-exponential bounds also improve upon the known (polynomial) bounds available for these other two critical models.</description>
      <guid isPermaLink="false">oai:arXiv.org:2406.12451v2</guid>
      <category>math.PR</category>
      <category>cs.DM</category>
      <pubDate>Tue, 10 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Umberto De Ambroggio</dc:creator>
    </item>
    <item>
      <title>Prime Multiple Missing Graphs</title>
      <link>https://arxiv.org/abs/2501.02529</link>
      <description>arXiv:2501.02529v2 Announce Type: replace-cross 
Abstract: The famous Goldbach conjecture remains open for nearly three centuries. Recently Goldbach graphs are introduced to relate the problem with the literature of Graph Theory. It is shown that the connectedness of the graphs is equivalent to the affirmative answer of the conjecture. Some modified version of the graphs, say, near Goldbach graphs are shown to be Hamiltonian for small number of vertices. In this context, we introduce a class of graphs, namely, prime multiple missing graphs such that near Goldbach graphs are finite intersections of these graphs. We study these graphs for primes 3,5 and in general for any odd prime p. We prove that these graphs are connected with diameter at most 3 and Hamiltonian for even (&gt;2) vertices. Next the intersection of prime multiple missing graphs for primes 3 and 5 are studied. We prove that these graphs are connected with diameter at most 4 and they are also Hamiltonian for even (&gt;2) vertices. We observe that the diameters of finite Goldbach graphs and near Goldbach graphs are bounded by 5 (up to 10000 vertices). We believe further study on these graphs with big data analysis will help to understand structures of near Goldbach graphs.</description>
      <guid isPermaLink="false">oai:arXiv.org:2501.02529v2</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <pubDate>Tue, 10 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Shamik Ghosh</dc:creator>
    </item>
    <item>
      <title>Supports for Outerplanar and Bounded Treewidth Graphs</title>
      <link>https://arxiv.org/abs/2504.05039</link>
      <description>arXiv:2504.05039v3 Announce Type: replace-cross 
Abstract: We study the existence and construction of sparse supports for hypergraphs derived from subgraphs of a graph $G$. For a hypergraph $(X,\mathcal{H})$, a support $Q$ is a graph on $X$ s.t. $Q[H]$, the graph induced on vertices in $H$ is connected for every $H\in\mathcal{H}$.
  We consider \emph{primal}, \emph{dual}, and \emph{intersection} hypergraphs defined by subgraphs of a graph $G$ that are \emph{non-piercing}, (i.e., each subgraph is connected, their pairwise differences remain connected).
  If $G$ is outerplanar, we show that the primal, dual and intersection hypergraphs admit supports that are outerplanar. For a bounded treewidth graph $G$, we show that if the subgraphs are non-piercing, then there exist supports for the primal and dual hypergraphs of treewidth $O(2^{tw(G)})$ and $O(2^{4tw(G)})$ respectively, and a support of treewidth $2^{O(2^{tw(G)})}$ for the intersection hypergraph. We also show that for the primal and dual hypergraphs, the exponential blow-up of treewidth is sometimes essential.
  All our results are algorithmic and yield polynomial-time algorithms (when the treewidth is bounded). The existence and construction of sparse supports is a crucial step in the design and analysis of PTASs and/or sub-exponential time algorithms for several packing and covering problems.</description>
      <guid isPermaLink="false">oai:arXiv.org:2504.05039v3</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <pubDate>Tue, 10 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Rajiv Raman, Karamjeet Singh</dc:creator>
    </item>
    <item>
      <title>Compositional Square Roots of $\exp(x)$ and $1+x^2$</title>
      <link>https://arxiv.org/abs/2504.19999</link>
      <description>arXiv:2504.19999v3 Announce Type: replace-cross 
Abstract: Our work began as an effort to understand calculations by Morris &amp; Szekeres (1961) and Walker (1991) regarding fractional iteration.</description>
      <guid isPermaLink="false">oai:arXiv.org:2504.19999v3</guid>
      <category>math.GM</category>
      <category>cs.DM</category>
      <pubDate>Tue, 10 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Steven Finch</dc:creator>
    </item>
    <item>
      <title>An $O(log log n)$-approximate budget feasible mechanism for subadditive valuations</title>
      <link>https://arxiv.org/abs/2506.04665</link>
      <description>arXiv:2506.04665v2 Announce Type: replace-cross 
Abstract: In budget-feasible mechanism design, there is a set of items $U$, each owned by a distinct seller. The seller of item $e$ incurs a private cost $\overline{c}_e$ for supplying her item. A buyer wishes to procure a set of items from the sellers of maximum value, where the value of a set $S\subseteq U$ of items is given by a valuation function $v:2^U\to \mathbb{R}_+$. The buyer has a budget of $B \in \mathbb{R}_+$ for the total payments made to the sellers. We wish to design a mechanism that is truthful, that is, sellers are incentivized to report their true costs, budget-feasible, that is, the sum of the payments made to the sellers is at most the budget $B$, and that outputs a set whose value is large compared to $\text{OPT}:=\max\{v(S):\overline{c}(S)\le B,S\subseteq U\}$.
  Budget-feasible mechanism design has been extensively studied, with the literature focussing on (classes of) subadditive valuation functions, and various polytime, budget-feasible mechanisms, achieving constant-factor approximation, have been devised for the special cases of additive, submodular, and XOS valuations. However, for general subadditive valuations, the best-known approximation factor achievable by a polytime budget-feasible mechanism (given access to demand oracles) was only $O(\log n / \log \log n)$, where $n$ is the number of items.
  We improve this state-of-the-art significantly by designing a randomized budget-feasible mechanism for subadditive valuations that \emph{achieves a substantially-improved approximation factor of $O(\log\log n)$ and runs in polynomial time, given access to demand oracles.}</description>
      <guid isPermaLink="false">oai:arXiv.org:2506.04665v2</guid>
      <category>cs.GT</category>
      <category>cs.DM</category>
      <category>cs.DS</category>
      <pubDate>Tue, 10 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Rian Neogi, Kanstantsin Pashkovich, Chaitanya Swamy</dc:creator>
    </item>
  </channel>
</rss>
