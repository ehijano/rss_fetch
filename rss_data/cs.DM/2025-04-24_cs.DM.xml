<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.DM updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.DM</link>
    <description>cs.DM updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.DM" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Thu, 24 Apr 2025 04:01:33 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Thu, 24 Apr 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>Updating Lower and Upper Bounds for the Job-Shop Scheduling Problem Test Instances</title>
      <link>https://arxiv.org/abs/2504.16106</link>
      <description>arXiv:2504.16106v1 Announce Type: cross 
Abstract: The Job-Shop Scheduling Problem (JSSP) and its variant, the Flexible Job-Shop Scheduling Problem (FJSSP), are combinatorial optimization problems studied thoroughly in the literature. Generally, the aim is to reduce the makespan of a scheduling solution corresponding to a problem instance. Thus, finding upper and lower bounds for an optimal makespan enables the assessment of performances for multiple approaches addressed so far. We use OR-Tools, a solver portfolio, to compute new bounds for some open benchmark instances, in order to reduce the gap between upper and lower bounds. We find new numerical lower bounds for multiple benchmark instances, up to closing the Taillard's ta33 instance. We also improve upper bounds for four instances, namely Taillard's ta26 &amp; ta45 and Dauzere's 05a &amp; 06a. Additionally we share an optimal solution for Taillard's ta45 as well as Hurink-edata's car5.</description>
      <guid isPermaLink="false">oai:arXiv.org:2504.16106v1</guid>
      <category>cs.DS</category>
      <category>cs.DM</category>
      <pubDate>Thu, 24 Apr 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-sa/4.0/</dc:rights>
      <dc:creator>Marc-Emmanuel Coupvent des Graviers (Safran Electronics and Defense, France), Lotfi Kobrosly (Safran Electronics and Defense, France, LAMSADE, Universit\'e Paris Dauphine-PSL, Place du Mar\'echal de Lattre de Tassigny, Paris, France), Christophe Guettier (Safran Electronics and Defense, France), Tristan Cazenave (LAMSADE, Universit\'e Paris Dauphine-PSL, Place du Mar\'echal de Lattre de Tassigny, Paris, France)</dc:creator>
    </item>
    <item>
      <title>An Explicit and Efficient $O(n^2)$-Time Algorithm for Sorting Sumsets</title>
      <link>https://arxiv.org/abs/2504.16393</link>
      <description>arXiv:2504.16393v1 Announce Type: cross 
Abstract: We present the first explicit comparison-based algorithm that sorts the sumset $X + Y = \{x_i + y_j,\ \forall 0 \le i, j &lt; n\}$, where $X$ and $Y$ are sorted arrays of real numbers, in optimal $O(n^2)$ time and comparisons. While Fredman (1976) proved the theoretical existence of such an algorithm, a concrete construction has remained open for nearly five decades. Our algorithm exploits the structured monotonicity of the sumset matrix to perform amortized constant-comparisons and insertions, eliminating the $\log(n)$ overhead typical of comparison-based sorting. We prove correctness and optimality in the standard comparison model, extend the method to $k$-fold sumsets with $O(n^k)$ performance, and outline potential support for dynamic updates. Experimental benchmarks show significant speedups over classical algorithms such as MergeSort and QuickSort when applied to sumsets. These results resolve a longstanding open problem in sorting theory and contribute novel techniques for exploiting input structure in algorithm design.</description>
      <guid isPermaLink="false">oai:arXiv.org:2504.16393v1</guid>
      <category>cs.DS</category>
      <category>cs.DM</category>
      <pubDate>Thu, 24 Apr 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>S. Mundhra (Ohio Wesleyan University)</dc:creator>
    </item>
    <item>
      <title>On graphs with a simple structure of maximal cliques</title>
      <link>https://arxiv.org/abs/2504.16863</link>
      <description>arXiv:2504.16863v1 Announce Type: cross 
Abstract: We say that a hereditary graph class $\mathcal{G}$ is \emph{clique-sparse} if there is a constant $k=k(\mathcal{G})$ such that for every graph $G\in\mathcal{G}$, every vertex of $G$ belongs to at most $k$ maximal cliques, and any maximal clique of $G$ can be intersected in at most $k$ different ways by other maximal cliques.
  We provide various characterisations of clique-sparse graph classes, including a list of five parametric forbidden induced subgraphs. We show that recent techniques for proving induced analogues of Menger's Theorem and the Grid Theorem of Robertson and Seymour can be lifted to prove induced variants in clique-sparse graph classes when replacing ``treewidth'' by ''tree-independence number''.</description>
      <guid isPermaLink="false">oai:arXiv.org:2504.16863v1</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <pubDate>Thu, 24 Apr 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>J. Pascal Gollin, Meike Hatzel, Sebastian Wiederrecht</dc:creator>
    </item>
    <item>
      <title>A Nearly Optimal Deterministic Algorithm for Online Transportation Problem</title>
      <link>https://arxiv.org/abs/2406.03778</link>
      <description>arXiv:2406.03778v3 Announce Type: replace-cross 
Abstract: For the online transportation problem with $m$ server sites, it has long been known that the competitive ratio of any deterministic algorithm is at least $2m-1$. Kalyanasundaram and Pruhs conjectured in 1998 that a deterministic $(2m-1)$-competitive algorithm exists for this problem, a conjecture that has remained open for over two decades.
  In this paper, we propose a new deterministic algorithm named Subtree-Decomposition for the online transportation problem and show that it achieves a competitive ratio of at most $8m-5$. This is the first $O(m)$-competitive deterministic algorithm, coming close to the lower bound of $2m-1$ within a constant factor.</description>
      <guid isPermaLink="false">oai:arXiv.org:2406.03778v3</guid>
      <category>cs.DS</category>
      <category>cs.DM</category>
      <pubDate>Thu, 24 Apr 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Tsubasa Harada, Toshiya Itoh</dc:creator>
    </item>
    <item>
      <title>Pushing the Frontier on Approximate EFX Allocations</title>
      <link>https://arxiv.org/abs/2406.12413</link>
      <description>arXiv:2406.12413v2 Announce Type: replace-cross 
Abstract: We study the problem of allocating a set of indivisible goods to a set of agents with additive valuation functions, aiming to achieve approximate envy-freeness up to any good ($\alpha$-EFX). The state-of-the-art results on the problem include that (exact) EFX allocations exist when (a) there are at most three agents, or (b) the agents' valuation functions can take at most two values, or (c) the agents' valuation functions can be represented via a graph. For $\alpha$-EFX, it is known that a $0.618$-EFX allocation exists for any number of agents with additive valuation functions. In this paper, we show that $2/3$-EFX allocations exist when (a) there are at most \emph{seven agents}, (b) the agents' valuation functions can take at most \emph{three values}, or (c) the agents' valuation functions can be represented via a \emph{multigraph}. Our results can be interpreted in two ways. First, by relaxing the notion of EFX to $2/3$-EFX, we obtain existence results for strict generalizations of the settings for which exact EFX allocations are known to exist. Secondly, by imposing restrictions on the setting, we manage to beat the barrier of $0.618$ and achieve an approximation guarantee of $2/3$. Therefore, our results push the \emph{frontier} of existence and computation of approximate EFX allocations, and provide insights into the challenges of settling the existence of exact EFX allocations.</description>
      <guid isPermaLink="false">oai:arXiv.org:2406.12413v2</guid>
      <category>cs.GT</category>
      <category>cs.AI</category>
      <category>cs.DM</category>
      <pubDate>Thu, 24 Apr 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Georgios Amanatidis, Aris Filos-Ratsikas, Alkmini Sgouritsa</dc:creator>
    </item>
  </channel>
</rss>
