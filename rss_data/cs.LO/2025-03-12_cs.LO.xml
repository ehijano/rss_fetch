<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.LO updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.LO</link>
    <description>cs.LO updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.LO" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Wed, 12 Mar 2025 04:00:01 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Wed, 12 Mar 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>A Probabilistic Choreography Language for PRISM</title>
      <link>https://arxiv.org/abs/2503.08530</link>
      <description>arXiv:2503.08530v1 Announce Type: new 
Abstract: We present a choreographic framework for modelling and
  analysing concurrent probabilistic systems based on the PRISM
  model-checker. This is achieved through the development of a
  choreography language, which is a specification language that allows
  to describe the desired interactions within a concurrent system from
  a global viewpoint. Using choreographies gives a clear and complete
  view of system interactions, making it easier to understand the
  process flow and identify potential errors, which helps ensure
  correct execution and improves system reliability. We equip our
  language with a probabilistic semantics and then define a formal
  encoding into the PRISM language and discuss its
  correctness. Properties of programs written in our choreographic
  language can be model-checked by the PRISM model-checker via their
  translation into the PRISM language. Finally, we implement a
  compiler for our language and demonstrate its practical
  applicability via examples drawn from the use cases featured in the
  PRISM website.</description>
      <guid isPermaLink="false">oai:arXiv.org:2503.08530v1</guid>
      <category>cs.LO</category>
      <category>cs.PL</category>
      <pubDate>Wed, 12 Mar 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Marco Carbone, Adele Veschetti</dc:creator>
    </item>
    <item>
      <title>Efficient Neural Clause-Selection Reinforcement</title>
      <link>https://arxiv.org/abs/2503.07792</link>
      <description>arXiv:2503.07792v1 Announce Type: cross 
Abstract: Clause selection is arguably the most important choice point in saturation-based theorem proving. Framing it as a reinforcement learning (RL) task is a way to challenge the human-designed heuristics of state-of-the-art provers and to instead automatically evolve -- just from prover experiences -- their potentially optimal replacement. In this work, we present a neural network architecture for scoring clauses for clause selection that is powerful yet efficient to evaluate. Following RL principles to make design decisions, we integrate the network into the Vampire theorem prover and train it from successful proof attempts. An experiment on the diverse TPTP benchmark finds the neurally guided prover improve over a baseline strategy, from which it initially learns--in terms of the number of in-training-unseen problems solved under a practically relevant, short CPU instruction limit--by 20%.</description>
      <guid isPermaLink="false">oai:arXiv.org:2503.07792v1</guid>
      <category>cs.AI</category>
      <category>cs.LO</category>
      <pubDate>Wed, 12 Mar 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Martin Suda</dc:creator>
    </item>
    <item>
      <title>Rerailing Automata</title>
      <link>https://arxiv.org/abs/2503.08438</link>
      <description>arXiv:2503.08438v1 Announce Type: cross 
Abstract: In this paper, we introduce rerailing automata for $\omega$-regular languages. They generalize both deterministic parity (DPW) and minimized history-deterministic co-B\"uchi automata (with transition based acceptance, HdTbcBW) while combining their favorable properties. In particular, rerailing automata can represent arbitrary $\omega$-regular languages while allowing for polynomial-time minimization, just as HdTbcBW do. Since DPW are a special case of rerailing automata, a minimized rerailing automaton is never larger than the smallest deterministic parity automaton for the same language. We also show that rerailing automata can be used as a replacement for deterministic parity automata for the realizability check of open systems.
  The price to be paid to obtain the useful properties of rerailing automata is that the acceptance condition in such automata refers to the dominating colors along all runs for a given word, where just as in parity automata, the dominating color along a run is the lowest one occurring infinitely often along it. A rerailing automaton accepts those words for which the greatest of the dominating colors along the runs is even. Additionally, rerailing automata guarantee that every prefix of a run for a word can be extended to eventually reach a point from which all runs for the word extending the prefix have the same dominating color, and it is even if and only if the word is in the language of the automaton. We show that these properties together allow characterizing the role of each state in such an automaton in a way that relates it to state combinations in a sequence of co-B\"uchi automata for the represented language. This characterization forms the basis of the polynomial-time minimization approach in this paper.</description>
      <guid isPermaLink="false">oai:arXiv.org:2503.08438v1</guid>
      <category>cs.FL</category>
      <category>cs.LO</category>
      <pubDate>Wed, 12 Mar 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>R\"udiger Ehlers</dc:creator>
    </item>
    <item>
      <title>Teaching Divisibility and Binomials with Coq</title>
      <link>https://arxiv.org/abs/2404.12676</link>
      <description>arXiv:2404.12676v2 Announce Type: replace 
Abstract: The goal of this contribution is to provide worksheets in Coq for students to learn about divisibility and binomials. These basic topics are a good case study as they are widely taught in the early academic years (or before in France). We present here our technical and pedagogical choices, the numerous exercises we developed and a small experiment we conducted on two students. As expected, it required additional {\Coq} material such as other lemmas and dedicated tactics. The worksheets are freely available and flexible in several ways.</description>
      <guid isPermaLink="false">oai:arXiv.org:2404.12676v2</guid>
      <category>cs.LO</category>
      <pubDate>Wed, 12 Mar 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <arxiv:journal_reference>13th International Workshop on Theorem proving components for Educational software - ThEdu 2024, Julien Narboux; Walther Neuper; Pedro Quaresma, Jul 2024, Nancy, France</arxiv:journal_reference>
      <dc:creator>Sylvie Boldo (TOCCATA), Fran\c{c}ois Cl\'ement (SERENA, CERMICS), David Hamelin (TOCCATA), Micaela Mayero (LIPN, TOCCATA), Pierre Rousselin (LAGA, SERENA, CERMICS)</dc:creator>
    </item>
    <item>
      <title>Algorithms for Markov Binomial Chains</title>
      <link>https://arxiv.org/abs/2408.04902</link>
      <description>arXiv:2408.04902v3 Announce Type: replace 
Abstract: We study algorithms to analyze a particular class of Markov population processes that is often used in epidemiology. More specifically, Markov binomial chains are the model that arises from stochastic time-discretizations of classical compartmental models. In this work we formalize this class of Markov population processes and focus on the problem of computing the expected time to termination in a given such model. Our theoretical contributions include proving that Markov binomial chains whose flow of individuals through compartments is acyclic almost surely terminate. We give a PSPACE algorithm for the problem of approximating the time to termination and a direct algorithm for the exact problem in the Blum-Shub-Smale model of computation. Finally, we provide a natural encoding of Markov binomial chains into a common input language for probabilistic model checkers. We implemented the latter encoding and present some initial empirical results showcasing what formal methods can do for practicing epidemiologists.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.04902v3</guid>
      <category>cs.LO</category>
      <pubDate>Wed, 12 Mar 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Alejandro Alarc\'on Gonzalez, Niel Hens, Tim Leys, Guillermo A. P\'erez</dc:creator>
    </item>
    <item>
      <title>Categorical semantics of compositional reinforcement learning</title>
      <link>https://arxiv.org/abs/2208.13687</link>
      <description>arXiv:2208.13687v2 Announce Type: replace-cross 
Abstract: Compositional knowledge representations in reinforcement learning (RL) facilitate modular, interpretable, and safe task specifications. However, generating compositional models requires the characterization of minimal assumptions for the robustness of the compositionality feature, especially in the case of functional decompositions. Using a categorical point of view, we develop a knowledge representation framework for a compositional theory of RL. Our approach relies on the theoretical study of the category $\mathsf{MDP}$, whose objects are Markov decision processes (MDPs) acting as models of tasks. The categorical semantics models the compositionality of tasks through the application of pushout operations akin to combining puzzle pieces. As a practical application of these pushout operations, we introduce zig-zag diagrams that rely on the compositional guarantees engendered by the category $\mathsf{MDP}$. We further prove that properties of the category $\mathsf{MDP}$ unify concepts, such as enforcing safety requirements and exploiting symmetries, generalizing previous abstraction theories for RL.</description>
      <guid isPermaLink="false">oai:arXiv.org:2208.13687v2</guid>
      <category>cs.AI</category>
      <category>cs.LO</category>
      <category>cs.SY</category>
      <category>eess.SY</category>
      <category>math.CT</category>
      <pubDate>Wed, 12 Mar 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Georgios Bakirtzis, Michail Savvas, Ufuk Topcu</dc:creator>
    </item>
  </channel>
</rss>
