<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.DM updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.DM</link>
    <description>cs.DM updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.DM" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Fri, 06 Jun 2025 01:41:09 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Thu, 05 Jun 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Tournament Robustness via Redundancy</title>
      <link>https://arxiv.org/abs/2506.03701</link>
      <description>arXiv:2506.03701v1 Announce Type: new 
Abstract: A knockout tournament is one of the most simple and popular forms of competition. Here, we are given a binary tournament tree where all leaves are labeled with seed position names. The players participating in the tournament are assigned to the seed positions. In each round, the two players assigned to leaves of the tournament tree with a common parent compete, and the winner is promoted to the parent. The last remaining player is the winner of the tournament.
  In this work, we study the problem of making knock-out tournaments robust against manipulation, where the form of manipulation we consider is changing the outcome of a game. We assume that our input is only the number of players that compete in the tournament, and the number of manipulations against which the tournament should be robust. Furthermore, we assume that there is a strongest player, that is, a player that beats any of the other players. However, the identity of this player is not part of the problem input.
  To ensure robustness against manipulation, we uncover an unexpected connection between the problem at hand and communication protocols that utilize a feedback channel, offering resilience against adversarial noise. We explore the trade-off between the size of the robust tournament tree and the degree of protection against manipulation. Specifically, we demonstrate that it is possible to tolerate up to a $1/3$ fraction of manipulations along each leaf-to-root path, at the cost of only a polynomial blow-up in the tournament size.</description>
      <guid isPermaLink="false">oai:arXiv.org:2506.03701v1</guid>
      <category>cs.DM</category>
      <pubDate>Thu, 05 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Klim Efremenko, Hendrik Molter, Meirav Zehavi</dc:creator>
    </item>
    <item>
      <title>GenTT: Generate Vectorized Codes for General Tensor Permutation</title>
      <link>https://arxiv.org/abs/2506.03686</link>
      <description>arXiv:2506.03686v1 Announce Type: cross 
Abstract: Tensor permutation is a fundamental operation widely applied in AI, tensor networks, and related fields. However, it is extremely complex, and different shapes and permutation maps can make a huge difference. SIMD permutation began to be studied in 2006, but the best method at that time was to split complex permutations into multiple simple permutations to do SIMD, which might increase the complexity for very complex permutations. Subsequently, as tensor contraction gained significant attention, researchers explored structured permutations associated with tensor contraction. Progress on general permutations has been limited, and with increasing SIMD bit widths, achieving efficient performance for these permutations has become increasingly challenging. We propose a SIMD permutation toolkit, \system, that generates optimized permutation code for arbitrary instruction sets, bit widths, tensor shapes, and permutation patterns, while maintaining low complexity. In our experiments, \system is able to achieve up to $38\times$ speedup for special cases and $5\times$ for general gases compared to Numpy.</description>
      <guid isPermaLink="false">oai:arXiv.org:2506.03686v1</guid>
      <category>cs.DS</category>
      <category>cs.DC</category>
      <category>cs.DM</category>
      <pubDate>Thu, 05 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Yaojian Chen, Tianyu Ma, An Yang, Lin Gan, Wenlai Zhao, Guangwen Yang</dc:creator>
    </item>
    <item>
      <title>Spanning-tree-packing protocol for conference key propagation in quantum networks</title>
      <link>https://arxiv.org/abs/2506.04105</link>
      <description>arXiv:2506.04105v1 Announce Type: cross 
Abstract: We consider a network of users connected by pairwise quantum key distribution (QKD) links. Using these pairwise secret keys and public classical communication, the users want to generate a common (conference) secret key at the maximal rate. We propose an algorithm based on spanning tree packing (a known problem in graph theory) and prove its optimality. This algorithm enables optimal conference key generation in modern quantum networks of arbitrary topology. Additionally, we discuss how it can guide the optimal placement of new bipartite links in the network design.</description>
      <guid isPermaLink="false">oai:arXiv.org:2506.04105v1</guid>
      <category>quant-ph</category>
      <category>cs.CR</category>
      <category>cs.DM</category>
      <pubDate>Thu, 05 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Anton Trushechkin, Hermann Kampermann, Dagmar Bru{\ss}</dc:creator>
    </item>
    <item>
      <title>HIST-Critical Graphs and Malkevitch's Conjecture</title>
      <link>https://arxiv.org/abs/2401.04554</link>
      <description>arXiv:2401.04554v2 Announce Type: replace-cross 
Abstract: In a given graph, a HIST is a spanning tree without $2$-valent vertices. Motivated by developing a better understanding of HIST-free graphs, i.e. graphs containing no HIST, in this article's first part we study HIST-critical graphs, i.e. HIST-free graphs in which every vertex-deleted subgraph does contain a HIST (e.g. a triangle). We give an almost complete characterisation of the orders for which these graphs exist and present an infinite family of planar examples which are $3$-connected and in which nearly all vertices are $4$-valent. This leads naturally to the second part in which we investigate planar $4$-regular graphs with and without HISTs, motivated by a conjecture of Malkevitch, which we computationally verify up to order $22$. First we enumerate HISTs in antiprisms, whereafter we present planar $4$-regular graphs with and without HISTs, obtained via line graphs. Finally, we confirm Malkevitch's conjecture for the family of line graphs of cyclically $4$-edge connected cubic graphs.</description>
      <guid isPermaLink="false">oai:arXiv.org:2401.04554v2</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <pubDate>Thu, 05 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Jan Goedgebeur, Kenta Noguchi, Jarne Renders, Carol T. Zamfirescu</dc:creator>
    </item>
    <item>
      <title>Time, Travel, and Energy in the Uniform Dispersion Problem</title>
      <link>https://arxiv.org/abs/2404.19564</link>
      <description>arXiv:2404.19564v2 Announce Type: replace-cross 
Abstract: We investigate the algorithmic problem of uniformly dispersing a swarm of robots in an unknown, gridlike environment. In this setting, our goal is to study the relationships between performance metrics and robot capabilities. We introduce a formal model comparing dispersion algorithms based on makespan, traveled distance, energy consumption, sensing, communication, and memory. Using this framework, we classify uniform dispersion algorithms according to their capability requirements and performance. We prove that while makespan and travel can be minimized in all environments, energy cannot, if the swarm's sensing range is bounded. In contrast, we show that energy can be minimized by ``ant-like'' robots in synchronous settings and asymptotically minimized in asynchronous settings, provided the environment is topologically simply connected, by using our ``Find-Corner Depth-First Search'' (FCDFS) algorithm. Our theoretical and experimental results show that FCDFS significantly outperforms known algorithms. Our findings reveal key limitations in designing swarm robotics systems for unknown environments, emphasizing the role of topology in energy-efficient dispersion.</description>
      <guid isPermaLink="false">oai:arXiv.org:2404.19564v2</guid>
      <category>cs.RO</category>
      <category>cs.DM</category>
      <category>cs.MA</category>
      <pubDate>Thu, 05 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Michael Amir, Alfred M. Bruckstein</dc:creator>
    </item>
    <item>
      <title>Two questions on Kneser colorings</title>
      <link>https://arxiv.org/abs/2405.08797</link>
      <description>arXiv:2405.08797v2 Announce Type: replace-cross 
Abstract: In this paper, we investigate two questions on Kneser graphs $KG_{n,k}$. First, we prove that the union of $s$ intersecting families in ${[n]\choose k}$ has size at most ${n\choose k}-{n-s\choose k}$ for all sufficiently large $n$ that satisfy $n&gt;(2+\epsilon)k^2+s$ with $\epsilon&gt;0$. We provide an example that shows that this result is essentially tight for the number of colors close to $\chi(KG_{n,k})=n-2k+2$. We also improve the result of Bulankina and Kupavskii on the choice chromatic number, showing that it is at least $\frac 1{25} n\log n$ for all $k&lt;\sqrt n$ and $n$ sufficiently large.</description>
      <guid isPermaLink="false">oai:arXiv.org:2405.08797v2</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <pubDate>Thu, 05 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Eduard Inozemtsev, Andrey Kupavskii</dc:creator>
    </item>
    <item>
      <title>Partitioning 2-edge-coloured bipartite graphs into monochromatic cycles</title>
      <link>https://arxiv.org/abs/2409.03394</link>
      <description>arXiv:2409.03394v3 Announce Type: replace-cross 
Abstract: Given an $r$-edge-colouring of the edges of a graph $G$, we say that it can be partitioned into $p$ monochromatic cycles when there exists a set of $p$ vertex-disjoint monochromatic cycles covering all the vertices of $G$. In the literature of this problem, an edge and a single vertex both count as a cycle.
  We show that for every $2$-colouring of the edges of a complete balanced bipartite graph, $K_{n,n}$, it can be partitioned into at most 4 monochromatic cycles. This type of question was first studied in 1970 for complete graphs and in 1983, by Gy\'arf\'as and Lehel, for $K_{n,n}$. In 2014, Pokrovskiy showed for all $n$ that, given any $2$-colouring of its edges, $K_{n,n}$ can be partitioned into at most three monochromatic paths. It turns out that finding monochromatic cycles instead of paths is a natural question that has also been raised for other graphs. In 2015, Schaudt and Stein showed that 14 cycles are sufficient for sufficiently large $2$-edge-coloured $K_{n,n}$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2409.03394v3</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <pubDate>Thu, 05 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Fabr\'icio Siqueira Benevides, Arthur Lima Quintino, Alexandre Talon</dc:creator>
    </item>
    <item>
      <title>When is local search both effective and efficient?</title>
      <link>https://arxiv.org/abs/2410.02634</link>
      <description>arXiv:2410.02634v2 Announce Type: replace-cross 
Abstract: Many combinatorial optimization problems can be represented by valued constraint satisfaction problems (VCSPs) and the fitness landscapes that they generate. Local search starts at an assignment in this landscape and successively moves assignments until no further improvement is possible among the adjacent assignments. Classic analyses of local search algorithms have focused mostly on the question of effectiveness ("did we find a good solution?") and often implicitly assumed that there are no doubts about their efficiency ("did we find it quickly?"). But there are many reasons to doubt the efficiency of local search. Even if we focus on fitness landscapes on the hypercube that are single peaked on every subcube (known as semismooth fitness landscapes, completely unimodal pseudo-Boolean functions, or acyclic unique sink orientations) where effectiveness is obvious, many local search algorithms are known to be inefficient. We define a "direction" for valued constraints such that directed VCSPs generate semismooth fitness landscapes. We call directed VCSPs oriented if they do not have any pair of variables with arcs in both directions. Since recognizing if a VCSP-instance is directed or oriented is coNP-complete, we generalized oriented VCSPs as conditionally-smooth fitness landscapes where the structural property of 'conditionally-smooth' is recognizable in polynomial time. We prove that many popular local search algorithms like random ascent, simulated annealing, history-based rules, jumping rules, and the Kernighan-Lin heuristic are very efficient on conditionally-smooth landscapes. But conditionally-smooth landscapes are still expressive enough so that other well-regarded local search algorithms like steepest ascent and random facet require a super-polynomial number of steps to find the fitness peak.</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.02634v2</guid>
      <category>cs.DS</category>
      <category>cs.DM</category>
      <category>q-bio.PE</category>
      <pubDate>Thu, 05 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Artem Kaznatcheev, Sofia Vazquez Alferez</dc:creator>
    </item>
    <item>
      <title>A Survey of Cameron-Liebler Sets and Low Degree Boolean Functions in Grassmann Graphs</title>
      <link>https://arxiv.org/abs/2411.16288</link>
      <description>arXiv:2411.16288v2 Announce Type: replace-cross 
Abstract: We survey results for Cameron-Liebler sets and low degree Boolean functions for Hamming graphs, Johnson graphs and Grassmann graphs from the point of view of association schemes. This survey covers selected results in finite geometry, Boolean function analysis, design theory, coding theory, and cryptography.</description>
      <guid isPermaLink="false">oai:arXiv.org:2411.16288v2</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <pubDate>Thu, 05 Jun 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Ferdinand Ihringer</dc:creator>
    </item>
  </channel>
</rss>
