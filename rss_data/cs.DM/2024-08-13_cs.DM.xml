<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.DM updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.DM</link>
    <description>cs.DM updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.DM" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Wed, 14 Aug 2024 04:00:06 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Wed, 14 Aug 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>The Signatures of Ideal Flow Networks</title>
      <link>https://arxiv.org/abs/2408.06344</link>
      <description>arXiv:2408.06344v1 Announce Type: new 
Abstract: An Ideal Flow Network (IFN) is a strongly connected network where relative flows are preserved (irreducible premagic matrix). IFN can be decomposed into canonical cycles to form a string code called network signature. A network signature can be composed back into an IFN by assignment and merging operations. Using string manipulations on network signatures, we can derive total flow, link values, sum of rows and columns, and probability matrices and test for irreducibility.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.06344v1</guid>
      <category>cs.DM</category>
      <category>cs.SI</category>
      <category>math.RT</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-sa/4.0/</dc:rights>
      <dc:creator>Kardi Teknomo</dc:creator>
    </item>
    <item>
      <title>Quasi-Monte Carlo Beyond Hardy-Krause</title>
      <link>https://arxiv.org/abs/2408.06475</link>
      <description>arXiv:2408.06475v1 Announce Type: cross 
Abstract: The classical approaches to numerically integrating a function $f$ are Monte Carlo (MC) and quasi-Monte Carlo (QMC) methods. MC methods use random samples to evaluate $f$ and have error $O(\sigma(f)/\sqrt{n})$, where $\sigma(f)$ is the standard deviation of $f$. QMC methods are based on evaluating $f$ at explicit point sets with low discrepancy, and as given by the classical Koksma-Hlawka inequality, they have error $\widetilde{O}(\sigma_{\mathsf{HK}}(f)/n)$, where $\sigma_{\mathsf{HK}}(f)$ is the variation of $f$ in the sense of Hardy and Krause. These two methods have distinctive advantages and shortcomings, and a fundamental question is to find a method that combines the advantages of both.
  In this work, we give a simple randomized algorithm that produces QMC point sets with the following desirable features: (1) It achieves substantially better error than given by the classical Koksma-Hlawka inequality. In particular, it has error $\widetilde{O}(\sigma_{\mathsf{SO}}(f)/n)$, where $\sigma_{\mathsf{SO}}(f)$ is a new measure of variation that we introduce, which is substantially smaller than the Hardy-Krause variation. (2) The algorithm only requires random samples from the underlying distribution, which makes it as flexible as MC. (3) It automatically achieves the best of both MC and QMC (and the above improvement over Hardy-Krause variation) in an optimal way. (4) The algorithm is extremely efficient, with an amortized $\widetilde{O}(1)$ runtime per sample.
  Our method is based on the classical transference principle in geometric discrepancy, combined with recent algorithmic innovations in combinatorial discrepancy that besides producing low-discrepancy colorings, also guarantee certain subgaussian properties. This allows us to bypass several limitations of previous works in bridging the gap between MC and QMC methods and go beyond the Hardy-Krause variation.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.06475v1</guid>
      <category>cs.DS</category>
      <category>cs.CG</category>
      <category>cs.DM</category>
      <category>cs.NA</category>
      <category>math.NA</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Nikhil Bansal, Haotian Jiang</dc:creator>
    </item>
    <item>
      <title>Faster Lattice Basis Computation -- The Generalization of the Euclidean Algorithm</title>
      <link>https://arxiv.org/abs/2408.06685</link>
      <description>arXiv:2408.06685v1 Announce Type: cross 
Abstract: The Euclidean algorithm the oldest algorithms known to mankind. Given two integral numbers $a_1$ and $a_2$, it computes the greatest common divisor (gcd) of $a_1$ and $a_2$ in a very elegant way. From a lattice perspective, it computes a basis of the sum of two one-dimensional lattices $a_1 \mathbb{Z}$ and $a_2 \mathbb{Z}$ as $\gcd(a_1,a_2) \mathbb{Z} = a_1 \mathbb{Z} + a_2 \mathbb{Z}$. In this paper, we show that the classical Euclidean algorithm can be adapted in a very natural way to compute a basis of a general lattice $L (A_1, \ldots , A_n)$ given vectors $A_1, \ldots , A_n \in \mathbb{Z}^d$ with $n&gt; \mathrm{rank}(a_1, \ldots ,a_d)$. Similar to the Euclidean algorithm, our algorithm is very easy to describe and implement and can be written within 12 lines of pseudocode.
  Our generalized version of the Euclidean algorithm allows for several degrees of freedom in the pivoting process. Hence, in a second step, we show that this freedom can be exploited to make the algorithm perform more efficiently. As our main result, we obtain an algorithm to compute a lattice basis for given vectors $A_1, \ldots , A_n \in \mathbb{Z}^d$ in time (counting bit operations) $LS + \tilde O ((n-d)d^2 \cdot \log(||A||)$, where $LS$ is the time required to obtain the exact fractional solution of a certain system of linear equalities. The analysis of the running time of our algorithms relies on fundamental statements on the fractionality of solutions of linear systems of equations.
  So far, the fastest algorithm for lattice basis computation was due to Storjohann and Labhan [SL96] having a running time of $\tilde O (nd^\omega\log ||A||)$. For current upper bounds of $LS$, our algorithm has a running time improvement of a factor of at least $d^{0.12}$ over [SL96]. Our algorithm is therefore the first general algorithmic improvement to this classical problem in nearly 30 years.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.06685v1</guid>
      <category>cs.DS</category>
      <category>cs.DM</category>
      <category>math.AG</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Kim-Manuel Klein, Janina Reuter</dc:creator>
    </item>
    <item>
      <title>Periodic minimum in the count of binomial coefficients not divisible by a prime</title>
      <link>https://arxiv.org/abs/2408.06817</link>
      <description>arXiv:2408.06817v1 Announce Type: cross 
Abstract: The summatory function of the number of binomial coefficients not divisible by a prime is known to exhibit regular periodic oscillations, yet identifying the less regularly behaved minimum of the underlying periodic functions has been open for almost all cases. We propose an approach to identify such minimum in some generality, solving particularly a previous conjecture of B. Wilson [Asymptotic behavior of Pascal's triangle modulo a prime, Acta Arith. 83 (1998), pp. 105-116].</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.06817v1</guid>
      <category>math.NT</category>
      <category>cs.DM</category>
      <category>math.CO</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Hsien-Kuei Hwang, Svante Janson, Tsung-Hsi Tsai</dc:creator>
    </item>
    <item>
      <title>To Infinity and Beyond: Continuing De Bruijn Sequences by Extending the Alphabet</title>
      <link>https://arxiv.org/abs/1906.06157</link>
      <description>arXiv:1906.06157v2 Announce Type: replace 
Abstract: This article presents proof that the reverse of the Prefer Max De Bruijn sequence can be expanded into an infinite De Bruijn sequence by increasing the size of the alphabet. Furthermore, we show that every De Bruijn sequence possessing this characteristic exhibits behavior similar to that of the reverse of the Prefer Max De Bruijn sequence.</description>
      <guid isPermaLink="false">oai:arXiv.org:1906.06157v2</guid>
      <category>cs.DM</category>
      <category>math.CO</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Moshe Schwartz, Yotam Svoray, Gera Weiss</dc:creator>
    </item>
    <item>
      <title>The Binary Linearization Complexity of Pseudo-Boolean Functions</title>
      <link>https://arxiv.org/abs/2301.06207</link>
      <description>arXiv:2301.06207v3 Announce Type: replace 
Abstract: We consider the problem of linearizing a pseudo-Boolean function $f : \{0,1\}^n \to \mathbb{R}$ by means of $k$ Boolean functions. Such a linearization yields an integer linear programming formulation with only $k$ auxiliary variables. This motivates the definition of the linarization complexity of $f$ as the minimum such $k$. Our theoretical contributions are the proof that random polynomials almost surely have a high linearization complexity and characterizations of its value in case we do or do not restrict the set of admissible Boolean functions. The practical relevance is shown by devising and evaluating integer linear programming models of two such linearizations for the low auto-correlation binary sequences problem. Still, many problems around this new concept remain open.</description>
      <guid isPermaLink="false">oai:arXiv.org:2301.06207v3</guid>
      <category>cs.DM</category>
      <category>math.OC</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Matthias Walter</dc:creator>
    </item>
    <item>
      <title>Token Jumping in Planar Graphs has Linear Sized Kernels</title>
      <link>https://arxiv.org/abs/2401.09543</link>
      <description>arXiv:2401.09543v2 Announce Type: replace 
Abstract: Let $G$ be a planar graph and $I_s$ and $I_t$ be two independent sets in $G$, each of size $k$. We begin with a "token" on each vertex of $I_s$ and seek to move all tokens to $I_t$, by repeated "token jumping", removing a single token from one vertex and placing it on another vertex. We require that each intermediate arrangement of tokens again specifies an independent set of size $k$. Given $G$, $I_s$, and $I_t$, we ask whether there exists a sequence of token jumps that transforms $I_s$ to $I_t$. When $k$ is part of the input, this problem is known to be PSPACE-complete. However, it was shown by Ito, Kami\'nski, and Ono to be fixed-parameter tractable. That is, when $k$ is fixed, the problem can be solved in time polynomial in the order of $G$. Here we strengthen the upper bound on the running time in terms of $k$ by showing that the problem has a kernel of size linear in $k$. More precisely, we transform an arbitrary input problem on a planar graph into an equivalent problem on a (planar) graph with order $O(k)$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2401.09543v2</guid>
      <category>cs.DM</category>
      <category>cs.CC</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Daniel W. Cranston</dc:creator>
    </item>
    <item>
      <title>Phenotype control and elimination of variables in Boolean networks</title>
      <link>https://arxiv.org/abs/2406.02304</link>
      <description>arXiv:2406.02304v3 Announce Type: replace 
Abstract: We investigate how elimination of variables can affect the asymptotic dynamics and phenotype control of Boolean networks. In particular, we look at the impact on minimal trap spaces, and identify a structural condition that guarantees their preservation. We examine the possible effects of variable elimination under three of the most popular approaches to control (attractor-based control, value propagation and control of minimal trap spaces), and under different update schemes (synchronous, asynchronous, generalized asynchronous). We provide some insights on the application of reduction, and an ample inventory of examples and counterexamples.</description>
      <guid isPermaLink="false">oai:arXiv.org:2406.02304v3</guid>
      <category>cs.DM</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Elisa Tonello, Lo\"ic Paulev\'e</dc:creator>
    </item>
    <item>
      <title>Dual Bounded Generation: Polynomial, Second-order Cone and Positive Semidefinite Matrix Inequalities</title>
      <link>https://arxiv.org/abs/2407.02201</link>
      <description>arXiv:2407.02201v2 Announce Type: replace 
Abstract: In the monotone integer dualization problem, we are given two sets of vectors in an integer box such that no vector in the first set is dominated by a vector in the second. The question is to check if the two sets of vectors cover the entire integer box by upward and downward domination, respectively. It is known that the problem is (quasi-)polynomially equivalent to that of enumerating all maximal feasible solutions of a given monotone system of linear/separable/supermodular inequalities over integer vectors. The equivalence is established via showing that the dual family of minimal infeasible vectors has size bounded by a (quasi-)polynomial in the sizes of the family to be generated and the input description. Continuing in this line of work, in this paper, we consider systems of polynomial, second-order cone, and semidefinite inequalities. We give sufficient conditions under which such bounds can be established and highlight some applications.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.02201v2</guid>
      <category>cs.DM</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Khaled Elbassioni</dc:creator>
    </item>
    <item>
      <title>The Upper Clique Transversal Problem</title>
      <link>https://arxiv.org/abs/2309.14103</link>
      <description>arXiv:2309.14103v3 Announce Type: replace-cross 
Abstract: A clique transversal in a graph is a set of vertices intersecting all maximal cliques. The problem of determining the minimum size of a clique transversal has received considerable attention in the literature. In this paper, we initiate the study of the ''upper'' variant of this parameter, the upper clique transversal number, defined as the maximum size of a minimal clique transversal. We investigate this parameter from the algorithmic and complexity points of view, with a focus on various graph classes. We show that the corresponding decision problem is NP-complete in the classes of chordal graphs, chordal bipartite graphs, cubic planar bipartite graphs, and line graphs of bipartite graphs, but solvable in linear time in the classes of split graphs, proper interval graphs, and cographs, and in polynomial time for graphs of bounded cliquewidth. We conclude the paper with a number of open questions.</description>
      <guid isPermaLink="false">oai:arXiv.org:2309.14103v3</guid>
      <category>math.CO</category>
      <category>cs.CC</category>
      <category>cs.DM</category>
      <category>cs.DS</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Martin Milani\v{c}, Yushi Uno</dc:creator>
    </item>
  </channel>
</rss>
