<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.CG updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.CG</link>
    <description>cs.CG updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.CG" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Mon, 21 Oct 2024 04:00:03 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Mon, 21 Oct 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>Scalable Field-Aligned Reparameterization for Trimmed NURBS</title>
      <link>https://arxiv.org/abs/2410.14318</link>
      <description>arXiv:2410.14318v1 Announce Type: new 
Abstract: In engineering design, one of the most daunting problems in the design-through-analysis workflow is to deal with trimmed NURBS (Non-Uniform Rational B-Splines), which often involve topological/geometric issues and lead to inevitable gaps and overlaps in the model. Given the dominance of the trimming technology in CAD systems, reconstructing such a model as a watertight representation is highly desired. While remarkable progress has been made in recent years, especially with the advancement of isogeometric analysis (IGA), there still lack a fully automatic and scalable tool to achieve this reconstruction goal. To address this issue, we present a semi-automatic and scalable reparameterization pipeline based on a scalable and feature-aligned meshing tool, QuadriFlow [1]. On top of it, we provide support for open surfaces to deal with engineering shell structures, and perform sophisticated patch simplification to remove undesired tiny/slender patches. As a result, we obtain a watertight spline surface (multi-patch NURBS or unstructured splines) with a simple quadrilateral layout. Through several challenging models from industry applications, we demonstrate the efficacy and efficiency of the proposed pipeline as well as its integration with IGA. Our source code is publicly available on GitHub [2].</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.14318v1</guid>
      <category>cs.CG</category>
      <pubDate>Mon, 21 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Zheng Wei, Xiaodong Wei</dc:creator>
    </item>
    <item>
      <title>Additive design of 2-dimensional scissor lattices</title>
      <link>https://arxiv.org/abs/2410.14124</link>
      <description>arXiv:2410.14124v1 Announce Type: cross 
Abstract: We introduce an additive approach for the design of a class of transformable structures based on two-bar linkages ("scissor mechanisms") joined at vertices to form a two dimensional lattice. Our discussion traces an underlying mathematical similarity between linkage mechanisms, origami, and kirigami and inspires our name for these structures: karigami. We show how to design karigami which unfold from a one dimensional collapsed state to two-dimensional surfaces of single and double curvature. Our algorithm for growing karigami structures is provably complete in providing the ability to explore the full space of possible mechanisms, and we use it to computationally design and physically realize a series of examples of varying complexity.</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.14124v1</guid>
      <category>cond-mat.soft</category>
      <category>cs.CG</category>
      <category>physics.class-ph</category>
      <pubDate>Mon, 21 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Noah Toyonaga, L Mahadevan</dc:creator>
    </item>
    <item>
      <title>Fr\'echet Distance in Subquadratic Time</title>
      <link>https://arxiv.org/abs/2407.05231</link>
      <description>arXiv:2407.05231v2 Announce Type: replace 
Abstract: Let $m$ and $n$ be the numbers of vertices of two polygonal curves in $\mathbb{R}^d$ for any fixed $d$ such that $m \leq n$. Since it was known in 1995 how to compute the Fr\'{e}chet distance of these two curves in $O(mn\log (mn))$ time, it has been an open problem whether the running time can be reduced to $o(n^2)$ when $m = \Omega(n)$. In the mean time, several well-known quadratic time barriers in computational geometry have been overcome: 3SUM, some 3SUM-hard problems, and the computation of some distances between two polygonal curves, including the discrete Fr\'{e}chet distance, the dynamic time warping distance, and the geometric edit distance. It is curious that the quadratic time barrier for Fr\'{e}chet distance still stands. We present an algorithm to compute the Fr\'echet distance in $O(mn(\log\log n)^{2+\mu}\log n/\log^{1+\mu} m)$ expected time for some constant $\mu \in (0,1)$. It is the first algorithm that returns the Fr\'{e}chet distance in $o(mn)$ time when $m = \Omega(n^{\varepsilon})$ for any fixed $\varepsilon \in (0,1]$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.05231v2</guid>
      <category>cs.CG</category>
      <category>cs.DS</category>
      <pubDate>Mon, 21 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Siu-Wing Cheng, Haoqiang Huang</dc:creator>
    </item>
    <item>
      <title>An Interface Tracking Method with Triangle Edge Cuts</title>
      <link>https://arxiv.org/abs/2410.11073</link>
      <description>arXiv:2410.11073v2 Announce Type: replace-cross 
Abstract: This paper introduces a volume-conserving interface tracking algorithm on unstructured triangle meshes. We propose to discretize the interface via triangle edge cuts which represent the intersections between the interface and the triangle mesh edges using a compact 6 numbers per triangle. This enables an efficient implicit representation of the sub-triangle polygonal material regions without explicitly storing connectivity information. Moreover, we propose an efficient advection algorithm for this interface representation that is based on geometric queries and does not require an optimization process. This advection algorithm is extended via an area correction step that enforces volume-conservation of the materials. We demonstrate the efficacy of our method on a variety of advection problems on a triangle mesh and compare its performance to existing interface tracking methods including VOF and MOF.</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.11073v2</guid>
      <category>cs.GR</category>
      <category>cs.CG</category>
      <pubDate>Mon, 21 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <arxiv:DOI>10.1016/j.jcp.2024.113504</arxiv:DOI>
      <dc:creator>Mengdi Wang, Matthew Cong, Bo Zhu</dc:creator>
    </item>
  </channel>
</rss>
