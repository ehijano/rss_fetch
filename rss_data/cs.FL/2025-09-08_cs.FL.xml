<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.FL updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.FL</link>
    <description>cs.FL updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.FL" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Tue, 09 Sep 2025 02:26:08 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Mon, 08 Sep 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>Learning Automata with Name Allocation</title>
      <link>https://arxiv.org/abs/2502.11947</link>
      <description>arXiv:2502.11947v2 Announce Type: replace 
Abstract: Automata over infinite alphabets have emerged as a convenient computational model for processing structures involving data, such as nonces in cryptographic protocols or data values in XML documents. We introduce active learning methods for bar automata, a species of automata that process finite data words represented as bar strings, which are words with explicit name binding letters. Bar automata have pleasant algorithmic properties. We develop a framework in which every learning algorithm for standard deterministic or nondeterministic finite automata over finite alphabets can be used to learn bar automata, with a query complexity determined by that of the chosen learner. The technical key to our approach is the algorithmic handling of $\alpha$-equivalence of bar strings, which allows to bridge the gap between finite and infinite alphabets. The principles underlying our framework are generic and also apply to bar B\"uchi automata and bar tree automata, leading to the first active learning methods for data languages of infinite words and finite trees.</description>
      <guid isPermaLink="false">oai:arXiv.org:2502.11947v2</guid>
      <category>cs.FL</category>
      <pubDate>Mon, 08 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Florian Frank, Stefan Milius, Jurriaan Rot, Henning Urbat</dc:creator>
    </item>
    <item>
      <title>List of Results on the \v{C}ern\'y Conjecture and Reset Thresholds for Synchronizing Automata</title>
      <link>https://arxiv.org/abs/2508.15655</link>
      <description>arXiv:2508.15655v3 Announce Type: replace 
Abstract: We survey results in the literature that establish the \v{C}ern\'y conjecture for various classes of finite automata. We also list classes for which the conjecture remains open, but a quadratic (in the number of states) upper bound on the minimum length of reset words is known. The results presented reflect the state of the art as of September 5, 2025.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.15655v3</guid>
      <category>cs.FL</category>
      <pubDate>Mon, 08 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Mikhail V. Volkov</dc:creator>
    </item>
    <item>
      <title>A LOCAL View of the Polynomial Hierarchy</title>
      <link>https://arxiv.org/abs/2305.09538</link>
      <description>arXiv:2305.09538v4 Announce Type: replace-cross 
Abstract: We extend classical methods of computational complexity to the realm of distributed computing, where they sometimes prove more effective than in their original context. Our focus is on decision problems in the LOCAL model, a setting in which networked computers use synchronous message passing to collectively answer questions about their network topology. We impose two time constraints on this model: the number of communication rounds is bounded by a constant, and the number of computation steps of each computer is polynomially bounded in the size of its local input and received messages.
  By letting two players alternately assign certificates to all computers, we obtain a distributed generalization of the polynomial hierarchy (and thus of the complexity classes $\mathbf{P}$ and $\mathbf{NP}$). We then extend key results of complexity theory to this setting, including the Cook-Levin theorem (which identifies Boolean satisfiability as a complete problem for $\mathbf{NP}$) and Fagin's theorem (which characterizes $\mathbf{NP}$ as the class of problems expressible in existential second-order logic). The original results can be recovered as the special case where the network consists of a single computer.
  But perhaps more surprisingly, separating complexity classes becomes easier in the distributed setting: we can show that our hierarchy is infinite, while it remains notoriously open whether the same holds when restricted to a single computer. (By contrast, a collapse of our hierarchy would have implied a collapse of the classical polynomial hierarchy.)
  As an application, we propose quantifier alternation as a new tool for measuring the locality of problems in distributed computing.</description>
      <guid isPermaLink="false">oai:arXiv.org:2305.09538v4</guid>
      <category>cs.DC</category>
      <category>cs.CC</category>
      <category>cs.FL</category>
      <category>cs.LO</category>
      <pubDate>Mon, 08 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Fabian Reiter</dc:creator>
    </item>
  </channel>
</rss>
