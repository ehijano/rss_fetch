<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.FL updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.FL</link>
    <description>cs.FL updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.FL" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Fri, 11 Oct 2024 04:00:17 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Fri, 11 Oct 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Subsequence Matching and Analysis Problems for Formal Languages</title>
      <link>https://arxiv.org/abs/2410.07992</link>
      <description>arXiv:2410.07992v1 Announce Type: new 
Abstract: In this paper, we study a series of algorithmic problems related to the subsequences occurring in the strings of a given language, under the assumption that this language is succinctly represented by a grammar generating it, or an automaton accepting it. In particular, we focus on the following problems: Given a string $w$ and a language $L$, does there exist a word of $L$ which has $w$ as subsequence? Do all words of $L$ have $w$ as a subsequence? Given an integer $k$ alongside $L$, does there exist a word of $L$ which has all strings of length $k$, over the alphabet of $L$, as subsequences? Do all words of $L$ have all strings of length $k$ as subsequences? For the last two problems, efficient algorithms were already presented in [Adamson et al., ISAAC 2023] for the case when $L$ is a regular language, and efficient solutions can be easily obtained for the first two problems. We extend that work as follows: we give sufficient conditions on the class of input-languages, under which these problems are decidable; we provide efficient algorithms for all these problems in the case when the input language is context-free; we show that all problems are undecidable for context-sensitive languages. Finally, we provide a series of initial results related to a class of languages that strictly includes the regular languages and is strictly included in the class of context-sensitive languages, but is incomparable to the of class context-free languages; these results deviate significantly from those reported for language-classes from the Chomsky hierarchy.</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.07992v1</guid>
      <category>cs.FL</category>
      <category>cs.DS</category>
      <pubDate>Fri, 11 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Szil\'ard Zsolt Fazekas, Tore Ko{\ss}, Florin Manea, Robert Merca\c{s}, Timo Specht</dc:creator>
    </item>
    <item>
      <title>On universality of regular realizability problems</title>
      <link>https://arxiv.org/abs/2311.15381</link>
      <description>arXiv:2311.15381v3 Announce Type: replace 
Abstract: We prove the universality of the regular realizability problems for several classes of filters. The filters are encodings of finite relations on the set of non-negative integers in the format proposed by P. Wolf and H. Fernau. The universality has proven up to disjunctive truth table polynomial reductions for unary relations and polynomial space reductions for invariant binary relations. Stronger reductions correspond to the results of P. Wolf and H. Fernau about decidability of regular realizability problems for many graph-theoretic properties.</description>
      <guid isPermaLink="false">oai:arXiv.org:2311.15381v3</guid>
      <category>cs.FL</category>
      <pubDate>Fri, 11 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <dc:creator>Alexander Rubtsov, Michael Vyalyi</dc:creator>
    </item>
    <item>
      <title>Collaboration Miner: Discovering Collaboration Petri Nets (Extended Version)</title>
      <link>https://arxiv.org/abs/2401.16263</link>
      <description>arXiv:2401.16263v4 Announce Type: replace 
Abstract: Most existing process discovery techniques aim to mine models of process orchestrations that represent behavior of cases within one business process. Collaboration process discovery techniques mine models of collaboration processes that represent behavior of collaborating cases within multiple process orchestrations that interact via collaboration concepts such as organizations, agents, and services. While workflow nets are mostly mined for process orchestrations, a standard model for collaboration processes is missing. Hence, in this work, we rely on the newly proposed collaboration Petri nets and show that in combination with the newly proposed Collaboration Miner (CM), the resulting representational bias is lower than for existing models. Moreover, CM can discover heterogeneous collaboration concepts and types such as resource sharing and message exchange, resulting in fitting and precise collaboration Petri nets. The evaluation shows that CM achieves its design goals: no assumptions on concepts and types as well as fitting and precise models, based on 26 artificial and real-world event logs from literature.</description>
      <guid isPermaLink="false">oai:arXiv.org:2401.16263v4</guid>
      <category>cs.FL</category>
      <pubDate>Fri, 11 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Janik-Vasily Benzin, Stefanie Rinderle-Ma</dc:creator>
    </item>
  </channel>
</rss>
