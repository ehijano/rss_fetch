<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.CG updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.CG</link>
    <description>cs.CG updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.CG" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Wed, 02 Oct 2024 02:11:43 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Tue, 01 Oct 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Making Quickhull More Like Quicksort: A Simple Randomized Output-Sensitive Convex Hull Algorithm</title>
      <link>https://arxiv.org/abs/2409.19784</link>
      <description>arXiv:2409.19784v1 Announce Type: new 
Abstract: In this paper, we present Ray-shooting Quickhull, which is a simple, randomized, outputsensitive version of the Quickhull algorithm for constructing the convex hull of a set of n points in the plane. We show that the randomized Ray-shooting Quickhull algorithm runs in O(n log h) expected time, where h is the number of points on the boundary of the convex hull. Keeping with the spirit of the original Quickhull algorithm, our algorithm is quite simple and is, in fact, closer in spirit to the well-known randomized Quicksort algorithm. Unlike the original Quickhull algorithm, however, which can run in ${\Theta}(n^2) time$ for some input distributions, the expected performance bounds for the randomized Ray-shooting Quickhull algorithm match or improve the performance bounds of more complicated algorithms. Importantly, the expectation in our output-sensitive performance bound does not depend on assumptions about the distribution of input points. Still, we show that, like the deterministic Quickhull algorithm, our randomized Ray-shooting Quickhull algorithm runs in O(n) expected time for n points chosen uniformly at random from a bounded convex region. We also provide experimental evidence that the randomized Ray-shooting Quickhull algorithm is on par or faster than deterministic Quickhull in practice, depending on the input distribution.</description>
      <guid isPermaLink="false">oai:arXiv.org:2409.19784v1</guid>
      <category>cs.CG</category>
      <category>cs.CC</category>
      <category>cs.DS</category>
      <pubDate>Tue, 01 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Michael T. Goodrich, Ryuto Kitagawa</dc:creator>
    </item>
    <item>
      <title>On Computing Elastic Shape Distances between Curves in d-dimensional Space</title>
      <link>https://arxiv.org/abs/2409.19380</link>
      <description>arXiv:2409.19380v1 Announce Type: cross 
Abstract: The computation of the elastic registration of two simple curves in higher dimensions and therefore of the elastic shape distance between them has been investigated by Srivastava et al. Assuming the first curve has one or more starting points, and the second curve has only one, they accomplish the computation, one starting point of the first curve at a time, by minimizing an L2 type distance between them based on alternating computations of optimal diffeomorphisms of the unit interval and optimal rotation matrices that reparametrize and rotate, respectively, one of the curves. We recreate the work by Srivastava et al., but in contrast to it, again for curves in any dimension, we present a Dynamic Programming algorithm for computing optimal diffeomorphisms that is linear, and justify in a purely algebraic manner the usual algorithm for computing optimal rotation matrices, the Kabsch-Umeyama algorithm, which is based on the computation of the singular value decomposition of a matrix. In addition, we minimize the L2 type distance with a procedure that alternates computations of optimal diffeomorphisms with successive computations of optimal rotation matrices for all starting points of the first curve. Carrying out computations this way is not only more efficient all by itself, but, if both curves are closed, allows applications of the Fast Fourier Transform for computing successively in an even more efficient manner, optimal rotation matrices for all starting points of the first curve.</description>
      <guid isPermaLink="false">oai:arXiv.org:2409.19380v1</guid>
      <category>math.DG</category>
      <category>cs.CG</category>
      <pubDate>Tue, 01 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:DOI>10.6028/NIST.TN.2164</arxiv:DOI>
      <arxiv:journal_reference>2021 NIST Technical Note 2164</arxiv:journal_reference>
      <dc:creator>Javier Bernal, Jim Lawrence, Gunay Dogan, Charles Hagwood</dc:creator>
    </item>
    <item>
      <title>Exact Algorithms for Clustered Planarity with Linear Saturators</title>
      <link>https://arxiv.org/abs/2409.19410</link>
      <description>arXiv:2409.19410v1 Announce Type: cross 
Abstract: We study Clustered Planarity with Linear Saturators, which is the problem of augmenting an $n$-vertex planar graph whose vertices are partitioned into independent sets (called clusters) with paths - one for each cluster - that connect all the vertices in each cluster while maintaining planarity. We show that the problem can be solved in time $2^{O(n)}$ for both the variable and fixed embedding case. Moreover, we show that it can be solved in subexponential time $2^{O(\sqrt{n}\log n)}$ in the fixed embedding case if additionally the input graph is connected. The latter time complexity is tight under the Exponential-Time Hypothesis. We also show that $n$ can be replaced with the vertex cover number of the input graph by providing a linear (resp. polynomial) kernel for the variable-embedding (resp. fixed-embedding) case; these results contrast the NP-hardness of the problem on graphs of bounded treewidth (and even on trees). Finally, we complement known lower bounds for the problem by showing that Clustered Planarity with Linear Saturators is NP-hard even when the number of clusters is at most $3$, thus excluding the algorithmic use of the number of clusters as a parameter.</description>
      <guid isPermaLink="false">oai:arXiv.org:2409.19410v1</guid>
      <category>cs.DS</category>
      <category>cs.CG</category>
      <pubDate>Tue, 01 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Giordano Da Lozzo, Robert Ganian, Siddharth Gupta, Bojan Mohar, Sebastian Ordyniak, Meirav Zehavi</dc:creator>
    </item>
    <item>
      <title>Blown up by an equilateral: Poncelet triangles about the incircle and their degeneracies</title>
      <link>https://arxiv.org/abs/2409.19464</link>
      <description>arXiv:2409.19464v1 Announce Type: cross 
Abstract: We tour several harmonious Euclidean properties of Poncelet triangles inscribed in an ellipse and circumscribing the incircle. We also show that a number of degenerate behaviors are triggered by the presence of an equilateral triangle in the family.</description>
      <guid isPermaLink="false">oai:arXiv.org:2409.19464v1</guid>
      <category>math.DS</category>
      <category>cs.CG</category>
      <pubDate>Tue, 01 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Mark Helman, Ronaldo A. Garcia, Dan Reznik</dc:creator>
    </item>
    <item>
      <title>Crater Projection in Linear Pushbroom Camera Images</title>
      <link>https://arxiv.org/abs/2409.20499</link>
      <description>arXiv:2409.20499v1 Announce Type: cross 
Abstract: Scientific imaging of the Moon, Mars, and other celestial bodies is often accomplished with pushbroom cameras. Craters with elliptical rims are common objects of interest within the images produced by such sensors. This work provides a framework to analyze the appearance of crater rims in pushbroom images. With knowledge of only common ellipse parameters describing the crater rim, explicit formulations are developed and shown to be convenient for drawing the apparent crater in pushbroom images. Implicit forms are also developed and indicate the orbital conditions under which craters form conics in images. Several numerical examples are provided which demonstrate how different forms of crater rim projections can be interpreted and used in practice.</description>
      <guid isPermaLink="false">oai:arXiv.org:2409.20499v1</guid>
      <category>astro-ph.IM</category>
      <category>cs.CG</category>
      <category>eess.IV</category>
      <pubDate>Tue, 01 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Michela Mancini, Ava Thrasher, Carl De Vries, John Christian</dc:creator>
    </item>
    <item>
      <title>Dual Encoder GAN Inversion for High-Fidelity 3D Head Reconstruction from Single Images</title>
      <link>https://arxiv.org/abs/2409.20530</link>
      <description>arXiv:2409.20530v1 Announce Type: cross 
Abstract: 3D GAN inversion aims to project a single image into the latent space of a 3D Generative Adversarial Network (GAN), thereby achieving 3D geometry reconstruction. While there exist encoders that achieve good results in 3D GAN inversion, they are predominantly built on EG3D, which specializes in synthesizing near-frontal views and is limiting in synthesizing comprehensive 3D scenes from diverse viewpoints. In contrast to existing approaches, we propose a novel framework built on PanoHead, which excels in synthesizing images from a 360-degree perspective. To achieve realistic 3D modeling of the input image, we introduce a dual encoder system tailored for high-fidelity reconstruction and realistic generation from different viewpoints. Accompanying this, we propose a stitching framework on the triplane domain to get the best predictions from both. To achieve seamless stitching, both encoders must output consistent results despite being specialized for different tasks. For this reason, we carefully train these encoders using specialized losses, including an adversarial loss based on our novel occlusion-aware triplane discriminator. Experiments reveal that our approach surpasses the existing encoder training methods qualitatively and quantitatively. Please visit the project page: https://berkegokmen1.github.io/dual-enc-3d-gan-inv.</description>
      <guid isPermaLink="false">oai:arXiv.org:2409.20530v1</guid>
      <category>cs.CV</category>
      <category>cs.CG</category>
      <category>cs.GR</category>
      <category>cs.LG</category>
      <category>eess.IV</category>
      <pubDate>Tue, 01 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <dc:creator>Bahri Batuhan Bilecen, Ahmet Berke Gokmen, Aysegul Dundar</dc:creator>
    </item>
    <item>
      <title>Distributed Augmentation, Hypersweeps, and Branch Decomposition of Contour Trees for Scientific Exploration</title>
      <link>https://arxiv.org/abs/2408.04836</link>
      <description>arXiv:2408.04836v2 Announce Type: replace 
Abstract: Contour trees describe the topology of level sets in scalar fields and are widely used in topological data analysis and visualization. A main challenge of utilizing contour trees for large-scale scientific data is their computation at scale using high-performance computing. To address this challenge, recent work has introduced distributed hierarchical contour trees for distributed computation and storage of contour trees. However, effective use of these distributed structures in analysis and visualization requires subsequent computation of geometric properties and branch decomposition to support contour extraction and exploration. In this work, we introduce distributed algorithms for augmentation, hypersweeps, and branch decomposition that enable parallel computation of geometric properties, and support the use of distributed contour trees as query structures for scientific exploration. We evaluate the parallel performance of these algorithms and apply them to identify and extract important contours for scientific visualization.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.04836v2</guid>
      <category>cs.CG</category>
      <category>cs.DC</category>
      <pubDate>Tue, 01 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:DOI>10.1109/TVCG.2024.3456322</arxiv:DOI>
      <dc:creator>Mingzhe Li, Hamish Carr, Oliver R\"ubel, Bei Wang, Gunther H. Weber</dc:creator>
    </item>
  </channel>
</rss>
