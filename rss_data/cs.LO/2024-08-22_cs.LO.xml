<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.LO updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.LO</link>
    <description>cs.LO updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.LO" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Fri, 23 Aug 2024 04:00:12 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Fri, 23 Aug 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>The Bright Side of Timed Opacity</title>
      <link>https://arxiv.org/abs/2408.12240</link>
      <description>arXiv:2408.12240v1 Announce Type: new 
Abstract: In 2009, Franck Cassez showed that the timed opacity problem, where an attacker can observe some actions with their timestamps and attempts to deduce information, is undecidable for timed automata (TAs). Moreover, he showed that the undecidability holds even for subclasses such as event-recording automata. In this article, we consider the same definition of opacity for several other subclasses of TAs: with restrictions on the number of clocks, of actions, on the nature of time, or on a new subclass called observable event-recording automata. We show that opacity can mostly be retrieved, except for one-action TAs and for one-clock TAs with epsilon-transitions, for which undecidability remains. We then exhibit a new decidable subclass in which the number of observations made by the attacker is limited.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.12240v1</guid>
      <category>cs.LO</category>
      <category>cs.CR</category>
      <category>cs.FL</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>\'Etienne Andr\'e, Sarah D\'epernet, Engel Lefaucheux</dc:creator>
    </item>
    <item>
      <title>Invariants for One-Counter Automata with Disequality Tests</title>
      <link>https://arxiv.org/abs/2408.11908</link>
      <description>arXiv:2408.11908v1 Announce Type: cross 
Abstract: We study the reachability problem for one-counter automata in which transitions can carry disequality tests. A disequality test is a guard that prohibits a specified counter value. This reachability problem has been known to be NP-hard and in PSPACE, and characterising its computational complexity has been left as a challenging open question by Almagor, Cohen, P\'erez, Shirmohammadi, and Worrell (2020). We reduce the complexity gap, placing the problem into the second level of the polynomial hierarchy, namely into the class $\mathsf{coNP}^{\mathsf{NP}}$. In the presence of both equality and disequality tests, our upper bound is at the third level, $\mathsf{P}^{\mathsf{NP}^{\mathsf{NP}}}$.
  To prove this result, we show that non-reachability can be witnessed by a pair of invariants (forward and backward). These invariants are almost inductive. They aim to over-approximate only a "core" of the reachability set instead of the entire set. The invariants are also leaky: it is possible to escape the set. We complement this with separate checks as the leaks can only occur in a controlled way.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.11908v1</guid>
      <category>cs.FL</category>
      <category>cs.LO</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Dmitry Chistikov, J\'er\^ome Leroux, Henry Sinclair-Banks, Nicolas Waldburger</dc:creator>
    </item>
    <item>
      <title>Comparing Session Type Systems derived from Linear Logic</title>
      <link>https://arxiv.org/abs/2401.14763</link>
      <description>arXiv:2401.14763v3 Announce Type: replace 
Abstract: Session types are a typed approach to message-passing concurrency, where types describe sequences of intended exchanges over channels. Session type systems have been given strong logical foundations via Curry-Howard correspondences with linear logic, a resource-aware logic that naturally captures structured interactions. These logical foundations provide an elegant framework to specify and (statically) verify message-passing processes.
  In this paper, we rigorously compare different type systems for concurrency derived from the Curry-Howard correspondence between linear logic and session types. We address the main divide between these type systems: the classical and intuitionistic presentations of linear logic. Over the years, these presentations have given rise to separate research strands on logical foundations for concurrency; the differences between their derived type systems have only been addressed informally.
  To formally assess these differences, we develop $\pi\mathsf{ULL}$, a session type system that encompasses type systems derived from classical and intuitionistic interpretations of linear logic. Based on a fragment of Girard's Logic of Unity, $\pi\mathsf{ULL}$ provides a basic reference framework: we compare existing session type systems by characterizing fragments of $\pi\mathsf{ULL}$ that coincide with classical and intuitionistic formulations. We analyze the significance of our characterizations by considering the locality principle (enforced by intuitionistic interpretations but not by classical ones) and forms of process composition induced by the interpretations.</description>
      <guid isPermaLink="false">oai:arXiv.org:2401.14763v3</guid>
      <category>cs.LO</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Bas van den Heuvel, Jorge A. P\'erez</dc:creator>
    </item>
    <item>
      <title>L\"ob-Safe Logics for Reflective Agents</title>
      <link>https://arxiv.org/abs/2408.09590</link>
      <description>arXiv:2408.09590v2 Announce Type: replace 
Abstract: Epistemic and doxastic logics are modal logics for knowledge and belief, and serve as foundational models for rational agents in game theory, philosophy, and computer science. We examine the consequences of modeling agents capable of a certain sort of reflection. Such agents face a formal difficulty due to L\"ob's Theorem, called L\"ob's Obstacle in the literature. We show how the most popular axiom schemes of epistemic and doxastic logics suffer from L\"ob's Obstacle, and present two axiom schemes that that avoid L\"ob's Obstacle, which we call Reasonable L\"ob-Safe Epistemic Doxastic logic (${LSED}^R$) and Supported L\"ob-Safe Epistemic Doxastic logic (${LSED}^S$).</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.09590v2</guid>
      <category>cs.LO</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Seth Ahrenbach</dc:creator>
    </item>
    <item>
      <title>Formalizing equivalences without tears</title>
      <link>https://arxiv.org/abs/2408.11501</link>
      <description>arXiv:2408.11501v2 Announce Type: replace 
Abstract: This expository note describes two convenient techniques in the context of homotopy type theory for proving and formalizing that a given map is an equivalence. The first technique decomposes the map as a series of basic equivalences, while the second refines this approach using the 3-for-2 property of equivalences. The techniques are illustrated by proving a basic result in synthetic homotopy theory.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.11501v2</guid>
      <category>cs.LO</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Tom de Jong</dc:creator>
    </item>
    <item>
      <title>Trillium: Higher-Order Concurrent and Distributed Separation Logic for Intensional Refinement</title>
      <link>https://arxiv.org/abs/2109.07863</link>
      <description>arXiv:2109.07863v4 Announce Type: replace-cross 
Abstract: Expressive state-of-the-art separation logics rely on step-indexing to model semantically complex features and to support modular reasoning about imperative higher-order concurrent and distributed programs. Step-indexing comes, however, with an inherent cost: it restricts the adequacy theorem of program logics to a fairly simple class of safety properties.
  In this paper, we explore if and how intensional refinement is a viable methodology for strengthening higher-order concurrent (and distributed) separation logic to prove non-trivial safety and liveness properties. Specifically, we introduce Trillium, a language-agnostic separation logic framework for showing intensional refinement relations between traces of a program and a model. We instantiate Trillium with a concurrent language and develop Fairis, a concurrent separation logic, that we use to show liveness properties of concurrent programs under fair scheduling assumptions through a fair liveness-preserving refinement of a model. We also instantiate Trillium with a distributed language and obtain an extension of Aneris, a distributed separation logic, which we use to show refinement relations between distributed systems and TLA+ models.</description>
      <guid isPermaLink="false">oai:arXiv.org:2109.07863v4</guid>
      <category>cs.PL</category>
      <category>cs.LO</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:DOI>10.1145/3632851</arxiv:DOI>
      <arxiv:journal_reference>Proc. ACM Program. Lang., Vol. 8, No. POPL, Article 9. Publication date: January 2024</arxiv:journal_reference>
      <dc:creator>Amin Timany, Simon Oddershede Gregersen, L\'eo Stefanesco, Jonas Kastberg Hinrichsen, L\'eon Gondelman, Abel Nieto, Lars Birkedal</dc:creator>
    </item>
  </channel>
</rss>
