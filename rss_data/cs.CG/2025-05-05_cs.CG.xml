<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.CG updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.CG</link>
    <description>cs.CG updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.CG" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Tue, 06 May 2025 04:01:26 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Tue, 06 May 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>Drawing maps on oriented surfaces</title>
      <link>https://arxiv.org/abs/2505.01480</link>
      <description>arXiv:2505.01480v1 Announce Type: new 
Abstract: In this article we describe a program -- called planar_draw -- to draw maps on oriented surfaces in the plane. The drawings are coded as tikz
  files that can easily be manipulated and used in latex documents. Next to plane maps -- a case for which already several programs exist -- the program allows
  to draw maps of genus at least one inside a fundamental polygon or with non-contractible cycles displayed as disjoint cycles that have to be identified.
  Several options allow to tailor the output for individual needs -- e.g.\ by forcing some edges to be completely inside the fundamental polygon. In
  combination with a program embedding graphs, the tool can also be used for graphs that do not already come with an embedding in an orientable surface.</description>
      <guid isPermaLink="false">oai:arXiv.org:2505.01480v1</guid>
      <category>cs.CG</category>
      <pubDate>Tue, 06 May 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Gunnar Brinkmann</dc:creator>
    </item>
    <item>
      <title>On Solving Simple Curved Nonograms</title>
      <link>https://arxiv.org/abs/2505.01554</link>
      <description>arXiv:2505.01554v1 Announce Type: new 
Abstract: Nonograms are a popular type of puzzle, where an arrangement of curves in the plane (in the classic version, a rectangular grid) is given together with a series of hints, indicating which cells of the subdivision are to be colored. The colored cells yield an image. Curved nonograms use a curve arrangement rather than a grid, leading to a closer approximation of an arbitrary solution image. While there is a considerable amount of previous work on the natural question of the hardness of solving a classic nonogram, research on curved nonograms has so far focused on their creation, which is already highly non-trivial. We address this gap by providing algorithmic and hardness results for curved nonograms of varying complexity.</description>
      <guid isPermaLink="false">oai:arXiv.org:2505.01554v1</guid>
      <category>cs.CG</category>
      <category>cs.DS</category>
      <pubDate>Tue, 06 May 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Maarten L\"offler, G\"unter Rote, Soeren Terziadis, Alexandra Weinberger</dc:creator>
    </item>
    <item>
      <title>Guarding Terrains with Guards on a Line</title>
      <link>https://arxiv.org/abs/2505.02373</link>
      <description>arXiv:2505.02373v1 Announce Type: new 
Abstract: Given an $x$-monotone polygonal chain $T$ with $n$ vertices, and an integer $k$, we consider the problem of finding the lowest horizontal line $L$ lying above $T$ with $k$ point guards lying on $L$, so that every point on the chain is \emph{visible} from some guard. A natural optimization is to minimize the $y$-coordinate of $L$. We present an algorithm for finding the optimal placements of $L$ and $k$ point guards for $T$ in $O(k^2\lambda_{k-1}(n)\log n)$ time for even numbers $k\ge 2$, and in $O(k^2\lambda_{k-2}(n)\log n)$ time for odd numbers $k \ge 3$, where $\lambda_{s}(n)$ is the length of the longest $(n,s)$-Davenport-Schinzel sequence. We also study a variant with an additional requirement that $T$ is partitioned into $k$ subchains, each subchain is paired with exactly one guard, and every point on a subchain is visible from its paired guard. When $L$ is fixed, we can place the minimum number of guards in $O(n)$ time. When the number $k$ of guards is fixed, we can find an optimal placement of $L$ with $k$ point guards lying on $L$ in $O(kn)$ time.</description>
      <guid isPermaLink="false">oai:arXiv.org:2505.02373v1</guid>
      <category>cs.CG</category>
      <pubDate>Tue, 06 May 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Byeonguk Kang, Hwi Kim, Hee-Kap Ahn</dc:creator>
    </item>
    <item>
      <title>Trajectory Minimum Touching Ball</title>
      <link>https://arxiv.org/abs/2505.02472</link>
      <description>arXiv:2505.02472v1 Announce Type: new 
Abstract: We present algorithms to find the minimum radius sphere that intersects every trajectory in a set of $n$ trajectories composed of at most $k$ line segments each. When $k=1$, we can reduce the problem to the LP-type framework to achieve a linear time complexity. For $k \geq 4$ we provide a trajectory configuration with unbounded LP-type complexity, but also present an almost $O\left((nk)^2\log n\right)$ algorithm through the farthest line segment Voronoi diagrams. If we tolerate a relative approximation, we can reduce to time near-linear in $n$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2505.02472v1</guid>
      <category>cs.CG</category>
      <pubDate>Tue, 06 May 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Jeff M. Phillips, Jens Kristian Refsgaard Schou</dc:creator>
    </item>
    <item>
      <title>Topological Offsets</title>
      <link>https://arxiv.org/abs/2407.07725</link>
      <description>arXiv:2407.07725v2 Announce Type: replace 
Abstract: We introduce Topological Offsets, a novel approach to generate manifold and self-intersection-free offset surfaces that are topologically equivalent to an offset infinitesimally close to the surface. Our approach, by construction, creates a manifold, watertight, and self-intersection-free offset surface strictly enclosing the input, while doing a best effort to move it to a prescribed distance from the input. Differently from existing approaches, we embed the input in a background mesh and insert a topological offset around the input with purely combinatorial operations. The topological offset is then inflated/deflated to match the user-prescribed distance while enforcing that no intersections or non-manifold configurations are introduced. We evaluate the effectiveness and robustness of our approach on the Thingi10k dataset, and show that topological offsets are beneficial in multiple graphics applications, including (1) converting non-manifold surfaces to manifold ones, (2) creating layered offsets, and (3) reliably computing finite offsets.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.07725v2</guid>
      <category>cs.CG</category>
      <category>cs.GR</category>
      <pubDate>Tue, 06 May 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Daniel Zint, Zhouyuan Chen, Yifei Zhu, Denis Zorin, Teseo Schneider, Daniele Panozzo</dc:creator>
    </item>
    <item>
      <title>Efficient Decomposition of Forman-Ricci Curvature on Vietoris-Rips Complexes and Data Applications</title>
      <link>https://arxiv.org/abs/2504.21601</link>
      <description>arXiv:2504.21601v2 Announce Type: replace-cross 
Abstract: Discrete Forman-Ricci curvature (FRC) is an efficient tool that characterizes essential geometrical features and associated transitions of real-world networks, extending seamlessly to higher-dimensional computations in simplicial complexes. In this article, we provide two major advancements: First, we give a decomposition for FRC, enabling local computations of FRC. Second, we construct a set-theoretical proof enabling an efficient algorithm for the local computation of FRC in Vietoris-Rips (VR) complexes.Strikingly, this approach reveals critical information and geometric insights often overlooked by conventional classification techniques. Our findings open new avenues for geometric computations in VR complexes and highlight an essential yet under-explored aspect of data classification: the geometry underpinning statistical patterns.</description>
      <guid isPermaLink="false">oai:arXiv.org:2504.21601v2</guid>
      <category>math.GT</category>
      <category>cs.CG</category>
      <category>cs.DM</category>
      <category>cs.DS</category>
      <category>math.CO</category>
      <pubDate>Tue, 06 May 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <dc:creator>Danillo Barros de Souza, Jonatas Teodomiro, Fernando A. N. Santos, Mengjun Ding, Weiqiang Sun, Mathieu Desroches, J\"urgen Jost, Serafim Rodrigues</dc:creator>
    </item>
  </channel>
</rss>
