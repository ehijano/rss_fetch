<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.CG updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.CG</link>
    <description>cs.CG updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.CG" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Tue, 18 Jun 2024 02:47:59 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Mon, 17 Jun 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Sparse Tensors and Subdivision Methods for Finding the Zero Set of Polynomial Equations</title>
      <link>https://arxiv.org/abs/2406.09857</link>
      <description>arXiv:2406.09857v1 Announce Type: new 
Abstract: Finding the solutions to a system of multivariate polynomial equations is a fundamental problem in mathematics and computer science. It involves evaluating the polynomials at many points, often chosen from a grid.  In most current methods, such as subdivision, homotopy continuation, or marching cube algorithms, polynomial evaluation is treated as a black box, repeating the process for each point. We propose a new approach that partially evaluates the polynomials, allowing us to efficiently reuse computations across multiple points in a grid. Our method leverages the Compressed Sparse Fiber data structure to efficiently store and process subsets of grid points. We integrated our amortized evaluation scheme into a subdivision algorithm. Experimental results show that our approach is efficient in practice. Notably, our software \texttt{voxelize} can successfully enclose curves defined by two trivariate polynomial equations of degree $100$, a problem that was previously intractable.</description>
      <guid isPermaLink="false">oai:arXiv.org:2406.09857v1</guid>
      <category>cs.CG</category>
      <category>cs.NA</category>
      <category>cs.SC</category>
      <category>math.NA</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <arxiv:journal_reference>Computer Algebra in Scientific Computing, Sep 2024, Rennes, France</arxiv:journal_reference>
      <dc:creator>Guillaume Moroz (GAMBLE)</dc:creator>
    </item>
    <item>
      <title>Analyzing Multifiltering Functions Using Multiparameter Discrete Morse Theory</title>
      <link>https://arxiv.org/abs/2406.09537</link>
      <description>arXiv:2406.09537v1 Announce Type: cross 
Abstract: A multiparameter filtration, or a multifiltration, may in many cases be seen as the collection of sublevel sets of a vector function, which we call a multifiltering function. The main objective of this paper is to obtain a better understanding of such functions through multiparameter discrete Morse (MDM) theory, which is an extension of Morse-Forman theory to vector-valued functions. Notably, we prove algorithmically that any multifiltering function defined on a simplicial complex can always be approximated by a compatible MDM function. Moreover, we define the Pareto set of a discrete multifiltering function and show that the concept links directly to that of critical simplices of a MDM function. Finally, we experiment with these notions using triangular meshes.</description>
      <guid isPermaLink="false">oai:arXiv.org:2406.09537v1</guid>
      <category>math.GT</category>
      <category>cs.CG</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Guillaume Brouillette (Universit\'e de Sherbrooke)</dc:creator>
    </item>
    <item>
      <title>SplineGen: a generative model for B-spline approximation of unorganized points</title>
      <link>https://arxiv.org/abs/2406.09692</link>
      <description>arXiv:2406.09692v1 Announce Type: cross 
Abstract: This paper presents a learning-based method to solve the traditional parameterization and knot placement problems in B-spline approximation. Different from conventional heuristic methods or recent AI-based methods, the proposed method does not assume ordered or fixed-size data points as input. There is also no need for manually setting the number of knots. It casts the parameterization and knot placement problems as a sequence-to-sequence translation problem, a generative process automatically determining the number of knots, their placement, parameter values, and their ordering. Once trained, SplineGen demonstrates a notable improvement over existing methods, with a one to two orders of magnitude increase in approximation accuracy on test data.</description>
      <guid isPermaLink="false">oai:arXiv.org:2406.09692v1</guid>
      <category>cs.CE</category>
      <category>cs.CG</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/publicdomain/zero/1.0/</dc:rights>
      <dc:creator>Qiang Zou, Lizhen Zhu</dc:creator>
    </item>
  </channel>
</rss>
