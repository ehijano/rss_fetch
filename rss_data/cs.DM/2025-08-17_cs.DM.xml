<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.DM updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.DM</link>
    <description>cs.DM updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.DM" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Mon, 18 Aug 2025 04:04:15 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Mon, 18 Aug 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>Sampling tree-weighted partitions without sampling trees</title>
      <link>https://arxiv.org/abs/2508.11130</link>
      <description>arXiv:2508.11130v1 Announce Type: cross 
Abstract: This paper gives a new algorithm for sampling tree-weighted partitions of a large class of planar graphs. Formally, the tree-weighted distribution on $k$-partitions of a graph weights $k$-partitions proportional to the product of the number of spanning trees of each partition class. Recent work on problems in computational redistricting analysis has driven special interest in the conditional distribution where all partition classes have the same size (balanced partitions). One class of Markov chains in wide use aims to sample from balanced tree-weighted $k$-partitions using a sampler for balanced tree-weighted 2-partitions. Previous implementations of this 2-partition sampler would draw a random spanning tree and check whether it contains an edge whose removal produces a balanced 2-component forest; if it does, this 2-partition is accepted, otherwise the algorithm rejects and repeats. In practice, this is a significant computational bottleneck.
  We show that in fact it is possible to sample from the balanced tree-weighted 2-partition distribution directly, without first sampling a spanning tree; the acceptance and rejection rates are the same as in previous samplers. We prove that on a wide class of planar graphs encompassing network structures typically arising from the geographic data used in computational redistricting, our algorithm takes expected linear time $O(n)$. Notably, this is asymptotically faster than the best known method to generate random trees, which is $O(n \log^2 n)$ for approximate sampling and $O(n^{1 + \log \log \log n / \log \log n})$ for exact sampling. Additionally, we show that a variant of our algorithm also gives a speedup to $O(n \log n)$ for exact sampling of uniformly random trees on these families of graphs, improving the bounds for both exact and approximate sampling.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.11130v1</guid>
      <category>cs.DS</category>
      <category>cs.DM</category>
      <category>math.CO</category>
      <pubDate>Mon, 18 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <dc:creator>Sarah Cannon, Wesley Pegden, Jamie Tucker-Foltz</dc:creator>
    </item>
    <item>
      <title>Temporal Network Analysis of Microservice Architectural Degradation</title>
      <link>https://arxiv.org/abs/2508.11571</link>
      <description>arXiv:2508.11571v1 Announce Type: cross 
Abstract: Microservice architecture can be modeled as a network of microservices making calls to each other, commonly known as the service dependency graph. Network Science can provide methods to study such networks. In particular, temporal network analysis is a branch of Network Science that analyzes networks evolving with time. In microservice systems, temporal networks can arise if we examine the architecture of the system across releases or monitor a deployed system using tracing.
  In this research summary paper, I discuss the challenges in obtaining temporal networks from microservice systems and analyzing them with the temporal network methods. In particular, the most complete temporal network that we could obtain contains 7 time instances and 42 microservices, which limits the potential analysis that could be applied.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.11571v1</guid>
      <category>cs.SE</category>
      <category>cs.DM</category>
      <pubDate>Mon, 18 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Alexander Bakhtin</dc:creator>
    </item>
    <item>
      <title>Lower Bounds for Induced-Universal Graphs</title>
      <link>https://arxiv.org/abs/2508.11585</link>
      <description>arXiv:2508.11585v1 Announce Type: cross 
Abstract: We give a series of new lower bounds on the minimum number of vertices required by a graph to contain every graph of a given family as induced subgraph. In particular, we show that this induced-universal graph for $n$-vertex planar graphs must have at least $10.52n$ vertices. We also show that the number of conflicting graphs to consider in order to beat this lower bound is at least $137$. In other words, any family of less than $137$ planar graphs of $n$ vertices has an induced-universal graph with less than $10.52n$ vertices, stressing the difficulty in beating such lower bounds. Similar results are developed for other graph families, including but not limited to, trees, outerplanar graphs, series-parallel graphs, $K_{3,3}$-minor free graphs. As a byproduct, we show that any family of $t$ graphs of $n$ vertices having small chromatic number and sublinear pathwidth, like any proper minor-closed family, has an induced-universal graph with less than $\frac{15}{7} \sqrt{t} \cdot n$ vertices. This is achieved by making a bridge between equitable colorings, combinatorial designs, and path-decompositions.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.11585v1</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <pubDate>Mon, 18 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Cyril Gavoille, Amaury Jacques</dc:creator>
    </item>
    <item>
      <title>On Approximate MMS Allocations on Restricted Graph Classes</title>
      <link>https://arxiv.org/abs/2508.06343</link>
      <description>arXiv:2508.06343v2 Announce Type: replace 
Abstract: We study the problem of fair division of a set of indivisible goods with connectivity constraints. Specifically, we assume that the goods are represented as vertices of a connected graph, and sets of goods allocated to the agents are connected subgraphs of this graph. We focus on the widely-studied maximin share criterion of fairness. It has been shown that an allocation satisfying this criterion may not exist even without connectivity constraints, i.e., if the graph of goods is complete. In view of this, it is natural to seek approximate allocations that guarantee each agent a connected bundle of goods with value at least a constant fraction of the maximin share value to the agent. It is known that for some classes of graphs, such as complete graphs, cycles, and $d$-claw-free graphs for any fixed $d$, such approximate allocations indeed exist. However, it is an open problem whether they exist for the class of all graphs.
  In this paper, we continue the systematic study of the existence of approximate allocations on restricted graph classes. In particular, we show that such allocations exist for several well-studied classes, including block graphs, cacti, complete multipartite graphs, and split graphs.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.06343v2</guid>
      <category>cs.DM</category>
      <category>cs.AI</category>
      <pubDate>Mon, 18 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>V\'aclav Bla\v{z}ej, Micha{\l} D\k{e}bski, Zbigniew Lonc, Marta Piecyk, Pawe{\l} Rz\k{a}\.zewski</dc:creator>
    </item>
  </channel>
</rss>
