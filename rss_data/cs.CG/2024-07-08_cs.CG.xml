<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.CG updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.CG</link>
    <description>cs.CG updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.CG" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Tue, 09 Jul 2024 02:36:06 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Mon, 08 Jul 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>Constraints Matrices and Convergence Proof of TPMS2STEP</title>
      <link>https://arxiv.org/abs/2407.03352</link>
      <description>arXiv:2407.03352v1 Announce Type: new 
Abstract: TPMS is consistently described in the functional representation (F-rep) format, while modern CAD/CAM/CAE tools are built upon the boundary representation (B-rep) format. To solve this issue, translating TPMS to STEP is needed, called TPMS2STEP. This paper provides constraint matrices and convergence proof of TPMS2STEP so that $C^2$ continuity and an error bound of $2\epsilon$ on the deviation can be ensured during the translation.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.03352v1</guid>
      <category>cs.CG</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/publicdomain/zero/1.0/</dc:rights>
      <dc:creator>Yaonaiming Zhao, Qiang Zou</dc:creator>
    </item>
    <item>
      <title>On the Connectivity of the Flip Graph of Plane Spanning Paths</title>
      <link>https://arxiv.org/abs/2407.03912</link>
      <description>arXiv:2407.03912v1 Announce Type: new 
Abstract: Flip graphs of non-crossing configurations in the plane are widely studied objects, e.g., flip graph of triangulations, spanning trees, Hamiltonian cycles, and perfect matchings. Typically, it is an easy exercise to prove connectivity of a flip graph. In stark contrast, the connectivity of the flip graph of plane spanning paths on point sets in general position has been an open problem for more than 16 years.
  In order to provide new insights, we investigate certain induced subgraphs. Firstly, we provide tight bounds on the diameter and the radius of the flip graph of spanning paths on points in convex position with one fixed endpoint. Secondly, we show that so-called suffix-independent paths induce a connected subgraph. Consequently, to answer the open problem affirmatively, it suffices to show that each path can be flipped to some suffix-independent path. Lastly, we investigate paths where one endpoint is fixed and provide tools to flip to suffix-independent paths. We show that these tools are strong enough to show connectivity of the flip graph of plane spanning paths on point sets with at most two convex layers.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.03912v1</guid>
      <category>cs.CG</category>
      <category>cs.DM</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Linda Kleist, Peter Kramer, Christian Rieck</dc:creator>
    </item>
    <item>
      <title>Bicriteria approximation for minimum dilation graph augmentation</title>
      <link>https://arxiv.org/abs/2407.04614</link>
      <description>arXiv:2407.04614v1 Announce Type: new 
Abstract: Spanner constructions focus on the initial design of the network. However, networks tend to improve over time. In this paper, we focus on the improvement step. Given a graph and a budget $k$, which $k$ edges do we add to the graph to minimise its dilation? Gudmundsson and Wong [TALG'22] provided the first positive result for this problem, but their approximation factor is linear in $k$.
  Our main result is a $(2 \sqrt[r]{2} \ k^{1/r},2r)$-bicriteria approximation that runs in $O(n^3 \log n)$ time, for all $r \geq 1$. In other words, if $t^*$ is the minimum dilation after adding any $k$ edges to a graph, then our algorithm adds $O(k^{1+1/r})$ edges to the graph to obtain a dilation of $2rt^*$. Moreover, our analysis of the algorithm is tight under the Erd\H{o}s girth conjecture.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.04614v1</guid>
      <category>cs.CG</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Kevin Buchin, Maike Buchin, Joachim Gudmundsson, Sampson Wong</dc:creator>
    </item>
    <item>
      <title>On a Traveling Salesman Problem for Points in the Unit Cube</title>
      <link>https://arxiv.org/abs/2310.02839</link>
      <description>arXiv:2310.02839v3 Announce Type: cross 
Abstract: Let $X$ be an $n$-element point set in the $k$-dimensional unit cube $[0,1]^k$ where $k \geq 2$. According to an old result of Bollob\'as and Meir (1992), there exists a cycle (tour) $x_1, x_2, \ldots, x_n$ through the $n$ points, such that $\left(\sum_{i=1}^n |x_i - x_{i+1}|^k \right)^{1/k} \leq c_k$, where $|x-y|$ is the Euclidean distance between $x$ and $y$, and $c_k$ is an absolute constant that depends only on $k$, where $x_{n+1} \equiv x_1$. From the other direction, for every $k \geq 2$ and $n \geq 2$, there exist $n$ points in $[0,1]^k$, such that their shortest tour satisfies $\left(\sum_{i=1}^n |x_i - x_{i+1}|^k \right)^{1/k} = 2^{1/k} \cdot \sqrt{k}$. For the plane, the best constant is $c_2=2$ and this is the only exact value known. Bollob{\'a}s and Meir showed that one can take $c_k = 9 \left(\frac23 \right)^{1/k} \cdot \sqrt{k}$ for every $k \geq 3$ and conjectured that the best constant is $c_k = 2^{1/k} \cdot \sqrt{k}$, for every $k \geq 2$. Here we significantly improve the upper bound and show that one can take $c_k = 3 \sqrt5 \left(\frac23 \right)^{1/k} \cdot \sqrt{k}$ or $c_k = 2.91 \sqrt{k} \ (1+o_k(1))$. Our bounds are constructive. We also show that $c_3 \geq 2^{7/6}$, which disproves the conjecture for $k=3$.
  Connections to matching problems, power assignment problems, related problems, including algorithms, are discussed in this context. A slightly revised version of the Bollob\'as--Meir conjecture is proposed.</description>
      <guid isPermaLink="false">oai:arXiv.org:2310.02839v3</guid>
      <category>math.CO</category>
      <category>cs.CG</category>
      <category>cs.DM</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>J\'ozsef Balogh, Felix Christian Clemen, Adrian Dumitrescu</dc:creator>
    </item>
    <item>
      <title>Jacobi Set Simplification for Tracking Topological Features in Time-Varying Scalar Fields</title>
      <link>https://arxiv.org/abs/2407.03348</link>
      <description>arXiv:2407.03348v1 Announce Type: cross 
Abstract: The Jacobi set of a bivariate scalar field is the set of points where the gradients of the two constituent scalar fields align with each other. It captures the regions of topological changes in the bivariate field. The Jacobi set is a bivariate analog of critical points, and may correspond to features of interest. In the specific case of time-varying fields and when one of the scalar fields is time, the Jacobi set corresponds to temporal tracks of critical points, and serves as a feature-tracking graph. The Jacobi set of a bivariate field or a time-varying scalar field is complex, resulting in cluttered visualizations that are difficult to analyze. This paper addresses the problem of Jacobi set simplification. Specifically, we use the time-varying scalar field scenario to introduce a method that computes a reduced Jacobi set. The method is based on a stability measure called robustness that was originally developed for vector fields and helps capture the structural stability of critical points. We also present a mathematical analysis for the method, and describe an implementation for 2D time-varying scalar fields. Applications to both synthetic and real-world datasets demonstrate the effectiveness of the method for tracking features.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.03348v1</guid>
      <category>math.NA</category>
      <category>cs.CG</category>
      <category>cs.CV</category>
      <category>cs.GR</category>
      <category>cs.NA</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-sa/4.0/</dc:rights>
      <arxiv:DOI>10.1007/s00371-024-03484-2</arxiv:DOI>
      <dc:creator>Dhruv Meduri, Mohit Sharma, Vijay Natarajan</dc:creator>
    </item>
    <item>
      <title>Minimum Strict Consistent Subset in Paths, Spiders, Combs and Trees</title>
      <link>https://arxiv.org/abs/2405.18569</link>
      <description>arXiv:2405.18569v3 Announce Type: replace 
Abstract: Let G be a simple connected graph with vertex set V(G) and edge set E(G. Each vertex of V(G) is colored by a color from the set of colors {c_1, c_2,\dots, c_{\alpha}}. We take a subset S of V(G), such that for every vertex v in V(G)\S, at least one vertex of the same color is present in its set of nearest neighbors in S. We refer to such an S as a consistent subset (CS). The Minimum Consistent Subset (MCS) problem is the computation of a consistent subset of the minimum cardinality. It is established that MCS is NP-complete for general graphs, including planar graphs. The strict consistent subset is a variant of consistent subset problems. We take a subset S^{\prime} of V(G), such that for every vertex v in V(G)\S^{\prime}, all the vertices in its set of nearest neighbors in S^{\prime} have the same color as that of v. We refer to such an S^{\prime} as a strict consistent subset (SCS). The Minimum Strict Consistent Subset (MSCS) problem is the computation of a strict consistent subset of the minimum cardinality.
  We demonstrate that MSCS is NP-hard for general graphs using a reduction from dominating set problems. We construct a 2-approximation algorithm and a polynomial-time algorithm in trees. Lastly, we conclude the faster polynomial-time algorithms in paths, spiders, and combs.</description>
      <guid isPermaLink="false">oai:arXiv.org:2405.18569v3</guid>
      <category>cs.CG</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Bubai Manna</dc:creator>
    </item>
  </channel>
</rss>
