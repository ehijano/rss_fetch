<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.DS updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.DS</link>
    <description>cs.DS updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.DS" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Fri, 14 Mar 2025 02:04:12 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Thu, 13 Mar 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>On Deleting Vertices to Reduce Density in Graphs and Supermodular Functions</title>
      <link>https://arxiv.org/abs/2503.08828</link>
      <description>arXiv:2503.08828v1 Announce Type: new 
Abstract: We consider deletion problems in graphs and supermodular functions where the goal is to reduce density. In Graph Density Deletion (GraphDD), we are given a graph $G=(V,E)$ with non-negative vertex costs and a non-negative parameter $\rho \ge 0$ and the goal is to remove a minimum cost subset $S$ of vertices such that the densest subgraph in $G-S$ has density at most $\rho$. This problem has an underlying matroidal structure and generalizes several classical problems such as vertex cover, feedback vertex set, and pseudoforest deletion set for appropriately chosen $\rho \le 1$ and all of these classical problems admit a $2$-approximation. In sharp contrast, we prove that for every fixed integer $\rho &gt; 1$, GraphDD is hard to approximate to within a logarithmic factor via a reduction from Set Cover, thus showing a phase transition phenomenon. Next, we investigate a generalization of GraphDD to monotone supermodular functions, termed Supermodular Density Deletion (SupmodDD). In SupmodDD, we are given a monotone supermodular function $f:2^V \rightarrow \mathbb{Z}_{\ge 0}$ via an evaluation oracle with element costs and a non-negative integer $\rho \ge 0$ and the goal is remove a minimum cost subset $S \subseteq V$ such that the densest subset according to $f$ in $V-S$ has density at most $\rho$. We show that SupmodDD is approximation equivalent to the well-known Submodular Cover problem; this implies a tight logarithmic approximation and hardness for SupmodDD; it also implies a logarithmic approximation for GraphDD, thus matching our inapproximability bound. Motivated by these hardness results, we design bicriteria approximation algorithms for both GraphDD and SupmodDD.</description>
      <guid isPermaLink="false">oai:arXiv.org:2503.08828v1</guid>
      <category>cs.DS</category>
      <pubDate>Thu, 13 Mar 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Karthekeyan Chandrasekaran, Chandra Chekuri, Shubhang Kulkarni</dc:creator>
    </item>
    <item>
      <title>Beyond 2-approximation for k-Center in Graphs</title>
      <link>https://arxiv.org/abs/2503.09468</link>
      <description>arXiv:2503.09468v1 Announce Type: new 
Abstract: We consider the classical $k$-Center problem in undirected graphs. The problem is known to have a polynomial-time 2-approximation. There are even $(2+\varepsilon)$-approximations running in near-linear time. The conventional wisdom is that the problem is closed, as $(2-\varepsilon)$-approximation is NP-hard when $k$ is part of the input, and for constant $k\geq 2$ it requires $n^{k-o(1)}$ time under SETH.
  Our first set of results show that one can beat the multiplicative factor of $2$ in undirected unweighted graphs if one is willing to allow additional small additive error, obtaining $(2-\varepsilon,O(1))$ approximations. We provide several algorithms that achieve such approximations for all integers $k$ with running time $O(n^{k-\delta})$ for $\delta&gt;0$. For instance, for every $k\geq 2$, we obtain an $O(mn + n^{k/2+1})$ time $(2 - \frac{1}{2k-1}, 1 - \frac{1}{2k-1})$-approximation to $k$-Center. For $2$-Center we also obtain an $\tilde{O}(mn^{\omega/3})$ time $(5/3,2/3)$-approximation algorithm. Notably, the running time of this $2$-Center algorithm is faster than the time needed to compute APSP.
  Our second set of results are strong fine-grained lower bounds for $k$-Center. We show that our $(3/2,O(1))$-approximation algorithm is optimal, under SETH, as any $(3/2-\varepsilon,O(1))$-approximation algorithm requires $n^{k-o(1)}$ time. We also give a time/approximation trade-off: under SETH, for any integer $t\geq 1$, $n^{k/t^2-1-o(1)}$ time is needed for any $(2-1/(2t-1),O(1))$-approximation algorithm for $k$-Center. This explains why our $(2-\varepsilon,O(1))$ approximation algorithms have $k$ appearing in the exponent of the running time. Our reductions also imply that, assuming ETH, the approximation ratio 2 of the known near-linear time algorithms cannot be improved by any algorithm whose running time is a polynomial independent of $k$, even if one allows additive error.</description>
      <guid isPermaLink="false">oai:arXiv.org:2503.09468v1</guid>
      <category>cs.DS</category>
      <pubDate>Thu, 13 Mar 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:DOI>10.1137/1.9781611978322.6</arxiv:DOI>
      <dc:creator>Ce Jin, Yael Kirkpatrick, Virginia Vassilevska Williams, Nicole Wein</dc:creator>
    </item>
    <item>
      <title>Bounding the Optimal Performance of Online Randomized Primal-Dual Methods</title>
      <link>https://arxiv.org/abs/2503.09508</link>
      <description>arXiv:2503.09508v2 Announce Type: new 
Abstract: The online randomized primal-dual method has widespread applications in online algorithm design and analysis. A key challenge is identifying an appropriate function space, $F$, in which we search for an optimal updating function $f \in F$ that yields the best possible lower bound on the competitiveness of a given algorithm. The choice of $F$ must balance two competing objectives: on one hand, it should impose sufficient simplifying conditions on $f$ to facilitate worst-case analysis and establish a valid lower bound; on the other hand, it should remain general enough to offer a broad selection of candidate functions. The tradeoff is that any additional constraints on $f$ that can facilitate competitive analysis may also lead to a suboptimal choice, weakening the resulting lower bound.
  To address this challenge, we propose an auxiliary-LP-based framework capable of effectively approximating the best possible competitiveness achievable when applying the randomized primal-dual method to different function spaces. Specifically, we examine the framework introduced by Huang and Zhang (STOC 2020), which analyzes Stochastic Balance for vertex-weighted online matching with stochastic rewards. Our approach yields both lower and upper bounds on the best possible competitiveness attainable using the randomized primal-dual method for different choices of ${F}$. Notably, we establish that Stochastic Balance achieves a competitiveness of at least $0.5796$ for the problem (under equal vanishing probabilities), improving upon the previous bound of $0.576$ by Huang and Zhang (STOC 2020). Meanwhile, our analysis yields an upper bound of $0.5810$ for a function space strictly larger than that considered in Huang and Zhang (STOC 2020).</description>
      <guid isPermaLink="false">oai:arXiv.org:2503.09508v2</guid>
      <category>cs.DS</category>
      <pubDate>Thu, 13 Mar 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Pan Xu</dc:creator>
    </item>
    <item>
      <title>Revisiting Karp, Vazirani, and Vazirani (STOC 1990): A Simple Yet Rigorous Fix to the $1 - 1/e$ Upper-Bound Analysis</title>
      <link>https://arxiv.org/abs/2503.09530</link>
      <description>arXiv:2503.09530v1 Announce Type: new 
Abstract: In this paper, we present a comprehensive review of the analysis of the well-known $1 - 1/e$ upper bound on the competitiveness that any online algorithm can achieve, as established in the classical paper by Karp, Vazirani, and Vazirani (STOC 1990). We discuss in detail all the minor and major technical issues in their approach and present a \emph{simple yet rigorous} method to address them. Specifically, we show that the upper bound of $n(1 - 1/e) + o(n)$ on the performance of any online algorithm, as shown in the paper, can be replaced by $\lceil n \cdot (1 - 1/e) + 2 - 1/e \rceil$. Our approach is notable for its simplicity and is significantly less technically involved than existing ones.</description>
      <guid isPermaLink="false">oai:arXiv.org:2503.09530v1</guid>
      <category>cs.DS</category>
      <pubDate>Thu, 13 Mar 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Pan Xu</dc:creator>
    </item>
    <item>
      <title>Improved Approximation Algorithms for Three-Dimensional Bin Packing</title>
      <link>https://arxiv.org/abs/2503.08863</link>
      <description>arXiv:2503.08863v1 Announce Type: cross 
Abstract: We study three fundamental three-dimensional (3D) geometric packing problems: 3D (Geometric) Bin Packing (3D-BP), 3D Strip Packing (3D-SP), and Minimum Volume Bounding Box (3D-MVBB), where given a set of 3D (rectangular) cuboids, the goal is to find an axis-aligned nonoverlapping packing of all cuboids. In 3D-BP, we need to pack the given cuboids into the minimum number of unit cube bins. In 3D-SP, we need to pack them into a 3D cuboid with a unit square base and minimum height. Finally, in 3D-MVBB, the goal is to pack into a cuboid box of minimum volume.
  It is NP-hard to even decide whether a set of rectangles can be packed into a unit square bin -- giving an (absolute) approximation hardness of 2 for 3D-BP and 3D-SP. The previous best (absolute) approximation for all three problems is by Li and Cheng (SICOMP, 1990), who gave algorithms with approximation ratios of 13, $46/7$, and $46/7+\varepsilon$, respectively, for 3D-BP, 3D-SP, and 3D-MVBB. We provide improved approximation ratios of 6, 6, and $3+\varepsilon$, respectively, for the three problems, for any constant $\varepsilon &gt; 0$.
  For 3D-BP, in the asymptotic regime, Bansal, Correa, Kenyon, and Sviridenko (Math.~Oper.~Res., 2006) showed that there is no asymptotic polynomial-time approximation scheme (APTAS) even when all items have the same height. Caprara (Math.~Oper.~Res., 2008) gave an asymptotic approximation ratio of $T_{\infty}^2 + \varepsilon\approx 2.86$, where $T_{\infty}$ is the well-known Harmonic constant in Bin Packing. We provide an algorithm with an improved asymptotic approximation ratio of $3 T_{\infty}/2 +\varepsilon \approx 2.54$. Further, we show that unlike 3D-BP (and 3D-SP), 3D-MVBB admits an APTAS.</description>
      <guid isPermaLink="false">oai:arXiv.org:2503.08863v1</guid>
      <category>cs.CG</category>
      <category>cs.DS</category>
      <pubDate>Thu, 13 Mar 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Debajyoti Kar, Arindam Khan, Malin Rau</dc:creator>
    </item>
    <item>
      <title>Scanning HTML at Tens of Gigabytes per Second on ARM Processors</title>
      <link>https://arxiv.org/abs/2503.01662</link>
      <description>arXiv:2503.01662v2 Announce Type: replace 
Abstract: Modern processors have instructions to process 16 bytes or more at once. These instructions are called SIMD, for single instruction, multiple data. Recent advances have leveraged SIMD instructions to accelerate parsing of common Internet formats such as JSON and base64. During HTML parsing, they quickly identify specific characters with a strategy called vectorized classification. We review their techniques and compare them with a faster alternative. We measure a 20-fold performance improvement in HTML scanning compared to traditional methods on recent ARM processors. Our findings highlight the potential of SIMD-based algorithms for optimizing Web browser performance.</description>
      <guid isPermaLink="false">oai:arXiv.org:2503.01662v2</guid>
      <category>cs.DS</category>
      <category>cs.AR</category>
      <pubDate>Thu, 13 Mar 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Daniel Lemire</dc:creator>
    </item>
    <item>
      <title>Random zero sets with local growth guarantees</title>
      <link>https://arxiv.org/abs/2410.21931</link>
      <description>arXiv:2410.21931v3 Announce Type: replace-cross 
Abstract: We prove that if $(\mathcal{M},d)$ is an $n$-point metric space that embeds quasisymmetrically into a Hilbert space, then for every $\tau&gt;0$ there is a random subset $\mathcal{Z}$ of $\mathcal{M}$ such that for any pair of points $x,y\in \mathcal{M}$ with $d(x,y)\ge \tau$, the probability that both $x\in \mathcal{Z}$ and $d(y,\mathcal{Z})\ge \beta\tau/\sqrt{1+\log (|B(y,\kappa \beta \tau)|/|B(y,\beta \tau)|)}$ is $\Omega(1)$, where $\kappa&gt;1$ is a universal constant and $\beta&gt;0$ depends only on the modulus of the quasisymmetric embedding. The proof relies on a refinement of the Arora--Rao--Vazirani rounding technique. Among the applications of this result is that the largest possible Euclidean distortion of an $n$-point subset of $\ell_1$ is $\Theta(\sqrt{\log n})$, and the integrality gap of the Goemans--Linial semidefinite program for the Sparsest Cut problem on inputs of size $n$ is $\Theta(\sqrt{\log n})$. Multiple further applications are given.</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.21931v3</guid>
      <category>math.MG</category>
      <category>cs.DS</category>
      <category>math.FA</category>
      <pubDate>Thu, 13 Mar 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Alan Chang, Assaf Naor, Kevin Ren</dc:creator>
    </item>
  </channel>
</rss>
