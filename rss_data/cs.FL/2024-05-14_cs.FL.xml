<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.FL updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.FL</link>
    <description>cs.FL updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.FL" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Wed, 15 May 2024 04:00:18 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Wed, 15 May 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>Finite-valued Streaming String Transducers</title>
      <link>https://arxiv.org/abs/2405.08171</link>
      <description>arXiv:2405.08171v1 Announce Type: new 
Abstract: A transducer is finite-valued if for some bound k, it maps any given input to at most k outputs. For classical, one-way transducers, it is known since the 80s that finite valuedness entails decidability of the equivalence problem. This decidability result is in contrast to the general case, which makes finite-valued transducers very attractive. For classical transducers, it is also known that finite valuedness is decidable and that any k-valued finite transducer can be decomposed as a union of k single-valued finite transducers.
  In this paper, we extend the above results to copyless streaming string transducers (SSTs), answering questions raised by Alur and Deshmukh in 2011. SSTs strictly extend the expressiveness of one-way transducers via additional variables that store partial outputs. We prove that any k-valued SST can be effectively decomposed as a union of k (single-valued) deterministic SSTs. As a corollary, we obtain equivalence of SSTs and two-way transducers in the finite-valued case (those two models are incomparable in general). Another corollary is an elementary upper bound for checking equivalence of finite-valued SSTs. The latter problem was already known to be decidable, but the proof complexity was unknown (it relied on Ehrenfeucht's conjecture). Finally, our main result is that finite valuedness of SSTs is decidable. The complexity is PSpace, and even PTime when the number of variables is fixed.</description>
      <guid isPermaLink="false">oai:arXiv.org:2405.08171v1</guid>
      <category>cs.FL</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Emmanuel Filiot, Isma\"el Jecker, Gabriele Puppis, Christof L\"oding, Anca Muscholl, Sarah Winter</dc:creator>
    </item>
    <item>
      <title>Certifying Robustness of Graph Convolutional Networks for Node Perturbation with Polyhedra Abstract Interpretation</title>
      <link>https://arxiv.org/abs/2405.08645</link>
      <description>arXiv:2405.08645v1 Announce Type: cross 
Abstract: Graph convolutional neural networks (GCNs) are powerful tools for learning graph-based knowledge representations from training data. However, they are vulnerable to small perturbations in the input graph, which makes them susceptible to input faults or adversarial attacks. This poses a significant problem for GCNs intended to be used in critical applications, which need to provide certifiably robust services even in the presence of adversarial perturbations. We propose an improved GCN robustness certification technique for node classification in the presence of node feature perturbations. We introduce a novel polyhedra-based abstract interpretation approach to tackle specific challenges of graph data and provide tight upper and lower bounds for the robustness of the GCN. Experiments show that our approach simultaneously improves the tightness of robustness bounds as well as the runtime performance of certification. Moreover, our method can be used during training to further improve the robustness of GCNs.</description>
      <guid isPermaLink="false">oai:arXiv.org:2405.08645v1</guid>
      <category>cs.LG</category>
      <category>cs.FL</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Boqi Chen, Krist\'of Marussy, Oszk\'ar Semer\'ath, Gunter Mussbacher, D\'aniel Varr\'o</dc:creator>
    </item>
    <item>
      <title>Decidability of membership problems for flat rational subsets of $\mathrm{GL}(2,\mathbb{Q})$ and singular matrices</title>
      <link>https://arxiv.org/abs/1910.02302</link>
      <description>arXiv:1910.02302v5 Announce Type: replace 
Abstract: We consider membership problems for rational subsets of the semigroup of $2\times 2$ matrices over $\mathbb{Q}$. For a semigroup $M$, the rational subsets $\mathrm{Rat}(M)$ are defined as the sets accepted by NFAs whose transitions are labeled by elements of $M$. In general, it is undecidable on inputs $m\in M$ and $R\in \mathrm{Rat}(M)$ whether $m$ belongs to $R$. Therefore, we restrict our attention to the family $\mathrm{FRat}(M,S)$ of flat rational subsets of $M$ over $S$, where $S$ is a subsemigroup of $M$. It consists of finite unions of the form $g_0L_1g_1 \cdots L_tg_t$, where $L_i\in \mathrm{Rat}(S)$ and $g_i\in M$. Assuming that the membership for $\mathrm{Rat}(S)$ is decidable, we prove various results when the membership for $\mathrm{FRat}(M,S)$ is decidable.
  If $H$ is a subgroup of a group $G$, then we provide a rather general condition when $\mathrm{FRat}(G,H)$ is an (effective) relative Boolean algebra. This leads to one of our main results that the emptiness problem for Boolean combinations of sets in $\mathrm{FRat}(\mathrm{GL}(2,\mathbb{Q}),\mathrm{GL}(2,\mathbb{Z}))$ is decidable. It is possible that this result cannot be pushed any further as indicated by the following dichotomy: if $G$ is a finitely generated group such that $\mathrm{GL}(2,\mathbb{Z}) &lt; G &lt; \mathrm{GL}(2,\mathbb{Q})$, then either $G\cong \mathrm{GL}(2,\mathbb{Z})\times \mathbb{Z}^k$ or $G$ contains an extension of the Baumslag-Solitar group $\mathrm{BS}(1,q)$ of infinite index. It is open whether the membership for rational subsets is decidable in the latter case. For singular matrices, we will show that the membership problem for $\mathrm{FRat}(\mathbb{Q}^{2\times 2},S)$ is decidable in doubly exponential time, where $S$ is the monoid generated by $\mathrm{GL}(2,\mathbb{Z})\cup \{r\in \mathbb{Q}\,\mid\,r&gt;1\} \cup \{0,\left(\begin{smallmatrix}1 &amp; 0\\ 0 &amp; 0\end{smallmatrix}\right)\}$.</description>
      <guid isPermaLink="false">oai:arXiv.org:1910.02302v5</guid>
      <category>cs.FL</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Volker Diekert, Igor Potapov, Pavel Semukhin</dc:creator>
    </item>
    <item>
      <title>Watson-Crick conjugates of words and languages</title>
      <link>https://arxiv.org/abs/2208.03123</link>
      <description>arXiv:2208.03123v2 Announce Type: replace 
Abstract: This paper explores the concept of Watson-Crick conjugates, also known as $\theta$-conjugates, of words and languages. This concept extends the classical idea of conjugates by incorporating the Watson-Crick complementarity of DNA sequences, from the perspective of DNA computing. Our investigation initially focuses on the properties of $\theta$-conjugates of words. We then define $\theta$-conjugates of a language and study closure properties of certain families of languages under the $\theta$-conjugate operation. Furthermore, we analyze the iterated $\theta$-conjugate of both words and languages. Finally, we delve into the idea of $\theta$-conjugate-free languages and examine the decidability problems surrounding $\theta$-conjugate-freeness for different classes of languages</description>
      <guid isPermaLink="false">oai:arXiv.org:2208.03123v2</guid>
      <category>cs.FL</category>
      <category>math.CO</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Kalpana Mahalingam, Anuran Maity</dc:creator>
    </item>
    <item>
      <title>Maximal Closed Substrings</title>
      <link>https://arxiv.org/abs/2209.00271</link>
      <description>arXiv:2209.00271v2 Announce Type: replace-cross 
Abstract: A string is closed if it has length 1 or has a nonempty border without internal occurrences. In this paper we introduce the definition of a \emph{maximal closed substring} (MCS), which is an occurrence of a closed substring that cannot be extended to the left nor to the right into a longer closed substring. MCSs with exponent at least $2$ are commonly called \emph{runs}; those with exponent smaller than $2$, instead, are particular cases of \emph{maximal gapped repeats}. We provide an algorithm that, given a string of length $n$ locates all MCSs the string contains in $\mathcal O(n\log n)$ time.</description>
      <guid isPermaLink="false">oai:arXiv.org:2209.00271v2</guid>
      <category>cs.DS</category>
      <category>cs.FL</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Golnaz Badkobeh, Alessandro De Luca, Gabriele Fici, Simon Puglisi</dc:creator>
    </item>
  </channel>
</rss>
