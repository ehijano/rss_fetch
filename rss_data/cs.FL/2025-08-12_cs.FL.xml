<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.FL updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.FL</link>
    <description>cs.FL updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.FL" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Wed, 13 Aug 2025 01:25:29 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Tue, 12 Aug 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Hexagonal Picture Scanning Automata</title>
      <link>https://arxiv.org/abs/2508.07779</link>
      <description>arXiv:2508.07779v1 Announce Type: new 
Abstract: Two new classes of finite automata, called General hexagonal Boustrophedon finite automata and General hexagonal returning finite automata operating on hexagonal grids, are introduced and analyzed. The work establishes the theoretical foundations for these automata models, examines their computational properties, and investigates the relationships and equivalences between the language families they define. The research contributes to the broader understanding of two-dimensional automata theory by extending classical finite automaton concepts to hexagonal geometric structures with specialized traversal patterns.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.07779v1</guid>
      <category>cs.FL</category>
      <pubDate>Tue, 12 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Deepalakshmi D, Lisa Mathew</dc:creator>
    </item>
    <item>
      <title>On the Separability Problem of VASS Reachability Languages</title>
      <link>https://arxiv.org/abs/2401.16095</link>
      <description>arXiv:2401.16095v3 Announce Type: replace 
Abstract: We show that the regular separability problem of VASS reachability languages is decidable and $\mathbf{F}_{\omega}$-complete. At the heart of our decision procedure are doubly-marked graph transition sequences, a new proof object that tracks a suitable product of the VASS we wish to separate. We give a decomposition algorithm for DMGTS that not only achieves perfectness as known from MGTS, but also a new property called faithfulness. Faithfulness allows us to construct, from a regular separator for the $\mathbb{Z}$-versions of the VASS, a regular separator for the $\mathbb{N}$-versions. Behind faithfulness is the insight that, for separability, it is sufficient to track the counters of one VASS modulo a large number that is determined by the decomposition.</description>
      <guid isPermaLink="false">oai:arXiv.org:2401.16095v3</guid>
      <category>cs.FL</category>
      <pubDate>Tue, 12 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Eren Keskin, Roland Meyer</dc:creator>
    </item>
    <item>
      <title>Realisability and Complementability of Multiparty Session Types</title>
      <link>https://arxiv.org/abs/2507.17354</link>
      <description>arXiv:2507.17354v2 Announce Type: replace 
Abstract: Multiparty session types (MPST) are a type-based approach for specifying message-passing distributed systems. They rely on the notion of global type specifying the global behaviour and local types, which are the projections of the global behaviour onto each local participant. An essential property of global types is realisability, i.e., whether the composition of the local behaviours conforms to those specified by the global type. We explore how realisability of MPST relates to their complementability, i.e., whether there exists a global type that describes the complementary behaviour of the original global type. First, we show that if a global type is realisable with p2p communications, then it is realisable with synchronous communications. Second, we show that if a global type is realisable in the synchronous model, then it is complementable, in the sense that there exists a global type that describes the complementary behaviour of the original global type.  Third, we give an algorithm to decide whether a complementable global type, given with an explicit complement, is realisable in p2p. As a side contribution, we propose a complementation construction for global types with sender-driven choice, and more generally commutation-deterministic, with a linear blowup in the size of the global type.</description>
      <guid isPermaLink="false">oai:arXiv.org:2507.17354v2</guid>
      <category>cs.FL</category>
      <pubDate>Tue, 12 Aug 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Cinzia Di Giusto (C\&amp;A, I3S), Etienne Lozes (I3S, Laboratoire I3S - COMRED), Pascal Urso (I3S, SCALE, Laboratoire I3S - COMRED)</dc:creator>
    </item>
  </channel>
</rss>
