<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.FL updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.FL</link>
    <description>cs.FL updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.FL" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Fri, 21 Feb 2025 05:00:13 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Fri, 21 Feb 2025 00:00:00 -0500</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>On linguistic subsets of groups and monoids</title>
      <link>https://arxiv.org/abs/2502.14329</link>
      <description>arXiv:2502.14329v1 Announce Type: cross 
Abstract: We study subsets of groups and monoids defined by language-theoretic means, generalizing the classical approach to the word problem. We expand on results by Herbst from 1991 to a more general setting, and for a class of languages $\mathbf{C}$ we define the classes of $\mathbf{C}^\forall$-flat and $\mathbf{C}^\exists$-flat groups. We prove several closure results for these classes of groups, prove a connection with the word problem, and characterize $\mathbf{C}^\forall$-flat groups for several classes of languages. In general, we prove that the class of $\mathbf{C}^\forall$-flat groups is a strict subclass of the class of groups with word problem in $\mathbf{C}$, including for the class $\mathrm{REC}$ of recursive languages, for which $\mathbf{C}^\forall$-flatness for a group resp. monoid is proved to be equivalent to the decidability of the subgroup membership problem resp. the submonoid membership problem. We provide a number of examples, including the Tarski monsters of Ol'shanskii, showing the difficulty of characterizing $\mathbf{C}^\exists$-flat groups. As an application of our general methods, we also prove in passing that if $\mathbf{C}$ is a full semi-$\mathrm{AFL}$, then the class of epi-$\mathbf{C}$ groups is closed under taking finite index subgroups. This answers a question recently posed by Al Kohli, Bleak &amp; Elliot.</description>
      <guid isPermaLink="false">oai:arXiv.org:2502.14329v1</guid>
      <category>math.GR</category>
      <category>cs.FL</category>
      <pubDate>Fri, 21 Feb 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Andr\'e Carvalho, Carl-Fredrik Nyberg-Brodda</dc:creator>
    </item>
    <item>
      <title>Constant-delay enumeration for SLP-compressed documents</title>
      <link>https://arxiv.org/abs/2209.12301</link>
      <description>arXiv:2209.12301v5 Announce Type: replace-cross 
Abstract: We study the problem of enumerating results from a query over a compressed document. The model we use for compression are straight-line programs (SLPs), which are defined by a context-free grammar that produces a single string. For our queries, we use a model called Annotated Automata, an extension of regular automata that allows annotations on letters. This model extends the notion of Regular Spanners as it allows arbitrarily long outputs. Our main result is an algorithm that evaluates such a query by enumerating all results with output-linear delay after a preprocessing phase which takes linear time on the size of the SLP, and cubic time over the size of the automaton. This is an improvement over Schmid and Schweikardt's result, which, with the same preprocessing time, enumerates with a delay that is logarithmic on the size of the uncompressed document. We achieve this through a persistent data structure named Enumerable Compact Sets with Shifts which guarantees output-linear delay under certain restrictions. These results imply constant-delay enumeration algorithms in the context of regular spanners. Further, we use an extension of annotated automata which utilizes succinctly encoded annotations to save an exponential factor from previous results that dealt with constant-delay enumeration over vset automata. Lastly, we extend our results in the same fashion Schmid and Schweikardt did to allow complex document editing while maintaining the constant delay guarantee.</description>
      <guid isPermaLink="false">oai:arXiv.org:2209.12301v5</guid>
      <category>cs.DS</category>
      <category>cs.FL</category>
      <category>cs.LO</category>
      <pubDate>Fri, 21 Feb 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Mart\'in Mu\~noz, Cristian Riveros</dc:creator>
    </item>
  </channel>
</rss>
