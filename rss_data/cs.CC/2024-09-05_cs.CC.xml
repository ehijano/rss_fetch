<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.CC updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.CC</link>
    <description>cs.CC updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.CC" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Fri, 06 Sep 2024 04:00:03 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Fri, 06 Sep 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Randomized Lower Bounds for Tarski Fixed Points in High Dimensions</title>
      <link>https://arxiv.org/abs/2409.03751</link>
      <description>arXiv:2409.03751v1 Announce Type: new 
Abstract: The Knaster-Tarski theorem, also known as Tarski's theorem, guarantees that every monotone function defined on a complete lattice has a fixed point. We analyze the query complexity of finding such a fixed point on the $k$-dimensional grid of side length $n$ under the $\leq$ relation. Specifically, there is an unknown monotone function $f: \{0,1,\ldots, n-1\}^k \to \{0,1,\ldots, n-1\}^k$ and an algorithm must query a vertex $v$ to learn $f(v)$.
  Our main result is a randomized lower bound of $\Omega\left( k + \frac{k \cdot \log{n}}{\log{k}} \right)$ for the $k$-dimensional grid of side length $n$, which is nearly optimal in high dimensions when $k$ is large relative to $n$. As a corollary, we characterize the randomized and deterministic query complexity on the Boolean hypercube $\{0,1\}^k$ as $\Theta(k)$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2409.03751v1</guid>
      <category>cs.CC</category>
      <category>cs.GT</category>
      <pubDate>Fri, 06 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Simina Br\^anzei, Reed Phillips, Nicholas Recker</dc:creator>
    </item>
    <item>
      <title>Does Subset Sum Admit Short Proofs?</title>
      <link>https://arxiv.org/abs/2409.03526</link>
      <description>arXiv:2409.03526v1 Announce Type: cross 
Abstract: We investigate the question whether Subset Sum can be solved by a polynomial-time algorithm with access to a certificate of length poly(k) where k is the maximal number of bits in an input number. In other words, can it be solved using only few nondeterministic bits?
  This question has motivated us to initiate a systematic study of certification complexity of parameterized problems. Apart from Subset Sum, we examine problems related to integer linear programming, scheduling, and group theory. We reveal an equivalence class of problems sharing the same hardness with respect to having a polynomial certificate. These include Subset Sum and Boolean Linear Programming parameterized by the number of constraints. Secondly, we present new techniques for establishing lower bounds in this regime. In particular, we show that Subset Sum in permutation groups is at least as hard for nondeterministic computation as 3Coloring in bounded-pathwidth graphs.</description>
      <guid isPermaLink="false">oai:arXiv.org:2409.03526v1</guid>
      <category>cs.DS</category>
      <category>cs.CC</category>
      <pubDate>Fri, 06 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Micha{\l} W{\l}odarczyk</dc:creator>
    </item>
    <item>
      <title>Fine-Grained Equivalence for Problems Related to Integer Linear Programming</title>
      <link>https://arxiv.org/abs/2409.03675</link>
      <description>arXiv:2409.03675v1 Announce Type: cross 
Abstract: Integer Linear Programming with $n$ binary variables and $m$ many $0/1$-constraints can be solved in time $2^{\tilde O(m^2)} \text{poly}(n)$ and it is open whether the dependence on $m$ is optimal. Several seemingly unrelated problems, which include variants of Closest String, Discrepancy Minimization, Set Cover, and Set Packing, can be modelled as Integer Linear Programming with $0/1$ constraints to obtain algorithms with the same running time for a natural parameter $m$ in each of the problems. Our main result establishes through fine-grained reductions that these problems are equivalent, meaning that a $2^{O(m^{2-\varepsilon})} \text{poly}(n)$ algorithm with $\varepsilon &gt; 0$ for one of them implies such an algorithm for all of them.
  In the setting above, one can alternatively obtain an $n^{O(m)}$ time algorithm for Integer Linear Programming using a straightforward dynamic programming approach, which can be more efficient if $n$ is relatively small (e.g., subexponential in $m$). We show that this can be improved to ${n'}^{O(m)} + O(nm)$, where $n'$ is the number of distinct (i.e., non-symmetric) variables. This dominates both of the aforementioned running times.</description>
      <guid isPermaLink="false">oai:arXiv.org:2409.03675v1</guid>
      <category>cs.DS</category>
      <category>cs.CC</category>
      <pubDate>Fri, 06 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/publicdomain/zero/1.0/</dc:rights>
      <dc:creator>Lars Rohwedder, Karol W\k{e}grzycki</dc:creator>
    </item>
    <item>
      <title>Solving promise equations over monoids and groups</title>
      <link>https://arxiv.org/abs/2402.08434</link>
      <description>arXiv:2402.08434v3 Announce Type: replace 
Abstract: We give a complete complexity classification for the problem of finding a solution to a given system of equations over a fixed finite monoid, given that a solution over a more restricted monoid exists. As a corollary, we obtain a complexity classification for the same problem over groups.</description>
      <guid isPermaLink="false">oai:arXiv.org:2402.08434v3</guid>
      <category>cs.CC</category>
      <category>cs.LO</category>
      <pubDate>Fri, 06 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Alberto Larrauri, Stanislav \v{Z}ivn\'y</dc:creator>
    </item>
    <item>
      <title>On Computability of Computable Problems</title>
      <link>https://arxiv.org/abs/2402.09410</link>
      <description>arXiv:2402.09410v3 Announce Type: replace 
Abstract: Computational problems are classified into computable and uncomputable problems.If there exists an effective procedure (algorithm) to compute a problem then the problem is computable otherwise it is uncomputable.Turing machines can execute any algorithm therefore every computable problem is Turing computable.Cardinality of Turing machines and computable problems is equal-both are countably infinite.In this paper we introduce new type of problems by constructing a transform technique and applying it on some computable problems.The transformed problems can be computable of uncomputable.</description>
      <guid isPermaLink="false">oai:arXiv.org:2402.09410v3</guid>
      <category>cs.CC</category>
      <pubDate>Fri, 06 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <dc:creator>Asad Khaliq</dc:creator>
    </item>
    <item>
      <title>Computing the EHZ capacity is NP-hard</title>
      <link>https://arxiv.org/abs/2402.09914</link>
      <description>arXiv:2402.09914v2 Announce Type: replace-cross 
Abstract: The Ekeland-Hofer-Zehnder capacity (EHZ capacity) is a fundamental symplectic invariant of convex bodies. We show that computing the EHZ capacity of polytopes is NP-hard. For this we reduce the feedback arc set problem in bipartite tournaments to computing the EHZ capacity of simplices.</description>
      <guid isPermaLink="false">oai:arXiv.org:2402.09914v2</guid>
      <category>math.SG</category>
      <category>cs.CC</category>
      <category>math.CO</category>
      <pubDate>Fri, 06 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Karla Leipold, Frank Vallentin</dc:creator>
    </item>
    <item>
      <title>Scalable Neighborhood Local Search for Single-Machine Scheduling with Family Setup Times</title>
      <link>https://arxiv.org/abs/2409.00771</link>
      <description>arXiv:2409.00771v2 Announce Type: replace-cross 
Abstract: In this work, we study the task of scheduling jobs on a single machine with sequence dependent family setup times under the goal of minimizing the makespan, that is, the completion time of the last job in the schedule. This notoriously NP-hard problem is highly relevant in practical productions and requires heuristics that provide good solutions quickly in order to deal with large instances. In this paper, we present a heuristic based on the approach of parameterized local search. That is, we aim to replace a given solution by a better solution having distance at most $k$ in a pre-defined distance measure. This is done multiple times in a hill-climbing manner, until a locally optimal solution is reached. We analyze the trade-off between the allowed distance $k$ and the algorithm's running time for four natural distance measures. Example of allowed operations for our considered distance measures are: swapping $k$ pairs of jobs in the sequence, or rearranging $k$ consecutive jobs. For two distance measures, we show that finding an improvement for given $k$ can be done in $f(k) \cdot n^{\mathcal{O}(1)}$ time, while such a running time for the other two distance measures is unlikely. We provide a preliminary experimental evaluation of our local search approaches.</description>
      <guid isPermaLink="false">oai:arXiv.org:2409.00771v2</guid>
      <category>cs.DS</category>
      <category>cs.CC</category>
      <pubDate>Fri, 06 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Kaja Balzereit, Niels Gr\"uttemeier, Nils Morawietz, Dennis Reinhardt, Stefan Windmann, Petra Wolf</dc:creator>
    </item>
  </channel>
</rss>
