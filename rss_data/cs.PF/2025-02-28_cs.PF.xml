<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.PF updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.PF</link>
    <description>cs.PF updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.PF" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Fri, 28 Feb 2025 05:00:07 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Fri, 28 Feb 2025 00:00:00 -0500</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>A high-performance and portable implementation of the SISSO method for CPUs and GPUs</title>
      <link>https://arxiv.org/abs/2502.20072</link>
      <description>arXiv:2502.20072v1 Announce Type: new 
Abstract: SISSO (sure-independence screening and sparsifying operator) is an artificial intelligence (AI) method based on symbolic regression and compressed sensing widely used in materials science research. SISSO++ is its C++ implementation that employs MPI and OpenMP for parallelization, rendering it well-suited for high-performance computing (HPC) environments. As heterogeneous hardware becomes mainstream in the HPC and AI fields, we chose to port the SISSO++ code to GPUs using the Kokkos performance-portable library. Kokkos allows us to maintain a single codebase for both Nvidia and AMD GPUs, significantly reducing the maintenance effort. In this work, we summarize the necessary code changes we did to achieve hardware and performance portability. This is accompanied by performance benchmarks on Nvidia and AMD GPUs. We demonstrate the speedups obtained from using GPUs across the three most time-consuming parts of our code.</description>
      <guid isPermaLink="false">oai:arXiv.org:2502.20072v1</guid>
      <category>cs.PF</category>
      <pubDate>Fri, 28 Feb 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Sebastian Eibl, Yi Yao, Matthias Scheffler, Markus Rampp, Luca M. Ghiringhelli, Thomas A. R. Purcell</dc:creator>
    </item>
    <item>
      <title>Entanglement buffering with multiple quantum memories</title>
      <link>https://arxiv.org/abs/2502.20240</link>
      <description>arXiv:2502.20240v1 Announce Type: cross 
Abstract: Entanglement buffers are systems that maintain high-quality entanglement, ensuring it is readily available for consumption when needed. In this work, we study the performance of a two-node buffer, where each node has one long-lived quantum memory for storing entanglement and multiple short-lived memories for generating fresh entanglement. Newly generated entanglement may be used to purify the stored entanglement, which degrades over time. Stored entanglement may be removed due to failed purification or consumption. We derive analytical expressions for the system performance, which is measured using the entanglement availability and the average fidelity upon consumption. Our solutions are computationally efficient to evaluate, and they provide fundamental bounds to the performance of purification-based entanglement buffers. We show that purification must be performed as frequently as possible to maximise the average fidelity of entanglement upon consumption, even if this often leads to the loss of high-quality entanglement due to purification failures. Moreover, we obtain heuristics for the design of good purification policies in practical systems. A key finding is that simple purification protocols, such as DEJMPS, often provide superior buffering performance compared to protocols that maximize output fidelity.</description>
      <guid isPermaLink="false">oai:arXiv.org:2502.20240v1</guid>
      <category>quant-ph</category>
      <category>cs.PF</category>
      <pubDate>Fri, 28 Feb 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>\'Alvaro G. I\~nesta, Bethany Davies, Sounak Kar, Stephanie Wehner</dc:creator>
    </item>
  </channel>
</rss>
