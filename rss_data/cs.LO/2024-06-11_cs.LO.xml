<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.LO updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.LO</link>
    <description>cs.LO updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.LO" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Wed, 12 Jun 2024 04:00:54 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Wed, 12 Jun 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>Data Complexity in Expressive Description Logics With Path Expressions</title>
      <link>https://arxiv.org/abs/2406.07095</link>
      <description>arXiv:2406.07095v1 Announce Type: new 
Abstract: We investigate the data complexity of the satisfiability problem for the very expressive description logic ZOIQ (a.k.a. ALCHb Self reg OIQ) over quasi-forests and establish its NP-completeness. This completes the data complexity landscape for decidable fragments of ZOIQ, and reproves known results on decidable fragments of OWL2 (SR family). Using the same technique, we establish coNEXPTIME-completeness (w.r.t. the combined complexity) of the entailment problem of rooted queries in ZIQ.</description>
      <guid isPermaLink="false">oai:arXiv.org:2406.07095v1</guid>
      <category>cs.LO</category>
      <category>cs.AI</category>
      <category>cs.CC</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Bartosz Bednarczyk</dc:creator>
    </item>
    <item>
      <title>The Semantics of Effects: Centrality, Quantum Control and Reversible Recursion</title>
      <link>https://arxiv.org/abs/2406.07216</link>
      <description>arXiv:2406.07216v1 Announce Type: new 
Abstract: This thesis revolves around an area of computer science called "semantics". We work with operational semantics, equational theories, and denotational semantics.
  The first contribution of this thesis is a study of the commutativity of effects through the prism of monads. Monads are the generalisation of algebraic structures such as monoids, which have a notion of centre: the centre of a monoid is made of elements which commute with all others. We provide the necessary and sufficient conditions for a monad to have a centre. We also detail the semantics of a language with effects that carry information on which effects are central. Moreover, we provide a strong link between its equational theories and its denotational semantics.
  The second focus of the thesis is quantum computing, seen as a reversible effect. Physically permissible quantum operations are all reversible, except measurement; however, measurement can be deferred at the end of the computation, allowing us to focus on the reversible part first. We define a simply-typed reversible programming language performing quantum operations called "unitaries". A denotational semantics and an equational theory adapted to the language are presented, and we prove that the former is complete.
  Furthermore, we study recursion in reversible programming, providing adequate operational and denotational semantics to a Turing-complete, reversible, functional programming language. The denotational semantics uses the dcpo enrichment of rig join inverse categories. This mathematical account of higher-order reasoning on reversible computing does not directly generalise to its quantum counterpart. In the conclusion, we detail the limitations and possible future for higher-order quantum control through guarded recursion.</description>
      <guid isPermaLink="false">oai:arXiv.org:2406.07216v1</guid>
      <category>cs.LO</category>
      <category>cs.PL</category>
      <category>math.CT</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Louis Lemonnier</dc:creator>
    </item>
    <item>
      <title>Formally Verified Approximate Policy Iteration</title>
      <link>https://arxiv.org/abs/2406.07340</link>
      <description>arXiv:2406.07340v1 Announce Type: cross 
Abstract: We formally verify an algorithm for approximate policy iteration on Factored Markov Decision Processes using the interactive theorem prover Isabelle/HOL. Next, we show how the formalized algorithm can be refined to an executable, verified implementation. The implementation is evaluated on benchmark problems to show its practicability. As part of the refinement, we develop verified software to certify Linear Programming solutions. The algorithm builds on a diverse library of formalized mathematics and pushes existing methodologies for interactive theorem provers to the limits. We discuss the process of the verification project and the modifications to the algorithm needed for formal verification.</description>
      <guid isPermaLink="false">oai:arXiv.org:2406.07340v1</guid>
      <category>cs.AI</category>
      <category>cs.LO</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Maximilian Sch\"affeler, Mohammad Abdulaziz</dc:creator>
    </item>
    <item>
      <title>Guiding LLM Temporal Logic Generation with Explicit Separation of Data and Control</title>
      <link>https://arxiv.org/abs/2406.07400</link>
      <description>arXiv:2406.07400v1 Announce Type: cross 
Abstract: Temporal logics are powerful tools that are widely used for the synthesis and verification of reactive systems. The recent progress on Large Language Models (LLMs) has the potential to make the process of writing such specifications more accessible. However, writing specifications in temporal logics remains challenging for all but the most expert users. A key question in using LLMs for temporal logic specification engineering is to understand what kind of guidance is most helpful to the LLM and the users to easily produce specifications. Looking specifically at the problem of reactive program synthesis, we explore the impact of providing an LLM with guidance on the separation of control and data--making explicit for the LLM what functionality is relevant for the specification, and treating the remaining functionality as an implementation detail for a series of pre-defined functions and predicates. We present a benchmark set and find that this separation of concerns improves specification generation. Our benchmark provides a test set against which to verify future work in LLM generation of temporal logic specifications.</description>
      <guid isPermaLink="false">oai:arXiv.org:2406.07400v1</guid>
      <category>cs.LG</category>
      <category>cs.LO</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-sa/4.0/</dc:rights>
      <dc:creator>William Murphy, Nikolaus Holzer, Nathan Koenig, Leyi Cui, Raven Rothkopf, Feitong Qiao, Mark Santolucito</dc:creator>
    </item>
    <item>
      <title>Hardness of busy beaver value BB(15)</title>
      <link>https://arxiv.org/abs/2107.12475</link>
      <description>arXiv:2107.12475v2 Announce Type: replace 
Abstract: The busy beaver value BB(n) is the maximum number of steps made by any n-state, 2-symbol deterministic halting Turing machine starting on blank tape. The busy beaver function $n \mapsto \text{BB}(n)$ is uncomputable and, from below, only 4 of its values, BB(1) ... BB(4), are known to date. This leads one to ask: from above, what is the smallest BB value that encodes a major mathematical challenge? Knowing BB(4,888) has been shown by Yedidia and Aaronson [28] to be at least as hard as solving Goldbach's conjecture, with a subsequent improvement, as yet unpublished, to BB(27) [4,1]. We prove that knowing BB(15) is at least as hard as solving the following Collatz-related conjecture by Erd\H{o}s, open since 1979 [9]: for all n &gt; 8 there is at least one digit 2 in the base 3 representation of $2^n$. We do so by constructing an explicit 15-state, 2-symbol Turing machine that halts if and only if the conjecture is false. This 2-symbol Turing machine simulates a conceptually simpler 5-state, 4-symbol machine which we construct first. This makes, to date, BB(15) the smallest busy beaver value that is related to a natural open problem in mathematics, bringing to light one of the many challenges underlying the quest of knowing busy beaver values.</description>
      <guid isPermaLink="false">oai:arXiv.org:2107.12475v2</guid>
      <category>cs.LO</category>
      <category>cs.DM</category>
      <category>math.LO</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Tristan St\'erin, Damien Woods</dc:creator>
    </item>
    <item>
      <title>Branch-Well-Structured Transition Systems and Extensions</title>
      <link>https://arxiv.org/abs/2211.15913</link>
      <description>arXiv:2211.15913v4 Announce Type: replace 
Abstract: We propose a relaxation to the definition of well-structured transition systems (\WSTS) while retaining the decidability of boundedness and non-termination. In this class, the well-quasi-ordered (wqo) condition is relaxed such that it is applicable only between states that are reachable one from another. Furthermore, the monotony condition is relaxed in the same way. While this retains the decidability of non-termination and boundedness, it appears that the coverability problem is undecidable. To this end, we define a new notion of monotony, called cover-monotony, which is strictly more general than the usual monotony and still allows us to decide a restricted form of the coverability problem.</description>
      <guid isPermaLink="false">oai:arXiv.org:2211.15913v4</guid>
      <category>cs.LO</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Benedikt Bollig, Alain Finkel, Amrita Suresh</dc:creator>
    </item>
    <item>
      <title>Effectful Semantics in Bicategories: Strong, Commutative, and Concurrent Pseudomonads</title>
      <link>https://arxiv.org/abs/2304.11014</link>
      <description>arXiv:2304.11014v3 Announce Type: replace 
Abstract: We develop the theory of strong and commutative monads in the 2-dimensional setting of bicategories. This provides a framework for the analysis of effects in many recent models which form bicategories and not categories, such as those based on profunctors, spans, or strategies over games.
  We then show how the 2-dimensional setting provides new insights into the semantics of concurrent functional programs. We introduce concurrent pseudomonads, which capture the fundamental weak interchange law connecting parallel composition and sequential composition. This notion brings to light an intermediate level, strictly between strength and commutativity, which is invisible in traditional categorical models. We illustrate the concept with the continuation pseudomonad in concurrent game semantics.
  In developing this theory, we take care to understand the coherence laws governing the structural 2-cells. We give many examples and prove a number of practical and foundational results.</description>
      <guid isPermaLink="false">oai:arXiv.org:2304.11014v3</guid>
      <category>cs.LO</category>
      <category>math.CT</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Hugo Paquet, Philip Saville</dc:creator>
    </item>
    <item>
      <title>Robust non-computability of dynamical systems and computability of robust dynamical systems</title>
      <link>https://arxiv.org/abs/2305.14448</link>
      <description>arXiv:2305.14448v3 Announce Type: replace-cross 
Abstract: In this paper, we examine the relationship between the stability of the dynamical system $x^{\prime}=f(x)$ and the computability of its basins of attraction. We present a computable $C^{\infty}$ system $x^{\prime}=f(x)$ that possesses a computable and stable equilibrium point, yet whose basin of attraction is robustly non-computable in a neighborhood of $f$ in the sense that both the equilibrium point and the non-computability of its associated basin of attraction persist when $f$ is slightly perturbed. This indicates that local stability near a stable equilibrium point alone is insufficient to guarantee the computability of its basin of attraction. However, we also demonstrate that the basins of attraction associated with a structurally stable - globally stable (robust) - planar system defined on a compact set are computable. Our findings suggest that the global stability of a system and the compactness of the domain play a pivotal role in determining the computability of its basins of attraction.</description>
      <guid isPermaLink="false">oai:arXiv.org:2305.14448v3</guid>
      <category>math.LO</category>
      <category>cs.LO</category>
      <category>math.DS</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Daniel S. Gra\c{c}a, Ning Zhong</dc:creator>
    </item>
    <item>
      <title>clauseSMT: A NLSAT-Based Clause-Level Framework for Satisfiability Modulo Nonlinear Real Arithmetic Theory</title>
      <link>https://arxiv.org/abs/2406.02122</link>
      <description>arXiv:2406.02122v3 Announce Type: replace-cross 
Abstract: Model-constructing satisfiability calculus (MCSAT) framework has been applied to SMT problems on different arithmetic theories. NLSAT, an implementation using cylindrical algebraic decomposition for explanation, is especially competitive among nonlinear real arithmetic constraints. However, current Conflict-Driven Clause Learning (CDCL)-style algorithms only consider literal information for decision, and thus ignore clause-level influence on arithmetic variables. As a consequence, NLSAT encounters unnecessary conflicts caused by improper literal decisions.
  In this work, we analyze the literal decision caused conflicts, and introduce clause-level information with a direct effect on arithmetic variables. Two main algorithm improvements are presented: clause-level feasible-set based look-ahead mechanism and arithmetic propagation based branching heuristic. We implement our solver named clauseSMT on our dynamic variable ordering framework. Experiments show that clauseSMT is competitive on nonlinear real arithmetic theory against existing SMT solvers (cvc5, Z3, Yices2), and outperforms all these solvers on satisfiable instances of SMT(QF_NRA) in SMT-LIB. The effectiveness of our proposed methods are also studied.</description>
      <guid isPermaLink="false">oai:arXiv.org:2406.02122v3</guid>
      <category>cs.SC</category>
      <category>cs.LO</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Zhonghan Wang</dc:creator>
    </item>
  </channel>
</rss>
