<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.DM updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.DM</link>
    <description>cs.DM updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.DM" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Fri, 14 Jun 2024 04:00:28 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Fri, 14 Jun 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>A Sublinear Algorithm for Approximate Shortest Paths in Large Networks</title>
      <link>https://arxiv.org/abs/2406.08624</link>
      <description>arXiv:2406.08624v1 Announce Type: cross 
Abstract: Computing distances and finding shortest paths in massive real-world networks is a fundamental algorithmic task in network analysis. There are two main approaches to solving this task. On one hand are traversal-based algorithms like bidirectional breadth-first search (BiBFS) with no preprocessing step and slow individual distance inquiries. On the other hand are indexing-based approaches, which maintain a large index. This allows for answering individual inquiries very fast; however, index creation is prohibitively expensive. We seek to bridge these two extremes: quickly answer distance inquiries without the need for costly preprocessing.
  In this work, we propose a new algorithm and data structure, WormHole, for approximate shortest path computations. WormHole leverages structural properties of social networks to build a sublinearly sized index, drawing upon the explicit core-periphery decomposition of Ben-Eliezer et al. Empirically, the preprocessing time of WormHole improves upon index-based solutions by orders of magnitude, and individual inquiries are consistently much faster than in BiBFS. The acceleration comes at the cost of a minor accuracy trade-off. Nonetheless, our empirical evidence demonstrates that WormHole accurately answers essentially all inquiries within a maximum additive error of 2. We complement these empirical results with provable theoretical guarantees, showing that WormHole requires $n^{o(1)}$ node queries per distance inquiry in random power-law networks. In contrast, any approach without a preprocessing step requires $n^{\Omega(1)}$ queries for the same task.
  WormHole does not require reading the whole graph. Unlike the vast majority of index-based algorithms, it returns paths, not just distances. For faster inquiry times, it can be combined effectively with other index-based solutions, by running them only on the sublinear core.</description>
      <guid isPermaLink="false">oai:arXiv.org:2406.08624v1</guid>
      <category>cs.DS</category>
      <category>cs.DM</category>
      <category>cs.SI</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Sabyasachi Basu, Nadia K\=oshima, Talya Eden, Omri Ben-Eliezer, C. Seshadhri</dc:creator>
    </item>
    <item>
      <title>The reflection complexity of sequences over finite alphabets</title>
      <link>https://arxiv.org/abs/2406.09302</link>
      <description>arXiv:2406.09302v1 Announce Type: cross 
Abstract: In combinatorics on words, the well-studied factor complexity function $\rho_{\bf x}$ of a sequence ${\bf x}$ over a finite alphabet counts, for any nonnegative integer $n$, the number of distinct length-$n$ factors of ${\bf x}$. In this paper, we introduce the \emph{reflection complexity} function $r_{\bf x}$ to enumerate the factors occurring in a sequence ${\bf x}$, up to reversing the order of symbols in a word. We introduce and prove results on $r_{\bf x}$ regarding its growth properties and relationship with other complexity functions. We prove that if ${\bf x}$ is $k$-automatic, then $r_{\bf x}$ is computably $k$-regular, and we use the software {\tt Walnut} to evaluate the reflection complexity of automatic sequences, such as the Thue--Morse sequence. We prove a Morse--Hedlund-type result characterizing eventually periodic sequences in terms of their reflection complexity, and we deduce a characterization of Sturmian sequences. Furthermore, we investigate the reflection complexity of episturmian, $(s+1)$-dimensional billiard, and Rote sequences. There are still many unanswered questions about this measure.</description>
      <guid isPermaLink="false">oai:arXiv.org:2406.09302v1</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <category>cs.FL</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Jean-Paul Allouche, John M. Campbell, Jeffrey Shallit, Manon Stipulanti</dc:creator>
    </item>
    <item>
      <title>On the Expressibility of the Reconstructional Color Refinement</title>
      <link>https://arxiv.org/abs/2406.09351</link>
      <description>arXiv:2406.09351v1 Announce Type: cross 
Abstract: One of the most basic facts related to the famous Ulam reconstruction conjecture is that the connectedness of a graph can be determined by the deck of its vertex-deleted subgraphs, which are considered up to isomorphism. We strengthen this result by proving that connectedness can still be determined when the subgraphs in the deck are given up to equivalence under the color refinement isomorphism test. Consequently, this implies that connectedness is recognizable by Reconstruction Graph Neural Networks, a recently introduced GNN architecture inspired by the reconstruction conjecture (Cotta, Morris, Ribeiro 2021).</description>
      <guid isPermaLink="false">oai:arXiv.org:2406.09351v1</guid>
      <category>cs.CC</category>
      <category>cs.DM</category>
      <category>cs.LG</category>
      <category>math.CO</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>V. Arvind, Johannes K\"obler, Oleg Verbitsky</dc:creator>
    </item>
    <item>
      <title>A greedy heuristic for graph burning</title>
      <link>https://arxiv.org/abs/2401.07577</link>
      <description>arXiv:2401.07577v2 Announce Type: replace 
Abstract: Given a graph $G$, the optimization version of the graph burning problem seeks for a sequence of vertices, $(u_1,u_2,...,u_k) \in V(G)^k$, with minimum $k$ and such that every $v \in V(G)$ has distance at most $k-i$ to some vertex $u_i$. The length $k$ of the optimal solution is known as the burning number and is denoted by $b(G)$, an invariant that helps quantify the graph's vulnerability to contagion. This paper explores the advantages and limitations of an $\mathcal{O}(mn + kn^2)$ deterministic greedy heuristic for this problem, where $n$ is the graph's order, $m$ is the graph's size, and $k$ is a guess on $b(G)$. This heuristic is based on the relationship between the graph burning problem and the clustered maximum coverage problem, and despite having limitations on paths and cycles, it found most of the optimal and best-known solutions of benchmark and synthetic graphs with up to 102400 vertices.</description>
      <guid isPermaLink="false">oai:arXiv.org:2401.07577v2</guid>
      <category>cs.DM</category>
      <category>math.CO</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <dc:creator>Jes\'us Garc\'ia-D\'iaz, Jos\'e Alejandro Cornejo-Acosta</dc:creator>
    </item>
    <item>
      <title>Projective tilings and full-rank perfect codes</title>
      <link>https://arxiv.org/abs/2207.00105</link>
      <description>arXiv:2207.00105v2 Announce Type: replace-cross 
Abstract: A tiling of a vector space $S$ is the pair $(U,V)$ of its subsets such that every vector in $S$ is uniquely represented as the sum of a vector from $U$ and a vector from $V$. A tiling is connected to a perfect codes if one of the sets, say $U$, is projective, i.e., the union of one-dimensional subspaces of $S$. A tiling $(U,V)$ is full-rank if the affine span of each of $U$, $V$ is $S$. For finite non-binary vector spaces of dimension at least $6$ (at least $10$), we construct full-rank tilings $(U,V)$ with projective $U$ (both $U$ and $V$, respectively). In particular, that construction gives a full-rank ternary $1$-perfect code of length $13$, solving a known problem. We also discuss the treatment of tilings with projective components as factorizations of projective spaces.
  Keywords: perfect codes, tilings, group factorization, full-rank tilings, projective geometry</description>
      <guid isPermaLink="false">oai:arXiv.org:2207.00105v2</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <arxiv:DOI>10.1007/s10623-023-01256-y</arxiv:DOI>
      <arxiv:journal_reference>Des. Codes Cryptogr. 91(10) 2023, 3293-3303</arxiv:journal_reference>
      <dc:creator>Denis S. Krotov</dc:creator>
    </item>
    <item>
      <title>An upper bound on the number of frequency hypercubes</title>
      <link>https://arxiv.org/abs/2212.03694</link>
      <description>arXiv:2212.03694v3 Announce Type: replace-cross 
Abstract: A frequency $n$-cube $F^n(q;l_0,...,l_{m-1})$ is an $n$-dimensional $q$-by-...-by-$q$ array, where $q = l_0+...+l_{m-1}$, filled by numbers $0,...,m-1$ with the property that each line contains exactly $l_i$ cells with symbol $i$, $i = 0,...,m-1$ (a line consists of $q$ cells of the array differing in one coordinate). The trivial upper bound on the number of frequency $n$-cubes is $m^{(q-1)^{n}}$. We improve that lower bound for $n&gt;2$, replacing $q-1$ by a smaller value, by constructing a testing set of size $s^{n}$, $s&lt;q-1$, for frequency $n$-cubes (a testing sets is a collection of cells of an array the values in which uniquely determine the array with given parameters). We also construct new testing sets for generalized frequency $n$-cubes, which are essentially correlation-immune functions in $n$ $q$-valued arguments; the cardinalities of new testing sets are smaller than for testing sets known before.
  Keywords: frequency hypercube, correlation-immune function, latin hypercube, testing set.</description>
      <guid isPermaLink="false">oai:arXiv.org:2212.03694v3</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <arxiv:DOI>10.1016/j.disc.2023.113657</arxiv:DOI>
      <arxiv:journal_reference>Discrete Math. 347(1) 2024, 113657(1-9)</arxiv:journal_reference>
      <dc:creator>Denis S. Krotov (Sobolev Institute of Mathematics), Vladimir N. Potapov (Sobolev Institute of Mathematics)</dc:creator>
    </item>
    <item>
      <title>The classification of orthogonal arrays OA(2048,14,2,7) and some completely regular codes</title>
      <link>https://arxiv.org/abs/2311.05428</link>
      <description>arXiv:2311.05428v3 Announce Type: replace-cross 
Abstract: We describe the classification of orthogonal arrays OA$(2048,14,2,7)$, or, equivalently, completely regular $\{14;2\}$-codes in the $14$-cube ($30848$ equivalence classes). In particular, we find that there is exactly one almost-OA$(2048,14,2,7{+}1)$, up to equivalence. As derived objects, OA$(1024,13,2,6)$ ($202917$ classes) and completely regular $\{12,2;2,12\}$- and $\{14, 12, 2; 2, 12, 14\}$-codes in the $13$- and $14$-cubes, respectively, are also classified.
  Keywords: binary orthogonal array, completely regular code, binary 1-perfect code.</description>
      <guid isPermaLink="false">oai:arXiv.org:2311.05428v3</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <arxiv:DOI>10.1016/j.disc.2024.113923</arxiv:DOI>
      <arxiv:journal_reference>Discrete Math. 347(5) 2024, 113923(1-8)</arxiv:journal_reference>
      <dc:creator>Denis S. Krotov</dc:creator>
    </item>
    <item>
      <title>The $k$-Opt algorithm for the Traveling Salesman Problem has exponential running time for $k \ge 5$</title>
      <link>https://arxiv.org/abs/2402.07061</link>
      <description>arXiv:2402.07061v2 Announce Type: replace-cross 
Abstract: The $k$-Opt algorithm is a local search algorithm for the Traveling Salesman Problem. Starting with an initial tour, it iteratively replaces at most $k$ edges in the tour with the same number of edges to obtain a better tour. Krentel (FOCS 1989) showed that the Traveling Salesman Problem with the $k$-Opt neighborhood is complete for the class PLS (polynomial time local search) and that the $k$-Opt algorithm can have exponential running time for any pivot rule. However, his proof requires $k \gg 1000$ and has a substantial gap. We show the two properties above for a much smaller value of $k$, addressing an open question by Monien, Dumrauf, and Tscheuschner (ICALP 2010). In particular, we prove the PLS-completeness for $k \geq 17$ and the exponential running time for $k \geq 5$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2402.07061v2</guid>
      <category>cs.DS</category>
      <category>cs.DM</category>
      <category>math.CO</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <dc:creator>Sophia Heimann, Hung P. Hoang, Stefan Hougardy</dc:creator>
    </item>
    <item>
      <title>Relations between monotone complexity measures based on decision tree complexity</title>
      <link>https://arxiv.org/abs/2406.07859</link>
      <description>arXiv:2406.07859v2 Announce Type: replace-cross 
Abstract: In a recent result, Knop, Lovett, McGuire and Yuan (STOC 2021) proved the log-rank conjecture for communication complexity, up to log n factor, for any Boolean function composed with AND function as the inner gadget. One of the main tools in this result was the relationship between monotone analogues of well-studied Boolean complexity measures like block sensitivity and certificate complexity. The relationship between the standard measures has been a long line of research, with a landmark result by Huang (Annals of Mathematics 2019), finally showing that sensitivity is polynomially related to all other standard measures. In this article, we study the monotone analogues of standard measures like block sensitivity (mbs(f)), certificate complexity (MCC(f)) and fractional block sensitivity (fmbs(f)); and study the relationship between these measures given their connection with AND-decision tree and sparsity of a Boolean function. We show the following results: 1) Given a Boolean function $f : \{0, 1\}^{n} \rightarrow \{0, 1\}$, the ratio $fmbs(f^l )/mbs(f^l )$ is bounded by a function of n (and not l). A similar result was known for the corresponding standard measures (Tal, ITCS 2013). This result allows us to extend any upper bound by a well behaved measure on monotone block sensitivity to monotone fractional block sensitivity. 2) The question of the best possible upper bound on monotone block sensitivity by the logarithm of sparsity is equivalent to the natural question of best upper bound by degree on sensitivity. One side of this relationship was used in the proof by Knop, Lovett, McGuire and Yuan (STOC 2021). 3) For two natural classes of functions, symmetric and monotone, hitting set complexity (MCC) is equal to monotone sensitivity.</description>
      <guid isPermaLink="false">oai:arXiv.org:2406.07859v2</guid>
      <category>cs.CC</category>
      <category>cs.DM</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Farzan Byramji, Vatsal Jha, Chandrima Kayal, Rajat Mittal</dc:creator>
    </item>
  </channel>
</rss>
