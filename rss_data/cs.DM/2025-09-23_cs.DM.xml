<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.DM updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.DM</link>
    <description>cs.DM updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.DM" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Tue, 23 Sep 2025 04:04:20 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Tue, 23 Sep 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Computation of Graph Polynomials via Tree Decomposition: Theory, Algorithms, and Python Implementation</title>
      <link>https://arxiv.org/abs/2509.16816</link>
      <description>arXiv:2509.16816v1 Announce Type: new 
Abstract: Graph polynomials encode fundamental combinatorial invariants of graphs. Their computation is investigated using tree and path decomposition frameworks, with formal definitions of treewidth, k-trees, and pathwidth establishing the structural basis for algorithmic efficiency. Explicit algorithms are constructed for each polynomial, leveraging decomposition order and state transformation mappings to enable tractable computation on graphs of bounded treewidth. Python implementations validate the methods, and computational complexity is analyzed with respect to sparse and k-degenerate graph classes. These results advance decomposition-based approaches for polynomial computation in algebraic graph theory.</description>
      <guid isPermaLink="false">oai:arXiv.org:2509.16816v1</guid>
      <category>cs.DM</category>
      <category>math.CO</category>
      <pubDate>Tue, 23 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Mehul Bafna, Shaghik Amirian</dc:creator>
    </item>
    <item>
      <title>Circular-arc H-graphs: Ordering Characterizations and Forbidden Patterns</title>
      <link>https://arxiv.org/abs/2509.18021</link>
      <description>arXiv:2509.18021v1 Announce Type: new 
Abstract: We introduce the class of circular-arc H-graphs, which generalizes circular-arc graphs, particularly circular-arc bigraphs. We investigate two types of ordering-based characterizations of circular-arc r-graphs. Finally, we provide forbidden patterns for circular-arc r-graphs in terms of specific vertex orderings.</description>
      <guid isPermaLink="false">oai:arXiv.org:2509.18021v1</guid>
      <category>cs.DM</category>
      <category>math.CO</category>
      <pubDate>Tue, 23 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Indrajit Paul, Ashok Kumar Das</dc:creator>
    </item>
    <item>
      <title>Vanishing of Schubert coefficients in probabilistic polynomial time</title>
      <link>https://arxiv.org/abs/2509.16467</link>
      <description>arXiv:2509.16467v1 Announce Type: cross 
Abstract: The Schubert vanishing problem asks whether Schubert structure constants are zero. We give a complete solution of the problem from an algorithmic point of view, by showing that Schubert vanishing can be decided in probabilistic polynomial time.</description>
      <guid isPermaLink="false">oai:arXiv.org:2509.16467v1</guid>
      <category>math.CO</category>
      <category>cs.CC</category>
      <category>cs.DM</category>
      <category>math.AG</category>
      <pubDate>Tue, 23 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Igor Pak, Colleen Robichaux</dc:creator>
    </item>
    <item>
      <title>Discrepancy And Fair Division For Non-Additive Valuations</title>
      <link>https://arxiv.org/abs/2509.16802</link>
      <description>arXiv:2509.16802v1 Announce Type: cross 
Abstract: We extend the notion of combinatorial discrepancy to \emph{non-additive} functions. Our main result is an upper bound of $O(\sqrt{n \log(nk)})$ on the non-additive $k$-color discrepancy when $k$ is a prime power. We demonstrate two applications of this result to problems in fair division. First, we establish a bound for a consensus halving problem, where fairness is measured by the minimum number of items that must be transferred between the two parts to eliminate envy. Second, we improve the upper bound on the total subsidy required to achieve an envy-free allocation when the number of agents is a prime power, obtaining an $O(n \sqrt{n \log n})$ bound. This constitutes the first known subquadratic guarantee in this setting.</description>
      <guid isPermaLink="false">oai:arXiv.org:2509.16802v1</guid>
      <category>cs.GT</category>
      <category>cs.DM</category>
      <pubDate>Tue, 23 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Max Dupre la Tour, Kaito Fujii</dc:creator>
    </item>
    <item>
      <title>Eccentric Connectivity Index of Strongly Connected Digraphs</title>
      <link>https://arxiv.org/abs/2509.17019</link>
      <description>arXiv:2509.17019v1 Announce Type: cross 
Abstract: Let $G = (V, E)$ be a graph with non-empty set of vertices $V$ and set of edges $E$. The \emph{eccentric connectivity index} of the graph $G$ is defined as $$\displaystyle{\xi^C(G) = \sum_{u \in V} d_u \;ecc(u)}$$ where $d_u$ is the degree and $ecc(u)$ is the eccentricity of the vertex $u \in V$. This article is an attempt to find the \emph{eccentric connectivity index} of strongly connected digraph $D$ with respect to the metric, \textit{maximum distance} defined by $md(u,v)=\max\{\vec{d}(u,v),\vec{d}(v,u)\}$. An attempt is also made to find the extremal values for strongly connected digraphs.</description>
      <guid isPermaLink="false">oai:arXiv.org:2509.17019v1</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <pubDate>Tue, 23 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <dc:creator>Vysakh Chakooth, Prasanth G. Narasimha-Shenoi, Prakash G. Narasimha-Shenoi</dc:creator>
    </item>
    <item>
      <title>Distance Approximating Minors for Planar and Minor-Free Graphs</title>
      <link>https://arxiv.org/abs/2509.17226</link>
      <description>arXiv:2509.17226v1 Announce Type: cross 
Abstract: Given an edge-weighted graph $G$ and a subset of vertices $T$ called terminals, an $\alpha$-distance-approximating minor ($\alpha$-DAM) of $G$ is a graph minor $H$ of $G$ that contains all terminals, such that the distance between every pair of terminals is preserved up to a factor of $\alpha$. Distance-approximating minor would be an effective distance-sketching structure on minor-closed family of graphs; in the constant-stretch regime it generalizes the well-known Steiner Point Removal problem by allowing the existence of (a small number of) non-terminal vertices. Unfortunately, in the $(1+\varepsilon)$ regime the only known DAM construction for planar graphs relies on overlaying $\tilde{O}_\varepsilon(|T|)$ shortest paths in $G$, which naturally leads to a quadratic bound in the number of terminals [Cheung, Goranci, and Henzinger, ICALP 2016].
  We break the quadratic barrier and build the first $(1+\varepsilon)$-distance-approximating minor for $k$-terminal planar graphs and minor-free graphs of near-linear size $\tilde{O}_\varepsilon(k)$. In addition to the near-optimality in size, the construction relies only on the existence of shortest-path separators [Abraham and Gavoille, PODC 2006] and $\varepsilon$-covers [Thorup, J.\ ACM 2004]. Consequently, this provides an alternative and simpler construction to the near-linear-size emulator for planar graphs [Chang, Krauthgamer, and Tan, STOC 2022], as well as the first near-linear-size emulator for minor-free graphs. Our DAM can be constructed in near-linear time.</description>
      <guid isPermaLink="false">oai:arXiv.org:2509.17226v1</guid>
      <category>cs.DS</category>
      <category>cs.CG</category>
      <category>cs.DM</category>
      <pubDate>Tue, 23 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-sa/4.0/</dc:rights>
      <dc:creator>Hsien-Chih Chang, Jonathan Conroy</dc:creator>
    </item>
    <item>
      <title>Distribution Testing in the Presence of Arbitrarily Dominant Noise with Verification Queries</title>
      <link>https://arxiv.org/abs/2509.17269</link>
      <description>arXiv:2509.17269v1 Announce Type: cross 
Abstract: We study distribution testing without direct access to a source of relevant data, but rather to one where only a tiny fraction is relevant. To enable this, we introduce the following verification query model. The goal is to perform a statistical task on distribution $\boldsymbol{p}$ given sample access to a mixture $\boldsymbol{r} = \lambda \boldsymbol{p} + (1-\lambda)\boldsymbol{q}$ and the ability to query whether a sample was generated by $\boldsymbol{p}$ or by $\boldsymbol{q}$. In general, if $m_0$ samples from $\boldsymbol{p}$ suffice for a task, then $O(m_0/\lambda)$ samples and queries always suffice in our model. Are there tasks for which the number of queries can be significantly reduced?
  We study the canonical problems in distribution testing, and obtain matching upper and lower bounds that reveal smooth trade-offs between sample and query complexity. For all $m \leq n$, we obtain (i) a uniformity and identity tester using $O(m + \frac{\sqrt{n}}{\varepsilon^2 \lambda})$ samples and $O(\frac{n}{m \varepsilon^4 \lambda^2})$ queries, and (ii) a closeness tester using $O(m + \frac{n^{2/3}}{\varepsilon^{4/3} \lambda} + \frac{1}{\varepsilon^4 \lambda^3})$ samples and $O(\frac{n^2}{m^2 \varepsilon^4 \lambda^3})$ queries. Moreover, we show that these query complexities are tight for all testers using $m \ll n$ samples.
  Next, we show that for testing closeness using $m = \widetilde{O}(\frac{n}{\varepsilon^2\lambda})$ samples we can achieve query complexity $\widetilde{O}(\frac{1}{\varepsilon^2\lambda})$ which is nearly optimal even for the basic task of bias estimation with unbounded samples. Our uniformity testers work in the more challenging setting where the contaminated samples are generated by an adaptive adversary (at the cost of a $\log n$ factor). Finally, we show that our lower bounds can be circumvented if the algorithm is provided with the PDF of the mixture.</description>
      <guid isPermaLink="false">oai:arXiv.org:2509.17269v1</guid>
      <category>cs.DS</category>
      <category>cs.DM</category>
      <pubDate>Tue, 23 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Hadley Black, Christopher Ye</dc:creator>
    </item>
    <item>
      <title>Generalized DP-colorings of digraphs</title>
      <link>https://arxiv.org/abs/2509.17471</link>
      <description>arXiv:2509.17471v1 Announce Type: cross 
Abstract: In this paper we consider the following three coloring concepts for digraphs. First of all, the generalized coloring concept, in which the same colored vertices of a digraph induce a subdigraph that satisfies a given digraph property. Second, the concept of variable degeneracy, introduced for graphs by Borodin, Kostochka and Toft in 2000; this allows to give a common generalization of the point partition number and the list dichromatic number. Finally, the DP-coloring concept as introduced for graphs by Dvo\v{r}\'ak and Postle in 2018, in which a list assignment of a graph is replaced by a cover. Combining these three coloring concepts leads to generalizations of several classical coloring results for graphs and digraphs, including the theorems of Brooks, of Gallai, of Erd\H{o}s, Rubin, and Taylor, and of Bernshteyn, Kostochka, and Pron for graphs, and the corresponding theorems for digraphs due to Harutyunyan and Mohar. Our main result combines the DP-coloring and variable degeneracy concepts for digraphs.</description>
      <guid isPermaLink="false">oai:arXiv.org:2509.17471v1</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <pubDate>Tue, 23 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <dc:creator>Lucas Picasarri-Arrieta, Michael Stiebitz</dc:creator>
    </item>
    <item>
      <title>Planar induced paths via a decomposition into non-crossing ordered graphs</title>
      <link>https://arxiv.org/abs/2509.17835</link>
      <description>arXiv:2509.17835v1 Announce Type: cross 
Abstract: In any graph, the maximum size of an induced path is bounded by the maximum size of a path. However, in the general case, one cannot find a converse bound, even up to an arbitrary function, as evidenced by the case of cliques. Galvin, Rival and Sands proved in 1982 that, when restricted to weakly sparse graphs, such a converse property actually holds.
  In this paper, we consider the maximal function $f$ such that any planar graph (and in general, any graph of bounded genus) containing a path on $n$ vertices contains an induced path of size $f(n)$, and prove that $f(n) \in \Theta \left(\frac{\log n}{\log \log n}\right)$ by providing a lower bound matching the upper bound obtained by Esperet, Lemoine and Maffray, up to a constant factor. We obtain these tight bounds by analyzing graphs ordered along a Hamiltonian path that admit an edge partition into a bounded number of sets without crossing edges. In particular, we prove that when such an ordered graph can be partitioned into $2k$ sets of non-crossing edges, then it contains an induced path of size $\Omega_k\left(\left(\frac{\log n}{\log \log n}\right)^{1/k} \right)$ and provide almost matching upper bounds.</description>
      <guid isPermaLink="false">oai:arXiv.org:2509.17835v1</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <pubDate>Tue, 23 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Julien Duron, Hugo Jacob</dc:creator>
    </item>
    <item>
      <title>Minimizing an Uncrossed Collection of Drawings</title>
      <link>https://arxiv.org/abs/2306.09550</link>
      <description>arXiv:2306.09550v3 Announce Type: replace-cross 
Abstract: In this paper, we introduce the following new concept in graph drawing. Our task is to find a small collection of drawings such that they all together satisfy some property that is useful for graph visualization. We propose investigating a property where each edge is not crossed in at least one drawing in the collection. We call such collection uncrossed. This property is motivated by a quintessential problem of the crossing number, where one asks for a drawing where the number of edge crossings is minimum. Indeed, if we are allowed to visualize only one drawing, then the one which minimizes the number of crossings is probably the neatest for the first orientation. However, a collection of drawings where each highlights a different aspect of a graph without any crossings could shed even more light on the graph's structure.
  We propose two definitions. First, the uncrossed number, minimizes the number of graph drawings in a collection, satisfying the uncrossed property. Second, the uncrossed crossing number, minimizes the total number of crossings in the collection that satisfy the uncrossed property. For both definitions, we establish initial results. We prove that the uncrossed crossing number is NP-hard, but there is an FPT algorithm parameterized by the solution size.</description>
      <guid isPermaLink="false">oai:arXiv.org:2306.09550v3</guid>
      <category>cs.CG</category>
      <category>cs.DM</category>
      <category>math.CO</category>
      <pubDate>Tue, 23 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:DOI>10.1007/978-3-031-49272-3_8</arxiv:DOI>
      <dc:creator>Petr Hlin\v{e}n\'y, Tom\'a\v{s} Masa\v{r}\'ik</dc:creator>
    </item>
    <item>
      <title>Local equivalence of stabilizer states: a graphical characterisation</title>
      <link>https://arxiv.org/abs/2409.20183</link>
      <description>arXiv:2409.20183v3 Announce Type: replace-cross 
Abstract: Stabilizer states form a ubiquitous family of quantum states that can be graphically represented through the graph state formalism. A fundamental property of graph states is that applying a local complementation - a well-known and extensively studied graph transformation - results in a graph that represents the same entanglement as the original. In other words, the corresponding graph states are LU-equivalent. This property served as the cornerstone for capturing non-trivial quantum properties in a simple graphical manner, in the study of quantum entanglement but also for developing protocols and models based on graph states and stabilizer states, such as measurement-based quantum computing, secret sharing, error correction, entanglement distribution... However, local complementation fails short to fully characterise entanglement: there exist pairs of graph states that are LU-equivalent but cannot be transformed one into the other using local complementations. Only few is known about the equivalence of graph states beyond local complementation. We introduce a generalisation of local complementation which graphically characterises the LU-equivalence of graph states. We use this characterisation to show the existence of a strict infinite hierarchy of equivalences of graph states. Our approach is based on minimal local sets, which are subsets of vertices that are known to cover any graph, and to be invariant under local complementation and even LU-equivalence. We use these structures to provide a type to each vertex of a graph, leading to a natural standard form in which the LU-equivalence can be exhibited and captured by means of generalised local complementation.</description>
      <guid isPermaLink="false">oai:arXiv.org:2409.20183v3</guid>
      <category>quant-ph</category>
      <category>cs.DM</category>
      <pubDate>Tue, 23 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:DOI>10.4230/LIPIcs.STACS.2025.27</arxiv:DOI>
      <arxiv:journal_reference>STACS 2025</arxiv:journal_reference>
      <dc:creator>Nathan Claudet, Simon Perdrix</dc:creator>
    </item>
    <item>
      <title>Neural Networks and (Virtual) Extended Formulations</title>
      <link>https://arxiv.org/abs/2411.03006</link>
      <description>arXiv:2411.03006v3 Announce Type: replace-cross 
Abstract: Neural networks with piecewise linear activation functions, such as rectified linear units (ReLU) or maxout, are among the most fundamental models in modern machine learning. We make a step towards proving lower bounds on the size of such neural networks by linking their representative capabilities to the notion of the extension complexity $\mathrm{xc}(P)$ of a polytope $P$. This is a well-studied quantity in combinatorial optimization and polyhedral geometry describing the number of inequalities needed to model $P$ as a linear program. We show that $\mathrm{xc}(P)$ is a lower bound on the size of any monotone or input-convex neural network that solves the linear optimization problem over $P$. This implies exponential lower bounds on such neural networks for a variety of problems, including the polynomially solvable maximum weight matching problem.
  In an attempt to prove similar bounds also for general neural networks, we introduce the notion of virtual extension complexity $\mathrm{vxc}(P)$, which generalizes $\mathrm{xc}(P)$ and describes the number of inequalities needed to represent the linear optimization problem over $P$ as a difference of two linear programs. We prove that $\mathrm{vxc}(P)$ is a lower bound on the size of any neural network that optimizes over $P$. While it remains an open question to derive useful lower bounds on $\mathrm{vxc}(P)$, we argue that this quantity deserves to be studied independently from neural networks by proving that one can efficiently optimize over a polytope $P$ using a small virtual extended formulation.</description>
      <guid isPermaLink="false">oai:arXiv.org:2411.03006v3</guid>
      <category>math.CO</category>
      <category>cs.CC</category>
      <category>cs.DM</category>
      <category>cs.LG</category>
      <category>math.OC</category>
      <pubDate>Tue, 23 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Christoph Hertrich, Georg Loho</dc:creator>
    </item>
    <item>
      <title>Deciding Local Unitary Equivalence of Graph States in Quasi-Polynomial Time</title>
      <link>https://arxiv.org/abs/2502.06566</link>
      <description>arXiv:2502.06566v3 Announce Type: replace-cross 
Abstract: We describe an algorithm with quasi-polynomial runtime $n^{\log_2(n)+O(1)}$ for deciding local unitary (LU) equivalence of graph states. The algorithm builds on a recent graphical characterisation of LU-equivalence via generalised local complementation. By first transforming the corresponding graphs into a standard form using usual local complementations, LU-equivalence reduces to the existence of a single generalised local complementation that maps one graph to the other. We crucially demonstrate that this reduces to solving a system of quasi-polynomially many linear equations, avoiding an exponential blow-up. As a byproduct, we generalise Bouchet's algorithm for deciding local Clifford (LC) equivalence of graph states by allowing the addition of arbitrary linear constraints. We also improve existing bounds on the size of graph states that are LU- but not LC-equivalent. While the smallest known examples involve 27 qubits, and it is established that no such examples exist for up to 8 qubits, we refine this bound by proving that LU- and LC-equivalence coincide for graph states involving up to 19 qubits.</description>
      <guid isPermaLink="false">oai:arXiv.org:2502.06566v3</guid>
      <category>quant-ph</category>
      <category>cs.DM</category>
      <pubDate>Tue, 23 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:DOI>10.4230/LIPIcs.ICALP.2025.59</arxiv:DOI>
      <arxiv:journal_reference>ICALP 2025</arxiv:journal_reference>
      <dc:creator>Nathan Claudet, Simon Perdrix</dc:creator>
    </item>
    <item>
      <title>Benford's Law from Turing Ensembles and Integer Partitions</title>
      <link>https://arxiv.org/abs/2502.16314</link>
      <description>arXiv:2502.16314v5 Announce Type: replace-cross 
Abstract: We develop two complementary generative mechanisms that explain when and why Benford's first-digit law arises. First, a probabilistic Turing machine (PTM) ensemble induces a geometric law for code length. Maximizing its entropy under a constraint on halting length yields Benford statistics. This model shows a phase transition with respect to the halt probability. Second, a constrained partition model (Einstein-solid combinatorics) recovers the same logarithmic profile as the maximum-entropy solution under a coarse-grained entropy-rate constraint, clarifying the role of non-ergodicity (ensemble vs. trajectory averages). We also perform numerical experiments that corroborate our conclusions.</description>
      <guid isPermaLink="false">oai:arXiv.org:2502.16314v5</guid>
      <category>cs.IT</category>
      <category>cs.CC</category>
      <category>cs.DM</category>
      <category>math-ph</category>
      <category>math.IT</category>
      <category>math.MP</category>
      <pubDate>Tue, 23 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Alexander Kolpakov, Aidan Rocke</dc:creator>
    </item>
    <item>
      <title>Solving General QUBOs with Warm-Start QAOA via a Reduction to Max-Cut</title>
      <link>https://arxiv.org/abs/2504.06253</link>
      <description>arXiv:2504.06253v2 Announce Type: replace-cross 
Abstract: The Quantum Approximate Optimization Algorithm (QAOA) is a quantum algorithm that finds approximate solutions to problems in combinatorial optimization, especially those that can be formulated as a Quadratic Unconstrained Binary Optimization (QUBO) problem. In prior work, researchers have considered various ways of "warm-starting" QAOA by constructing an initial quantum state using classically-obtained solutions or information; these warm-starts typically cause QAOA to yield better approximation ratios at much lower circuit depths. For the Max-Cut problem, one warm-start approaches constructs the initial state using the high-dimensional vectors that are output from an SDP relaxation of the corresponding Max-Cut problem. This work leverages these semidefinite warmstarts for a broader class of problem instances by using a standard reduction that transforms any QUBO instance into a Max-Cut instance. We empirically compare this approach to a "QUBO-relaxation" approach that relaxes the QUBO directly. Our results consider a variety of QUBO instances ranging from randomly generated QUBOs to QUBOs corresponding to specific problems such as the traveling salesman problem, maximum independent set, and portfolio optimization. We find that the best choice of warmstart approach is strongly dependent on the problem type.</description>
      <guid isPermaLink="false">oai:arXiv.org:2504.06253v2</guid>
      <category>quant-ph</category>
      <category>cs.DM</category>
      <category>math.OC</category>
      <pubDate>Tue, 23 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Bikrant Bhattacharyya, Michael Capriotti, Reuben Tate</dc:creator>
    </item>
    <item>
      <title>Parameterized complexity of isometric path partition: treewidth and diameter</title>
      <link>https://arxiv.org/abs/2508.05448</link>
      <description>arXiv:2508.05448v2 Announce Type: replace-cross 
Abstract: We investigate the parameterized complexity of the Isometric Path Partition problem when parameterized by the treewidth ($\mathrm{tw}$) of the input graph, arguably one of the most widely studied parameters. Courcelle's theorem shows that graph problems that are expressible as MSO formulas of constant size admit FPT algorithms parameterized by the treewidth of the input graph. This encompasses many natural graph problems. However, many metric-based graph problems, where the solution is defined using some metric-based property of the graph (often the distance) are not expressible as MSO formulas of constant size. These types of problems, Isometric Path Partition being one of them, require individual attention and often draw the boundary for the success story of parameterization by treewidth.
  We prove that Isometric Path Partition is $W[1]$-hard when parameterized by treewidth (in fact, even pathwidth), answering the question by Dumas et al. [SIDMA, 2024], Fernau et al. [CIAC, 2023], and confirming the aforementioned tendency. We complement this hardness result by designing a tailored dynamic programming algorithm running in $n^{O(\mathrm{tw})}$ time. This dynamic programming approach also results in an algorithm running in time $\textrm{diam}^{O(\mathrm{tw}^2)} \cdot n^{O(1)}$, where $\textrm{diam}$ is the diameter of the graph. Note that the dependency on treewidth is unusually high, as most problems admit algorithms running in time $2^{O(\mathrm{tw})}\cdot n^{O(1)}$ or $2^{O(\mathrm{tw} \log (\mathrm{tw}))}\cdot n^{O(1)}$. However, we rule out the possibility of a significantly faster algorithm by proving that Isometric Path Partition does not admit an algorithm running in time $\textrm{diam}^{o(\mathrm{tw}^2/(\log^3(\mathrm{tw})))} \cdot n^{O(1)}$, unless the Randomized-ETH fails.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.05448v2</guid>
      <category>cs.DS</category>
      <category>cs.DM</category>
      <category>math.CO</category>
      <pubDate>Tue, 23 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Dibyayan Chakraborty, Oscar Defrain, Florent Foucaud, Mathieu Mari, Prafullkumar Tale</dc:creator>
    </item>
    <item>
      <title>Max-Min and 1-Bounded Space Algorithms for the Bin Packing Problem</title>
      <link>https://arxiv.org/abs/2508.18718</link>
      <description>arXiv:2508.18718v3 Announce Type: replace-cross 
Abstract: In the (1-dimensional) bin packing problem, we are asked to pack all the given items into bins, each of capacity one, so that the number of non-empty bins is minimized. Zhu~[Chaos, Solitons \&amp; Fractals 2016] proposed an approximation algorithm $MM$ that sorts the item sequence in a non-increasing order by size at the beginning, and then repeatedly packs, into the current single open bin, first as many of the largest items in the remaining sequence as possible and then as many of the smallest items in the remaining sequence as possible. In this paper we prove that the asymptotic approximation ratio of $MM$ is at most 1.5. Next, focusing on the fact that $MM$ is at the intersection of two algorithm classes, max-min algorithms and 1-bounded space algorithms, we comprehensively analyze the theoretical performance bounds of each subclass derived from the two classes. Our results include a lower bound of 1.25 for the intersection of the two classes. Furthermore, we extend the theoretical analysis over algorithm classes to the cardinality constrained bin packing problem.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.18718v3</guid>
      <category>cs.DS</category>
      <category>cs.DM</category>
      <category>math.CO</category>
      <category>math.OC</category>
      <pubDate>Tue, 23 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Hiroshi Fujiwara, Rina Atsumi, Hiroaki Yamamoto</dc:creator>
    </item>
    <item>
      <title>HyP-ASO: A Hybrid Policy-based Adaptive Search Optimization Framework for Large-Scale Integer Linear Programs</title>
      <link>https://arxiv.org/abs/2509.15828</link>
      <description>arXiv:2509.15828v2 Announce Type: replace-cross 
Abstract: Directly solving large-scale Integer Linear Programs (ILPs) using traditional solvers is slow due to their NP-hard nature. While recent frameworks based on Large Neighborhood Search (LNS) can accelerate the solving process, their performance is often constrained by the difficulty in generating sufficiently effective neighborhoods. To address this challenge, we propose HyP-ASO, a hybrid policy-based adaptive search optimization framework that combines a customized formula with deep Reinforcement Learning (RL). The formula leverages feasible solutions to calculate the selection probabilities for each variable in the neighborhood generation process, and the RL policy network predicts the neighborhood size. Extensive experiments demonstrate that HyP-ASO significantly outperforms existing LNS-based approaches for large-scale ILPs. Additional experiments show it is lightweight and highly scalable, making it well-suited for solving large-scale ILPs.</description>
      <guid isPermaLink="false">oai:arXiv.org:2509.15828v2</guid>
      <category>cs.LG</category>
      <category>cs.DM</category>
      <pubDate>Tue, 23 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Ning Xu, Junkai Zhang, Yang Wu, Huigen Ye, Hua Xu, Huiling Xu, Yifan Zhang</dc:creator>
    </item>
  </channel>
</rss>
