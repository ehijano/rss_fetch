<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.CG updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.CG</link>
    <description>cs.CG updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.CG" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Wed, 04 Dec 2024 05:00:13 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Wed, 04 Dec 2024 00:00:00 -0500</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>All Polyhedral Manifolds are Connected by a 2-Step Refolding</title>
      <link>https://arxiv.org/abs/2412.02174</link>
      <description>arXiv:2412.02174v1 Announce Type: new 
Abstract: We prove that, for any two polyhedral manifolds P, Q, there is a polyhedral manifold I such that P, I share a common unfolding and I, Q share a common unfolding. In other words, we can unfold P, refold (glue) that unfolding into I, unfold I, and then refold into Q. Furthermore, if P, Q are embedded in 3D, then I can be embedded in 3D (without self-intersection). These results generalize to n given manifolds P_1, P_2, ..., P_n; they all have a common unfolding with an intermediate manifold I. Allowing more than two unfold/refold steps, we obtain stronger results for two special cases: for doubly covered convex planar polygons, we achieve that all intermediate polyhedra are planar; and for tree-shaped polycubes, we achieve that all intermediate polyhedra are tree-shaped polycubes.</description>
      <guid isPermaLink="false">oai:arXiv.org:2412.02174v1</guid>
      <category>cs.CG</category>
      <pubDate>Wed, 04 Dec 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Lily Chung, Erik D. Demaine, Jenny Diomidova, Tonan Kamata, Jayson Lynch, Ryuhei Uehara, Hanyu Alice Zhang</dc:creator>
    </item>
    <item>
      <title>Simple Construction of Greedy Trees and Greedy Permutations</title>
      <link>https://arxiv.org/abs/2412.02554</link>
      <description>arXiv:2412.02554v1 Announce Type: new 
Abstract: \begin{abstract}
  Greedy permutations, also known as Gonzalez Orderings or Farthest Point Traversals are a standard way to approximate $k$-center clustering and have many applications in sampling and approximating metric spaces.
  A greedy tree is an added structure on a greedy permutation that tracks the (approximate) nearest predecessor.
  Greedy trees have applications in proximity search as well as in topological data analysis.
  For metrics of doubling dimension $d$, a $2^{O(d)}n\log n$ time algorithm is known, but it is randomized and also, quite complicated.
  Its construction involves a series of intermediate structures and $O(n \log n)$ space.
  In this paper, we show how to construct greedy permutations and greedy trees using a simple variation of an algorithm of Clarkson that was shown to run in $2^{O(d)}n\log \Delta$ time, where the spread $\spread$ is the ratio of largest to smallest pairwise distances.
  The improvement comes from the observation that the greedy tree can be constructed more easily than the greedy permutation.
  This leads to a linear time algorithm for merging two approximate greedy trees and thus, an $2^{O(d)}n \log n$ time algorithm for computing the tree.
  Then, we show how to extract a $(1+\frac{1}{n})$-approximate greedy permutation from the approximate greedy tree in the same asymptotic running time. \end{abstract}</description>
      <guid isPermaLink="false">oai:arXiv.org:2412.02554v1</guid>
      <category>cs.CG</category>
      <category>cs.DS</category>
      <pubDate>Wed, 04 Dec 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Oliver Chubet, Don Sheehy, Siddharth Sheth</dc:creator>
    </item>
    <item>
      <title>Towards a Unified Theory of Light Spanners I: Fast (Yet Optimal) Constructions</title>
      <link>https://arxiv.org/abs/2106.15596</link>
      <description>arXiv:2106.15596v5 Announce Type: replace 
Abstract: Seminal works on light spanners over the years provide spanners with optimal lightness in various graph classes, such as in general graphs, Euclidean spanners, and minor-free graphs. Three shortcomings of previous works on light spanners are: (1) The techniques are ad hoc per graph class, and thus can't be applied broadly. (2) The runtimes of these constructions are almost always sub-optimal, and usually far from optimal. (3) These constructions are optimal in the standard and crude sense, but not in a refined sense that takes into account a wider range of involved parameters.
  This work aims at addressing these shortcomings by presenting a unified framework of light spanners in a variety of graph classes. Informally, the framework boils down to a transformation from sparse spanners to light spanners; since the state-of-the-art for sparse spanners is much more advanced than that for light spanners, such a transformation is powerful. Our framework is developed in two papers. The current paper is the first of the two -- it lays the basis of the unified framework and then applies it to design fast constructions with optimal lightness for several graph classes.
  Among various applications and implications of our framework, we highlight here the following:
  _ In low-dimensional Euclidean spaces, we present an $O(n\log n)$-time construction of $(1+\epsilon)$-spanners with lightness and degree both bounded by constants in the algebraic computation tree (ACT). Our construction resolves a major problem in the area of geometric spanners, which was open for three decades.
  _ In general graphs, for any $k \geq 2$, we construct a $(2k-1)(1+\epsilon)$-spanner with lightness $O(n^{1/k})$ in $O(m \alpha(m,n))$ time. This result for light spanners in general weighted graphs is surprising, as it outperforms the analog one for sparse spanners.</description>
      <guid isPermaLink="false">oai:arXiv.org:2106.15596v5</guid>
      <category>cs.CG</category>
      <category>cs.DS</category>
      <pubDate>Wed, 04 Dec 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Hung Le, Shay Solomon</dc:creator>
    </item>
    <item>
      <title>Tractability Frontiers in Multi-Robot Coordination and Geometric Reconfiguration</title>
      <link>https://arxiv.org/abs/2104.07011</link>
      <description>arXiv:2104.07011v2 Announce Type: replace-cross 
Abstract: We study the Monotone Sliding Reconfiguration (MSR) problem, in which $\textit{labeled}$ pairwise interior-disjoint objects in a planar workspace need to be brought $\textit{one by one}$ from their initial positions to given target positions, without causing collisions. That is, at each step only one object moves to its respective target, where it stays thereafter. MSR is a natural special variant of Multi-Robot Motion Planning (MRMP) and related reconfiguration problems, many of which are known to be computationally hard. A key question is identifying the minimal mitigating assumptions that enable efficient algorithms for such problems. We first show that despite the monotonicity requirement, MSR remains a computationally hard MRMP problem. We then provide additional hardness results for MSR that rule out several natural assumptions. For example, we show that MSR remains hard without obstacles in the workspace. On the positive side, we introduce a family of MSR instances that always have a solution through a novel structural assumption pertaining to the graphs underlying the start and target configuration -- we require that these graphs are spannable by a forest of full binary trees (SFFBT). We use our assumption to obtain efficient MSR algorithms for unit discs and 2D grid settings. Notably, our assumption does not require separation between start/target positions, which is a standard requirement in efficient and complete MRMP algorithms. Instead, we (implicitly) require separation between $\textit{groups}$ of these positions, thereby pushing the boundary of efficiently solvable instances toward denser scenarios.</description>
      <guid isPermaLink="false">oai:arXiv.org:2104.07011v2</guid>
      <category>cs.RO</category>
      <category>cs.CG</category>
      <pubDate>Wed, 04 Dec 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Tzvika Geft, Dan Halperin, Yonatan Nakar</dc:creator>
    </item>
    <item>
      <title>On Spheres with $k$ Points Inside</title>
      <link>https://arxiv.org/abs/2410.21204</link>
      <description>arXiv:2410.21204v2 Announce Type: replace-cross 
Abstract: We generalize a classical result by Boris Delaunay that introduced Delaunay triangulations. In particular, we prove that for a locally finite and coarsely dense generic point set $A$ in $\mathbb{R}^d$, every generic point of $\mathbb{R}^d$ belongs to exactly $\binom{d+k}{d}$ simplices whose vertices belong to $A$ and whose circumspheres enclose exactly $k$ points of $A$. We extend this result to the cases in which the points are weighted, and when $A$ contains only finitely many points in $\mathbb{R}^d$ or in $\mathbb{S}^d$. Furthermore, we use the result to give a new geometric proof for the fact that volumes of hypersimplices are Eulerian numbers.</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.21204v2</guid>
      <category>math.CO</category>
      <category>cs.CG</category>
      <pubDate>Wed, 04 Dec 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Herbert Edelsbrunner, Alexey Garber, Morteza Saghafian</dc:creator>
    </item>
  </channel>
</rss>
