<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.CG updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.CG</link>
    <description>cs.CG updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.CG" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Fri, 06 Dec 2024 02:45:01 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Thu, 05 Dec 2024 00:00:00 -0500</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>On Approximability of $\ell_2^2$ Min-Sum Clustering</title>
      <link>https://arxiv.org/abs/2412.03332</link>
      <description>arXiv:2412.03332v1 Announce Type: cross 
Abstract: The $\ell_2^2$ min-sum $k$-clustering problem is to partition an input set into clusters $C_1,\ldots,C_k$ to minimize $\sum_{i=1}^k\sum_{p,q\in C_i}\|p-q\|_2^2$. Although $\ell_2^2$ min-sum $k$-clustering is NP-hard, it is not known whether it is NP-hard to approximate $\ell_2^2$ min-sum $k$-clustering beyond a certain factor.
  In this paper, we give the first hardness-of-approximation result for the $\ell_2^2$ min-sum $k$-clustering problem. We show that it is NP-hard to approximate the objective to a factor better than $1.056$ and moreover, assuming a balanced variant of the Johnson Coverage Hypothesis, it is NP-hard to approximate the objective to a factor better than 1.327.
  We then complement our hardness result by giving the first $(1+\varepsilon)$-coreset construction for $\ell_2^2$ min-sum $k$-clustering. Our coreset uses $\mathcal{O}\left(k^{\varepsilon^{-4}}\right)$ space and can be leveraged to achieve a polynomial-time approximation scheme with runtime $nd\cdot f(k,\varepsilon^{-1})$, where $d$ is the underlying dimension of the input dataset and $f$ is a fixed function.
  Finally, we consider a learning-augmented setting, where the algorithm has access to an oracle that outputs a label $i\in[k]$ for input point, thereby implicitly partitioning the input dataset into $k$ clusters that induce an approximately optimal solution, up to some amount of adversarial error $\alpha\in\left[0,\frac{1}{2}\right)$. We give a polynomial-time algorithm that outputs a $\frac{1+\gamma\alpha}{(1-\alpha)^2}$-approximation to $\ell_2^2$ min-sum $k$-clustering, for a fixed constant $\gamma&gt;0$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2412.03332v1</guid>
      <category>cs.DS</category>
      <category>cs.CC</category>
      <category>cs.CG</category>
      <category>cs.LG</category>
      <pubDate>Thu, 05 Dec 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Karthik C. S., Euiwoong Lee, Yuval Rabani, Chris Schwiegelshohn, Samson Zhou</dc:creator>
    </item>
    <item>
      <title>Hard diagrams of split links</title>
      <link>https://arxiv.org/abs/2412.03372</link>
      <description>arXiv:2412.03372v1 Announce Type: cross 
Abstract: Deformations of knots and links in ambient space can be studied combinatorially on their diagrams via local modifications called Reidemeister moves. While it is well-known that, in order to move between equivalent diagrams with Reidemeister moves, one sometimes needs to insert excess crossings, there are significant gaps between the best known lower and upper bounds on the required number of these added crossings. In this article, we study the problem of turning a diagram of a split link into a split diagram, and we show that there exist split links with diagrams requiring an arbitrarily large number of such additional crossings. More precisely, we provide a family of diagrams of split links, so that any sequence of Reidemeister moves transforming a diagram with $c$ crossings into a split diagram requires going through a diagram with $\Omega(\sqrt{c})$ extra crossings. Our proof relies on the framework of bubble tangles, as introduced by Lunel and de Mesmay, and a technique of Chambers and Liokumovitch to turn homotopies into isotopies in the context of Riemannian geometry.</description>
      <guid isPermaLink="false">oai:arXiv.org:2412.03372v1</guid>
      <category>math.GT</category>
      <category>cs.CG</category>
      <pubDate>Thu, 05 Dec 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Corentin Lunel, Arnaud de Mesmay, Jonathan Spreer</dc:creator>
    </item>
    <item>
      <title>An algorithm for Tambara-Yamagami quantum invariants of 3-manifolds, parameterized by the first Betti number</title>
      <link>https://arxiv.org/abs/2311.08514</link>
      <description>arXiv:2311.08514v2 Announce Type: replace 
Abstract: Quantum topology provides various frameworks for defining and computing invariants of manifolds inspired by quantum theory. One such framework of substantial interest in both mathematics and physics is the Turaev-Viro-Barrett-Westbury state sum construction, which uses the data of a spherical fusion category to define topological invariants of triangulated 3-manifolds via tensor network contractions. In this work we analyze the computational complexity of state sum invariants of 3-manifolds derived from Tambara-Yamagami categories. While these categories are the simplest source of state sum invariants beyond finite abelian groups (whose invariants can be computed in polynomial time) their computational complexities are yet to be fully understood. We first establish that the invariants arising from even the smallest Tambara-Yamagami categories are #P-hard to compute, so that one expects the same to be true of the whole family. Our main result is then the existence of a fixed parameter tractable algorithm to compute these 3-manifold invariants, where the parameter is the first Betti number of the 3-manifold with Z/2Z coefficients.
  Contrary to other domains of computational topology, such as graphs on surfaces, very few hard problems in 3-manifold topology are known to admit FPT algorithms with a topological parameter. However, such algorithms are of particular interest as their complexity depends only polynomially on the combinatorial representation of the input, regardless of size or combinatorial width. Additionally, in the case of Betti numbers, the parameter itself is computable in polynomial time. Thus while one generally expects quantum invariants to be hard to compute classically, our results suggest that the hardness of computing state sum invariants from Tambara-Yamagami categories arises from classical 3-manifold topology rather than the quantum nature of the algebraic input.</description>
      <guid isPermaLink="false">oai:arXiv.org:2311.08514v2</guid>
      <category>cs.CG</category>
      <category>math.GT</category>
      <category>math.QA</category>
      <pubDate>Thu, 05 Dec 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Colleen Delaney (Purdue), Cl\'ement Maria (INRIA,FGV/EMAp), Eric Samperton (Purdue)</dc:creator>
    </item>
    <item>
      <title>The Gestalt Computational Model by Persistent Homology</title>
      <link>https://arxiv.org/abs/2405.20583</link>
      <description>arXiv:2405.20583v2 Announce Type: replace 
Abstract: Widely employed in cognitive psychology, Gestalt theory elucidates basic principles in visual perception. However, the Gestalt principles are validated mainly by psychological experiments, lacking quantitative research supports and theoretical coherence. In this paper, we utilize persistent homology, a mathematical tool in computational topology, to develop a unified computational model for Gestalt principles, addressing the challenges of quantification and computation. On the one hand, the Gestalt computational model presents quantitative supports for Gestalt theory. On the other hand, it shows that the Gestalt principles can be uniformly calculated using persistent homology, thus developing a coherent theory for Gestalt principles in computation. Moreover, it is anticipated that the Gestalt computational model can serve as a significant computational model in the field of computational psychology, and help the understanding of human being visual perception.</description>
      <guid isPermaLink="false">oai:arXiv.org:2405.20583v2</guid>
      <category>cs.CG</category>
      <category>math.AT</category>
      <pubDate>Thu, 05 Dec 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Yu Chen, Hongwei Lin, Jiacong Yan</dc:creator>
    </item>
    <item>
      <title>The Fr\'echet Distance Unleashed: Approximating a Dog with a Frog</title>
      <link>https://arxiv.org/abs/2407.03101</link>
      <description>arXiv:2407.03101v3 Announce Type: replace 
Abstract: We show that a variant of the continuous Fr\'echet distance between polygonal curves can be computed using essentially the same algorithm used to solve the discrete version. The new variant is not necessarily monotone, but this shortcoming can be easily handled via refinement.
  Combined with a Dijkstra/Prim type algorithm, this leads to a realization of the Fr\'echet distance (i.e., a morphing) that is locally optimal (aka locally correct), that is both easy to compute, and in practice, takes near linear time on many inputs. The new morphing has the property that the leash is always as short-as-possible. These matchings/morphings are more natural, and are better than the ones computed by standard algorithms -- in particular, they handle noise more graciously. This should make the Fr\'echet distance more useful for real world applications.
  We implemented the new algorithm, and various strategies to obtain fast practical performance. We performed extensive experiments on our new algorithm, and released publicly available (and easily installable and usable) Julia and Python packages. In particular, the Julia implementation, for computing the regular Fr\'echet distance, seems to be significantly faster than other currently available implementations.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.03101v3</guid>
      <category>cs.CG</category>
      <pubDate>Thu, 05 Dec 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Sariel Har-Peled, Benjamin Raichel, Eliot W. Robson</dc:creator>
    </item>
    <item>
      <title>Generating Cofaces in Vietoris--Rips Filtration Order</title>
      <link>https://arxiv.org/abs/2411.05495</link>
      <description>arXiv:2411.05495v2 Announce Type: replace 
Abstract: Cofaces -- simplices that contain a given simplex -- have multiple important uses in generating and using a Vietoris-Rips filtration: both in creating the coboundary matrix for computing persistent cohomology, and for generating the ordered sequence of simplices in the first place. Traditionally, most methods have generated simplices first, and then sorted them in filtration order after the generation step. In this paper, we propose fast algorithms for generating the sequence of simplices by generating cofaces of a given simplex with the same diameter, which by construction produces simplices in filtration order, and for generating additional cofaces in filtration order using sorted neighborhood lists in order to generate coboundaries directly in filtration order.</description>
      <guid isPermaLink="false">oai:arXiv.org:2411.05495v2</guid>
      <category>cs.CG</category>
      <pubDate>Thu, 05 Dec 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Ulrich Bauer, Jordan Matuszewski, Mikael Vejdemo-Johansson</dc:creator>
    </item>
    <item>
      <title>Cramer-Castillon on a Triangle's Incircle and Excircles</title>
      <link>https://arxiv.org/abs/2110.13615</link>
      <description>arXiv:2110.13615v2 Announce Type: replace-cross 
Abstract: The Cramer-Castillon problem (CCP) consists in finding one or more polygons inscribed in a circle such that their sides pass cyclically through a list of $N$ points. We study this problem where the points are the vertices of a triangle and the circle is either the incircle or excircles.</description>
      <guid isPermaLink="false">oai:arXiv.org:2110.13615v2</guid>
      <category>math.MG</category>
      <category>cs.CG</category>
      <pubDate>Thu, 05 Dec 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Dominique Laurain, Peter Moses, Dan Reznik</dc:creator>
    </item>
  </channel>
</rss>
