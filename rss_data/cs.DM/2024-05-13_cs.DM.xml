<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.DM updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.DM</link>
    <description>cs.DM updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.DM" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Mon, 13 May 2024 04:00:01 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Mon, 13 May 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>Recoloring via modular decomposition</title>
      <link>https://arxiv.org/abs/2405.06446</link>
      <description>arXiv:2405.06446v1 Announce Type: cross 
Abstract: The reconfiguration graph of the $k$-colorings of a graph $G$, denoted $R_{k}(G)$, is the graph whose vertices are the $k$-colorings of $G$ and two colorings are adjacent in $R_{k}(G)$ if they differ in color on exactly one vertex. A graph $G$ is said to be recolorable if $R_{\ell}(G)$ is connected for all $\ell \geq \chi(G)$+1. We use the modular decomposition of several graph classes to prove that the graphs in the class are recolorable. In particular, we prove that every ($P_5$, diamond)-free graph, every ($P_5$, house, bull)-free graph, and every ($P_5$, $C_5$, co-fork)-free graph is recolorable.</description>
      <guid isPermaLink="false">oai:arXiv.org:2405.06446v1</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Manoj Belavadi, Kathie Cameron, Ni Luh Dewi Sintiari</dc:creator>
    </item>
    <item>
      <title>Perturbation results for distance-edge-monitoring numbers</title>
      <link>https://arxiv.org/abs/2301.02507</link>
      <description>arXiv:2301.02507v4 Announce Type: replace 
Abstract: Foucaud et al. recently introduced and initiated the study of a new graph-theoretic concept in the area of network monitoring. Given a graph $G=(V(G), E(G))$, a set $M \subseteq V(G)$ is a distance-edge-monitoring set if for every edge $e \in E(G)$, there is a vertex $x \in M$ and a vertex $y \in V(G)$ such that the edge $e$ belongs to all shortest paths between $x$ and $y$. The smallest size of such a set in $G$ is denoted by $\operatorname{dem}(G)$. Denoted by $G-e$ (resp. $G \backslash u$) the subgraph of $G$ obtained by removing the edge $e$ from $G$ (resp. a vertex $u$ together with all its incident edges from $G$). In this paper, we first show that $\operatorname{dem}(G-e)- \operatorname{dem}(G)\leq 2$ for any graph $G$ and edge $e \in E(G)$. Moreover, the bound is sharp. Next, we construct two graphs $G$ and $H$ to show that $\operatorname{dem}(G)-\operatorname{dem}(G\setminus u)$ and $\operatorname{dem}(H\setminus v)-\operatorname{dem}(H)$ can be arbitrarily large, where $u \in V(G)$ and $v \in V(H)$. We also study the relation between $\operatorname{dem}(H)$ and $\operatorname{dem}(G)$, where $H$ is a subgraph of $G$. In the end, we give an algorithm to judge whether the distance-edge monitoring set still remain in the resulting graph when any edge of the graph $G$ is deleted.</description>
      <guid isPermaLink="false">oai:arXiv.org:2301.02507v4</guid>
      <category>cs.DM</category>
      <category>cs.DS</category>
      <category>math.CO</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Chenxu Yang, Ralf Klasing, Changxiang He, Yaping Mao</dc:creator>
    </item>
    <item>
      <title>Efficient set-theoretic algorithms for computing high-order Forman-Ricci curvature on abstract simplicial complexes</title>
      <link>https://arxiv.org/abs/2308.11763</link>
      <description>arXiv:2308.11763v5 Announce Type: replace-cross 
Abstract: Forman-Ricci curvature (FRC) is a potent and powerful tool for analysing empirical networks, as the distribution of the curvature values can identify structural information that is not readily detected by other geometrical methods. Crucially, FRC captures higher-order structural information of clique complexes of a graph or Vietoris-Rips complexes, which is not readily accessible to alternative methods. However, existing FRC platforms are prohibitively computationally expensive. Therefore, herein we develop an efficient set-theoretic formulation for computing such high-order FRC in simplicial complexes. Significantly, our set theory representation reveals previous computational bottlenecks and also accelerates the computation of FRC. Finally, We provide a pseudo-code, a software implementation coined FastForman, as well as a benchmark comparison with alternative implementations. We envisage that FastForman will be used in Topological and Geometrical Data analysis for high-dimensional complex data sets. Moreover, our development paves the way for future generalisations towards efficient computations of FRC on cell complexes.</description>
      <guid isPermaLink="false">oai:arXiv.org:2308.11763v5</guid>
      <category>physics.data-an</category>
      <category>cs.DM</category>
      <category>cs.PF</category>
      <category>math.CO</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Danillo Barros de Souza, Jonatas T. S. da Cunha, Fernando A. N. Santos, J\"urgen Jost, Serafim Rodrigues</dc:creator>
    </item>
    <item>
      <title>Conformal Hypergraphs: Duality and Implications for the Upper Clique Transversal Problem</title>
      <link>https://arxiv.org/abs/2309.00098</link>
      <description>arXiv:2309.00098v4 Announce Type: replace-cross 
Abstract: Given a hypergraph $\mathcal{H}$, the dual hypergraph of $\mathcal{H}$ is the hypergraph of all minimal transversals of $\mathcal{H}$. The dual hypergraph is always Sperner, that is, no hyperedge contains another. A special case of Sperner hypergraphs are the conformal Sperner hypergraphs, which correspond to the families of maximal cliques of graphs. All these notions play an important role in many fields of mathematics and computer science, including combinatorics, algebra, database theory, etc. In this paper we study conformality of dual hypergraphs and prove several results related to the problem of recognizing this property. In particular, we show that the problem is in co-NP and can be solved in polynomial time for hypergraphs of bounded dimension. In the special case of dimension $3$, we reduce the problem to $2$-Satisfiability. Our approach has an implication in algorithmic graph theory: we obtain a polynomial-time algorithm for recognizing graphs in which all minimal transversals of maximal cliques have size at most $k$, for any fixed $k$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2309.00098v4</guid>
      <category>math.CO</category>
      <category>cs.CC</category>
      <category>cs.DM</category>
      <category>cs.DS</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Endre Boros, Vladimir Gurvich, Martin Milani\v{c}, Yushi Uno</dc:creator>
    </item>
    <item>
      <title>Nearest Neighbor Representations of Neurons</title>
      <link>https://arxiv.org/abs/2402.08748</link>
      <description>arXiv:2402.08748v2 Announce Type: replace-cross 
Abstract: The Nearest Neighbor (NN) Representation is an emerging computational model that is inspired by the brain. We study the complexity of representing a neuron (threshold function) using the NN representations. It is known that two anchors (the points to which NN is computed) are sufficient for a NN representation of a threshold function, however, the resolution (the maximum number of bits required for the entries of an anchor) is $O(n\log{n})$. In this work, the trade-off between the number of anchors and the resolution of a NN representation of threshold functions is investigated. We prove that the well-known threshold functions EQUALITY, COMPARISON, and ODD-MAX-BIT, which require 2 or 3 anchors and resolution of $O(n)$, can be represented by polynomially large number of anchors in $n$ and $O(\log{n})$ resolution. We conjecture that for all threshold functions, there are NN representations with polynomially large size and logarithmic resolution in $n$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2402.08748v2</guid>
      <category>cs.CC</category>
      <category>cs.DM</category>
      <category>cs.LG</category>
      <category>cs.NE</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Kordag Mehmet Kilic, Jin Sima, Jehoshua Bruck</dc:creator>
    </item>
    <item>
      <title>Nearest Neighbor Representations of Neural Circuits</title>
      <link>https://arxiv.org/abs/2402.08751</link>
      <description>arXiv:2402.08751v2 Announce Type: replace-cross 
Abstract: Neural networks successfully capture the computational power of the human brain for many tasks. Similarly inspired by the brain architecture, Nearest Neighbor (NN) representations is a novel approach of computation. We establish a firmer correspondence between NN representations and neural networks. Although it was known how to represent a single neuron using NN representations, there were no results even for small depth neural networks. Specifically, for depth-2 threshold circuits, we provide explicit constructions for their NN representation with an explicit bound on the number of bits to represent it. Example functions include NN representations of convex polytopes (AND of threshold gates), IP2, OR of threshold gates, and linear or exact decision lists.</description>
      <guid isPermaLink="false">oai:arXiv.org:2402.08751v2</guid>
      <category>cs.CC</category>
      <category>cs.DM</category>
      <category>cs.LG</category>
      <category>cs.NE</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Kordag Mehmet Kilic, Jin Sima, Jehoshua Bruck</dc:creator>
    </item>
    <item>
      <title>Detecting Disjoint Shortest Paths in Linear Time and More</title>
      <link>https://arxiv.org/abs/2404.15916</link>
      <description>arXiv:2404.15916v2 Announce Type: replace-cross 
Abstract: In the $k$-Disjoint Shortest Paths ($k$-DSP) problem, we are given a weighted graph $G$ on $n$ nodes and $m$ edges with specified source vertices $s_1, \dots, s_k$, and target vertices $t_1, \dots, t_k$, and are tasked with determining if $G$ contains vertex-disjoint $(s_i,t_i)$-shortest paths. For any constant $k$, it is known that $k$-DSP can be solved in polynomial time over undirected graphs and directed acyclic graphs (DAGs). However, the exact time complexity of $k$-DSP remains mysterious, with large gaps between the fastest known algorithms and best conditional lower bounds. In this paper, we obtain faster algorithms for important cases of $k$-DSP, and present better conditional lower bounds for $k$-DSP and its variants.
  Previous work solved 2-DSP over weighted undirected graphs in $O(n^7)$ time, and weighted DAGs in $O(mn)$ time. For the main result of this paper, we present linear time algorithms for solving 2-DSP on weighted undirected graphs and DAGs. Our algorithms are algebraic however, and so only solve the detection rather than search version of 2-DSP.
  For lower bounds, prior work implied that $k$-Clique can be reduced to $2k$-DSP in DAGs and undirected graphs with $O((kn)^2)$ nodes. We improve this reduction, by showing how to reduce from $k$-Clique to $k$-DSP in DAGs and undirected graphs with $O((kn)^2)$ nodes. A variant of $k$-DSP is the $k$-Disjoint Paths ($k$-DP) problem, where the solution paths no longer need to be shortest paths. Previous work reduced from $k$-Clique to $p$-DP in DAGs with $O(kn)$ nodes, for $p= k + k(k-1)/2$. We improve this by showing a reduction from $k$-Clique to $p$-DP, for $p=k + \lfloor k^2/4\rfloor$. Under the $k$-Clique Hypothesis from fine-grained complexity, our results establish better conditional lower bounds for $k$-DSP for all $k\ge 4$, and better conditional lower bounds for $p$-DP for all $p\le 4031$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2404.15916v2</guid>
      <category>cs.DS</category>
      <category>cs.DM</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Shyan Akmal, Virginia Vassilevska Williams, Nicole Wein</dc:creator>
    </item>
    <item>
      <title>PoW Security-Latency under Random Delays and the Effect of Transaction Fees</title>
      <link>https://arxiv.org/abs/2405.04526</link>
      <description>arXiv:2405.04526v2 Announce Type: replace-cross 
Abstract: Safety guarantees and security-latency problem of Nakamoto consensus have been extensively studied in the last decade with a bounded delay model. Recent studies have shown that PoW protocol is secure under random delay models as well. In this paper, we analyze the security-latency problem, i.e., how secure a block is, after it becomes k-deep in the blockchain, under general random delay distributions. We provide tight and explicit bounds which only require determining the distribution of the number of Poisson arrivals during the random delay. We further consider potential effects of recent Bitcoin halving on the security-latency problem by extending our results.</description>
      <guid isPermaLink="false">oai:arXiv.org:2405.04526v2</guid>
      <category>cs.CR</category>
      <category>cs.DC</category>
      <category>cs.DM</category>
      <category>cs.IT</category>
      <category>math.IT</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Mustafa Doger, Sennur Ulukus, Nail Akar</dc:creator>
    </item>
    <item>
      <title>Trail Trap: a variant of Partizan Edge Geography</title>
      <link>https://arxiv.org/abs/2405.05195</link>
      <description>arXiv:2405.05195v2 Announce Type: replace-cross 
Abstract: We study a two-player game played on undirected graphs called Trail Trap, which is a variant of a game known as Partizan Edge Geography. One player starts by choosing any edge and moving a token from one endpoint to the other; the other player then chooses a different edge and does the same. Alternating turns, each player moves their token along an unused edge from its current vertex to an adjacent vertex, until one player cannot move and loses. We present an algorithm to determine which player has a winning strategy when the graph is a tree, and partially characterize the trees on which a given player wins. Additionally, we show that Trail Trap is NP-hard, even for connected bipartite planar graphs with maximum degree $4$ as well as for disconnected graphs. We determine which player has a winning strategy for certain subclasses of complete bipartite graphs and grid graphs, and we propose several open problems for further study.</description>
      <guid isPermaLink="false">oai:arXiv.org:2405.05195v2</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <dc:creator>Calum Buchanan, MacKenzie Carr, Alexander Clifton, Stephen G. Hartke, Vesna Ir\v{s}i\v{c}, Nicholas Sieger, Rebecca Whitman</dc:creator>
    </item>
  </channel>
</rss>
