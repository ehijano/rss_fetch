<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.CG updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.CG</link>
    <description>cs.CG updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.CG" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Thu, 02 May 2024 04:00:09 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Thu, 02 May 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>A Framework for Approximation Schemes on Knapsack and Packing Problems of Hyperspheres and Fat Objects</title>
      <link>https://arxiv.org/abs/2405.00246</link>
      <description>arXiv:2405.00246v1 Announce Type: new 
Abstract: Geometric packing problems have been investigated for centuries in mathematics. In contrast, works on sphere packing in the field of approximation algorithms are scarce. Most results are for squares and rectangles, and their d-dimensional counterparts. To help fill this gap, we present a framework that yields approximation schemes for the geometric knapsack problem as well as other packing problems and some generalizations, and that supports not only hyperspheres but also a wide range of shapes for the items and the bins. Our first result is a PTAS for the hypersphere multiple knapsack problem. In fact, we can deal with a more generalized version of the problem that contains additional constraints on the items. These constraints, under some conditions, can encompass very common and pertinent constraints such as conflict constraints, multiple-choice constraints, and capacity constraints. Our second result is a resource augmentation scheme for the multiple knapsack problem for a wide range of convex fat objects, which are not restricted to polygons and polytopes. Examples are ellipsoids, rhombi, hypercubes, hyperspheres under the Lp-norm, etc. Also, for the generalized version of the multiple knapsack problem, our technique still yields a PTAS under resource augmentation for these objects. Thirdly, we improve the resource augmentation schemes of fat objects to allow rotation on the objects by any angle. This result, in particular, brings something extra to our framework, since most results comprising such general objects are limited to translations. At last, our framework is able to contemplate other problems such as the cutting stock problem, the minimum-size bin packing problem and the multiple strip packing problem.</description>
      <guid isPermaLink="false">oai:arXiv.org:2405.00246v1</guid>
      <category>cs.CG</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>V\'itor Gomes Chagas, Elisa Dell'Arriva, Fl\'avio Keidi Miyazawa</dc:creator>
    </item>
    <item>
      <title>Implicit Swept Volume SDF: Enabling Continuous Collision-Free Trajectory Generation for Arbitrary Shapes</title>
      <link>https://arxiv.org/abs/2405.00362</link>
      <description>arXiv:2405.00362v1 Announce Type: cross 
Abstract: In the field of trajectory generation for objects, ensuring continuous collision-free motion remains a huge challenge, especially for non-convex geometries and complex environments. Previous methods either oversimplify object shapes, which results in a sacrifice of feasible space or rely on discrete sampling, which suffers from the "tunnel effect". To address these limitations, we propose a novel hierarchical trajectory generation pipeline, which utilizes the Swept Volume Signed Distance Field (SVSDF) to guide trajectory optimization for Continuous Collision Avoidance (CCA). Our interdisciplinary approach, blending techniques from graphics and robotics, exhibits outstanding effectiveness in solving this problem. We formulate the computation of the SVSDF as a Generalized Semi-Infinite Programming model, and we solve for the numerical solutions at query points implicitly, thereby eliminating the need for explicit reconstruction of the surface. Our algorithm has been validated in a variety of complex scenarios and applies to robots of various dynamics, including both rigid and deformable shapes. It demonstrates exceptional universality and superior CCA performance compared to typical algorithms. The code will be released at https://github.com/ZJU-FAST-Lab/Implicit-SVSDF-Planner for the benefit of the community.</description>
      <guid isPermaLink="false">oai:arXiv.org:2405.00362v1</guid>
      <category>cs.RO</category>
      <category>cs.CG</category>
      <category>cs.GR</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <arxiv:DOI>10.1145/3658181</arxiv:DOI>
      <dc:creator>Jingping Wang, Tingrui Zhang, Qixuan Zhang, Chuxiao Zeng, Jingyi Yu, Chao Xu, Lan Xu, Fei Gao</dc:creator>
    </item>
    <item>
      <title>Maximum Matchings in Geometric Intersection Graphs</title>
      <link>https://arxiv.org/abs/1910.02123</link>
      <description>arXiv:1910.02123v3 Announce Type: replace 
Abstract: Let $G$ be an intersection graph of $n$ geometric objects in the plane. We show that a maximum matching in $G$ can be found in $O(\rho^{3\omega/2}n^{\omega/2})$ time with high probability, where $\rho$ is the density of the geometric objects and $\omega&gt;2$ is a constant such that $n \times n$ matrices can be multiplied in $O(n^\omega)$ time.
  The same result holds for any subgraph of $G$, as long as a geometric representation is at hand. For this, we combine algebraic methods, namely computing the rank of a matrix via Gaussian elimination, with the fact that geometric intersection graphs have small separators.
  We also show that in many interesting cases, the maximum matching problem in a general geometric intersection graph can be reduced to the case of bounded density. In particular, a maximum matching in the intersection graph of any family of translates of a convex object in the plane can be found in $O(n^{\omega/2})$ time with high probability, and a maximum matching in the intersection graph of a family of planar disks with radii in $[1, \Psi]$ can be found in $O(\Psi^6\log^{11} n + \Psi^{12 \omega} n^{\omega/2})$ time with high probability.</description>
      <guid isPermaLink="false">oai:arXiv.org:1910.02123v3</guid>
      <category>cs.CG</category>
      <category>cs.DS</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <arxiv:DOI>10.1007/s00454-023-00564-3</arxiv:DOI>
      <arxiv:journal_reference>Discrete and Computational Geometry (DCG), 70(3), October 2023, pp. 550-579</arxiv:journal_reference>
      <dc:creator>\'Edouard Bonnet, Sergio Cabello, Wolfgang Mulzer</dc:creator>
    </item>
    <item>
      <title>Long Plane Trees</title>
      <link>https://arxiv.org/abs/2101.00445</link>
      <description>arXiv:2101.00445v2 Announce Type: replace 
Abstract: In the longest plane spanning tree problem, we are given a finite planar point set $\mathcal{P}$, and our task is to find a plane (i.e., noncrossing) spanning tree for $\mathcal{P}$ with maximum total Euclidean edge length. Despite more than two decades of research, it remains open whether this problem is NP-hard. Thus, previous efforts have focused on olynomial-time algorithms that produce plane trees whose total edge length approximates $\text{OPT}$, the maximum possible length. The approximate trees in these algorithms all have small unweighted diameter, typically three or four. It is natural to ask whether this is a common feature of longest plane spanning trees, or an artifact of the specific approximation algorithms.
  We provide three results to elucidate the interplay between the approximation guarantee and the unweighted diameter of the approximate trees. First, we describe a polynomial-time algorithm to construct a plane tree with diameter at most four and total edge length at least $0.546 \cdot \text{OPT}$. This constitutes a substantial improvement over the state of the art. Second, we show that a longest plane tree among those with diameter at most three can be found in polynomial time. Third, for any candidate diameter $d \geq 3$, we provide upper bounds on the approximation factor that can be achieved by a longest plane tree with diameter at most $d$ (compared to a longest plane tree without constraints).</description>
      <guid isPermaLink="false">oai:arXiv.org:2101.00445v2</guid>
      <category>cs.CG</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Sergio Cabello, Michael Hoffmann, Katharina Klost, Wolfgang Mulzer, Josef Tkadlec</dc:creator>
    </item>
    <item>
      <title>Dynamic Connectivity in Disk Graphs</title>
      <link>https://arxiv.org/abs/2106.14935</link>
      <description>arXiv:2106.14935v2 Announce Type: replace 
Abstract: Let $S$ be a set of $n$ sites in the plane, so that every site $s \in S$ has an associated radius $r_s &gt; 0$. Let $\mathcal{D}(S)$ be the disk intersection graph defined by $S$, i.e., the graph with vertex set $S$ and an edge between two distinct sites $s, t \in S$ if and only if the disks with centers $s$, $t$ and radii $r_s$, $r_t$ intersect.Our goal is to design data structures that maintain the connectivity structure of $\mathcal{D}(S)$ as sites are inserted and/or deleted in $S$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2106.14935v2</guid>
      <category>cs.CG</category>
      <category>cs.DS</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:DOI>10.1007/s00454-023-00621-x</arxiv:DOI>
      <arxiv:journal_reference>Discrete and Computational Geometry (DCG), 71(1), Jan 2024, pp. 214.277</arxiv:journal_reference>
      <dc:creator>Alexander Baumann, Haim Kaplan, Katharina Klost, Kristin Knorr, Wolfgang Mulzer, Liam Roditty, Paul Seiferth</dc:creator>
    </item>
    <item>
      <title>The Information Geometry of UMAP</title>
      <link>https://arxiv.org/abs/2309.01237</link>
      <description>arXiv:2309.01237v4 Announce Type: replace 
Abstract: In this note we highlight some connections of UMAP to the basic principles of Information Geometry. Originally, UMAP was derived from Category Theory observations. However, we posit that it also has a natural geometric interpretation.</description>
      <guid isPermaLink="false">oai:arXiv.org:2309.01237v4</guid>
      <category>cs.CG</category>
      <category>cs.DM</category>
      <category>cs.IT</category>
      <category>math.GT</category>
      <category>math.IT</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Alexander Kolpakov, Aidan Rocke</dc:creator>
    </item>
  </channel>
</rss>
