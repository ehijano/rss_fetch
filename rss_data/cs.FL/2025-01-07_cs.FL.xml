<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.FL updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.FL</link>
    <description>cs.FL updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.FL" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Tue, 07 Jan 2025 05:00:12 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Tue, 07 Jan 2025 00:00:00 -0500</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Extended CTG Generalization and Dynamic Adjustment of Generalization Strategies in IC3</title>
      <link>https://arxiv.org/abs/2501.02480</link>
      <description>arXiv:2501.02480v1 Announce Type: new 
Abstract: The IC3 algorithm is widely used in hardware formal verification, with generalization as a crucial step. Standard generalization expands a cube by dropping literals to include more unreachable states. The CTG approach enhances this by blocking counterexamples to generalization (CTG) when dropping literals fails. In this paper, we extend the CTG method (EXCTG) to put more effort into generalization. If blocking the CTG fails, EXCTG attempts to block its predecessors, aiming for better generalization. While CTG and EXCTG offer better generalization results, they also come with increased computational overhead. Finding an appropriate balance between generalization quality and computational overhead is challenging with a static strategy. We propose DynAMic, a method that dynamically adjusts generalization strategies according to the difficulty of blocking states, thereby improving scalability without compromising efficiency. A comprehensive evaluation demonstrates that EXCTG and DynAMic achieve significant scalability improvements, solving 8 and 25 more cases, respectively, compared to CTG generalization.</description>
      <guid isPermaLink="false">oai:arXiv.org:2501.02480v1</guid>
      <category>cs.FL</category>
      <pubDate>Tue, 07 Jan 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Yuheng Su, Qiusong Yang, Yiwei Ci, Ziyu Huang</dc:creator>
    </item>
    <item>
      <title>Asynchronism in Cellular Automata</title>
      <link>https://arxiv.org/abs/2501.02578</link>
      <description>arXiv:2501.02578v1 Announce Type: new 
Abstract: This study introduces Skewed Fully Asynchronous Cellular Automata (SACA), a novel update scheme in cellular automata that updates the states of only two consecutive and adjacent cells, such as ci and ci+1, simultaneously at each time step. The behavior and dynamics of elementary cellular automata (ECA) under this scheme are analyzed and compared with those of synchronous and fully asynchronous update methods. The comparative analysis highlights a range of phenomena, including transitions in ECAs from convergent or non-reversible dynamics to reversible, divergent behavior. The divisibility of lattice size by 2 or 4 is shown to have significant effects on the system dynamics, linked to the presence or absence of atomicity. The study also explores the convergence of ECAs to all-zero or all-one point attractors under SACA, providing theoretical insights that align with experimental findings.
  Additionally, the research investigates the application of fully asynchronous cellular automata in solving clustering problems. Clustering is defined as grouping objects with similar properties. The proposed method employs reversible asynchronous cellular automata to merge clusters iteratively based on their closeness, continuing until the desired number of clusters is achieved. This approach leverages a small set of rules, leading to faster convergence and efficiency in clustering tasks. The findings underscore the potential of asynchronous cellular automata as a versatile and effective framework for studying complex system dynamics and solving practical problems such as clustering.</description>
      <guid isPermaLink="false">oai:arXiv.org:2501.02578v1</guid>
      <category>cs.FL</category>
      <pubDate>Tue, 07 Jan 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Virendra Kumar Gautam</dc:creator>
    </item>
    <item>
      <title>Subshifts defined by nondeterministic and alternating plane-walking automata</title>
      <link>https://arxiv.org/abs/2409.08024</link>
      <description>arXiv:2409.08024v2 Announce Type: replace 
Abstract: Plane-walking automata were introduced by Salo &amp; T\"orma to recognise languages of two-dimensional infinite words (subshifts), the counterpart of $4$-way finite automata for two-dimensional finite words. We extend the model to allow for nondeterminism and alternation of quantifiers. We prove that the recognised subshifts form a strict subclass of sofic subshifts, and that the classes corresponding to existential and universal nondeterminism are incomparable and both larger that the deterministic class. We define a hierarchy of subshifts recognised by plane-walking automata with alternating quantifiers, which we conjecture to be strict.</description>
      <guid isPermaLink="false">oai:arXiv.org:2409.08024v2</guid>
      <category>cs.FL</category>
      <pubDate>Tue, 07 Jan 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Benjamin Hellouin de Menibus, Pac\^ome Perrotin</dc:creator>
    </item>
    <item>
      <title>The Complexity of Second-order HyperLTL</title>
      <link>https://arxiv.org/abs/2311.15675</link>
      <description>arXiv:2311.15675v4 Announce Type: replace-cross 
Abstract: We determine the complexity of second-order HyperLTL satisfiability, finite-state satisfiability, and model-checking: All three are equivalent to truth in third-order arithmetic. We also consider two fragments of second-order HyperLTL that have been introduced with the aim to facilitate effective model-checking by restricting the sets one can quantify over. The first one restricts second-order quantification to smallest/largest sets that satisfy a guard while the second one restricts second-order quantification further to least fixed points of (first-order) HyperLTL definable functions. All three problems for the first fragment are still equivalent to truth in third-order arithmetic while satisfiability for the second fragment is $\Sigma_1^1$-complete, i.e., only as hard as for (first-order) HyperLTL and therefore much less complex. Finally, finite-state satisfiability and model-checking are in $\Sigma_2^2$ and are $\Sigma_1^1$-hard, and thus also less complex than for full second-order HyperLTL.</description>
      <guid isPermaLink="false">oai:arXiv.org:2311.15675v4</guid>
      <category>cs.LO</category>
      <category>cs.FL</category>
      <pubDate>Tue, 07 Jan 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Hadar Frenkel, Martin Zimmermann</dc:creator>
    </item>
  </channel>
</rss>
