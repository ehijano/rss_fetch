<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.DM updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.DM</link>
    <description>cs.DM updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.DM" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Mon, 08 Sep 2025 15:37:56 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Mon, 08 Sep 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>Capturing an Invisible Robber using Separators</title>
      <link>https://arxiv.org/abs/2509.05024</link>
      <description>arXiv:2509.05024v1 Announce Type: new 
Abstract: We study the zero-visibility cops and robbers game, where the robber is invisible to the cops until they are caught. This differs from the classic game where full information about the robber's location is known at any time. A previously known solution for capturing a robber in the zero-visibility case is based on the pathwidth decomposition. We provide an alternative solution based on a separation hierarchy, improving capture time and space complexity without asymptotically increasing the zero-visibility cop number in most cases. In addition, we provide a better bound on the approximate zero-visibility cop number for various classes of graphs, where approximate refers to the restriction to polynomial time computable strategies.</description>
      <guid isPermaLink="false">oai:arXiv.org:2509.05024v1</guid>
      <category>cs.DM</category>
      <category>cs.DS</category>
      <category>math.CO</category>
      <pubDate>Mon, 08 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Igor Potapov, Tymofii Prokopenko, John Sylvester</dc:creator>
    </item>
    <item>
      <title>CAZAC sequence generation of any length with iterative projection onto unit circle: principle and first results</title>
      <link>https://arxiv.org/abs/2509.05097</link>
      <description>arXiv:2509.05097v1 Announce Type: new 
Abstract: Constant amplitude zero-autocorrelation (CAZAC) sequences are mainly used for synchronization in communication and radar applications. The state-of-the-art proposes analytical derivation of specific families whose major limitation comes from the alphabet which only represents a fraction of the whole, the longer the sequences, the smaller the fraction. The objective of the paper is threefold, first to present the construction of constant amplitude zero-circular autocorrelation sequences of any length using iterative projection onto Unit Circle (IPUC) algorithm. This algorithm allows, from any random seed, to generate a near-CAZAC sequence. Then, focusing on length-8 sequences, we propose a classification of the IPUC output with an analytical expression of a representative for each identified equivalence class. Finally, the IPUC is applied within a simulated-annealing process to generate near-CAZAC sequences suitable for radar applications with optimized ratio between first and second lobes of the non-circular autocorrelation function.</description>
      <guid isPermaLink="false">oai:arXiv.org:2509.05097v1</guid>
      <category>cs.DM</category>
      <pubDate>Mon, 08 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Karine Amis, Eloi Boutillon, Emmanuel Boutillon</dc:creator>
    </item>
    <item>
      <title>A 13/6-Approximation for Strip Packing via the Bottom-Left Algorithm</title>
      <link>https://arxiv.org/abs/2509.04654</link>
      <description>arXiv:2509.04654v1 Announce Type: cross 
Abstract: In the Strip Packing problem, we are given a vertical strip of fixed width and unbounded height, along with a set of axis-parallel rectangles. The task is to place all rectangles within the strip, without overlaps, while minimizing the height of the packing. This problem is known to be NP-hard. The Bottom-Left Algorithm is a simple and widely used heuristic for Strip Packing. Given a fixed order of the rectangles, it places them one by one, always choosing the lowest feasible position in the strip and, in case of ties, the leftmost one. Baker, Coffman, and Rivest proved in 1980 that the Bottom-Left Algorithm has approximation ratio 3 if the rectangles are sorted by decreasing width. For the past 45 years, no alternative ordering has been found that improves this bound. We introduce a new rectangle ordering and show that with this ordering the Bottom-Left Algorithm achieves a 13/6 approximation for the Strip Packing problem.</description>
      <guid isPermaLink="false">oai:arXiv.org:2509.04654v1</guid>
      <category>cs.DS</category>
      <category>cs.DM</category>
      <category>math.CO</category>
      <pubDate>Mon, 08 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <dc:creator>Stefan Hougardy, Bart Zondervan</dc:creator>
    </item>
    <item>
      <title>Subgroup perfect codes of $S_n$ in Cayley sum graphs</title>
      <link>https://arxiv.org/abs/2509.05069</link>
      <description>arXiv:2509.05069v1 Announce Type: cross 
Abstract: A perfect code in a graph $\Gamma = (V, E)$ is a subset $C$ of $V$ such that no two vertices in $C$ are adjacent, and every vertex in $V \setminus C$ is adjacent to exactly one vertex in $C$. Let $ G $ be a finite group, and let $ S $ be a square-free normal subset of $ G $. The Cayley sum graph of $ G $ with respect to $ S $ is a simple graph with vertex set $ G $ and two vertices $ x $ and $ y $ are adjacent if $ xy\in S .$ A subset $ C $ of $ G $ is called perfect code of $ G $ if there exists a Cayley sum graph of $ G $ that admits $ C $ as a perfect code. In particular, if a subgroup of $ G $ is a perfect code of $ G $, then the subgroup is called a subgroup perfect code of $ G $. In this work, we prove that there does not exist any proper perfect subgroup code of symmetric group $ S_n $. Using this result, we provide a complete characterization of the perfect subgroup code of the alternating group $A_n$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2509.05069v1</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <category>cs.IT</category>
      <category>math.GR</category>
      <category>math.IT</category>
      <pubDate>Mon, 08 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/publicdomain/zero/1.0/</dc:rights>
      <dc:creator>Ankan Shaw, Biswajit Mondal, Satya Bagchi</dc:creator>
    </item>
    <item>
      <title>Efficient Exact Resistance Distance Computation on Small-Treewidth Graphs: a Labelling Approach</title>
      <link>https://arxiv.org/abs/2509.05129</link>
      <description>arXiv:2509.05129v1 Announce Type: cross 
Abstract: Resistance distance computation is a fundamental problem in graph analysis, yet existing random walk-based methods are limited to approximate solutions and suffer from poor efficiency on small-treewidth graphs (e.g., road networks). In contrast, shortest-path distance computation achieves remarkable efficiency on such graphs by leveraging cut properties and tree decompositions. Motivated by this disparity, we first analyze the cut property of resistance distance. While a direct generalization proves impractical due to costly matrix operations, we overcome this limitation by integrating tree decompositions, revealing that the resistance distance $r(s,t)$ depends only on labels along the paths from $s$ and $t$ to the root of the decomposition. This insight enables compact labelling structures. Based on this, we propose \treeindex, a novel index method that constructs a resistance distance labelling of size $O(n \cdot h_{\mathcal{G}})$ in $O(n \cdot h_{\mathcal{G}}^2 \cdot d_{\max})$ time, where $h_{\mathcal{G}}$ (tree height) and $d_{\max}$ (maximum degree) behave as small constants in many real-world small-treewidth graphs (e.g., road networks). Our labelling supports exact single-pair queries in $O(h_{\mathcal{G}})$ time and single-source queries in $O(n \cdot h_{\mathcal{G}})$ time. Extensive experiments show that TreeIndex substantially outperforms state-of-the-art approaches. For instance, on the full USA road network, it constructs a $405$ GB labelling in $7$ hours (single-threaded) and answers exact single-pair queries in $10^{-3}$ seconds and single-source queries in $190$ seconds--the first exact method scalable to such large graphs.</description>
      <guid isPermaLink="false">oai:arXiv.org:2509.05129v1</guid>
      <category>cs.DB</category>
      <category>cs.DM</category>
      <category>cs.DS</category>
      <category>cs.LG</category>
      <pubDate>Mon, 08 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Meihao Liao, Yueyang Pan, Rong-Hua Li, Guoren Wang</dc:creator>
    </item>
    <item>
      <title>Vertex-ordering and arc-partitioning problems</title>
      <link>https://arxiv.org/abs/2509.05245</link>
      <description>arXiv:2509.05245v1 Announce Type: cross 
Abstract: We study vertex-ordering problems in loop-free digraphs subject to constraints on the left-going arcs, focusing on existence conditions and computational complexity. As an intriguing special case, we explore vertex-specific lower and upper bounds on the left-outdegrees and right-indegrees. We show, for example, that deciding whether the left-going arcs can form an in-branching is solvable in polynomial time and provide a necessary and sufficient condition, while the analogous problem for an in-arborescence turns out to be NP-complete. We also consider a weighted variant that enforces vertex-specific lower and upper bounds on the weighted left-outdegrees, which is particularly relevant in applications. Furthermore, we investigate the connection between ordering problems and their arc-partitioning counterparts, where one seeks to partition the arcs into a subgraph from a specific digraph family and an acyclic subgraph -- equivalently, one seeks to cover all directed cycles with a subgraph belonging to a specific family. For the family of in-branchings, unions of disjoint dipaths, and matchings, the two formulations coincide, whereas for in-arborescences, dipaths, Hamiltonian dipaths, and perfect matchings the formulations diverge. Our results yield a comprehensive complexity landscape, unify diverse special cases and variants, clarify the algorithmic boundaries of ordered digraphs, and relate them to broader topics including graph degeneracy, acyclic orientations, influence propagation, and rank aggregation.</description>
      <guid isPermaLink="false">oai:arXiv.org:2509.05245v1</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <category>cs.DS</category>
      <category>math.OC</category>
      <pubDate>Mon, 08 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>N\'ora A. Borsik, P\'eter Madarasi</dc:creator>
    </item>
    <item>
      <title>Allocation of Indivisible Items with a Common Preference Graph: Minimizing Total Dissatisfaction</title>
      <link>https://arxiv.org/abs/2402.00921</link>
      <description>arXiv:2402.00921v2 Announce Type: replace-cross 
Abstract: Allocating indivisible items among a set of agents is a frequently studied discrete optimization problem. In the setting considered in this work, the agents' preferences over the items are assumed to be identical. We consider a very recent measure for the overall quality of an allocation which does not rely on numerical valuations of the items. Instead, it captures the agents' opinion by a directed acyclic preference graph with vertices representing items. An arc $(a,b)$ in such a graph means that the agents prefer item $a$ over item $b$. For a given allocation of items the dissatisfaction of an agent is defined as the number of items which the agent does not receive and for which no more preferred item is given to the agent. Our goal is to find an efficient allocation of the items to the agents such that the total dissatisfaction over all agents is minimized.
  We explore the dichotomy between NP-hard and polynomially solvable instances, depending on properties of the underlying preference graph. While the problem is NP-hard already for three agents even on very restricted graph classes, it is polynomially solvable for two agents on general preference graphs. For an arbitrary number of agents, we derive polynomial-time algorithms for relevant restrictions of the underlying undirected graph. These are trees and, among the graphs of treewidth two, series-parallel graphs and cactus graphs.</description>
      <guid isPermaLink="false">oai:arXiv.org:2402.00921v2</guid>
      <category>cs.GT</category>
      <category>cs.DM</category>
      <pubDate>Mon, 08 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Nina Chiarelli, Cl\'ement Dallard, Andreas Darmann, Stefan Lendl, Martin Milani\v{c}, Peter Mur\v{s}i\v{c}, Ulrich Pferschy</dc:creator>
    </item>
    <item>
      <title>Multi-Pass Streaming Lower Bounds for Approximating Max-Cut</title>
      <link>https://arxiv.org/abs/2503.23404</link>
      <description>arXiv:2503.23404v2 Announce Type: replace-cross 
Abstract: In the Max-Cut problem in the streaming model, an algorithm is given the edges of an unknown graph $G = (V,E)$ in some fixed order, and its goal is to approximate the size of the largest cut in $G$. Improving upon an earlier result of Kapralov, Khanna and Sudan, it was shown by Kapralov and Krachun that for all $\varepsilon&gt;0$, no $o(n)$ memory streaming algorithm can achieve a $(1/2+\varepsilon)$-approximation for Max-Cut. Their result holds for single-pass streams, i.e.~the setting in which the algorithm only views the stream once, and it was open whether multi-pass access may help. The state-of-the-art result along these lines, due to Assadi and N, rules out arbitrarily good approximation algorithms with constantly many passes and $n^{1-\delta}$ space for any $\delta&gt;0$.
  We improve upon this state-of-the-art result, showing that any non-trivial approximation algorithm for Max-Cut requires either polynomially many passes or polynomially large space. More specifically, we show that for all $\varepsilon&gt;0$, a $k$-pass streaming $(1/2+\varepsilon)$-approximation algorithm for Max-Cut requires $\Omega_{\varepsilon}\left(n^{1/3}/k\right)$ space. This result leads to a similar lower bound for the Maximum Directed Cut problem, showing the near optimality of the algorithm of [Saxena, Singer, Sudan, Velusamy, SODA 2025].
  Our lower bounds proceed by showing a communication complexity lower bound for the Distributional Implicit Hidden Partition (DIHP) Problem, introduced by Kapralov and Krachun. While a naive application of the discrepancy method fails, we identify a property of protocols called ``globalness'', and show that (1) any protocol for DIHP can be turned into a global protocol, (2) the discrepancy of a global protocol must be small. The second step is the more technically involved step in the argument, and therein we use global hypercontractive inequalities.</description>
      <guid isPermaLink="false">oai:arXiv.org:2503.23404v2</guid>
      <category>cs.DS</category>
      <category>cs.CC</category>
      <category>cs.DM</category>
      <pubDate>Mon, 08 Sep 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Yumou Fei, Dor Minzer, Shuo Wang</dc:creator>
    </item>
  </channel>
</rss>
