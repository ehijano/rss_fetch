<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.CG updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.CG</link>
    <description>cs.CG updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.CG" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Fri, 20 Dec 2024 02:53:58 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Thu, 19 Dec 2024 00:00:00 -0500</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>On Stable Approximation Algorithms for Geometric Coverage Problems</title>
      <link>https://arxiv.org/abs/2412.13357</link>
      <description>arXiv:2412.13357v1 Announce Type: new 
Abstract: Let $P$ be a set of points in the plane and let $m$ be an integer. The goal of Max Cover by Unit Disks problem is to place $m$ unit disks whose union covers the maximum number of points from~$P$. We are interested in the dynamic version of Max Cover by Unit Disks problem, where the points in $P$ appear and disappear over time, and the algorithm must maintain a set \cDalg of $m$ disks whose union covers many points. A dynamic algorithm for this problem is a $k$-stable $\alpha$-approximation algorithm when it makes at most $k$ changes to \cDalg upon each update to the set $P$ and the number of covered points at time $t$ is always at least $\alpha \cdot \opt(t)$, where $\opt(t)$ is the maximum number of points that can be covered by m disks at time $t$. We show that for any constant $\varepsilon&gt;0$, there is a $k_{\varepsilon}$-stable $(1-\varepsilon)$-approximation algorithm for the dynamic Max Cover by Unit Disks problem, where $k_{\varepsilon}=O(1/\varepsilon^3)$. This improves the stability of $\Theta(1/\eps^4)$ that can be obtained by combining results of Chaplick, De, Ravsky, and Spoerhase (ESA 2018) and De~Berg, Sadhukhan, and Spieksma (APPROX 2023). Our result extends to other fat similarly-sized objects used in the covering, such as arbitrarily-oriented unit squares, or arbitrarily-oriented fat ellipses of fixed diameter.
  We complement the above result by showing that the restriction to fat objects is necessary to obtain a SAS. To this end, we study the Max Cover by Unit Segments problem, where the goal is to place $m$ unit-length segments whose union covers the maximum number of points from $P$. We show that there is a constant $\varepsilon^* &gt; 0$ such that any $k$-stable $(1 + \varepsilon^*)$-approximation algorithm must have $k=\Omega(m)$, even when the point set never has more than four collinear points.</description>
      <guid isPermaLink="false">oai:arXiv.org:2412.13357v1</guid>
      <category>cs.CG</category>
      <pubDate>Thu, 19 Dec 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Mark de Berg, Arpan Sadhukhan</dc:creator>
    </item>
    <item>
      <title>Flexible realizations existence: NP-completeness on sparse graphs and algorithms</title>
      <link>https://arxiv.org/abs/2412.13721</link>
      <description>arXiv:2412.13721v1 Announce Type: new 
Abstract: One of the questions in Rigidity Theory is whether a realization of the vertices of a graph in the plane is flexible, namely, if it allows a continuous deformation preserving the edge lengths. A flexible realization of a connected graph in the plane exists if and only if the graph has a so called NAC-coloring, which is surjective edge coloring by two colors such that for each cycle either all the edges have the same color or there are at least two edges of each color. The question whether a graph has a NAC-coloring, and hence also the existence of a flexible realization, has been proven to be NP-complete. We show that this question is also NP-complete on graphs with maximum degree five and on graphs with the average degree at most $4+\varepsilon$ for every fixed $\varepsilon &gt;0$. The existence of a NAC-coloring is fixed parameter tractable when parametrized by treewidth. Since the only existing implementation of checking the existence of a NAC-coloring is rather naive, we propose new algorithms along with their implementation, which is significantly faster. We also focus on searching all NAC-colorings of a graph, since they provide useful information about its possible flexible realizations.</description>
      <guid isPermaLink="false">oai:arXiv.org:2412.13721v1</guid>
      <category>cs.CG</category>
      <category>math.CO</category>
      <pubDate>Thu, 19 Dec 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Petr La\v{s}tovi\v{c}ka, Jan Legersk\'y</dc:creator>
    </item>
    <item>
      <title>The Contiguous Art Gallery Problem is Solvable in Polynomial Time</title>
      <link>https://arxiv.org/abs/2412.13938</link>
      <description>arXiv:2412.13938v1 Announce Type: new 
Abstract: In this paper, we study the Contiguous Art Gallery Problem, introduced by Thomas C. Shermer at the 2024 Canadian Conference on Computational Geometry, a variant of the classical art gallery problem from 1973 by Victor Klee. In the contiguous variant, the input is a simple polygon $P$, and the goal is to partition the boundary into a minimum number of polygonal chains such that each chain is visible to a guard. We present a polynomial-time real RAM algorithm, which solves the contiguous art gallery problem. Our algorithm is simple and practical, and we make a C++ implementation available.
  In contrast, many variations of the art gallery problem are at least NP-hard, making the contiguous variant stand out. These include the edge-covering problem, proven NP-hard by Laurentini [The Visual Computer 1999], and the classical art gallery problem, recently shown $\exists\mathbb{R}$-complete by Abrahamsen, Adamaszek, and Miltzow [J. ACM 2022]. Our algorithm is a greedy algorithm that repeatedly traverses the polygon's boundary. To find an optimal solution, we show that it is sufficient to traverse the polygon polynomially many times, resulting in a runtime of $\mathcal{O}\!\left( n^7 \log n \right)$. Additionally, we provide algorithms for the restricted settings, where either the endpoints of the polygonal chains or the guards must coincide with the vertices of the polygon.</description>
      <guid isPermaLink="false">oai:arXiv.org:2412.13938v1</guid>
      <category>cs.CG</category>
      <pubDate>Thu, 19 Dec 2024 00:00:00 -0500</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Magnus Christian Ring Merrild, Casper Moldrup Rysgaard, Jens Kristian Refsgaard Schou, Rolf Svenning</dc:creator>
    </item>
  </channel>
</rss>
