<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.SC updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.SC</link>
    <description>cs.SC updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.SC" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Fri, 18 Jul 2025 04:01:44 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Fri, 18 Jul 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>Probabilistic algorithm for computing all local minimizers of Morse functions on a compact domain</title>
      <link>https://arxiv.org/abs/2507.13071</link>
      <description>arXiv:2507.13071v1 Announce Type: new 
Abstract: Let K be the unit-cube in Rn and f\,: K $\rightarrow$ R^n be a Morse function. We assume that the function f is given by an evaluation program $\Gamma$ in the noisy model, i.e., the evaluation program $\Gamma$ takes an extra parameter $\eta$ as input and returns an approximation that is $\eta$-close to the true value of f . In this article, we design an algorithm able to compute all local minimizers of f on K . Our algorithm takes as input $\Gamma$, $\eta$, a numerical accuracy parameter $\epsilon$ as well as some extra regularity parameters which are made explicit. Under assumptions of probabilistic nature -- related to the choice of the evaluation points used to feed $\Gamma$ --, it returns finitely many rational points of K , such that the set of balls of radius $\epsilon$ centered at these points contains and separates the set of all local minimizers of f . Our method is based on approximation theory, yielding polynomial approximants for f , combined with computer algebra techniques for solving systems of polynomial equations. We provide bit complexity estimates for our algorithm when all regularity parameters are known. Practical experiments show that our implementation of this algorithm in the Julia package Globtim can tackle examples that were not reachable until now.</description>
      <guid isPermaLink="false">oai:arXiv.org:2507.13071v1</guid>
      <category>cs.SC</category>
      <category>math.OC</category>
      <pubDate>Fri, 18 Jul 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Mohab Safey El Din (PolSys), Georgy Scholten (LJLL), Emmanuel Tr\'elat (LJLL)</dc:creator>
    </item>
  </channel>
</rss>
