<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.SC updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.SC</link>
    <description>cs.SC updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.SC" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Mon, 09 Sep 2024 04:00:04 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Mon, 09 Sep 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>OGRePy: An Object-Oriented General Relativity Package for Python</title>
      <link>https://arxiv.org/abs/2409.03803</link>
      <description>arXiv:2409.03803v1 Announce Type: cross 
Abstract: We present OGRePy, the official Python port of the popular Mathematica tensor calculus package OGRe (Object-Oriented General Relativity) - a powerful, yet user-friendly, tool for advanced tensor calculations in mathematics and physics, especially suitable for general relativity. The Python port uses the same robust and performance-oriented algorithms as the original package, and retains its core design principles. However, its truly object-oriented interface, enabled by Python, is more intuitive and flexible than the original Mathematica implementation. It utilizes SymPy for symbolic computations and Jupyter as a notebook interface. OGRePy allows calculating arbitrary tensor formulas using any combination of addition, multiplication by scalar, trace, contraction, partial derivative, covariant derivative, and permutation of indices. Transformations of the tensor components between different index configurations and/or coordinate systems are performed seamlessly behind the scenes as needed, eliminating user error due to combining incompatible representations, and guaranteeing consistent results. In addition, the package provides facilities for easily calculating various curvature tensors and geodesic equations in multiple representations. This paper presents the main features of the package in great detail, including many examples of its use in the context of general relativity research.</description>
      <guid isPermaLink="false">oai:arXiv.org:2409.03803v1</guid>
      <category>gr-qc</category>
      <category>cs.MS</category>
      <category>cs.SC</category>
      <category>math.DG</category>
      <pubDate>Mon, 09 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Barak Shoshany</dc:creator>
    </item>
    <item>
      <title>Computing greatest common divisor of several parametric univariate polynomials via generalized subresultant polynomials</title>
      <link>https://arxiv.org/abs/2401.00408</link>
      <description>arXiv:2401.00408v2 Announce Type: replace 
Abstract: In this paper, we tackle the following problem: compute the gcd for several univariate polynomials with parametric coefficients. It amounts to partitioning the parameter space into ``cells'' so that the gcd has a uniform expression over each cell and constructing a uniform expression of gcd in each cell. We tackle the problem as follows. We begin by making a natural and obvious extension of subresultant polynomials of two polynomials to several polynomials. Then we develop the following structural theories about them.
  1. We generalize Sylvester's theory to several polynomials, in order to obtain an elegant relationship between generalized subresultant polynomials and the gcd of several polynomials, yielding an elegant algorithm.
  2. We generalize Habicht's theory to several polynomials, in order to obtain a systematic relationship between generalized subresultant polynomials and pseudo-remainders, yielding an efficient algorithm.
  Using the generalized theories, we present a simple (structurally elegant) algorithm which is significantly more efficient (both in the output size and computing time) than algorithms based on previous approaches.</description>
      <guid isPermaLink="false">oai:arXiv.org:2401.00408v2</guid>
      <category>cs.SC</category>
      <pubDate>Mon, 09 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Hoon Hong, Jing Yang</dc:creator>
    </item>
    <item>
      <title>Linear equations with monomial constraints and decision problems in abelian-by-cyclic groups</title>
      <link>https://arxiv.org/abs/2406.08480</link>
      <description>arXiv:2406.08480v3 Announce Type: replace 
Abstract: We show that it is undecidable whether a system of linear equations over the Laurent polynomial ring $\mathbb{Z}[X^{\pm}]$ admit solutions where a specified subset of variables take value in the set of monomials $\{X^z \mid z \in \mathbb{Z}\}$. In particular, we construct a finitely presented $\mathbb{Z}[X^{\pm}]$-module, where it is undecidable whether a linear equation $X^{z_1} \boldsymbol{f}_1 + \cdots + X^{z_n} \boldsymbol{f}_n = \boldsymbol{f}_0$ has solutions $z_1, \ldots, z_n \in \mathbb{Z}$. This contrasts the decidability of the case $n = 1$, which can be deduced from Noskov's Lemma.
  We apply this result to settle a number of problems in computational group theory. We show that it is undecidable whether a system of equations has solutions in the wreath product $\mathbb{Z} \wr \mathbb{Z}$, providing a negative answer to an open problem of Kharlampovich, L\'{o}pez and Miasnikov (2020). We show that there exists a finitely generated abelian-by-cyclic group in which the problem of solving a single quadratic equation is undecidable. We also construct a finitely generated abelian-by-cyclic group, different to that of Mishchenko and Treier (2017), in which the Knapsack Problem is undecidable. In contrast, we show that the problem of Coset Intersection is decidable in all finitely generated abelian-by-cyclic groups.</description>
      <guid isPermaLink="false">oai:arXiv.org:2406.08480v3</guid>
      <category>cs.SC</category>
      <category>cs.LO</category>
      <category>math.AC</category>
      <category>math.GR</category>
      <pubDate>Mon, 09 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Ruiwen Dong</dc:creator>
    </item>
  </channel>
</rss>
