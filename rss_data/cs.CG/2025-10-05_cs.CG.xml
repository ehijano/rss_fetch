<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.CG updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.CG</link>
    <description>cs.CG updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.CG" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Mon, 06 Oct 2025 04:00:13 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Mon, 06 Oct 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Local Routing on a Convex Polytope in R^3</title>
      <link>https://arxiv.org/abs/2510.02856</link>
      <description>arXiv:2510.02856v1 Announce Type: new 
Abstract: Given a convex polytope $P$ defined with $n$ vertices in $\mathbb{R}^3$, this paper presents an algorithm to preprocess $P$ to compute routing tables at every vertex of $P$ so that a data packet can be routed on $P$ from any vertex of $P$ to any other vertex of $P$. At every vertex $v$ of $P$ along the routing path, until the packet reaches its destination, the next hop is determined using the routing tables at $v$ and the information stored in the packet header. In $O(n+\min(n^3, \frac{1}{\epsilon^7}))$ time, the preprocessing algorithm computes a routing table at every vertex of $P$ of amortized size $O(\min(n, \frac{1}{\epsilon^{3/2}}))$ bits. If the optimal shortest distance between $s$ and $t$ on $P$ is $d(s, t)$, then the routing path produced by this algorithm has length at most $\frac{8+\epsilon}{\sin{\theta_m}}(D+d(s,t))$. Here, $\epsilon \in (0, 1)$ is an input parameter, $D$ is the maximum length of the diagonal of any cell when $\partial P$ is partitioned into $\frac{1}{\epsilon^3}$ geodesic cells of equal size, and $\theta_m$ is half the minimum angle between any two neighbouring edges of $P$ on $\partial P$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2510.02856v1</guid>
      <category>cs.CG</category>
      <pubDate>Mon, 06 Oct 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Sreehari Chandran, R. Inkulu</dc:creator>
    </item>
    <item>
      <title>Topological Autoencoders++: Fast and Accurate Cycle-Aware Dimensionality Reduction</title>
      <link>https://arxiv.org/abs/2502.20215</link>
      <description>arXiv:2502.20215v2 Announce Type: replace 
Abstract: This paper presents a novel topology-aware dimensionality reduction approach aiming at accurately visualizing the cyclic patterns present in high dimensional data. To that end, we build on the Topological Autoencoders (TopoAE) formulation. First, we provide a novel theoretical analysis of its associated loss and show that a zero loss indeed induces identical persistence pairs (in high and low dimensions) for the $0$-dimensional persistent homology (PH$^0$) of the Rips filtration. We also provide a counter example showing that this property no longer holds for a naive extension of TopoAE to PH$^d$ for $d\ge 1$. Based on this observation, we introduce a novel generalization of TopoAE to $1$-dimensional persistent homology (PH$^1$), called TopoAE++, for the accurate generation of cycle-aware planar embeddings, addressing the above failure case. This generalization is based on the notion of cascade distortion, a new penalty term favoring an isometric embedding of the $2$-chains filling persistent $1$-cycles, hence resulting in more faithful geometrical reconstructions of the $1$-cycles in the plane. We further introduce a novel, fast algorithm for the exact computation of PH for Rips filtrations in the plane, yielding improved runtimes over previously documented topology-aware methods. Our method also achieves a better balance between the topological accuracy, as measured by the Wasserstein distance, and the visual preservation of the cycles in low dimensions. Our C++ implementation is available at https://github.com/MClemot/TopologicalAutoencodersPlusPlus.</description>
      <guid isPermaLink="false">oai:arXiv.org:2502.20215v2</guid>
      <category>cs.CG</category>
      <category>cs.GR</category>
      <category>cs.LG</category>
      <pubDate>Mon, 06 Oct 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Matt\'eo Cl\'emot, Julie Digne, Julien Tierny</dc:creator>
    </item>
    <item>
      <title>Decoupling Geometry from Optimization in 2D Irregular Cutting and Packing Problems: an Open-Source Collision Detection Engine</title>
      <link>https://arxiv.org/abs/2508.08341</link>
      <description>arXiv:2508.08341v4 Announce Type: replace 
Abstract: Addressing irregular cutting and packing (C&amp;P) optimization problems poses two distinct challenges: the geometric challenge of determining whether or not an item can be placed feasibly at a certain position, and the optimization challenge of finding a good solution according to some objective function. Until now, those tackling such problems have had to address both challenges simultaneously, requiring two distinct sets of expertise and a lot of research &amp; development effort. One way to lower this barrier is to decouple the two challenges. In this paper we introduce a powerful collision detection engine (CDE) for 2D irregular C&amp;P problems which assumes full responsibility for the geometric challenge. The CDE (i) allows users to focus with full confidence on their optimization challenge by abstracting geometry away and (ii) enables independent advances to propagate to all optimization algorithms built atop it. We present a set of core principles and design philosophies to model a general and adaptable CDE focused on maximizing performance, accuracy and robustness. These principles are accompanied by a concrete open-source implementation called $\texttt{jagua-rs}$. This paper together with its implementation serves as a catalyst for future advances in irregular C&amp;P problems by providing a solid foundation which can either be used as it currently exists or be further improved upon.</description>
      <guid isPermaLink="false">oai:arXiv.org:2508.08341v4</guid>
      <category>cs.CG</category>
      <category>cs.RO</category>
      <pubDate>Mon, 06 Oct 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:DOI>10.1287/ijoc.2024.1025</arxiv:DOI>
      <dc:creator>Jeroen Gardeyn, Greet Vanden Berghe, Tony Wauters</dc:creator>
    </item>
  </channel>
</rss>
