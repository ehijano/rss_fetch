<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.DM updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.DM</link>
    <description>cs.DM updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.DM" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Fri, 27 Sep 2024 04:00:33 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Fri, 27 Sep 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>HPC acceleration of large (min, +) matrix products to compute domination-type parameters in graphs</title>
      <link>https://arxiv.org/abs/2409.17688</link>
      <description>arXiv:2409.17688v1 Announce Type: new 
Abstract: The computation of the domination-type parameters is a challenging problem in Cartesian product graphs. We present an algorithmic method to compute the $2$-domination number of the Cartesian product of a path with small order and any cycle, involving the $(\min,+)$ matrix product. We establish some theoretical results that provide the algorithms necessary to compute that parameter, and the main challenge to run such algorithms comes from the large size of the matrices used, which makes it necessary to improve the techniques to handle these objects. We analyze the performance of the algorithms on modern multicore CPUs and on GPUs and we show the advantages over the sequential implementation. The use of these platforms allows us to compute the $2$-domination number of cylinders such that their paths have at most $12$ vertices.</description>
      <guid isPermaLink="false">oai:arXiv.org:2409.17688v1</guid>
      <category>cs.DM</category>
      <category>math.CO</category>
      <pubDate>Fri, 27 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <arxiv:DOI>10.1007/s11227-022-04574-5</arxiv:DOI>
      <arxiv:journal_reference>Journal of Supercomputing 78, pp. 17826-17843, 2022</arxiv:journal_reference>
      <dc:creator>E. M. Garz\'on, J. A. Mart\'inez, J. J. Moreno, M. L. Puertas</dc:creator>
    </item>
    <item>
      <title>Rotation distance using flows</title>
      <link>https://arxiv.org/abs/2409.17905</link>
      <description>arXiv:2409.17905v1 Announce Type: new 
Abstract: Splay trees are a simple and efficient dynamic data structure, invented by Sleator and Tarjan. The basic primitive for transforming a binary tree in this scheme is a rotation. Sleator, Tarjan, and Thurston proved that the maximum rotation distance between trees with n internal nodes is exactly 2n-6 for trees with n internal nodes (where n is larger than some constant). The proof of the upper bound is easy but the proof of the lower bound, remarkably, uses sophisticated arguments based on calculating hyperbolic volumes. We give an elementary proof of the same result. The main interest of the paper lies in the method, which is new. It basically relies on a potential function argument, similar to many amortized analyses. However, the potential of a tree is not defined explicitly, but by constructing an instance of a flow problem and using the max-flow min-cut theorem.</description>
      <guid isPermaLink="false">oai:arXiv.org:2409.17905v1</guid>
      <category>cs.DM</category>
      <category>cs.DS</category>
      <pubDate>Fri, 27 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Claire Mathieu, William Thurston</dc:creator>
    </item>
    <item>
      <title>Efficient Approximation of Centrality Measures in Uncertain Graphs</title>
      <link>https://arxiv.org/abs/2409.18062</link>
      <description>arXiv:2409.18062v1 Announce Type: new 
Abstract: In this thesis I propose an algorithm to heuristically calculate different distance measures on uncertain graphs (i.e. graphs where edges only exist with a certain probability) and apply this to the heuristic calculation of harmonic closeness centrality. This approach is mainly based on previous work on the calculation of distance measures by Potamias et al. and on a heuristic algorithm for betweenness centrality by Chenxu Wang and Ziyuan Lin. I extend on their research by using the concept of possible shortest paths, applying them to the afformentioned distances. To the best of my knowledge, this algorithmic approach has never been studied before. I will compare my heuristic results for harmonic closeness against the Monte Carlo method both in runtime and accuracy. Similarly, I will conduct new experiments on the betweenness centrality heuristic proposed y Chenxu Wang and Ziyuan Lin to test its efficacy on a bigger variety of instances. Finally, I will test both of these algorithms on large scale graphs to evaluate the scalability of their runtime.</description>
      <guid isPermaLink="false">oai:arXiv.org:2409.18062v1</guid>
      <category>cs.DM</category>
      <category>cs.DC</category>
      <pubDate>Fri, 27 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-sa/4.0/</dc:rights>
      <dc:creator>Daniel Ketels</dc:creator>
    </item>
    <item>
      <title>Canonical labelling of sparse random graphs</title>
      <link>https://arxiv.org/abs/2409.18109</link>
      <description>arXiv:2409.18109v1 Announce Type: new 
Abstract: We show that if $p=O(1/n)$, then the Erd\H{o}s-R\'{e}nyi random graph $G(n,p)$ with high probability admits a canonical labeling computable in time $O(n\log n)$. Combined with the previous results on the canonization of random graphs, this implies that $G(n,p)$ with high probability admits a polynomial-time canonical labeling whatever the edge probability function $p$. Our algorithm combines the standard color refinement routine with simple post-processing based on the classical linear-time tree canonization. Noteworthy, our analysis of how well color refinement performs in this setting allows us to complete the description of the automorphism group of the 2-core of $G(n,p)$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2409.18109v1</guid>
      <category>cs.DM</category>
      <category>math.CO</category>
      <pubDate>Fri, 27 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Oleg Verbitsky, Maksim Zhukovskii</dc:creator>
    </item>
    <item>
      <title>Bounds on the Complete Forcing Number of Graphs</title>
      <link>https://arxiv.org/abs/2409.17306</link>
      <description>arXiv:2409.17306v1 Announce Type: cross 
Abstract: A forcing set for a perfect matching of a graph is defined as a subset of the edges of that perfect matching such that there exists a unique perfect matching containing it. A complete forcing set for a graph is a subset of its edges, such that it intersects the edges of every perfect matching in a forcing set of that perfect matching. The size of a smallest complete forcing set of a graph is called the complete forcing number of the graph. In this paper, we derive new upper bounds for the complete forcing number of graphs in terms of other graph theoretical parameters such as the degeneracy or the spectral radius of the graph. We show that for graphs with the number of edges more than some constant times the number of vertices, our result outperforms the best known upper bound for the complete forcing number. For the set of edge-transitive graphs, we present a lower bound for the complete forcing number in terms of maximum forcing number. This result in particular is applied to the hypercube graphs and Cartesian powers of even cycles.</description>
      <guid isPermaLink="false">oai:arXiv.org:2409.17306v1</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <pubDate>Fri, 27 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Javad B. Ebrahimi, Aref Nemayande, Elahe Tohidi</dc:creator>
    </item>
    <item>
      <title>Towards a complete classification of holographic entropy inequalities</title>
      <link>https://arxiv.org/abs/2409.17317</link>
      <description>arXiv:2409.17317v1 Announce Type: cross 
Abstract: We propose a deterministic method to find all holographic entropy inequalities and prove the completeness of our method. We use a triality between holographic entropy inequalities, contraction maps and partial cubes. More specifically, the validity of a holographic entropy inequality is implied by the existence of a contraction map, which we prove to be equivalent to finding an isometric embedding of a contracted graph. Thus, by virtue of the completeness of the contraction map proof method, the problem of finding all holographic entropy inequalities is equivalent to the problem of finding all contraction maps, which we translate to a problem of finding all image graph partial cubes. We give an algorithmic solution to this problem and characterize the complexity of our method. We also demonstrate interesting by-products, most notably, a procedure to generate candidate quantum entropy inequalities.</description>
      <guid isPermaLink="false">oai:arXiv.org:2409.17317v1</guid>
      <category>hep-th</category>
      <category>cs.DM</category>
      <category>quant-ph</category>
      <pubDate>Fri, 27 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Ning Bao, Keiichiro Furuya, Joydeep Naskar</dc:creator>
    </item>
    <item>
      <title>Powers of large matrices on GPU platforms to compute the Roman domination number of cylindrical graphs</title>
      <link>https://arxiv.org/abs/2409.17658</link>
      <description>arXiv:2409.17658v1 Announce Type: cross 
Abstract: The Roman domination in a graph $G$ is a variant of the classical domination, defined by means of a so-called Roman domination function $f\colon V(G)\to \{0,1,2\}$ such that if $f(v)=0$ then, the vertex $v$ is adjacent to at least one vertex $w$ with $f(w)=2$. The weight $f(G)$ of a Roman dominating function of $G$ is the sum of the weights of all vertices of $G$, that is, $f(G)=\sum_{u\in V(G)}f(u)$. The Roman domination number $\gamma_R(G)$ is the minimum weight of a Roman dominating function of $G$. In this paper we propose algorithms to compute this parameter involving the $(\min,+)$ powers of large matrices with high computational requirements and the GPU (Graphics Processing Unit) allows us to accelerate such operations. Specific routines have been developed to efficiently compute the $(\min ,+)$ product on GPU architecture, taking advantage of its computational power. These algorithms allow us to compute the Roman domination number of cylindrical graphs $P_m\Box C_n$ i.e., the Cartesian product of a path and a cycle, in cases $m=7,8,9$, $ n\geq 3$ and $m\geq $10$, n\equiv 0\pmod 5$. Moreover, we provide a lower bound for the remaining cases $m\geq 10, n\not\equiv 0\pmod 5$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2409.17658v1</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <pubDate>Fri, 27 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <arxiv:DOI>10.1109/ACCESS.2021.3058738</arxiv:DOI>
      <arxiv:journal_reference>IEEE Access, vol. 9, pp. 29346-29355, 2021</arxiv:journal_reference>
      <dc:creator>J. A. Mart\'inez, E. M. Garz\'on, M. L. Puertas</dc:creator>
    </item>
    <item>
      <title>Optimal Mixing via Tensorization for Random Independent Sets on Arbitrary Trees</title>
      <link>https://arxiv.org/abs/2307.07727</link>
      <description>arXiv:2307.07727v4 Announce Type: replace 
Abstract: We study the mixing time of the single-site update Markov chain, known as the Glauber dynamics, for generating a random independent set of a tree. Our focus is obtaining optimal convergence results for arbitrary trees. We consider the more general problem of sampling from the Gibbs distribution in the hard-core model where independent sets are weighted by a parameter $\lambda&gt;0$; the special case $\lambda=1$ corresponds to the uniform distribution over all independent sets. Previous work of Martinelli, Sinclair and Weitz (2004) obtained optimal mixing time bounds for the complete $\Delta$-regular tree for all $\lambda$. However, Restrepo et al. (2014) showed that for sufficiently large $\lambda$ there are bounded-degree trees where optimal mixing does not hold. Recent work of Eppstein and Frishberg (2022) proved a polynomial mixing time bound for the Glauber dynamics for arbitrary trees, and more generally for graphs of bounded tree-width.
  We establish an optimal bound on the relaxation time (i.e., inverse spectral gap) of $O(n)$ for the Glauber dynamics for unweighted independent sets on arbitrary trees. We stress that our results hold for arbitrary trees and there is no dependence on the maximum degree $\Delta$. Interestingly, our results extend (far) beyond the uniqueness threshold which is on the order $\lambda=O(1/\Delta)$. Our proof approach is inspired by recent work on spectral independence. In fact, we prove that spectral independence holds with a constant independent of the maximum degree for any tree, but this does not imply mixing for general trees as the optimal mixing results of Chen, Liu, and Vigoda (2021) only apply for bounded degree graphs. We instead utilize the combinatorial nature of independent sets to directly prove approximate tensorization of variance via a non-trivial inductive proof.</description>
      <guid isPermaLink="false">oai:arXiv.org:2307.07727v4</guid>
      <category>cs.DM</category>
      <category>cs.DS</category>
      <pubDate>Fri, 27 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Charilaos Efthymiou, Thomas P. Hayes, Daniel Stefankovic, Eric Vigoda</dc:creator>
    </item>
    <item>
      <title>Solving the Graph Burning Problem for Large Graphs</title>
      <link>https://arxiv.org/abs/2404.17080</link>
      <description>arXiv:2404.17080v2 Announce Type: replace 
Abstract: We propose an exact algorithm for the Graph Burning Problem ($\texttt{GBP}$), an NP-hard optimization problem that models the spread of influence on social networks. Given a graph $G$ with vertex set $V$, the objective is to find a sequence of $k$ vertices in $V$, namely, $v_1, v_2, \dots, v_k$, such that $k$ is minimum and $\bigcup_{i = 1}^{k} \{u\! \in\! V\! : d(u, v_i) \leq k - i\} = V$, where $d(u,v)$ denotes the distance between $u$ and $v$. We formulate the problem as a set covering integer programming model and design a row generation algorithm for the $\texttt{GBP}$. Our method exploits the fact that a very small number of covering constraints is often sufficient for solving the integer model, allowing the corresponding rows to be generated on demand. To date, the most efficient exact algorithm for the $\texttt{GBP}$, denoted here by $\texttt{GDCA}$, is able to obtain optimal solutions for graphs with up to 14,000 vertices within two hours of execution. In comparison, our algorithm finds provably optimal solutions approximately 236 times faster, on average, than $\texttt{GDCA}$. For larger graphs, memory space becomes a limiting factor for $\texttt{GDCA}$. Our algorithm, however, solves real-world instances with almost 200,000 vertices in less than 35 seconds, increasing the size of graphs for which optimal solutions are known by a factor of 14.</description>
      <guid isPermaLink="false">oai:arXiv.org:2404.17080v2</guid>
      <category>cs.DM</category>
      <category>cs.DS</category>
      <category>math.CO</category>
      <pubDate>Fri, 27 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <arxiv:DOI>10.4230/LIPIcs.ESA.2024.94</arxiv:DOI>
      <arxiv:journal_reference>A Row Generation Algorithm for Finding Optimal Burning Sequences of Large Graphs. In 32nd Annual European Symposium on Algorithms (ESA 2024). Leibniz International Proceedings in Informatics (LIPIcs), Volume 308, pp. 94:1-94:17, 2024</arxiv:journal_reference>
      <dc:creator>Felipe de Carvalho Pereira, Pedro Jussieu de Rezende, Tallys Yunes, Luiz Fernando Batista Morato</dc:creator>
    </item>
    <item>
      <title>On Relaxation of Dominant Sets</title>
      <link>https://arxiv.org/abs/2206.13773</link>
      <description>arXiv:2206.13773v2 Announce Type: replace-cross 
Abstract: In a graph $G = (V,E)$, a k-ruling set $S$ is one in which all vertices $V$ \ $S$ are at most $k$ distance from $S$. Finding a minimum k-ruling set is intrinsically linked to the minimum dominating set problem and maximal independent set problem, which have been extensively studied in graph theory. This paper presents the first known algorithm for solving all k-ruling set problems in conjunction with known minimum dominating set algorithms at only additional polynomial time cost compared to a minimum dominating set. The algorithm further succeeds for $(\alpha, \alpha - 1)$ ruling sets in which $\alpha &gt; 1$, for which constraints exist on the proximity of vertices v $\in S$. This secondary application instead works in conjunction with maximal independent set algorithms.</description>
      <guid isPermaLink="false">oai:arXiv.org:2206.13773v2</guid>
      <category>cs.DS</category>
      <category>cs.DM</category>
      <category>math.CO</category>
      <pubDate>Fri, 27 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Max Koster</dc:creator>
    </item>
    <item>
      <title>On Oriented Diameter of Power Graphs</title>
      <link>https://arxiv.org/abs/2409.02457</link>
      <description>arXiv:2409.02457v3 Announce Type: replace-cross 
Abstract: In this paper, we study the oriented diameter of power graphs of groups. We show that a $2$-edge connected power graph of a finite group has oriented diameter at most $4$. We prove that the power graph of a cyclic group of order $n$ has oriented diameter $2$ for all $n\neq 2,4,6$. Until our work, to the best of our knowledge, no infinite family of graphs with oriented diameter 2 had been identified except for subclasses of complete graphs. Finally, we give a complete characterization of the oriented diameter of the power graphs of nilpotent groups. This, in turn, gives an algorithm for computing the oriented diameter of the power graph of a given nilpotent group that runs in time polynomial in the size of the group.</description>
      <guid isPermaLink="false">oai:arXiv.org:2409.02457v3</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <pubDate>Fri, 27 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Deepu Benson, Bireswar Das, Dipan Dey, Jinia Ghosh</dc:creator>
    </item>
  </channel>
</rss>
