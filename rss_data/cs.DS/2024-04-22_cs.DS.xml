<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.DS updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.DS</link>
    <description>cs.DS updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.DS" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Mon, 22 Apr 2024 04:00:01 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Mon, 22 Apr 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>The graph alignment problem: fundamental limits and efficient algorithms</title>
      <link>https://arxiv.org/abs/2404.12418</link>
      <description>arXiv:2404.12418v1 Announce Type: new 
Abstract: This thesis studies the graph alignment problem, the noisy version of the graph isomorphism problem, which aims to find a matching between the nodes of two graphs which preserves most of the edges. Focusing on the planted version where the graphs are random, we are interested in understanding the fundamental information-theoretical limits for this problem, as well as designing and analyzing algorithms that are able to recover the underlying alignment in the data. For these algorithms, we give some high probability guarantees on the regime in which they succeed or fail.</description>
      <guid isPermaLink="false">oai:arXiv.org:2404.12418v1</guid>
      <category>cs.DS</category>
      <category>cs.LG</category>
      <category>math.PR</category>
      <category>stat.ML</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Luca Ganassali</dc:creator>
    </item>
    <item>
      <title>Contract Scheduling with Distributional and Multiple Advice</title>
      <link>https://arxiv.org/abs/2404.12485</link>
      <description>arXiv:2404.12485v1 Announce Type: new 
Abstract: Contract scheduling is a widely studied framework for designing real-time systems with interruptible capabilities. Previous work has showed that a prediction on the interruption time can help improve the performance of contract-based systems, however it has relied on a single prediction that is provided by a deterministic oracle. In this work, we introduce and study more general and realistic learning-augmented settings in which the prediction is in the form of a probability distribution, or it is given as a set of multiple possible interruption times. For both prediction settings, we design and analyze schedules which perform optimally if the prediction is accurate, while simultaneously guaranteeing the best worst-case performance if the prediction is adversarial. We also provide evidence that the resulting system is robust to prediction errors in the distributional setting. Last, we present an experimental evaluation that confirms the theoretical findings, and illustrates the performance improvements that can be attained in practice.</description>
      <guid isPermaLink="false">oai:arXiv.org:2404.12485v1</guid>
      <category>cs.DS</category>
      <category>cs.AI</category>
      <category>cs.LG</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Spyros Angelopoulos, Marcin Bienkowski, Christoph D\"urr, Bertrand Simon</dc:creator>
    </item>
    <item>
      <title>An algorithm with a delay of $\mathcal{O}(k\Delta)$ for enumerating connected induced subgraphs of size $k$</title>
      <link>https://arxiv.org/abs/2404.12559</link>
      <description>arXiv:2404.12559v1 Announce Type: new 
Abstract: The problem of enumerating connected subgraphs of a given size in a graph has been extensively studied in recent years. In this short communication, we propose an algorithm with a delay of $\mathcal{O}(k\Delta)$ for enumerating all connected induced subgraphs of size $k$ in an undirected graph $G=(V, E)$, where $k$ and $\Delta$ are respectively the size of subgraphs and the maximum degree of $G$. The proposed algorithm improves upon the current best delay bound $\mathcal{O}(k^2\Delta)$ for the connected induced subgraph enumeration problem in the literature.</description>
      <guid isPermaLink="false">oai:arXiv.org:2404.12559v1</guid>
      <category>cs.DS</category>
      <category>cs.DM</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <dc:creator>Chenglong Xiao, Chengyong Mao, Shanshan Wang</dc:creator>
    </item>
    <item>
      <title>Exploiting New Properties of String Net Frequency for Efficient Computation</title>
      <link>https://arxiv.org/abs/2404.12701</link>
      <description>arXiv:2404.12701v1 Announce Type: new 
Abstract: Knowing which strings in a massive text are significant -- that is, which strings are common and distinct from other strings -- is valuable for several applications, including text compression and tokenization. Frequency in itself is not helpful for significance, because the commonest strings are the shortest strings. A compelling alternative is net frequency, which has the property that strings with positive net frequency are of maximal length. However, net frequency remains relatively unexplored, and there is no prior art showing how to compute it efficiently. We first introduce a characteristic of net frequency that simplifies the original definition. With this, we study strings with positive net frequency in Fibonacci words. We then use our characteristic and solve two key problems related to net frequency. First, \textsc{single-nf}, how to compute the net frequency of a given string of length $m$, in an input text of length $n$ over an alphabet size $\sigma$. Second, \textsc{all-nf}, given length-$n$ input text, how to report every string of positive net frequency. Our methods leverage suffix arrays, components of the Burrows-Wheeler transform, and solution to the coloured range listing problem. We show that, for both problems, our data structure has $O(n)$ construction cost: with this structure, we solve \textsc{single-nf} in $O(m + \sigma)$ time and \textsc{all-nf} in $O(n)$ time. Experimentally, we find our method to be around 100 times faster than reasonable baselines for \textsc{single-nf}. For \textsc{all-nf}, our results show that, even with prior knowledge of the set of strings with positive net frequency, simply confirming that their net frequency is positive takes longer than with our purpose-designed method.</description>
      <guid isPermaLink="false">oai:arXiv.org:2404.12701v1</guid>
      <category>cs.DS</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Peaker Guo, Patrick Eades, Anthony Wirth, Justin Zobel</dc:creator>
    </item>
    <item>
      <title>Dynamic Parameterized Feedback Problems in Tournaments</title>
      <link>https://arxiv.org/abs/2404.12907</link>
      <description>arXiv:2404.12907v1 Announce Type: new 
Abstract: In this paper we present the first dynamic algorithms for the problem of Feedback Arc Set in Tournaments (FAST) and the problem of Feedback Vertex Set in Tournaments (FVST). Our algorithms maintain a dynamic tournament on n vertices altered by redirecting the arcs, and answer if the tournament admits a feedback arc set (or respectively feedback vertex set) of size at most K, for some chosen parameter K. For dynamic FAST we offer two algorithms. In the promise model, where we are guaranteed, that the size of the solution does not exceed g(K) for some computable function g, we give an $O(\sqrt{g(K)})$ update and $O(3^K K \sqrt{K})$ query algorithm. In the general setting without any promise, we offer an $O(\log^2 n)$ update and $O(3^K K \log^2 n)$ query time algorithm for dynamic FAST. For dynamic FVST we offer an algorithm working in the promise model, which admits $O(g^5(K))$ update and $O(3^K K^3 g(K))$ query time.</description>
      <guid isPermaLink="false">oai:arXiv.org:2404.12907v1</guid>
      <category>cs.DS</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Anna Zych-Pawlewicz, Marek \.Zochowski</dc:creator>
    </item>
    <item>
      <title>Fast Broadcast in Highly Connected Networks</title>
      <link>https://arxiv.org/abs/2404.12930</link>
      <description>arXiv:2404.12930v1 Announce Type: cross 
Abstract: We revisit the classic broadcast problem, wherein we have $k$ messages, each composed of $O(\log{n})$ bits, distributed arbitrarily across a network. The objective is to broadcast these messages to all nodes in the network. In the distributed CONGEST model, a textbook algorithm solves this problem in $O(D+k)$ rounds, where $D$ is the diameter of the graph. While the $O(D)$ term in the round complexity is unavoidable$\unicode{x2014}$given that $\Omega(D)$ rounds are necessary to solve broadcast in any graph$\unicode{x2014}$it remains unclear whether the $O(k)$ term is needed in all graphs. In cases where the minimum cut size is one, simply transmitting messages from one side of the cut to the other would require $\Omega(k)$ rounds. However, if the size of the minimum cut is larger, it may be possible to develop faster algorithms. This motivates the exploration of the broadcast problem in networks with high edge connectivity.
  In this work, we present a simple randomized distributed algorithm for performing $k$-message broadcast in $O(((n+k)/\lambda)\log n)$ rounds in any $n$-node simple graph with edge connectivity $\lambda$. When $k = \Omega(n)$, our algorithm is universally optimal, up to an $O(\log n)$ factor, as its complexity nearly matches an information-theoretic $\Omega(k/\lambda)$ lower bound that applies to all graphs, even when the network topology is known to the algorithm.
  The setting $k = \Omega(n)$ is particularly interesting because several fundamental problems can be reduced to broadcasting $\Omega(n)$ messages. Our broadcast algorithm finds several applications in distributed computing, enabling $O(1)$-approximation for all distances and $(1+\epsilon)$-approximation for all cut sizes in $\tilde{O}(n/\lambda)$ rounds.</description>
      <guid isPermaLink="false">oai:arXiv.org:2404.12930v1</guid>
      <category>cs.DC</category>
      <category>cs.DS</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Shashwat Chandra, Yi-Jun Chang, Michal Dory, Mohsen Ghaffari, Dean Leitersdorf</dc:creator>
    </item>
    <item>
      <title>Low-Depth Spatial Tree Algorithms</title>
      <link>https://arxiv.org/abs/2404.12953</link>
      <description>arXiv:2404.12953v1 Announce Type: cross 
Abstract: Contemporary accelerator designs exhibit a high degree of spatial localization, wherein two-dimensional physical distance determines communication costs between processing elements. This situation presents considerable algorithmic challenges, particularly when managing sparse data, a pivotal component in progressing data science. The spatial computer model quantifies communication locality by weighting processor communication costs by distance, introducing a term named energy. Moreover, it integrates depth, a widely-utilized metric, to promote high parallelism. We propose and analyze a framework for efficient spatial tree algorithms within the spatial computer model. Our primary method constructs a spatial tree layout that optimizes the locality of the neighbors in the compute grid. This approach thereby enables locality-optimized messaging within the tree. Our layout achieves a polynomial factor improvement in energy compared to utilizing a PRAM approach. Using this layout, we develop energy-efficient treefix sum and lowest common ancestor algorithms, which are both fundamental building blocks for other graph algorithms. With high probability, our algorithms exhibit near-linear energy and poly-logarithmic depth. Our contributions augment a growing body of work demonstrating that computations can have both high spatial locality and low depth. Moreover, our work constitutes an advancement in the spatial layout of irregular and sparse computations.</description>
      <guid isPermaLink="false">oai:arXiv.org:2404.12953v1</guid>
      <category>cs.DC</category>
      <category>cs.DS</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Yves Baumann, Tal Ben-Nun, Maciej Besta, Lukas Gianinazzi, Torsten Hoefler, Piotr Luczynski</dc:creator>
    </item>
    <item>
      <title>Mean-field Potts and random-cluster dynamics from high-entropy initializations</title>
      <link>https://arxiv.org/abs/2404.13014</link>
      <description>arXiv:2404.13014v1 Announce Type: cross 
Abstract: A common obstruction to efficient sampling from high-dimensional distributions is the multimodality of the target distribution because Markov chains may get trapped far from stationarity. Still, one hopes that this is only a barrier to the mixing of Markov chains from worst-case initializations and can be overcome by choosing high-entropy initializations, e.g., a product or weakly correlated distribution. Ideally, from such initializations, the dynamics would escape from the saddle points separating modes quickly and spread its mass between the dominant modes.
  In this paper, we study convergence from high-entropy initializations for the random-cluster and Potts models on the complete graph -- two extensively studied high-dimensional landscapes that pose many complexities like discontinuous phase transitions and asymmetric metastable modes. We study the Chayes--Machta and Swendsen--Wang dynamics for the mean-field random-cluster model and the Glauber dynamics for the Potts model. We sharply characterize the set of product measure initializations from which these Markov chains mix rapidly, even though their mixing times from worst-case initializations are exponentially slow. Our proofs require careful approximations of projections of high-dimensional Markov chains (which are not themselves Markovian) by tractable 1-dimensional random processes, followed by analysis of the latter's escape from saddle points separating stable modes.</description>
      <guid isPermaLink="false">oai:arXiv.org:2404.13014v1</guid>
      <category>math.PR</category>
      <category>cs.DS</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Antonio Blanca, Reza Gheissari, Xusheng Zhang</dc:creator>
    </item>
    <item>
      <title>Correcting matrix products over the ring of integers</title>
      <link>https://arxiv.org/abs/2307.12513</link>
      <description>arXiv:2307.12513v2 Announce Type: replace 
Abstract: Let $A$, $B$, and $C$ be three $n\times n$ matrices. We investigate the problem of verifying whether $AB=C$ over the ring of integers and finding the correct product $AB$. Given that $C$ is different from $AB$ by at most $k$ entries, we propose an algorithm that uses $O(\sqrt{k}n^2+k^2n)$ operations.
  Let $\alpha$ be the largest absolute value of an entry in $A$, $B$, and $C$. The integers involved in the computation are of $O(n^3\alpha^2)$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2307.12513v2</guid>
      <category>cs.DS</category>
      <category>cs.DM</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <arxiv:DOI>10.1016/j.ipl.2024.106496</arxiv:DOI>
      <arxiv:journal_reference>Information Processing Letters 186 (2024), 106496</arxiv:journal_reference>
      <dc:creator>Yu-Lun Wu, Hung-Lung Wang</dc:creator>
    </item>
    <item>
      <title>Optimal Non-Adaptive Cell Probe Dictionaries and Hashing</title>
      <link>https://arxiv.org/abs/2308.16042</link>
      <description>arXiv:2308.16042v2 Announce Type: replace 
Abstract: We present a simple and provably optimal non-adaptive cell probe data structure for the static dictionary problem. Our data structure supports storing a set of n key-value pairs from [u]x[u] using s words of space and answering key lookup queries in t = O(lg(u/n)/ lg(s/n)) nonadaptive probes. This generalizes a solution to the membership problem (i.e., where no values are associated with keys) due to Buhrman et al. We also present matching lower bounds for the non-adaptive static membership problem in the deterministic setting. Our lower bound implies that both our dictionary algorithm and the preceding membership algorithm are optimal, and in particular that there is an inherent complexity gap in these problems between no adaptivity and one round of adaptivity (with which hashing-based algorithms solve these problems in constant time). Using the ideas underlying our data structure, we also obtain the first implementation of a n-wise independent family of hash functions with optimal evaluation time in the cell probe model.</description>
      <guid isPermaLink="false">oai:arXiv.org:2308.16042v2</guid>
      <category>cs.DS</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Kasper Green Larsen, Rasmus Pagh, Giuseppe Persiano, Toniann Pitassi, Kevin Yeo, Or Zamir</dc:creator>
    </item>
    <item>
      <title>Noise Stability Optimization for Flat Minima with Tight Rates</title>
      <link>https://arxiv.org/abs/2306.08553</link>
      <description>arXiv:2306.08553v3 Announce Type: replace-cross 
Abstract: We consider minimizing a perturbed function $F(W) = \mathbb{E}_{U}[f(W + U)]$, given a function $f: \mathbb{R}^d \rightarrow \mathbb{R}$ and a random sample $U$ from a distribution $\mathcal{P}$ with mean zero. When $\mathcal{P}$ is the isotropic Gaussian, $F(W)$ is roughly equal to $f(W)$ plus a penalty on the trace of $\nabla^2 f(W)$, scaled by the variance of $\mathcal{P}$. This penalty on the Hessian has the benefit of improving generalization, through PAC-Bayes analysis. It is useful in low-sample regimes, for instance, when a (large) pre-trained model is fine-tuned on a small data set. One way to minimize $F$ is by adding $U$ to $W$, and then run SGD. We observe, empirically, that this noise injection does not provide significant gains over SGD, in our experiments of conducting fine-tuning on three image classification data sets. We design a simple, practical algorithm that adds noise along both $U$ and $-U$, with the option of adding several perturbations and taking their average. We analyze the convergence of this algorithm, showing tight rates on the norm of the output's gradient.
  We provide a comprehensive empirical analysis of our algorithm, by first showing that in an over-parameterized matrix sensing problem, it can find solutions with lower test loss than naive noise injection. Then, we compare our algorithm with four sharpness-reducing training methods (such as the Sharpness-Aware Minimization (Foret et al., 2021)). We find that our algorithm can outperform them by up to 1.8% test accuracy, for fine-tuning ResNet on six image classification data sets. It leads to a 17.7% (and 12.8%) reduction in the trace (and largest eigenvalue) of the Hessian matrix of the loss surface. This form of regularization on the Hessian is compatible with $\ell_2$ weight decay (and data augmentation), in the sense that combining both can lead to improved empirical performance.</description>
      <guid isPermaLink="false">oai:arXiv.org:2306.08553v3</guid>
      <category>cs.LG</category>
      <category>cs.DS</category>
      <category>math.OC</category>
      <category>stat.ML</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Haotian Ju, Dongyue Li, Hongyang R. Zhang</dc:creator>
    </item>
    <item>
      <title>Testing Spreading Behavior in Networks with Arbitrary Topologies</title>
      <link>https://arxiv.org/abs/2309.05442</link>
      <description>arXiv:2309.05442v3 Announce Type: replace-cross 
Abstract: Inspired by the works of Goldreich and Ron (J. ACM, 2017) and Nakar and Ron (ICALP, 2021), we initiate the study of property testing in dynamic environments with arbitrary topologies. Our focus is on the simplest non-trivial rule that can be tested, which corresponds to the 1-BP rule of bootstrap percolation and models a simple spreading behavior: Every "infected" node stays infected forever, and each "healthy" node becomes infected if and only if it has at least one infected neighbor. We show various results for both the case where we test a single time step of evolution and where the evolution spans several time steps. In the first, we show that the worst-case query complexity is $O(\Delta/\varepsilon)$ or $\tilde{O}(\sqrt{n}/\varepsilon)$ (whichever is smaller), where $\Delta$ and $n$ are the maximum degree of a node and number of vertices, respectively, in the underlying graph, and we also show lower bounds for both one- and two-sided error testers that match our upper bounds up to $\Delta = o(\sqrt{n})$ and $\Delta = O(n^{1/3})$, respectively. In the second setting of testing the environment over $T$ time steps, we show upper bounds of $O(\Delta^{T-1}/\varepsilon T)$ and $\tilde{O}(|E|/\varepsilon T)$, where $E$ is the set of edges of the underlying graph. All of our algorithms are one-sided error, and all of them are also time-conforming and non-adaptive, with the single exception of the more complex $\tilde{O}(\sqrt{n}/\varepsilon)$-query tester for the case $T = 2$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2309.05442v3</guid>
      <category>cs.DC</category>
      <category>cs.CC</category>
      <category>cs.DS</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <arxiv:DOI>10.4230/LIPIcs.ICALP.2024.40</arxiv:DOI>
      <dc:creator>Augusto Modanese, Yuichi Yoshida</dc:creator>
    </item>
    <item>
      <title>Reductive Quantum Phase Estimation</title>
      <link>https://arxiv.org/abs/2402.04471</link>
      <description>arXiv:2402.04471v3 Announce Type: replace-cross 
Abstract: Estimating a quantum phase is a necessary task in a wide range of fields of quantum science. To accomplish this task, two well-known methods have been developed in distinct contexts, namely, Ramsey interferometry (RI) in atomic and molecular physics and quantum phase estimation (QPE) in quantum computing. We demonstrate that these canonical examples are instances of a larger class of phase estimation protocols, which we call reductive quantum phase estimation (RQPE) circuits. Here we present an explicit algorithm that allows one to create an RQPE circuit. This circuit distinguishes an arbitrary set of phases with a fewer number of qubits and unitary applications, thereby solving a general class of quantum hypothesis testing to which RI and QPE belong. We further demonstrate a trade-off between measurement precision and phase distinguishability, which allows one to tune the circuit to be optimal for a specific application.</description>
      <guid isPermaLink="false">oai:arXiv.org:2402.04471v3</guid>
      <category>quant-ph</category>
      <category>cs.DS</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Nicholas J. C. Papadopoulos, Jarrod T. Reilly, John Drew Wilson, Murray J. Holland</dc:creator>
    </item>
    <item>
      <title>Probabilistic estimates of the diameters of the Rubik's Cube groups</title>
      <link>https://arxiv.org/abs/2404.07337</link>
      <description>arXiv:2404.07337v3 Announce Type: replace-cross 
Abstract: The diameter of the Cayley graph of the Rubik's Cube group is the fewest number of turns needed to solve the Cube from any initial configurations. For the 2$\times$2$\times$2 Cube, the diameter is 11 in the half-turn metric, 14 in the quarter-turn metric, 19 in the semi-quarter-turn metric, and 10 in the bi-quarter-turn metric. For the 3$\times$3$\times$3 Cube, the diameter was determined by Rokicki et al. to be 20 in the half-turn metric and 26 in the quarter-turn metric. This study shows that a modified version of the coupon collector's problem in probabilistic theory can predict the diameters correctly for both 2$\times$2$\times$2 and 3$\times$3$\times$3 Cubes insofar as the quarter-turn metric is adopted. In the half-turn metric, the diameters are overestimated by one and two, respectively, for the 2$\times$2$\times$2 and 3$\times$3$\times$3 Cubes, whereas for the 2$\times$2$\times$2 Cube in the semi-quarter-turn and bi-quarter-turn metrics, they are overestimated by two and underestimated by one, respectively. Invoking the same probabilistic logic, the diameters of the 4$\times$4$\times$4 and 5$\times$5$\times$5 Cubes are predicted to be 48 (41) and 68 (58) in the quarter-turn (half-turn) metric, whose precise determinations are far beyond reach of classical supercomputing. It is shown that the probabilistically estimated diameter is approximated by $\ln N / \ln r + \ln N / r$, where $N$ is the number of configurations and $r$ is the branching ratio.</description>
      <guid isPermaLink="false">oai:arXiv.org:2404.07337v3</guid>
      <category>cs.DM</category>
      <category>cs.DS</category>
      <category>math.CO</category>
      <category>math.PR</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>So Hirata</dc:creator>
    </item>
    <item>
      <title>A Fast Maximum Clique Algorithm Based on Network Decomposition for Large Sparse Networks</title>
      <link>https://arxiv.org/abs/2404.11862</link>
      <description>arXiv:2404.11862v2 Announce Type: replace-cross 
Abstract: Finding maximum cliques in large networks is a challenging combinatorial problem with many real-world applications. We present a fast algorithm to achieve the exact solution for the maximum clique problem in large sparse networks based on efficient graph decomposition. A bunch of effective techniques is being used to greatly prune the graph and a novel concept called Complete-Upper-Bound-Induced Subgraph (CUBIS) is proposed to ensure that the structures with the potential to form the maximum clique are retained in the process of graph decomposition. Our algorithm first pre-prunes peripheral nodes, subsequently, one or two small-scale CUBISs are constructed guided by the core number and current maximum clique size. Bron-Kerbosch search is performed on each CUBIS to find the maximum clique. Experiments on 50 empirical networks with a scale of up to 20 million show the CUBIS scales are largely independent of the original network scale. This enables an approximately linear runtime, making our algorithm amenable for large networks. Our work provides a new framework for effectively solving maximum clique problems on massive sparse graphs, which not only makes the graph scale no longer the bottleneck but also shows some light on solving other clique-related problems.</description>
      <guid isPermaLink="false">oai:arXiv.org:2404.11862v2</guid>
      <category>cs.SI</category>
      <category>cs.DS</category>
      <category>cs.IR</category>
      <category>physics.data-an</category>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Tianlong Fan, Wenjun Jiang, Yi-Cheng Zhang, Linyuan L\"u</dc:creator>
    </item>
  </channel>
</rss>
