<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.LO updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.LO</link>
    <description>cs.LO updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.LO" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Tue, 01 Apr 2025 03:13:35 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Mon, 31 Mar 2025 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>Towards the Usage of Window Counting Constraints in the Synthesis of Reactive Systems to Reduce State Space Explosion</title>
      <link>https://arxiv.org/abs/2503.21852</link>
      <description>arXiv:2503.21852v1 Announce Type: new 
Abstract: The synthesis of reactive systems aims for the automated construction of strategies for systems that interact with their environment. Whereas the synthesis approach has the potential to change the development of reactive systems significantly due to the avoidance of manual implementation, it still suffers from a lack of efficient synthesis algorithms for many application scenarios. The translation of the system specification into an automaton that allows for strategy construction (if a winning strategy exists) is nonelementary in the length of the specification in S1S and doubly exponential for LTL, raising the need of highly specialized algorithms. In this article, we present an approach on how to reduce this state space explosion in the construction of this automaton by exploiting a monotonicity property of specifications. For this, we introduce window counting constraints that allow for step-wise refinement or abstraction of specifications. In an iterative synthesis procedure, those window counting constraints are used to construct automata representing over- or under-approximations (depending on the counting constraint) of constraint-compliant behavior. Analysis results on winning regions of previous iterations are used to reduce the size of the next automaton, leading to an overall reduction of the state space explosion extent. We present the implementation results of the iterated synthesis for a zero-sum game setting as proof of concept. Furthermore, we discuss the current limitations of the approach in a zero-sum setting and sketch future work in non-zero-sum settings.</description>
      <guid isPermaLink="false">oai:arXiv.org:2503.21852v1</guid>
      <category>cs.LO</category>
      <pubDate>Mon, 31 Mar 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Linda Feeken, Martin Fr\"anzle</dc:creator>
    </item>
    <item>
      <title>Monitoring Spatially Distributed Cyber-Physical Systems with Alternating Finite Automata</title>
      <link>https://arxiv.org/abs/2503.21906</link>
      <description>arXiv:2503.21906v1 Announce Type: new 
Abstract: Modern cyber-physical systems (CPS) can consist of various networked components and agents interacting and communicating with each other. In the context of spatially distributed CPS, these connections can be dynamically dependent on the spatial configuration of the various components and agents. In these settings, robust monitoring of the distributed components is vital to ensuring complex behaviors are achieved, and safety properties are maintained. To this end, we look at defining the automaton semantics for the Spatio-Temporal Reach and Escape Logic (STREL), a formal logic designed to express and monitor spatio-temporal requirements over mobile, spatially distributed CPS. Specifically, STREL reasons about spatio-temporal behavior over dynamic weighted graphs. While STREL is endowed with well defined qualitative and quantitative semantics, in this paper, we propose a novel construction of (weighted) alternating finite automata from STREL specifications that efficiently encodes these semantics. Moreover, we demonstrate how this automaton semantics can be used to perform both, offline and online monitoring for STREL specifications using a simulated drone swarm environment.</description>
      <guid isPermaLink="false">oai:arXiv.org:2503.21906v1</guid>
      <category>cs.LO</category>
      <category>cs.FL</category>
      <category>cs.MA</category>
      <pubDate>Mon, 31 Mar 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:DOI>10.1145/3716863.3718033</arxiv:DOI>
      <dc:creator>Anand Balakrishnan, Sheryl Paul, Simone Silvetti, Laura Nenzi, Jyotirmoy V. Deshmukh</dc:creator>
    </item>
    <item>
      <title>Fractal Countability as a Constructive Alternative to the Power Set of N: A Meta-Formal Approach to Stratified Definability</title>
      <link>https://arxiv.org/abs/2503.22042</link>
      <description>arXiv:2503.22042v1 Announce Type: cross 
Abstract: Classical set theory constructs the continuum via the power set P(N), thereby postulating an uncountable totality. However, constructive and computability-based approaches reveal that no formal system with countable syntax can generate all subsets of N, nor can it capture the real line in full. In this paper, we propose fractal countability as a constructive alternative to the power set. Rather than treating countability as an absolute cardinal notion, we redefine it as a stratified, process-relative closure over definable subsets, generated by a sequence of conservative extensions to a base formal system. This yields a structured, internally growing hierarchy of constructive definability that remains within the countable realm but approximates the expressive richness of the continuum. We compare fractally countable sets to classical countability and the hyperarithmetical hierarchy, and interpret the continuum not as a completed object, but as a layered definitional horizon. This framework provides a constructive reinterpretation of power set-like operations without invoking non-effective principles.</description>
      <guid isPermaLink="false">oai:arXiv.org:2503.22042v1</guid>
      <category>math.LO</category>
      <category>cs.LO</category>
      <pubDate>Mon, 31 Mar 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Stanislav Semenov</dc:creator>
    </item>
    <item>
      <title>Reaching Classicality through Transitive Closure</title>
      <link>https://arxiv.org/abs/2503.22492</link>
      <description>arXiv:2503.22492v1 Announce Type: cross 
Abstract: Recently, arXiv:2312.16035 showed that all logics based on Boolean Normal monotonic three-valued schemes coincide with classical logic when defined using a strict-tolerant standard ($\mathbf{st}$). Conversely, they proved that under a tolerant-strict standard ($\mathbf{ts}$), the resulting logics are all empty. Building on these results, we show that classical logic can be obtained by closing under transitivity the union of two logics defined over (potentially different) Boolean normal monotonic schemes, using a strict-strict standard ($\mathbf{ss}$) for one and a tolerant-tolerant standard ($\mathbf{tt}$) for the other, with the first of these logics being paracomplete and the other being paraconsistent. We then identify a notion dual to transitivity that allows us to characterize the logic $\mathsf{TS}$ as the dual transitive closure of the intersection of any two logics defined over (potentially different) Boolean normal monotonic schemes, using an $\mathbf{ss}$ standard for one and a $\mathbf{tt}$ standard for the other. Finally, we expand on the abstract relations between the transitive closure and dual transitive closure operations, showing that they give rise to lattice operations that precisely capture how the logics discussed relate to one another.</description>
      <guid isPermaLink="false">oai:arXiv.org:2503.22492v1</guid>
      <category>math.LO</category>
      <category>cs.LO</category>
      <pubDate>Mon, 31 Mar 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Quentin Blomet, Bruno Da R\'e</dc:creator>
    </item>
    <item>
      <title>Algorithmic analysis of systems with affine input and polynomial state</title>
      <link>https://arxiv.org/abs/2503.22558</link>
      <description>arXiv:2503.22558v2 Announce Type: cross 
Abstract: The goal of this paper is to provide exact and terminating algorithms for the formal analysis of deterministic continuous-time control systems with affine input and polynomial state dynamics (in short, polynomial systems). We consider the following semantic properties: zeroness and equivalence, input independence, linearity, and analyticity. Our approach is based on Chen-Fliess series, which provide a unique representation of the dynamics of such systems via their formal generating series.
  Our starting point is Fliess' seminal work showing how the semantic properties above are mirrored by corresponding combinatorial properties on generating series. Next, we observe that the generating series of polynomial systems coincide with the class of shuffle-finite series, a nonlinear generalisation of Sch\"utzenberger's rational series which has recently been studied in the context of automata theory and enumerative combinatorics. We exploit and extend recent results in the algorithmic analysis of shuffle-finite series (such as zeroness, equivalence, and commutativity) to show that the semantic properties above can be decided exactly and in finite time for polynomial systems. Some of our analyses rely on a novel technical contribution, namely that shuffle-finite series are closed under support restrictions with commutative regular languages, a result of independent interest.</description>
      <guid isPermaLink="false">oai:arXiv.org:2503.22558v2</guid>
      <category>cs.FL</category>
      <category>cs.LO</category>
      <category>cs.SY</category>
      <category>eess.SY</category>
      <pubDate>Mon, 31 Mar 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Lorenzo Clemente</dc:creator>
    </item>
    <item>
      <title>Discounted-Sum Automata with Multiple Discount Factors</title>
      <link>https://arxiv.org/abs/2307.08780</link>
      <description>arXiv:2307.08780v4 Announce Type: replace 
Abstract: Discounting the influence of future events is a key paradigm in economics and it is widely used in computer-science models, such as games, Markov decision processes (MDPs), reinforcement learning, and automata. While a single game or MDP may allow for several different discount factors, nondeterministic discounted-sum automata (NDAs) were only studied with respect to a single discount factor. It is known that every class of NDAs with an integer as the discount factor has good computational properties: It is closed under determinization and under the algebraic operations min, max, addition, and subtraction, and there are algorithms for its basic decision problems, such as automata equivalence and containment. Extending the integer discount factor to an arbitrary rational number, loses most of these good properties.
  We define and analyze nondeterministic discounted-sum automata in which each transition can have a different integral discount factor (integral NMDAs). We show that integral NMDAs with an arbitrary choice of discount factors are not closed under determinization and under algebraic operations and that their containment problem is undecidable. We then define and analyze a restricted class of integral NMDAs, which we call tidy NMDAs, in which the choice of discount factors depends on the prefix of the word read so far. Among their special cases are NMDAs that correlate discount factors to actions (alphabet letters) or to the elapsed time. We show that for every function $\theta$ that defines the choice of discount factors, the class of $\theta$-NMDAs enjoys all of the above good properties of NDAs with a single integral discount factor, as well as the same complexity of the required decision problems. Tidy NMDAs are also as expressive as deterministic integral NMDAs with an arbitrary choice of discount factors.</description>
      <guid isPermaLink="false">oai:arXiv.org:2307.08780v4</guid>
      <category>cs.LO</category>
      <category>cs.FL</category>
      <pubDate>Mon, 31 Mar 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Udi Boker, Guy Hefetz</dc:creator>
    </item>
    <item>
      <title>An Algebraic Approach to Weighted Answer-set Programming</title>
      <link>https://arxiv.org/abs/2503.20849</link>
      <description>arXiv:2503.20849v2 Announce Type: replace 
Abstract: Logic programs, more specifically, Answer-set programs, can be annotated with probabilities on facts to express uncertainty. We address the problem of propagating weight annotations on facts (eg probabilities) of an ASP to its standard models, and from there to events (defined as sets of atoms) in a dataset over the program's domain. We propose a novel approach which is algebraic in the sense that it relies on an equivalence relation over the set of events. Uncertainty is then described as polynomial expressions over variables. We propagate the weight function in the space of models and events, rather than doing so within the syntax of the program. As evidence that our approach is sound, we show that certain facts behave as expected. Our approach allows us to investigate weight annotated programs and to determine how suitable a given one is for modeling a given dataset containing events.</description>
      <guid isPermaLink="false">oai:arXiv.org:2503.20849v2</guid>
      <category>cs.LO</category>
      <category>cs.PL</category>
      <category>cs.SC</category>
      <pubDate>Mon, 31 Mar 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Francisco Coelho, Bruno Dinis, Dietmar Seipel, Salvador Abreu</dc:creator>
    </item>
    <item>
      <title>A logic-based framework for database repairs</title>
      <link>https://arxiv.org/abs/2306.15516</link>
      <description>arXiv:2306.15516v5 Announce Type: replace-cross 
Abstract: We introduce a general abstract framework for database repairs, where the repair notions are defined using formal logic. We distinguish between integrity constraints and so-called query constraints. The former are used to model consistency and desirable properties of the data (such as functional dependencies and independencies), while the latter relate two database instances according to their answers to the query constraints. The framework allows for a distinction between hard and soft queries, allowing the answers to a core set of queries to be preserved, as well as defining a distance between instances based on query answers. We illustrate how different notions of repairs from the literature can be modelled within our unifying framework. The framework generalises both set-based and cardinality based repairs to semiring annotated databases. Furthermore, we initiate a complexity-theoretic analysis of consistent query answering and checking existence of a repair within the framework.</description>
      <guid isPermaLink="false">oai:arXiv.org:2306.15516v5</guid>
      <category>cs.DB</category>
      <category>cs.LO</category>
      <pubDate>Mon, 31 Mar 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Nicolas Fr\"ohlich, Arne Meier, Nina Pardal, Jonni Virtema</dc:creator>
    </item>
    <item>
      <title>Simplifying LTL Model Checking Given Prior Knowledge</title>
      <link>https://arxiv.org/abs/2503.16891</link>
      <description>arXiv:2503.16891v2 Announce Type: replace-cross 
Abstract: We consider the problem of the verification of an LTL specification  $\varphi$ on a system $S$ given some prior knowledge $K$, an LTL  formula that $S$ is known to satisfy.  The automata-theoretic  approach to LTL model checking is implemented as an emptiness check  of the product $S\otimes A_{\lnot\varphi}$ where $A_{\lnot\varphi}$  is an automaton for the negation of the property.  We propose new  operations that simplify an automaton $A_{\lnot\varphi}$  \emph{given} some knowledge automaton $A_K$, to produce an automaton  $B$ that can be used instead of $A_{\lnot\varphi}$ for more  efficient model checking.  Our evaluation of these operations on a large benchmark derived from  the MCC'22 competition shows that even with simple knowledge, half  of the problems can be definitely answered without running an LTL  model checker, and the remaining problems can be simplified  significantly.</description>
      <guid isPermaLink="false">oai:arXiv.org:2503.16891v2</guid>
      <category>cs.FL</category>
      <category>cs.LO</category>
      <pubDate>Mon, 31 Mar 2025 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Alexandre Duret-Lutz (LRE), Denis Poitrenaud (UPCit\'e, MoVe), Yann Thierry-Mieg (MoVe)</dc:creator>
    </item>
  </channel>
</rss>
