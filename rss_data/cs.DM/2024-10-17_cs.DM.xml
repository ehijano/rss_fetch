<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.DM updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.DM</link>
    <description>cs.DM updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.DM" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Fri, 18 Oct 2024 02:21:03 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Thu, 17 Oct 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Incremental computation of the set of period sets</title>
      <link>https://arxiv.org/abs/2410.12077</link>
      <description>arXiv:2410.12077v1 Announce Type: new 
Abstract: Overlaps between words are crucial in many areas of computer science, such as code design, stringology, and bioinformatics. A self overlapping word is characterized by its periods and borders. A period of a word $u$ is the starting position of a suffix of $u$ that is also a prefix $u$, and such a suffix is called a border. Each word of length, say $n&gt;0$, has a set of periods, but not all combinations of integers are sets of periods. Computing the period set of a word $u$ takes linear time in the length of $u$. We address the question of computing, the set, denoted $\Gamma_n$, of all period sets of words of length $n$. Although period sets have been characterized, there is no formula to compute the cardinality of $\Gamma_n$ (which is exponential in $n$), and the known dynamic programming algorithm to enumerate $\Gamma_n$ suffers from its space complexity. We present an incremental approach to compute $\Gamma_n$ from $\Gamma_{n-1}$, which reduces the space complexity, and then a constructive certification algorithm useful for verification purposes. The incremental approach defines a parental relation between sets in $\Gamma_{n-1}$ and $\Gamma_n$, enabling one to investigate the dynamics of period sets, and their intriguing statistical properties. Moreover, the period set of a word $u$ is the key for computing the absence probability of $u$ in random texts. Thus, knowing $\Gamma_n$ is useful to assess the significance of word statistics, such as the number of missing words in a random text.</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.12077v1</guid>
      <category>cs.DM</category>
      <pubDate>Thu, 17 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <dc:creator>Eric Rivals</dc:creator>
    </item>
    <item>
      <title>Stability properties for subgroups generated by return words</title>
      <link>https://arxiv.org/abs/2410.12534</link>
      <description>arXiv:2410.12534v1 Announce Type: new 
Abstract: Return words are a classical tool for studying shift spaces with low factor complexity. In recent years, their projection inside groups have attracted some attention, for instance in the context of dendric shift spaces, of generation of pseudorandom numbers (through the welldoc property), and of profinite invariants of shift spaces. Aiming at unifying disparate works, we introduce a notion of stability for subgroups generated by return words. Within this framework, we revisit several existing results and generalize some of them. We also study general aspects of stability, such as decidability or closure under certain operations.</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.12534v1</guid>
      <category>cs.DM</category>
      <category>math.CO</category>
      <category>math.DS</category>
      <category>math.GR</category>
      <pubDate>Thu, 17 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>France Gheeraert, Herman Goulet-Ouellet, Julien Leroy, Pierre Stas</dc:creator>
    </item>
    <item>
      <title>Reconfiguring homomorphisms to reflexive graphs via a simple reduction</title>
      <link>https://arxiv.org/abs/2410.12687</link>
      <description>arXiv:2410.12687v1 Announce Type: new 
Abstract: Given a graph $G$ and two graph homomorphisms $\alpha$ and $\beta$ from $G$ to a fixed graph $H$, the problem $H$-Recoloring asks whether there is a transformation from $\alpha$ to $\beta$ that changes the image of a single vertex at each step and keeps a graph homomorphism throughout. The complexity of the problem depends among other things on the presence of loops on the vertices. We provide a simple reduction that, using a known algorithmic result for $H$-Recoloring for square-free irreflexive graphs $H$, yields a polynomial-time algorithm for $H$-Recoloring for square-free reflexive graphs $H$. This generalizes all known algorithmic results for $H$-Recoloring for reflexive graphs $H$. Furthermore, the construction allows us to recover some of the known hardness results. Finally, we provide a partial inverse of the construction for bipartite instances.</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.12687v1</guid>
      <category>cs.DM</category>
      <category>cs.DS</category>
      <pubDate>Thu, 17 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Moritz M\"uhlenthaler, Mark H. Siggers, Thomas Suzan</dc:creator>
    </item>
    <item>
      <title>Ranking with Multiple Objectives</title>
      <link>https://arxiv.org/abs/2410.12139</link>
      <description>arXiv:2410.12139v1 Announce Type: cross 
Abstract: In search and advertisement ranking, it is often required to simultaneously maximize multiple objectives. For example, the objectives can correspond to multiple intents of a search query, or in the context of advertising, they can be relevance and revenue. It is important to efficiently find rankings which strike a good balance between such objectives. Motivated by such applications, we formulate a general class of problems where
  - each result gets a different score corresponding to each objective,
  - the results of a ranking are aggregated by taking, for each objective, a weighted sum of the scores in the order of the ranking, and
  - an arbitrary concave function of the aggregates is maximized.
  Combining the aggregates using a concave function will naturally lead to more balanced outcomes. We give an approximation algorithm in a bicriteria/resource augmentation setting: the algorithm with a slight advantage does as well as the optimum. In particular, if the aggregation step is just the sum of the top k results, then the algorithm outputs k + 1 results which do as well the as the optimal top k results. We show how this approach helps with balancing different objectives via simulations on synthetic data as well as on real data from LinkedIn.</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.12139v1</guid>
      <category>cs.DS</category>
      <category>cs.DM</category>
      <pubDate>Thu, 17 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Nikhil R. Devanur, Sivakanth Gopi</dc:creator>
    </item>
    <item>
      <title>Relative position in binary substitutions</title>
      <link>https://arxiv.org/abs/2410.12173</link>
      <description>arXiv:2410.12173v1 Announce Type: cross 
Abstract: Given an infinite word ${\bf w}$ on a finite alphabet, an immediate question arises:~can we understand the frequency of letters in ${\bf w}$\,? For words that are the fixed points of substitutions, the answer to this question is often `yes' -- the details and methods of these answers have been well-documented. In this paper, toward a better-understanding of the fixed points of binary substitutions, we delve deeper by investigating, in fine detail, the position of letters by defining various position functions and proving results about their behavior. Our analysis reveals new information about the Fibonacci substitution and the extended Pisa family of substitutions, as well as a new characterization of the Thue--Morse sequence.</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.12173v1</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <pubDate>Thu, 17 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Michael Coons, Christopher Ramsey, Nicolae Strungaru</dc:creator>
    </item>
    <item>
      <title>Quasi-linear distance query reconstruction for graphs of bounded treelength</title>
      <link>https://arxiv.org/abs/2410.12594</link>
      <description>arXiv:2410.12594v1 Announce Type: cross 
Abstract: In distance query reconstruction, we wish to reconstruct the edge set of a hidden graph by asking as few distance queries as possible to an oracle. Given two vertices $u$ and $v$, the oracle returns the shortest path distance between $u$ and $v$ in the graph.
  The length of a tree decomposition is the maximum distance between two vertices contained in the same bag. The treelength of a graph is defined as the minimum length of a tree decomposition of this graph. We present an algorithm to reconstruct an $n$-vertex connected graph $G$ parameterized by maximum degree $\Delta$ and treelength $k$ in $O_{k,\Delta}(n \log^2 n)$ queries (in expectation). This is the first algorithm to achieve quasi-linear complexity for this class of graphs. The proof goes through a new lemma that could give independent insight on graphs of bounded treelength.</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.12594v1</guid>
      <category>cs.DS</category>
      <category>cs.DM</category>
      <category>math.CO</category>
      <pubDate>Thu, 17 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Paul Bastide, Carla Groenland</dc:creator>
    </item>
    <item>
      <title>Palindromic length of infinite aperiodic words</title>
      <link>https://arxiv.org/abs/2410.12714</link>
      <description>arXiv:2410.12714v1 Announce Type: cross 
Abstract: The palindromic length of the finite word $v$ is equal to the minimal number of palindromes whose concatenation is equal to $v$. It was conjectured in 2013 that for every aperiodic infinite word $x$, the palindromic length of its factors is not bounded. We prove this conjecture to be true.</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.12714v1</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <pubDate>Thu, 17 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Josef Rukavicka</dc:creator>
    </item>
    <item>
      <title>New Results on Periodic Golay Pairs</title>
      <link>https://arxiv.org/abs/2408.15611</link>
      <description>arXiv:2408.15611v2 Announce Type: replace 
Abstract: In this paper, we provide algorithmic methods for conducting exhaustive searches for periodic Golay pairs. Our methods enumerate several lengths beyond the currently known state-of-the-art available searches: we conducted exhaustive searches for periodic Golay pairs of all lengths $v \leq 72$ using our methods, while only lengths $v \leq 34$ had previously been exhaustively enumerated. Our methods are applicable to periodic complementary sequences in general. We utilize sequence compression, a method of sequence generation derived in 2013 by Djokovi\'c and Kotsireas. We also introduce and implement a new method of "multi-level" compression, where sequences are uncompressed in several steps. This method allowed us to exhaustively search all lengths $v \leq 72$ using less than 10 CPU years. For cases of complementary sequences where uncompression is not possible, we introduce some new methods of sequence generation inspired by the isomorph-free exhaustive generation algorithm of orderly generation. Finally, we pose a conjecture regarding the structure of periodic Golay pairs and prove it holds in many lengths, including all lengths $v \lt 100$. We demonstrate the usefulness of our algorithms by providing the first ever examples of periodic Golay pairs of length $v = 90$. The smallest length for which the existence of periodic Golay pairs is undecided is now $106$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.15611v2</guid>
      <category>cs.DM</category>
      <category>cs.SC</category>
      <category>math.CO</category>
      <pubDate>Thu, 17 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Tyler Lumsden, Ilias Kotsireas, Curtis Bright</dc:creator>
    </item>
    <item>
      <title>A Method to Generate Multi-interval Pairwise Compatibility Graphs</title>
      <link>https://arxiv.org/abs/2410.10525</link>
      <description>arXiv:2410.10525v2 Announce Type: replace 
Abstract: Reconstruction of evolutionary relationships between species is an important topic in the field of computational biology. Pairwise compatibility graphs (PCGs) are used to model such relationships. A graph is a PCG if its edges can be represented by the distance between the leaves of an edge-weighted tree within a fixed interval. If the number of intervals is more than one, then the graph with such a tree representation is called a multi-interval PCG. The aim of this paper is to generate all multi-interval PCGs with a given number of vertices. For this purpose, we propose a method to generate almost all multi-interval PCGs corresponding to a given tree by randomly assigning edge weights and selecting typical intervals. To reduce the exponential tree search space, we theoretically prove that for each multi-interval PCG there exists a tree whose internal vertices have degree exactly three, and developed an algorithm to enumerate such trees. The proposed method is applied to enumerate all two-interval PCGs with up to ten vertices. Our computational results establish that all graphs with up to ten vertices are 2-IPCGs, making significant progress towards the open problem of determining whether a non-2-IPCG exists with fewer than 135 vertices.</description>
      <guid isPermaLink="false">oai:arXiv.org:2410.10525v2</guid>
      <category>cs.DM</category>
      <pubDate>Thu, 17 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Seemab Hayat, Naveed Ahmed Azam</dc:creator>
    </item>
    <item>
      <title>Optimal distance query reconstruction for graphs without long induced cycles</title>
      <link>https://arxiv.org/abs/2306.05979</link>
      <description>arXiv:2306.05979v4 Announce Type: replace-cross 
Abstract: Given access to the vertex set $V$ of a connected graph $G=(V,E)$ and an oracle that given two vertices $u,v\in V$, returns the shortest path distance between $u$ and $v$, how many queries are needed to reconstruct $E$?
  Firstly, we show that randomised algorithms need to use at least $\frac1{200} \Delta n\log_\Delta n$ queries in expectation in order to reconstruct $n$-vertex trees of maximum degree $\Delta$. The best previous lower bound (for graphs of bounded maximum degree) was an information-theoretic lower bound of $\Omega(n\log n/\log \log n)$. Our randomised lower bound is also the first to break through the information-theoretic barrier for related query models including distance queries for phylogenetic trees, membership queries for learning partitions and path queries in directed trees.
  Secondly, we provide a simple deterministic algorithm to reconstruct trees using $\Delta n\log_\Delta n+(\Delta+2)n$ distance queries. This proves that our lower bound is optimal up to a multiplicative constant. We extend our algorithm to reconstruct graphs without induced cycles of length at least $k$ using $O_{\Delta,k}(n\log n)$ queries. Our lower bound is therefore tight for a wide range of tree-like graphs, such as chordal graphs, permutation graphs and AT-free graphs. The previously best randomised algorithm for chordal graphs used $O_{\Delta}(n\log^2 n)$ queries in expectation, so we improve by a $(\log n)$-factor for this graph class.</description>
      <guid isPermaLink="false">oai:arXiv.org:2306.05979v4</guid>
      <category>cs.DS</category>
      <category>cs.DM</category>
      <category>math.CO</category>
      <pubDate>Thu, 17 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Paul Bastide, Carla Groenland</dc:creator>
    </item>
    <item>
      <title>Resolving Sets in Temporal Graphs</title>
      <link>https://arxiv.org/abs/2403.13183</link>
      <description>arXiv:2403.13183v2 Announce Type: replace-cross 
Abstract: A resolving set $R$ in a graph $G$ is a set of vertices such that every vertex of $G$ is uniquely identified by its distances to the vertices of $R$. Introduced in the 1970s, this concept has been since then extensively studied from both combinatorial and algorithmic points of view. We propose a generalization of the concept of resolving sets to temporal graphs,i.e., graphs with edge sets that change over discrete time-steps. In this setting, the temporal distance from $u$ to $v$ is the earliest possible time-step at which a journey with strictly increasing time-steps on edges leaving $u$ reaches $v$, i.e., the first time-step at which $v$ could receive a message broadcast from $u$. A temporal resolving set of a temporal graph $\mathcal{G}$ is a subset $R$ of its vertices such that every vertex of $\mathcal{G}$ is uniquely identified by its temporal distances from vertices of $R$.
  We study the problem of finding a minimum-size temporal resolving set, and show that it is NP-complete even on very restricted graph classes and with strong constraints on the time-steps: temporal complete graphs where every edge appears in either time-step~1 or~2, temporal trees where every edge appears in at most two consecutive time-steps, and even temporal subdivided stars where every edge appears in at most two (not necessarily consecutive) time-steps. On the other hand, we give polynomial-time algorithms for temporal paths and temporal stars where every edge appears in exactly one time-step, and give a combinatorial analysis and algorithms for several temporal graph classes where the edges appear in periodic time-steps.</description>
      <guid isPermaLink="false">oai:arXiv.org:2403.13183v2</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <category>cs.DS</category>
      <pubDate>Thu, 17 Oct 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Jan Bok, Antoine Dailly, Tuomo Lehtil\"a</dc:creator>
    </item>
  </channel>
</rss>
