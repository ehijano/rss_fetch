<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.CG updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.CG</link>
    <description>cs.CG updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.CG" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Fri, 02 Aug 2024 01:40:52 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Thu, 01 Aug 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Saturday</day>
      <day>Sunday</day>
    </skipDays>
    <item>
      <title>Ironing the Graphs: Toward a Correct Geometric Analysis of Large-Scale Graphs</title>
      <link>https://arxiv.org/abs/2407.21609</link>
      <description>arXiv:2407.21609v1 Announce Type: new 
Abstract: Graph embedding approaches attempt to project graphs into geometric entities, i.e, manifolds. The idea is that the geometric properties of the projected manifolds are helpful in the inference of graph properties. However, if the choice of the embedding manifold is incorrectly performed, it can lead to incorrect geometric inference. In this paper, we argue that the classical embedding techniques cannot lead to correct geometric interpretation as they miss the curvature at each point, of manifold. We advocate that for doing correct geometric interpretation the embedding of graph should be done over regular constant curvature manifolds. To this end, we present an embedding approach, the discrete Ricci flow graph embedding (dRfge) based on the discrete Ricci flow that adapts the distance between nodes in a graph so that the graph can be embedded onto a constant curvature manifold that is homogeneous and isotropic, i.e., all directions are equivalent and distances comparable, resulting in correct geometric interpretations. A major contribution of this paper is that for the first time, we prove the convergence of discrete Ricci flow to a constant curvature and stable distance metrics over the edges. A drawback of using the discrete Ricci flow is the high computational complexity that prevented its usage in large-scale graph analysis. Another contribution of this paper is a new algorithmic solution that makes it feasible to calculate the Ricci flow for graphs of up to 50k nodes, and beyond. The intuitions behind the discrete Ricci flow make it possible to obtain new insights into the structure of large-scale graphs. We demonstrate this through a case study on analyzing the internet connectivity structure between countries at the BGP level.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.21609v1</guid>
      <category>cs.CG</category>
      <category>cs.LG</category>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Saloua Naama, Kav\'e Salamatian, Francesco Bronzino</dc:creator>
    </item>
    <item>
      <title>On the Uncrossed Number of Graphs</title>
      <link>https://arxiv.org/abs/2407.21206</link>
      <description>arXiv:2407.21206v1 Announce Type: cross 
Abstract: Visualizing a graph $G$ in the plane nicely, for example, without crossings, is unfortunately not always possible. To address this problem, Masa\v{r}\'ik and Hlin\v{e}n\'y [GD 2023] recently asked for each edge of $G$ to be drawn without crossings while allowing multiple different drawings of $G$. More formally, a collection $\mathcal{D}$ of drawings of $G$ is uncrossed if, for each edge $e$ of $G$, there is a drawing in $\mathcal{D}$ such that $e$ is uncrossed. The uncrossed number $\mathrm{unc}(G)$ of $G$ is then the minimum number of drawings in some uncrossed collection of $G$.
  No exact values of the uncrossed numbers have been determined yet, not even for simple graph classes. In this paper, we provide the exact values for uncrossed numbers of complete and complete bipartite graphs, partly confirming and partly refuting a conjecture posed by Hlin\v{e}n\'y and Masa\v{r}\'ik. We also present a strong general lower bound on $\mathrm{unc}(G)$ in terms of the number of vertices and edges of $G$. Moreover, we prove NP-hardness of the related problem of determining the edge crossing number of a graph $G$, which is the smallest number of edges of $G$ taken over all drawings of $G$ that participate in a crossing. This problem was posed as open by Schaefer in his book [Crossing Numbers of Graphs 2018].</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.21206v1</guid>
      <category>math.CO</category>
      <category>cs.CG</category>
      <category>cs.DM</category>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Martin Balko, Petr Hlin\v{e}n\'y, Tom\'a\v{s} Masa\v{r}\'ik, Joachim Orthaber, Birgit Vogtenhuber, Mirko H. Wagner</dc:creator>
    </item>
    <item>
      <title>Finite Automata Encoding Piecewise Polynomials</title>
      <link>https://arxiv.org/abs/2104.02876</link>
      <description>arXiv:2104.02876v4 Announce Type: replace 
Abstract: Finite automata are used to encode geometric figures, functions and can be used for image compression and processing. The original approach is to represent each point of a figure in $\mathbb{R}^n$ as a convolution of its $n$ coordinates written in some base. Then a figure is said to be encoded as a finite automaton if the set of convolutions corresponding to the points in this figure is accepted by a finite automaton. The only differentiable functions which can be encoded as a finite automaton in this way are linear. In this paper we propose a representation which enables to encode piecewise polynomial functions with arbitrary degrees of smoothness that substantially extends a family of functions which can be encoded as finite automata. Such representation naturally comes from the framework of hierarchical tensor product B-splines, which are piecewise polynomials widely utilized in numerical computational geometry. We show that finite automata provide a suitable tool for solving computational problems arising in this framework when the support of a function is unbounded.</description>
      <guid isPermaLink="false">oai:arXiv.org:2104.02876v4</guid>
      <category>cs.CG</category>
      <category>cs.FL</category>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Dmitry Berdinsky, Prohrak Kruengthomya</dc:creator>
    </item>
  </channel>
</rss>
