<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.DM updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.DM</link>
    <description>cs.DM updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.DM" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Mon, 02 Sep 2024 04:00:53 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Mon, 02 Sep 2024 00:00:00 -0400</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>Non-Promise Version of Unique Sink Orientations</title>
      <link>https://arxiv.org/abs/2408.17283</link>
      <description>arXiv:2408.17283v1 Announce Type: new 
Abstract: A unique sink orientation (USO) is an orientation of the edges of a hypercube such that each face has a unique sink. Many optimization problems like linear programs reduce to USOs, in the sense that each vertex corresponds to a possible solution, and the global sink corresponds to the optimal solution. People have been studying intensively the problem of find the sink of a USO using vertex evaluations, i.e., queries which return the orientation of the edges around a vertex. This problem is a so called promise problem, as it assumes that the orientation it receives is a USO.
  In this paper, we analyze a non-promise version of the USO problem, in which we try to either find a sink or an efficiently verifiable violation of the USO property. This problem is worth investigating, because some problems which reduce to USO are also promise problems (and so we can also define a non-promise version for them), and it would be interesting to discover where USO lies in the hierarchy of subclasses of $\texttt{TFNP}^\texttt{dt}$, and for this a total search problem is required (which is the case for the non-promise version).
  We adapt many known properties and algorithms from the promise version to the non-promise one, including known algorithms for small dimensions and lower and upper bounds, like the Fibonacci Seesaw Algorithm. Furthermore, we present an efficient resolution proof of the problem, which shows it is in the search complexity class $\texttt{PLS}^\texttt{dt}$ (although this fact was already known via reductions). Finally, although initially the only allowed violations consist of $2$ vertices, we generalize them to more vertices, and provide a full categorization of violations with $4$ vertices, showing that they are also efficiently verifiable.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.17283v1</guid>
      <category>cs.DM</category>
      <category>math.CO</category>
      <pubDate>Mon, 02 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Tiago Oliveira Marques</dc:creator>
    </item>
    <item>
      <title>How Many Lines to Paint the City: Exact Edge-Cover in Temporal Graphs</title>
      <link>https://arxiv.org/abs/2408.17107</link>
      <description>arXiv:2408.17107v1 Announce Type: cross 
Abstract: Logistics and transportation networks require a large amount of resources to realize necessary connections between locations and minimizing these resources is a vital aspect of planning research. Since such networks have dynamic connections that are only available at specific times, intricate models are needed to portray them accurately. In this paper, we study the problem of minimizing the number of resources needed to realize a dynamic network, using the temporal graphs model. In a temporal graph, edges appear at specific points in time. Given a temporal graph and a natural number k, we ask whether we can cover every temporal edge exactly once using at most k temporal journeys; in a temporal journey consecutive edges have to adhere to the order of time. We conduct a thorough investigation of the complexity of the problem with respect to four dimensions: (a) whether the type of the temporal journey is a walk, a trail, or a path; (b) whether the chronological order of edges in the journey is strict or non-strict; (c) whether the temporal graph is directed or undirected; (d) whether the start and end points of each journey are given or not. We almost completely resolve the complexity of all these problems and provide dichotomies for each one of them with respect to k.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.17107v1</guid>
      <category>cs.SI</category>
      <category>cs.DM</category>
      <pubDate>Mon, 02 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Argyrios Deligkas, Michelle D\"oring, Eduard Eiben, Tiger-Lily Goldsmith, George Skretas, Georg Tennigkeit</dc:creator>
    </item>
    <item>
      <title>On the Metric Dimension of $K_a \times K_b \times K_c$</title>
      <link>https://arxiv.org/abs/2408.17229</link>
      <description>arXiv:2408.17229v1 Announce Type: cross 
Abstract: In this work we determine the metric dimension of $ K_a \times K_b \times K_c$ for all $a,b,c\in \mathbb N$ with $ a \le b \le c $ as follows. For $3a&lt;b+c$ and $2b \le c$, this value is $c-1$, for $3a&lt;b+c$ and $2b &gt; c$, it is $\left \lfloor \frac{2}{3}(b+c-1) \right \rfloor$, and for $3a=b+c$, it is $\left \lfloor \frac{a+b+c}{2} \right \rfloor -1 $. The only open case is $3a&gt;b+c$, where two values are possible, namely $\left \lfloor \frac{a+b+c}{2} \right \rfloor -1 $ and $\left \lfloor \frac{a+b+c}{2} \right \rfloor $. This result extends previous results of C\'acere et al., who computed the metric dimension of $ K_a \times K_b$, and of Drewes and J\"ager, who computed the metric dimension of $ K_a \times K_a \times K_a$.
  We prove our result by introducing and analyzing a new variant of Static Black-Peg Mastermind, in which each peg has its own permitted set of colors. For all cases, we present strategies which we prove to be both feasible and optimal. Our main result follows, as the number of questions of these strategies is equal to the metric dimension of $K_a \times K_b \times K_c$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.17229v1</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <pubDate>Mon, 02 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Valentin Gledel, Gerold J\"ager</dc:creator>
    </item>
    <item>
      <title>Further Investigation on Differential Properties of the Generalized Ness-Helleseth Function</title>
      <link>https://arxiv.org/abs/2408.17272</link>
      <description>arXiv:2408.17272v1 Announce Type: cross 
Abstract: Let $n$ be an odd positive integer, $p$ be a prime with $p\equiv3\pmod4$, $d_{1} = {{p^{n}-1}\over {2}} -1 $ and $d_{2} =p^{n}-2$. The function defined by $f_u(x)=ux^{d_{1}}+x^{d_{2}}$ is called the generalized Ness-Helleseth function over $\mathbb{F}_{p^n}$, where $u\in\mathbb{F}_{p^n}$. It was initially studied by Ness and Helleseth in the ternary case. In this paper, for $p^n \equiv 3 \pmod 4$ and $p^n \ge7$, we provide the necessary and sufficient condition for $f_u(x)$ to be an APN function. In addition, for each $u$ satisfying $\chi(u+1) = \chi(u-1)$, the differential spectrum of $f_u(x)$ is investigated, and it is expressed in terms of some quadratic character sums of cubic polynomials, where $\chi(\cdot)$ denotes the quadratic character of $\mathbb{F}_{p^n}$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.17272v1</guid>
      <category>cs.CR</category>
      <category>cs.DM</category>
      <category>cs.IT</category>
      <category>math.IT</category>
      <category>math.NT</category>
      <pubDate>Mon, 02 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Yongbo Xia, Chunlei Li, Furong Bao, Shaoping Chen, Tor Helleseth</dc:creator>
    </item>
    <item>
      <title>Upward Pointset Embeddings of Planar st-Graphs</title>
      <link>https://arxiv.org/abs/2408.17369</link>
      <description>arXiv:2408.17369v1 Announce Type: cross 
Abstract: We study upward pointset embeddings (UPSEs) of planar $st$-graphs. Let $G$ be a planar $st$-graph and let $S \subset \mathbb{R}^2$ be a pointset with $|S|= |V(G)|$. An UPSE of $G$ on $S$ is an upward planar straight-line drawing of $G$ that maps the vertices of $G$ to the points of $S$. We consider both the problem of testing the existence of an UPSE of $G$ on $S$ (UPSE Testing) and the problem of enumerating all UPSEs of $G$ on $S$. We prove that UPSE Testing is NP-complete even for $st$-graphs that consist of a set of directed $st$-paths sharing only $s$ and $t$. On the other hand, for $n$-vertex planar $st$-graphs whose maximum $st$-cutset has size $k$, we prove that it is possible to solve UPSE Testing in $O(n^{4k})$ time with $O(n^{3k})$ space, and to enumerate all UPSEs of $G$ on $S$ with $O(n)$ worst-case delay, using $O(k n^{4k} \log n)$ space, after $O(k n^{4k} \log n)$ set-up time. Moreover, for an $n$-vertex $st$-graph whose underlying graph is a cycle, we provide a necessary and sufficient condition for the existence of an UPSE on a given poinset, which can be tested in $O(n \log n)$ time. Related to this result, we give an algorithm that, for a set $S$ of $n$ points, enumerates all the non-crossing monotone Hamiltonian cycles on $S$ with $O(n)$ worst-case delay, using $O(n^2)$ space, after $O(n^2)$ set-up time.</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.17369v1</guid>
      <category>cs.DS</category>
      <category>cs.CG</category>
      <category>cs.DM</category>
      <pubDate>Mon, 02 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Carlos Alegria, Susanna Caroppo, Giordano Da Lozzo, Marco D'Elia, Giuseppe Di Battista, Fabrizio Frati, Fabrizio Grosso, Maurizio Patrignani</dc:creator>
    </item>
    <item>
      <title>Simple, strict, proper, happy: A study of reachability in temporal graphs</title>
      <link>https://arxiv.org/abs/2208.01720</link>
      <description>arXiv:2208.01720v4 Announce Type: replace 
Abstract: Dynamic networks are a complex subject. Not only do they inherit the complexity of static networks (as a particular case); they are also sensitive to definitional subtleties that are a frequent source of confusion and incomparability of results in the literature.
  In this paper, we take a step back and examine three such aspects in more details, exploring their impact in a systematic way; namely, whether the temporal paths are required to be \emph{strict} (i.e., the times along a path must increasing, not just be non-decreasing), whether the time labeling is \emph{proper} (two adjacent edges cannot be present at the same time) and whether the time labeling is \emph{simple} (an edge can have only one presence time). In particular, we investigate how different combinations of these features impact the expressivity of the graph in terms of reachability.
  Our results imply a hierarchy of expressivity for the resulting settings, shedding light on the loss of generality that one is making when considering either combination. Some settings are more general than expected; in particular, proper temporal graphs turn out to be as expressive as general temporal graphs where non-strict paths are allowed. Also, we show that the simplest setting, that of \emph{happy} temporal graphs (i.e., both proper and simple) remains expressive enough to emulate the reachability of general temporal graphs in a certain (restricted but useful) sense. Furthermore, this setting is advocated as a target of choice for proving negative results. We illustrates this by strengthening two known results to happy graphs (namely, the inexistence of sparse spanners, and the hardness of computing temporal components). Overall, we hope that this article can be seen as a guide for choosing between different settings of temporal graphs, while being aware of the way these choices affect generality.</description>
      <guid isPermaLink="false">oai:arXiv.org:2208.01720v4</guid>
      <category>cs.DM</category>
      <category>cs.DC</category>
      <pubDate>Mon, 02 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Arnaud Casteigts, Timoth\'ee Corsini, Writika Sarkar</dc:creator>
    </item>
    <item>
      <title>Lower Bounds for Symmetric Circuits for the Determinant</title>
      <link>https://arxiv.org/abs/2107.10986</link>
      <description>arXiv:2107.10986v3 Announce Type: replace-cross 
Abstract: Dawar and Wilsenach (ICALP 2020) introduce the model of symmetric arithmetic circuits and show an exponential separation between the sizes of symmetric circuits for computing the determinant and the permanent. The symmetry restriction is that the circuits which take a matrix input are unchanged by a permutation applied simultaneously to the rows and columns of the matrix. Under such restrictions we have polynomial-size circuits for computing the determinant but no subexponential size circuits for the permanent. Here, we consider a more stringent symmetry requirement, namely that the circuits are unchanged by arbitrary even permutations applied separately to rows and columns, and prove an exponential lower bound even for circuits computing the determinant. The result requires substantial new machinery. We develop a general framework for proving lower bounds for symmetric circuits with restricted symmetries, based on a new support theorem and new two-player restricted bijection games. These are applied to the determinant problem with a novel construction of matrices that are bi-adjacency matrices of graphs based on the CFI construction. Our general framework opens the way to exploring a variety of symmetry restrictions and studying trade-offs between symmetry and other resources used by arithmetic circuits.</description>
      <guid isPermaLink="false">oai:arXiv.org:2107.10986v3</guid>
      <category>cs.CC</category>
      <category>cs.DM</category>
      <category>cs.LO</category>
      <pubDate>Mon, 02 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Anuj Dawar, Gregory Wilsenach</dc:creator>
    </item>
    <item>
      <title>Lasserre Hierarchy for Graph Isomorphism and Homomorphism Indistinguishability</title>
      <link>https://arxiv.org/abs/2302.10538</link>
      <description>arXiv:2302.10538v3 Announce Type: replace-cross 
Abstract: We show that feasibility of the $t^\text{th}$ level of the Lasserre semidefinite programming hierarchy for graph isomorphism can be expressed as a homomorphism indistinguishability relation. In other words, we define a class $\mathcal{L}_t$ of graphs such that graphs $G$ and $H$ are not distinguished by the $t^\text{th}$ level of the Lasserre hierarchy if and only if they admit the same number of homomorphisms from any graph in $\mathcal{L}_t$. By analysing the treewidth of graphs in $\mathcal{L}_t$, we prove that the $3t^\text{th}$ level of Sherali--Adams linear programming hierarchy is as strong as the $t^\text{th}$ level of Lasserre. Moreover, we show that this is best possible in the sense that $3t$ cannot be lowered to $3t-1$ for any $t$. The same result holds for the Lasserre hierarchy with non-negativity constraints, which we similarly characterise in terms of homomorphism indistinguishability over a family $\mathcal{L}_t^+$ of graphs. Additionally, we give characterisations of level-$t$ Lasserre with non-negativity constraints in terms of logical equivalence and via a graph colouring algorithm akin to the Weisfeiler--Leman algorithm. This provides a polynomial time algorithm for determining if two given graphs are distinguished by the $t^\text{th}$ level of the Lasserre hierarchy with non-negativity constraints.</description>
      <guid isPermaLink="false">oai:arXiv.org:2302.10538v3</guid>
      <category>math.CO</category>
      <category>cs.CC</category>
      <category>cs.DM</category>
      <category>cs.LO</category>
      <category>math.OC</category>
      <pubDate>Mon, 02 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <arxiv:DOI>10.46298/theoretics.24.20</arxiv:DOI>
      <arxiv:journal_reference>TheoretiCS, Volume 3 (2024), Article 20, 1-42</arxiv:journal_reference>
      <dc:creator>David E. Roberson, Tim Seppelt</dc:creator>
    </item>
    <item>
      <title>Some integer values in the spectra of burnt pancake graphs</title>
      <link>https://arxiv.org/abs/2408.05349</link>
      <description>arXiv:2408.05349v2 Announce Type: replace-cross 
Abstract: Here we discuss spectral properties of the burnt pancake graph $\mathbf{BP}_n$. More precisely, we prove that the adjacency spectrum of $\mathbf{BP}_n$ contains all integer values in the set $\{0, 1, \ldots, n\}\setminus\{\left\lfloor n/2 \right\rfloor\}$</description>
      <guid isPermaLink="false">oai:arXiv.org:2408.05349v2</guid>
      <category>math.CO</category>
      <category>cs.DM</category>
      <pubDate>Mon, 02 Sep 2024 00:00:00 -0400</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-nc-nd/4.0/</dc:rights>
      <dc:creator>Sa\'ul A. Blanco, Charles Buehrle</dc:creator>
    </item>
  </channel>
</rss>
