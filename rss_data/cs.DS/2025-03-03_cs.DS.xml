<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:arxiv="http://arxiv.org/schemas/atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>cs.DS updates on arXiv.org</title>
    <link>http://rss.arxiv.org/rss/cs.DS</link>
    <description>cs.DS updates on the arXiv.org e-print archive.</description>
    <atom:link href="http://rss.arxiv.org/rss/cs.DS" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <language>en-us</language>
    <lastBuildDate>Mon, 03 Mar 2025 05:00:07 +0000</lastBuildDate>
    <managingEditor>rss-help@arxiv.org</managingEditor>
    <pubDate>Mon, 03 Mar 2025 00:00:00 -0500</pubDate>
    <skipDays>
      <day>Sunday</day>
      <day>Saturday</day>
    </skipDays>
    <item>
      <title>A fast and slightly robust covariance estimator</title>
      <link>https://arxiv.org/abs/2502.20708</link>
      <description>arXiv:2502.20708v1 Announce Type: new 
Abstract: Let $\mathcal{Z} = \{Z_1, \dots, Z_n\} \stackrel{\mathrm{i.i.d.}}{\sim} P \subset \mathbb{R}^d$ from a distribution $P$ with mean zero and covariance $\Sigma$. Given a dataset $\mathcal{X}$ such that $d_{\mathrm{ham}}(\mathcal{X}, \mathcal{Z}) \leq \varepsilon n$, we are interested in finding an efficient estimator $\widehat{\Sigma}$ that achieves $\mathrm{err}(\widehat{\Sigma}, \Sigma) := \|\Sigma^{-\frac{1}{2}}\widehat{\Sigma}\Sigma^{-\frac{1}{2}} - I\| _{\mathrm{op}} \leq 1/2$. We focus on the low contamination regime $\varepsilon = o(1/\sqrt{d}$). In this regime, prior work required either $\Omega(d^{3/2})$ samples or runtime that is exponential in $d$. We present an algorithm that, for subgaussian data, has near-linear sample complexity $n = \widetilde{\Omega}(d)$ and runtime $O((n+d)^{\omega + \frac{1}{2}})$, where $\omega$ is the matrix multiplication exponent. We also show that this algorithm works for heavy-tailed data with near-linear sample complexity, but in a smaller regime of $\varepsilon$. Concurrent to our work, Diakonikolas et al. [2024] give Sum-of-Squares estimators that achieve similar sample complexity but with large polynomial runtime.</description>
      <guid isPermaLink="false">oai:arXiv.org:2502.20708v1</guid>
      <category>cs.DS</category>
      <pubDate>Mon, 03 Mar 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>John Duchi, Saminul Haque, Rohith Kuditipudi</dc:creator>
    </item>
    <item>
      <title>Optimizing Quotient Filters using Graveyard Hashing</title>
      <link>https://arxiv.org/abs/2502.20725</link>
      <description>arXiv:2502.20725v1 Announce Type: new 
Abstract: We aim to improve the performance of the Quotient Filter at high load factors. Our Graveyard Filter is a variation of the Quotient Filter which incorporates Graveyard Hashing, a technique that uses tombstones to counteract the effects of primary clustering. We summarize our implementation of the graveyard filter and detail approaches to redistributing tombstones. Evaluating these variations under conditions similar to the original quotient filter paper, we found the performance of the graveyard filter to be competitive for insertion and query operations, with certain redistribution schemes showing stronger performance at high load factors. We discuss potential further improvements, such as using the current load factor to determine the employed redistribution approach.</description>
      <guid isPermaLink="false">oai:arXiv.org:2502.20725v1</guid>
      <category>cs.DS</category>
      <pubDate>Mon, 03 Mar 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Isabelle Quaye, Temi Taylor</dc:creator>
    </item>
    <item>
      <title>An Unrestricted Faster Algorithm for Maximum Weight Matching in Bipartite Graphs</title>
      <link>https://arxiv.org/abs/2502.20889</link>
      <description>arXiv:2502.20889v1 Announce Type: new 
Abstract: Given a weighted bipartite graph $G = (L, R, E, w)$, the maximum weight matching (MWM) problem aims to find a matching $M \subseteq E$ that maximizes the total weight $\sum_{e \in M} w(e)$. The widely used Hungarian algorithm efficiently solves the maximum weight perfect matching (MWPM) subproblem for complete bipartite graphs with $|L| = |R|$ and $|E| = |L||R|$, achieving a time complexity of $O(V^3)$, where $V = L \cup R$.
  This work demonstrates that the existed non-line-covering variant of the Hungarian algorithm can be directly applied to complete bipartite graphs without vertex expansion, reducing the time complexity from $O(LR^2)$ to $O(L^2R)$ when $|L| &lt; |R|$. Additionally, the variant is extended in this paper to solve the MWM problem for general bipartite graphs.
  The time complexity of the proposed algorithm is $O(LE + LR\min(L, X))$, where $X$ is the weight dispersion coefficient. Specifically, if the maximum weight is $N$ and the weights are represented with a precision of $p$, then $X$ is defined as $\frac{N}{p}$. Experimental results highlight significant runtime improvements, especially for sparse graphs, when compared to traditional methods. The detailed implementation of the proposed algorithm is publicly available at https://github.com/ShawxingKwok/Kwok-algorithm.</description>
      <guid isPermaLink="false">oai:arXiv.org:2502.20889v1</guid>
      <category>cs.DS</category>
      <pubDate>Mon, 03 Mar 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Shawxing Kwok</dc:creator>
    </item>
    <item>
      <title>Layered Graph Drawing with Few Gaps and Few Crossings</title>
      <link>https://arxiv.org/abs/2502.20896</link>
      <description>arXiv:2502.20896v1 Announce Type: new 
Abstract: We consider the task of drawing a graph on multiple horizontal layers, where each node is assigned a layer, and each edge connects nodes of different layers. Known algorithms determine the orders of nodes on each layer to minimize crossings between edges, increasing readability. Usually, this is done by repeated one-sided crossing minimization for each layer. These algorithms allow edges that connect nodes on non-neighboring layers, called ``long'' edges, to weave freely throughout layers of the graph, creating many ``gaps'' in each layer. As shown in a recent work on hive plots -- a similar visualization drawing vertices on multiple layers -- it can be beneficial to restrict the number of such gaps. We extend existing heuristics and exact algorithms for one-sided crossing minimization in a way that restricts the number of allowed gaps. The extended heuristics maintain approximation ratios, and in an experimental evaluation we show that they perform well with respect to the number of resulting crossings when compared with exact ILP formulations.</description>
      <guid isPermaLink="false">oai:arXiv.org:2502.20896v1</guid>
      <category>cs.DS</category>
      <pubDate>Mon, 03 Mar 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Alexander Dobler, Jakob Roithinger</dc:creator>
    </item>
    <item>
      <title>GridOT -- a discrete optimal transport solver on grids</title>
      <link>https://arxiv.org/abs/2502.20905</link>
      <description>arXiv:2502.20905v1 Announce Type: new 
Abstract: We provide an improved implementation of Schmitzer's sparse multi-scale algorithm for discrete optimal transport on grids. We report roughly 2-4 times faster runtimes on the DOTmark benchmark. The source code is open source and publicly available.</description>
      <guid isPermaLink="false">oai:arXiv.org:2502.20905v1</guid>
      <category>cs.DS</category>
      <pubDate>Mon, 03 Mar 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Johannes Rauch, Leo Zanotti</dc:creator>
    </item>
    <item>
      <title>3.415-Approximation for Coflow Scheduling via Iterated Rounding</title>
      <link>https://arxiv.org/abs/2502.21197</link>
      <description>arXiv:2502.21197v1 Announce Type: new 
Abstract: We provide an algorithm giving a $\frac{140}{41}$($&lt;3.415$)-approximation for Coflow Scheduling and a $4.36$-approximation for Coflow Scheduling with release dates. This improves upon the best known $4$- and respectively $5$-approximations and addresses an open question posed by Agarwal, Rajakrishnan, Narayan, Agarwal, Shmoys, and Vahdat [Aga+18], Fukunaga [Fuk22], and others. We additionally show that in an asymptotic setting, the algorithm achieves a ($2+\epsilon$)-approximation, which is essentially optimal under $\mathbb{P}\neq\mathbb{NP}$. The improvements are achieved using a novel edge allocation scheme using iterated LP rounding together with a framework which enables establishing strong bounds for combinations of several edge allocation algorithms.</description>
      <guid isPermaLink="false">oai:arXiv.org:2502.21197v1</guid>
      <category>cs.DS</category>
      <category>math.OC</category>
      <pubDate>Mon, 03 Mar 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Lars Rohwedder, Leander Schnaars</dc:creator>
    </item>
    <item>
      <title>The Structural Complexity of Matrix-Vector Multiplication</title>
      <link>https://arxiv.org/abs/2502.21240</link>
      <description>arXiv:2502.21240v1 Announce Type: new 
Abstract: We consider the problem of preprocessing an $n\times n$ matrix M, and supporting queries that, for any vector v, returns the matrix-vector product Mv. This problem has been extensively studied in both theory and practice: on one side, practitioners have developed algorithms that are highly efficient in practice, whereas theoreticians have proven that the problem cannot be solved faster than naive multiplication in the worst-case. This lower bound holds even in the average-case, implying that existing average-case analyses cannot explain this gap between theory and practice. Therefore, we study the problem for structured matrices. We show that for $n\times n$ matrices of VC-dimension d, the matrix-vector multiplication problem can be solved with $\tilde{O}(n^2)$ preprocessing and $\tilde O(n^{2-1/d})$ query time. Given the low constant VC-dimensions observed in most real-world data, our results posit an explanation for why the problem can be solved so much faster in practice. Moreover, our bounds hold even if the matrix does not have a low VC-dimension, but is obtained by (possibly adversarially) corrupting at most a subquadratic number of entries of any unknown low VC-dimension matrix. Our results yield the first non-trivial upper bounds for many applications. In previous works, the online matrix-vector hypothesis (conjecturing that quadratic time is needed per query) was used to prove many conditional lower bounds, showing that it is impossible to compute and maintain high-accuracy estimates for shortest paths, Laplacian solvers, effective resistance, and triangle detection in graphs subject to node insertions and deletions in subquadratic time. Yet, via a reduction to our matrix-vector-multiplication result, we show we can maintain the aforementioned problems efficiently if the input is structured, providing the first subquadratic upper bounds in the high-accuracy regime.</description>
      <guid isPermaLink="false">oai:arXiv.org:2502.21240v1</guid>
      <category>cs.DS</category>
      <category>cs.CC</category>
      <category>cs.CG</category>
      <category>cs.LG</category>
      <pubDate>Mon, 03 Mar 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>new</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Emile Anand, Jan van den Brand, Rose McCarty</dc:creator>
    </item>
    <item>
      <title>When MIS and Maximal Matching are Easy in the Congested Clique</title>
      <link>https://arxiv.org/abs/2502.21031</link>
      <description>arXiv:2502.21031v1 Announce Type: cross 
Abstract: Two of the most fundamental distributed symmetry-breaking problems are that of finding a maximal independent set (MIS) and a maximal matching (MM) in a graph. It is a major open question whether these problems can be solved in constant rounds of the all-to-all communication model of \textsf{Congested\ Clique}, with $O(\log\log \Delta)$ being the best upper bound known (where $\Delta$ is the maximum degree). We explore in this paper the boundary of the feasible, asking for \emph{which graphs} we can solve the problems in constant rounds. We find that for several graph parameters, ranging from sparse to highly dense graphs, the problems do have a constant-round solution. In particular, we give algorithms that run in constant rounds when: (1) the average degree is at most $d(G) \le 2^{O(\sqrt{\log n})}$, (2) the neighborhood independence number is at most $\beta(G) \le 2^{O(\sqrt{\log n})}$, or (3) the independence number is at most $\alpha(G) \le |V(G)|/d(G)^{\mu}$, for any constant $\mu &gt; 0$. Further, we establish that these are tight bounds for the known methods, for all three parameters, suggesting that new ideas are needed for further progress.</description>
      <guid isPermaLink="false">oai:arXiv.org:2502.21031v1</guid>
      <category>cs.DC</category>
      <category>cs.DS</category>
      <pubDate>Mon, 03 Mar 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Keren Censor-Hillel, Tomer Even, Maxime Flin, Magn\'us M. Halld\'orsson</dc:creator>
    </item>
    <item>
      <title>Realizing temporal transportation trees</title>
      <link>https://arxiv.org/abs/2403.18513</link>
      <description>arXiv:2403.18513v2 Announce Type: replace 
Abstract: In this paper, we study the complexity of the periodic temporal graph realization problem with respect to upper bounds on the fastest path durations among its vertices. This constraint with respect to upper bounds appears naturally in transportation network design applications where, for example, a road network is given, and the goal is to appropriately schedule periodic travel routes, while not exceeding some desired upper bounds on the travel times. In our work, we focus only on underlying tree topologies, which are fundamental in many transportation network applications.
  As it turns out, the periodic upper-bounded temporal tree realization problem (TTR) has a very different computational complexity behavior than both (i) the classic graph realization problem with respect to shortest path distances in static graphs and (ii) the periodic temporal graph realization problem with exact given fastest travel times (which was recently introduced). First, we prove that, surprisingly, TTR is NP-hard, even for a constant period $\Delta$ and when the input tree $G$ satisfies at least one of the following conditions: (a) $G$ is a star, or (b) $G$ has constant maximum degree. Second, we prove that TTR is fixed-parameter tractable (FPT) with respect to the number of leaves in the input tree $G$, via a novel combination of techniques for totally unimodular matrices and mixed integer linear programming.</description>
      <guid isPermaLink="false">oai:arXiv.org:2403.18513v2</guid>
      <category>cs.DS</category>
      <pubDate>Mon, 03 Mar 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>George B. Mertzios, Hendrik Molter, Nils Morawietz, Paul G. Spirakis</dc:creator>
    </item>
    <item>
      <title>Efficient Computation of Periods and Covers Using Sampling</title>
      <link>https://arxiv.org/abs/2407.18216</link>
      <description>arXiv:2407.18216v2 Announce Type: replace 
Abstract: Identifying regularities in strings, such as \emph{periods} and \emph{covers}, is crucial for applications in text compression, computational biology, and pattern recognition. \emph{Characters-Distance-Sampling} (\texttt{CDS}) is an efficient technique that encodes a string by storing distances between selected pivot characters, accelerating string-processing tasks.
  We apply \texttt{CDS} to compute periods and shortest covers, selecting only the first character as the pivot. This strategy yields optimized computations, achieving speedups of $38\%$--$43\%$ for period computation and $63\%$--$72\%$ for cover detection. These results demonstrate the potential of \texttt{CDS}-based representations for efficient string analysis and broader applications.</description>
      <guid isPermaLink="false">oai:arXiv.org:2407.18216v2</guid>
      <category>cs.DS</category>
      <pubDate>Mon, 03 Mar 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by/4.0/</dc:rights>
      <dc:creator>Thierry Lecroq, Francesco Pio Marino</dc:creator>
    </item>
    <item>
      <title>Optimal Bounds for Open Addressing Without Reordering</title>
      <link>https://arxiv.org/abs/2501.02305</link>
      <description>arXiv:2501.02305v2 Announce Type: replace 
Abstract: In this paper, we revisit one of the simplest problems in data structures: the task of inserting elements into an open-addressed hash table so that elements can later be retrieved with as few probes as possible. We show that, even without reordering elements over time, it is possible to construct a hash table that achieves far better expected search complexities (both amortized and worst-case) than were previously thought possible. Along the way, we disprove the central conjecture left by Yao in his seminal paper ``Uniform Hashing is Optimal''. All of our results come with matching lower bounds.</description>
      <guid isPermaLink="false">oai:arXiv.org:2501.02305v2</guid>
      <category>cs.DS</category>
      <category>math.CO</category>
      <pubDate>Mon, 03 Mar 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace</arxiv:announce_type>
      <dc:rights>http://arxiv.org/licenses/nonexclusive-distrib/1.0/</dc:rights>
      <dc:creator>Martin Farach-Colton, Andrew Krapivin, William Kuszmaul</dc:creator>
    </item>
    <item>
      <title>Grams: Gradient Descent with Adaptive Momentum Scaling for Training Large Language Models</title>
      <link>https://arxiv.org/abs/2412.17107</link>
      <description>arXiv:2412.17107v2 Announce Type: replace-cross 
Abstract: We introduce $\mathbf{G}$radient Descent with $\mathbf{A}$daptive $\mathbf{M}$omentum $\mathbf{S}$caling ($\mathbf{Grams}$), a novel optimization algorithm that decouples the direction and magnitude of parameter updates in deep learning. Unlike traditional optimizers that directly integrate momentum into updates, Grams separates the update direction, derived from current gradients, from momentum, which is used solely for adaptive magnitude scaling. This approach enables Grams to achieve improved loss descent compared to state-of-the-art cautious and momentum-based optimizers. We theoretically demonstrate that Grams descents faster than other state-of-the-art optimizers and establish a global convergence guarantee for Grams. We also validate its effectiveness through extensive empirical evaluations. The results demonstrate Grams' superior performance, including faster convergence and better generalization, compared to widely-used optimizers such as Adam, Lion, and their cautious variants. Our results highlight Grams' potential as a transformative approach for efficiently training large language models. Code is available at $\href{https://github.com/Gunale0926/Grams}{\text{https://github.com/Gunale0926/Grams}}$.</description>
      <guid isPermaLink="false">oai:arXiv.org:2412.17107v2</guid>
      <category>cs.LG</category>
      <category>cs.AI</category>
      <category>cs.DS</category>
      <category>math.OC</category>
      <pubDate>Mon, 03 Mar 2025 00:00:00 -0500</pubDate>
      <arxiv:announce_type>replace-cross</arxiv:announce_type>
      <dc:rights>http://creativecommons.org/licenses/by-sa/4.0/</dc:rights>
      <dc:creator>Yang Cao, Xiaoyu Li, Zhao Song</dc:creator>
    </item>
  </channel>
</rss>
